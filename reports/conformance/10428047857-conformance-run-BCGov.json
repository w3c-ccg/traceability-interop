{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3b7e333c-c4c3-4083-bc1c-a1c2e490a843",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d72c2368-90b0-4550-a467-ad0ea9cf7ee2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83405b6d-3417-4e96-b045-a1e3e98d9a5a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ac2580b2-f34b-44ff-b21b-f2ce83cef40b"
                }
              }
            ]
          },
          {
            "id": "66de95ca-6f97-4c44-a368-a009b138d442",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37ad8da2-c107-4230-bf02-3aaaab046cfb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4d9c003a-c5a3-45b1-8674-4d42d6a7c86a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c8de5b18-26a9-463c-b077-006510e1f755",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "183fc1e1-8103-401a-847f-ca17971791e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e59d3e4-f5d0-4987-ac49-c4bd72538c77",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe9dc350-9757-4f31-a0e5-e6442ace6ce2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3754794e-414d-4b24-94ae-3ccf5a3a64ce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93072eb3-4228-4de3-8296-c7c556a4ed5d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8835d9ef-2f9f-4fc7-8fb0-4dd2347c8b58"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8e0cd06-d942-4a71-8df3-2c8e9c235106",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd307cf9-7e43-4573-8987-3c3fcbb06c7d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82b7e9bf-2d27-406c-9c88-67567ccaf445",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "635cf900-077d-4f6b-bbb8-cab04487fa97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3e9be43-214b-4d6b-b0a4-59131f8916b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "406d18f6-eecb-4d3d-9bfa-7f3f3db1b803"
            }
          }
        ]
      },
      {
        "id": "f9f2f8d3-8381-4a99-8e87-5a3a29de8247",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "36eddb4f-560d-43e6-8263-348ab03910f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46421eec-c423-4dea-b4a7-ba4d8f214956",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc223e12-5314-4e45-aa0f-082b9297ec74",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985d13b2-8862-41ff-9d5f-5b2c0fb7906d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba8e3027-e8ec-423a-ab4b-785184dad8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d58eab-994b-4eca-b587-111ed9fb7e71",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060383e9-1424-47a4-9296-08f131f94a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "278a90f7-717d-4f25-a8b7-a578ec23094e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f846174-cef5-45fa-a4c5-a995718696cb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cc6f4d-c862-4ac0-9301-5ebdb81fed07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6f40826-6194-4b45-a301-92b9dc8e3466"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db0b932a-93cc-40a2-9b0a-377b6e0b2e02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "867f5c1f-e8ae-44b6-aab3-c08c47fd85ee",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23524c7-0563-4dc6-a6ba-a0d811467a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "478f8aa5-1098-49ce-ad90-d085cb03b069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e976d1a9-25a1-40af-8b7c-2ce9acb5320f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb541273-50a0-4dba-a247-5700a86eb60d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d93b0ebb-5c76-4c61-bcb5-5f491d320c8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d890d3bd-4de2-4d7a-9607-eeabf697305e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6435474f-98d1-4d37-94cb-881f8693db41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "51599a63-78e0-42b7-97a5-f8b0e22b4daa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8cd2adc-3748-4902-bb87-96de6b7d7b68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2ecdaa2e-06db-443f-af12-e715f50e3d5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fef0150-b2b4-4fbb-8d0e-6415a09c53ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5384d463-e6ea-4185-ae97-57089acad2f7"
            }
          }
        ]
      },
      {
        "id": "567f51c3-5665-4214-be77-64e224463f82",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0ac2e0ea-2d86-43ff-a9a2-d1ce9fe750ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9950901a-be52-4872-a7cc-3189a38126de",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a5317754-5f2f-4774-bae9-917e6388ddb5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c33988-e09b-4266-997a-3ef68c4148b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0853ee8d-7aad-4b80-aac0-01c836b4da44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c15037-f17c-4d43-b865-a7a138b886c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edf044c5-f2eb-4dd7-b0c2-12c047db04b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23211b9-8e77-4b96-975f-921d06b60e3c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94fbb34-b383-435a-bfa2-6656d866d93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee421450-dc55-4a1d-a011-97fd1bb9e8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed25ed8c-58a2-4fb1-8932-672c0109ac0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49e8642c-cb2e-4224-8d80-96cf852d84e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7c75ac-cb40-4722-8781-8d95a18b140a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dde6a4-74d8-4ff9-b6c3-1e6540f2a4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608fc53c-b43e-461a-91eb-8f5967b5addf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1180c4a7-6a2a-4365-a2e9-6ef7cbdc1cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad04fa1b-745f-47a2-be57-95a05e27ddc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcce926-0bd9-48a6-9738-e81e9cc9df95",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31db01be-5a8c-4730-85af-512cc9d1c90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f16411-61a5-495a-a4ce-b12ef7e0045b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2ad6ed-f074-4d8c-b930-f51b2915814f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6bd588c-4858-4242-a8aa-88d0fe412641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9c8827-7705-4704-91b9-43a8c991bb57",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36fafcf-c35b-4bae-b7b1-18af8f69f755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b53407b-e11a-4837-86d2-f6e27b9ca0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2c645f-9a98-4c0c-96cf-90df8f006a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16c81e7c-6f9a-47dc-81f6-efc12ad2c807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a16986c-e4ee-429c-9cb5-15411a7a6a8a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8665064d-74c8-4c30-a165-de23803349c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4025cf1e-9aaf-4da1-9b66-096341e1a940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a938bc-64f1-4ac4-b265-d97d4457661b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc264ee5-42ad-47e5-ab55-ebc4e779c24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019fc3a7-9b91-47a8-804a-f6ddab1e7cdb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926980e8-356b-4298-bcb3-fe22decea32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296682c6-2c80-4bd8-a2d3-23c22c0ac1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2d9505-bc02-4793-83bc-1fd8793b3b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8eaaa61-870a-4777-96e4-2f7bcc4001f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4db5a9-3095-4705-b5cd-399aa3fdd790",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae896a5b-57d4-4cd6-a378-a0105badef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b07041-33e8-4471-a56f-874fd177d37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02756e2-d362-47ba-ba0a-2296d20db750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eacf4d39-d8b2-4c90-b6e6-0a4fa6faaec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1696c7bb-451c-4d57-a4f7-3b74f2c36e24",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03fd1f9-3004-4b91-8ee7-b01b59c46494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e057d8e-ee21-4ea7-89be-d6d432d9f80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d730b01-cd68-4307-97bd-c7244c6cb0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "039594d3-1900-41ac-993f-cb95e7a58645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eda67d1-23c7-4cb5-acaf-b4adb3449cb6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6a2763-a368-436e-911b-f4bdee34acc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8318a614-ecc3-44b9-bc86-2aea5a21974f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25404b1-3646-416f-b4bc-f738cb8dc6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77948aa1-0bc9-4e2c-bdcd-1058b7a49d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91bda6e-b282-4fb0-b239-a4f9caba4d8d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ecf080-1d0d-4627-b62a-752fa29b191e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9eaffaf-90b9-476f-ad94-89e5f4b06920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff776647-7f37-437e-99a2-2af0a9b3bf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c7b5c8a-1c09-4187-821e-b38cbbdba2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765764f1-758e-43b1-9933-8e1344fa311c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e79db59-79ee-46ec-a437-1a1e88ba82dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d337d2-2553-40a5-90ab-e2a410f1385d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52163f40-2992-49a8-87bf-955ac0d901b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cff919e-326d-46f6-b4fa-85a2ffec59c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bfa346-fc19-4319-952e-e4fa866fbc3e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49196bed-50d5-4c02-ab05-05a108b75843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e922eea-f645-41e9-8a19-c5d197006467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34549593-edee-493b-bd70-a8bb51998b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e228885-581c-4807-8f21-914c28ece902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bed2138-bdf2-436e-af14-62b1949a21d7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e78fb8-fe68-4820-bf84-c55fa4db7ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1b8505-4468-4bae-ac06-5c445c97eaaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1d796e-acb0-4647-9fcc-d1b172608a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a28a44dd-90cb-467f-a61e-336cede33759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efeba88f-cb87-474c-b554-78bca1fb88bf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3144e1e0-4ed4-472a-b094-e110e13806a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc89c1b-1ba3-4874-abf5-aee141750963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a979b7-18cc-4ca8-9a6a-40919bed76cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b6f6c3b-ea68-4cf5-b068-38283f72a5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b88ba95-afc1-438e-b070-4583b6faaa3c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9393278a-cc4d-4140-975a-a03eec7d7b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9308da-5152-4b56-8c3c-eadf0fae3354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc1e319-7012-4070-8def-83d315956133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9566702e-fd6c-4eb2-bd3f-f9d9bb155286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8cffb3-aa94-40e6-8d8d-18771d336a10",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be3a112-2d44-4e99-8c76-619d2367e512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12ec99f-de39-4109-95a6-a11f5452a85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976017b7-2635-4156-a309-1a6d099fe992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f4d92eb-ba16-4fc6-9017-8d3a1939a57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e6ee1b-c87a-4d27-8220-aafc36df6a71",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2cfa77-82c5-49ef-b5a3-be3da509deef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36eb08a5-4cb2-4de3-a177-c1175e41e511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f895b9-a414-4290-8bb3-3b77d8c4773e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ec7df3-3f70-42f4-ba64-3d2990e2f26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b472cd10-99c4-4a72-a978-48e70c980916",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1dd537-66f4-4e88-a923-9777dbfd2282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9c7161-da31-4a6e-bbca-7a870062d59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f71108e-9123-4da3-a0c1-375d27cb0776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb1b7c1-d077-4ce3-98b2-5e6e1ae06664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4b1ec0-4fce-47c3-abc1-94c81a297fba",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a5221a-46b8-4175-aa5e-ae3ed5ade9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e048556-9979-4db1-abae-3d4f09eedc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0de4cc-91cd-4ec7-a11d-ff8cb876a46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f708ac-de7c-49e9-88ed-e67eaee1921b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5bfbca-68e5-4827-81e5-1b48d19fee6c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c37e7e-dfa0-4b9c-85f7-b168df321441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8bf9fe-5b6f-4050-92ae-597a4e57583d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6d3a2c-5e20-46ca-8b46-1c0ddc89f0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04bb7415-843c-4f76-8f0a-2ba624a1f528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d4ab43-c362-4a21-9161-e38200dd697d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f52f83-5edb-410b-ac47-42f2ac7cf619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74531bc-fe51-4c13-8592-607f6dc71c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227c9c12-a226-4cb2-94d5-8956f19b0a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36d51e28-3908-4ff2-9a3e-3c6b90467ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5f4fa8-3701-4937-80f4-954abdb6e872",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f30b95-bfdd-48ca-ac03-518460f359f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389c67e7-fc1d-4755-86e6-f667712969dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bfe54a-0e54-491f-b75d-876aba05daf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7983b6ae-402d-413f-82c4-bc0ffbc84501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5af105e-01d1-4469-87ff-b92181385507",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87f27e8-5aa6-49a6-9e8c-f901364f0301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d47e4b-2395-4d40-aea6-76d8ef6351de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45b35d3-e4f7-4a5c-9f20-573cf8132f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a430395e-648a-4a7a-ac3a-e6dcf662c47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2376fe9c-c633-43e2-ad36-21511854cb64",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db0c053-fd01-4961-8153-281c670ad43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea53409-c02f-4f40-8570-8bf5b6165e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b8bf7d-bb0a-4b84-a5dd-4bcce19c7743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6386ea-40b4-4000-b82e-d8bb7cd0d5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ffca64-1afd-48d5-9965-bb45d155ccee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c549d58d-43b2-432b-927f-660c95e1e677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f9624c-2e3b-45b4-a591-13b284c08137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df8f6da-8e5e-4b24-bc43-a552bce4dda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4239dd-f1b3-4b45-8a70-33320bba5ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789903f3-9107-4593-938e-836eb320ab08",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c4818e-01eb-426c-9992-1c0ea9b5123e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25ca1c9-2521-4e97-bace-64bc1a3cbb0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208f3a99-16b2-43ab-8658-f5b9521e61ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34378c54-148e-4ab9-9047-48fe3607a218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31415561-7704-4cbd-8946-89b88c807720",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ca2f15-c57f-41c8-9eb8-71d7e59efbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bc8142-0195-4359-98ff-f833ec02cfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33395531-defb-4a15-9a42-406accafc314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6aabb0b-3b58-4ab4-b80c-9cd59f27b324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21afe76-028f-405e-8fb5-0fba9aa16e3f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24a2773-8cf0-493f-b93b-badca88d7b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b400d3a-2158-4af6-9a54-927791a379ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dc940d-38f9-4c72-a83b-fe27805be420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc055160-a49b-4404-bd5b-7148eafd5902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff02cc9-f19e-444c-8cbb-bad3bae2093e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de656528-d471-4343-b51d-b1477aae6b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c3fb5a-dac2-4b63-bb16-089261d71976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3dbe96-f68f-4cd9-bb5f-1c3f17d8d9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a698dfb0-4239-4d0f-913b-e7abe2dc33df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a236cac-343e-4771-b896-6c1f79c64ea8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913f9ddf-d198-4111-804d-99435d540d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5232c980-ac87-45dd-9190-839a28824faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57116f75-6c15-441b-9315-d688ca3f65d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce209691-b618-4f8b-ad61-2391707d19dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54adfc7-9a61-4c8a-8f04-85aa7550b860",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe31ada-09bc-4fc3-bedc-7115645b6462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ecedfa-6018-4481-a06e-6ce1a8a2ec3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d2b98b-b8ef-44e9-bfb3-34dd64482e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84cce140-ccce-4322-bea7-25dd911cf6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b502b763-6701-43f9-aef7-5ce24bed48ad",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5265d7e3-2a66-4c5b-8968-b137bc620cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08b4103-ccac-43cb-a43c-ef21812eb184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fafeb9-e66b-4e6a-a43e-c9f61c02911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9577b546-4437-4eac-8e1e-bb77159bafad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01614d13-98e7-4438-87a9-ad9261fe337b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea50a476-a2e4-429b-8f87-7eb49f365c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ceca62-4734-4204-9337-bf41404b9df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a869b09-cd6a-4fcd-81a2-4d24c836ccd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "164c91a0-f186-4b95-a17b-ec5cc088e8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a89e382-bbb4-4235-bbb4-07ce40a7bce5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706b22d3-9058-440e-b08b-0b55f308b354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3451351b-eecb-4aa6-90ee-77a02174ff78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e882dfd9-a8b5-470c-9067-daea969b9cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "71f96839-1eaa-4e9e-995d-a13e6dde2213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362af154-35fb-44cb-888c-e91aa3f0a9e2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e7abc1-2015-4f6c-98bc-fb43f0bc7b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ef06b51-1cfd-4db8-a95d-0bf4d48ca8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebec270-771b-4f2d-87ee-1175a5fb86e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7898c87-e9a0-4404-8c63-5418b192df52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d6c988-1e4d-46ae-aa8d-c566c06b3b67",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216ad449-9c1d-4ecc-aeee-20764606911d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f03a8b2-43bc-4fc0-9179-c51fec8a60ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e33008e-a6f2-40cb-afae-bb59a0b1b572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d733d69-3ea4-44cd-8a71-90271dd46c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2def967-68c0-4a05-a19d-37573020846b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00633ed-ffcb-44fd-8a98-97dc938a10fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7120eb-241e-4329-abf3-98286ddac5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d6ecfa-7f52-45d7-8f79-72e77b8ad9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "06b384c0-336a-452e-9101-a763b695f021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4e28d2-8476-401c-b97d-de8f4181c428",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c72cbfb-4b83-4620-af5b-9e3ceb77fc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa7d3ce-8758-4e6a-9e95-c2872c672a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d028cf-5cf4-4de8-89a1-b30c8ed949c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c47c88ae-62bd-467c-9f37-58e445bfc67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e5ebc0-b396-434c-b999-5daee76d249d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5485ce-fe39-4088-aa02-fee762c078dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af53924-2f60-421b-a9a0-025fa69594f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89adca4f-afc6-4313-83b4-35fe717694ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6423fb-4e76-4051-9f96-183ebbceb92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd895fa-33d5-4d84-8c3c-b5fc28a95c88",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f31387-76c8-432e-a50f-55173afdadba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea639c80-36eb-47d9-90f9-d5d3df7d8b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f512355-21ea-455c-9e6e-c60a130076f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "780f8e4f-d592-424f-b06b-f0aeb9edab53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6dea4e-27fa-490b-9413-a764f6ea4ea9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bc70e6-6625-4875-89d4-b408d95a89d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409e9d81-cd54-4205-99c9-3eca6c298be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a3c218-6f61-4504-b699-98b69d65c1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8dd76e-582a-4732-a73a-f6f7387d539c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b70629f-f4fc-48b3-8b87-d2c13d5d57ca",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0addc5-0600-4beb-ba0c-fe5f9f17a68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d28465-752b-44a1-beb9-a324624e7b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9b188e-a9c9-48ea-ba8e-c3ec3d67fa32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "11601da6-a2c9-49a5-acd4-9d5f80e66c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2128b56f-def4-4964-a37a-03c6d920372d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdd36a0-fc00-40f3-9091-42855e86fa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7baf0b2b-a197-4514-b999-02134b7753f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a47213-d9c0-4607-849a-022819a97761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc54869-e702-4a5a-876e-4e427fce1544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0744043-4fe7-4f8e-9a50-d3d349cf6889",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc7c702-0d0e-43f3-bbbb-2835a351e923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978baa49-1e4f-4d39-8f5e-e25383ec475b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be48514-2c26-4a3b-80bb-27ff61f98773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "56f3b5ab-ce9a-4837-bf97-1293cfe07b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40439613-5033-4c0b-952c-a00a5d13a39a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11b4f31-597f-4464-a0a0-510113225cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09562167-5344-424b-89c9-04ab49563034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f472ed-223e-4e9f-bcbf-347d53bee2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f49c79-f724-4e06-b135-c8ce5d98fa5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851e7e7a-28d8-479c-8228-82081b2c6c7c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b77bf2-9eec-457a-af1a-bfc97cd7fcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3426e85-bae8-4cba-aee2-b29d9cea185c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c48461-8b91-4ac5-8308-2f539c8ecb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35dbc51a-2478-4f12-860c-af52b427f248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4118c29-2c1b-4fa1-960d-107c430be45e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32970dd4-6218-490a-a5b8-e0ce215a648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8df08a-bb8a-4e5d-bcb4-572e88c454cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcbb82f-f358-4985-8d36-72ffdbacf0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c55b3bf7-a658-455f-b6e1-2c92cdb27b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba0e9e6-7495-47bc-a1a5-c998e299ac0a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0cfae1-24a9-4794-8ae1-a7de6a64d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf8195c-d78e-4f3a-a175-08cc4ed1ce6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d9dc54-666e-4fff-9d95-27be76042946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5e16d2-3a56-4bd5-a106-3d8e36bb464a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7020a9c2-9434-4a6b-9298-0312a3b712c3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2792256-563c-46a2-9c0a-cdf2354feff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a75a77-b542-4e33-b87c-b80c461366b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40e5e81-4f7d-479d-be65-12ddd7753d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1353ca4f-cfba-4eeb-8526-c1a7d869426e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b422882-5620-4fdd-a4e4-234295af5630",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58111b19-9e77-46c3-a7de-efdb97407d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eae3f16-2cdc-4773-8cab-9fc1c2fdb016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ff9339-12d8-4f29-9340-cadc62499d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "62ad566f-58cb-4bbb-b091-71b233a55751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3097449-249a-405b-a31d-834c681886ec",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f7e1fe-3b31-4d61-b791-122d3e82d399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69feb84a-36d1-4ddf-aabb-0901637853dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4271c8ba-b75f-4606-95ed-09bcaacdfded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8fee15-8ddb-4ce1-a3ac-712ac0cbaf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bb0200-7f10-426c-9fa2-6b53aa9a6757",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd15e46-2d68-4512-b7d8-8ac15bf30afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebeeaf62-1997-4d0b-a940-f19d0d1f28e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf0a7c7-0ba3-4d72-a07e-7c5ee3f2ce8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bba7719-cdf2-4795-ab16-5952dee26a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541d5f6f-7767-4bd2-9ee0-a1fadf5abd00",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b1733e-8492-43ec-85fc-ce320dd18a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a684d1ef-b53f-4175-a90f-4eb63e4acdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae58c1a-f0c3-4f6a-8a36-0aa7e1e11986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "901e0cc9-3270-4ca2-8beb-62411934aa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12b5b8b-fb72-4a54-a3e8-dd616027f6c8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2320944d-e03d-4db0-8676-da8ceeed3983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0dedafb-01a8-4cde-9e4d-7c5b8f538ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c81233-e701-405d-9064-f5be0cba7635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f42feff9-4054-4889-a599-526e8e3d15ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654cba8f-45fb-4e43-a305-0b857115663d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b3d6d6-b144-4782-83d0-3655dfa48e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d97b49-90af-481d-96bb-44aa4e5bc8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e923de76-825b-40f6-a688-87079e4311a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e18fc6c8-e9d7-47c1-80ec-e852cce36600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f107b7e7-2f00-4133-a65f-dc2069ad7297",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574cc81b-d86f-4be2-b294-869887584957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16babb58-605e-4a84-bb34-5f8c778b3dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9e7bdb-fda9-455a-ad6a-0e138da6cbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8e8880-bf53-4dfb-9c41-ccc9894d0aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bb6bd1-1483-4f1e-847b-53309a58fbcd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e891a769-2648-4d69-b19c-78b1505479f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af5282a-127b-4178-bbc9-332389e8cca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c458b58-a667-46a4-a2ed-b3ec7f8d829a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b63a4d90-d28c-4413-974e-4469dfd201b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3a4234-7e8f-465e-ade8-8cc7eea21af4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1331d28-2713-4b38-9368-5e21d75fec4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76d21e8-0913-4c22-8c04-5b377507d610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5860d35e-e574-4f4e-84ed-dca6ef60d78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e22b2c54-6db9-4a5d-9d37-ffc51b51120a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746b45a1-ce02-4db3-a76b-5d778fe6953b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbe29e9-eaeb-4b52-b953-1a5be8081de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ad6a96-5a22-4444-8db0-ef032b3e65d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fd8696-9de3-4c2f-a3a9-a0300a2b27f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e80a0126-c679-46ad-aef6-5a662f291c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5204e90c-8b2c-402b-b58a-44d03033dcc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29245dd2-825e-4185-81c4-b0b288bb914b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1188407b-fd36-44d6-a29e-698f652bfbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b0ec3c-eec2-4365-af9b-c0ebca2c2de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd380b5-3972-4054-9e06-1fca53458021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6daa04-8ba6-4299-b278-070799cd03f9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f6bb4f-c630-46e7-9af2-91383ecffd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e5dbaa-e43c-4cb5-a94b-ba10367f3140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5149ee-6a54-4818-9490-4b47a2ff269c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b6579d-cd14-4d29-8694-e9737f7ce90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d204b5-2c56-41c3-9f99-41b33aced838",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6376dc28-c982-4fbf-a094-48c100a4a020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e444760-57ab-46a7-b871-919d1157edb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee364c9d-86f9-48d9-9474-5cf7b4c78a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9b2a7a-8ed7-454d-97ff-0528931e6343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a69929c-d295-40dd-94c5-55cce1e2959f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24245de-2625-469d-9b8e-a5ca733cd2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f697c8-84de-4c9c-916d-2f0bf7ced61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d0afc6-f513-466b-ac73-189091d3ac22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "974f2d79-d37a-4075-99b7-e86efc759d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5b421a-dd24-40b9-b841-073bd8936ed3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d60cd7-0e02-41ab-ba1c-9e7dd40a9082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5900c01-e437-49d9-9632-ff21196c35d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cc068d-027e-4ad4-a722-c2ddf35d4180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6604a7ba-f2c4-4dee-bd4e-bb91ba1f0910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ed3db1-2727-4961-adf9-9003059f74d4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a6166d-4c6d-45e2-9e60-ef067e4505b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b4c32e-4548-4be6-b492-e9a3804d5403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c4a802-2dc1-48c5-8241-a2c4625b104c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a79fbc9-79c6-4576-9210-3d5788b2233c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bd3897-13d9-410f-9edb-55a654598751",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4efe8db-5d3a-48ca-adaf-7e98b6bd4e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78013b47-7250-477a-9440-9ff87394d055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeae7bee-0843-4b9e-b377-5ec654dc3acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98dac0aa-4bb5-4d6e-8c48-6c28be69f42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d3376f-7e0f-4b13-9a65-aba7c14ed21e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20462597-c261-46ad-8e8f-95dcbe224805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778320e6-9b14-4780-b50e-38f732a6aa1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df232fc2-16be-42d5-b04c-429e11828c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2136362-6466-445a-8bb5-2ce1091d4e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c491ef-a38c-4bc2-8d9e-6d7a2c279d1d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba48a60a-9139-441b-9a4d-a82146fdbd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8d9651-5b2a-4123-9c77-7600865f44db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416a0035-f382-47f3-85df-c9a7ff96fbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "da423b67-3904-4265-9abb-aa83ad78fcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60a29f5-4dc2-42cd-940d-acb3a679079f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ae63ff-2abb-4cd7-ad7f-5283c216f134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c27d965-e373-4a18-bbe2-5664afe5dd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a260907f-1b5e-4e1f-a726-05c7f5971382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb60366e-6314-4438-89d5-7d3096e81439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043f2180-5e8c-487b-9ec3-c3c3dcf04df0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53020be0-ba37-46b3-abd6-41dcf7c8ae69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e63d79-0e38-43db-a561-d3442968661f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413b2c5e-c154-4795-b53e-5e941560086e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b07b9e-a055-4c06-aa83-210713073ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc18bd4-4bf8-413b-9b15-2d6ab318541d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819301fd-b93d-4935-806c-73ec3637091a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8293b508-a678-49f0-bcc8-f0b729a18392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d130310b-2fc4-4d15-907f-16e9b6c9dd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b75e165-c0c4-448a-8eb3-7fd01defb5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91084ad-c336-41ce-9f40-d3c994fe80f9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97a1c8-0c9b-4f50-9fa6-1ec9900e75e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab721a7-e6f4-40f7-80b7-2d8183ceda0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d5f2b6-b1ad-4dfc-9316-9fc6d9476fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c49cce38-5832-47d6-a016-007080de089c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04788532-41aa-4fd1-8281-233bb999dbfa",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2ee8ed-1fe5-4db2-988e-e9d25354583c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc24ad17-9c4c-4e86-b8b1-d8ab46140180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935348e7-9741-41f6-b60c-a49474567d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a66395c-bee5-4ff6-bb32-6b7fab74a6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d042c442-db52-4e7c-927b-3bd7928e52cf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece36473-0a6e-44d3-bcb0-b3f4402f66d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf470eee-8c93-4a78-a9e4-350d89c51290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c513a5-5b39-4cc3-93b6-d40ab2daea04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f930f2-8afd-40cd-a7ca-9be21479f222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d30d4f7-803a-4ad6-98fb-37ab878964ad",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ede261-5325-4a4e-92da-909a32d8644c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b79b5a-2468-4199-8e8e-fc93b543f2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be89ca8-1859-4d3b-ada2-618b0bbfd29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e68668b-5815-4a35-8535-e2d4e8a91322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9afc855-1030-4f0a-a6ef-973d0dc78dab",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af70bc50-7486-4fdb-9882-f1b7aebdefa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849ee01d-ad80-44a5-b752-f4f62b86a5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24e456c-68f8-4912-bd68-c2986456201a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18294020-98c0-4075-97c5-6d85f7ca7cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2559d67b-36cc-48cc-b69d-10b169a596fb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9f58c0-958d-48e3-a5b9-432396b31995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a596cd-2662-48f0-8a6d-fd37ae9966dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ece051e-e304-44a8-a845-7a1843408307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db3537a5-c12b-41f6-a9df-50bfa086630e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1628133a-e7fd-4671-9b34-6029e93c3cb1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426b67c4-211e-4296-9117-78a5f84d5d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6063dbd6-591c-4b5b-8a6b-ebd11c8a46c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae346a76-ac90-4f2d-8fca-e0cc0790f259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a9cac6-d8f6-41ad-bb2c-65c7868d33f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8243d4-7d3b-4e52-94e5-9298ac874b7a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023bd2d9-4578-41e8-962f-12545fa09805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37214d32-47c0-4551-bc7f-a6a5822c1517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b153c55-a90e-4c97-a185-cd67429bebe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93020076-1c5a-4172-bcfa-f631aa06c97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3823bd-0958-4cdc-bcca-a2350e33652e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b2bc01-0b3a-4692-9c92-3f9962026ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389c3b67-2920-49eb-8001-49a014aef501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f867ea65-af2a-4b64-93e1-4f64a244ee84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c97a2e71-780b-42b4-b039-f7a23eb62f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50f12ed-cc93-42c3-88e4-84bef1f29ba5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9094a2-fde8-48a7-8094-d3d5b05a8bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdea536-70ba-494e-8163-2423b36cddd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552206e0-86ab-4047-9d6d-2e29fc7357c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03de6b34-2d71-4f99-86d7-900255637e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b7cab9-d330-4fa8-964e-d59b30f15a14",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70de7eb-3a8f-4c45-883a-b4d6a52953d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def44dda-d025-47d6-b08b-bdde10b77f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab37537-a932-4b04-af40-b6893ee0ac55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "168848f4-5a17-443f-8dd7-bcd942c64d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfbc5bb-9e00-4db9-a6f8-d08a4936c3be",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fdcc73-be04-4549-b4ae-21bf0e643fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbcfcd9-080a-49a3-a4e7-dec3825bc205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1773814e-8a7d-4caa-b885-4b1a3aac6bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "edcad554-42a4-4cd8-82bd-cdda7df26729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3bcdd2-1910-4e95-860a-70bd76ead3c4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c037c79-5219-4f90-8268-a65c357b3473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039a9b32-4a65-44bc-a683-5c8991452245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb606a9-4f1f-4c13-b5af-974ae443c65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "474c8e74-9120-40c7-ae57-9e02ed8c7f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73972d4a-b0e8-4c30-badc-0a17ba7967b7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e309dfc-276e-40c4-861b-cfcd7b6f9a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb44d8b-c810-4b59-95ba-e2ac6bff107c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af34824-6788-4924-85c1-b2345206ce3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8ba321-8ce9-4fc2-b847-e0fa412edac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48061ecd-d171-434f-b00a-93da82c27d83",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff06741-cca6-41df-b0ca-1caea225654a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4660a6cf-33f3-464e-8c8a-0302a5415d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8482e6df-e2b8-4dda-a3f5-db61d2e00c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7deebf73-74f6-42ed-bc19-e2b400bead06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965dabe7-0fb6-4289-a1bf-9ece3cfa68e4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a37b62-0f08-4170-b92d-e821c3cfaf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14ffdce-4609-4b6a-8a61-b4878dc01be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ce1958-ae2e-4baf-903e-4820be4ff2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ee3593-26b5-40f5-a37f-8d8f28dc526a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edb2439-83fe-4d2b-91fa-d3de0dadc371",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dd01cf-e3a9-4b2a-9000-7af1e8e0df48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c8bd49-9aab-49f1-a5b6-13be2f7f5d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c3afab-9a23-4a3a-8349-bb44df926190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b106d515-3515-4de6-8f9f-7edb2f929ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4cd3cf-fcea-4847-bd61-09b30860e3ab",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e5d063-d1fa-4336-a9ce-78ea181822f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eed3339-9f51-4883-b4ef-aa4786941b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9a904f-39ee-4bd7-b411-02cda124738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be1b338c-dac8-4063-951b-26e27d646943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d6d68c-d351-4f1f-a803-8a7a848f8e56",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4252cf90-3e68-49b3-910c-a75d38872378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab29e3d6-3e0c-4c39-bbc3-73319a8b0675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe32666-a678-42d3-a3a0-cc18c28b3585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "621086df-32d9-463a-a9ef-a47a20df5d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1719dac-856a-436c-99f4-60feda324922",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5b0c10-edf2-4663-b67b-e10caad8db13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "456931c9-d337-4e02-8d27-2eb3714050aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6434796-477d-44dc-9240-c36585811144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d527bf40-aa55-4962-90f1-1a3eb5180945"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2230e7f-6bff-4d50-b2a1-8a00b0e32923",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95069cac-4379-4266-ab08-0380b8962462",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fc6ae7-5c8c-4f9c-8570-14d60d9186e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be5f4a21-c410-4d5e-bedf-fdbf76fda2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60112b87-112a-41d1-aa53-d9531a4604f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84671f3a-7733-4948-8b77-6797cb788562"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "397af33f-78dd-4af7-bf47-f8df84fad060",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8af4a66c-ae50-4a39-bd83-5bf8f6a450fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c290e6a1-60a5-450d-a037-0f6cb679a294",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58108e4b-406a-4db7-bed5-443b3fc6929a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33f8287a-e90b-4ae4-9fdc-f8a18421b32c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3441d62-ae41-4e4f-8289-8554efd13068"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6ca3bdef-7018-4fca-84b7-ca40b9130920",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "357ed8d6-098b-4660-b146-aa76f41fdd71"
                }
              }
            ]
          },
          {
            "id": "f49dd83d-b42b-47df-9ff0-764ae9a3f866",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a5bec758-0a41-4269-8516-1c2c96784043",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "839ab79d-0806-4537-8910-9eba8f99dea6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918af6a1-0cd0-4271-a8c3-febb430add10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2c46b97a-fec2-481d-b60c-903fa4a28027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454951af-dda1-41d1-b99a-0d875629690b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61980134-fc8b-43c9-9400-4a7a5837efd3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a741bba1-e0cf-4ab9-b2cc-e917044cc2e2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa3b7ce5-6a5b-4c46-91b8-ce016e63546a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1314e037-bab5-4b75-b6ec-6c0c85048348"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa648d01-82e1-42db-8bca-ba2f461a6384",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "538435ef-1923-4750-bb4f-f37eb72b830d"
                    }
                  }
                ]
              },
              {
                "id": "00e9c9b0-7095-4566-bd77-0af9548fbd30",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66749fa0-a274-4534-a80e-8146f9f53256",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2dfd1ac-cb3a-48fa-b32e-3ff98c7f8f84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f68c38a-140e-4742-9ff6-6da8dc78596f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "948f52eb-55f7-4d4f-b999-78766b7dd848"
                    }
                  }
                ]
              },
              {
                "id": "8b27877e-03b0-405f-9501-0ad9cf33f8ce",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c04b58b1-f590-410d-89dd-24ecf1990fe3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9ce31a7-eb97-49de-ad89-46bb4a42f87e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4531dc7f-f4c8-4185-b7d3-f6d9757491be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ccf360d3-9995-45fa-9dd7-ecff42d924d1"
                    }
                  }
                ]
              },
              {
                "id": "c13ae320-fd74-4d93-8637-c6cf893a0243",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c12e483-3426-436e-902c-ac189623e304",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1858b72-6fc0-4372-a588-0e6ffdf26d48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f70dc4e-3e3e-4855-806f-e118dbdf34af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4b53d0dc-bb76-4499-84a4-8e0b9d9d4fce"
                    }
                  }
                ]
              },
              {
                "id": "a5a60ddc-03a3-4f95-b8ad-1b99774afb60",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "084bd2e5-00cb-4813-8f60-938db269f4ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e13392b6-32da-4b42-8d82-0e4927c39ef3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5994b5f-7f87-41c1-bb27-3b29560d83b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "22dcb937-d061-4ed7-93c1-71bbb74b2f96"
                    }
                  }
                ]
              },
              {
                "id": "222802cb-df76-4a0f-b8bc-b46b97655b21",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c3dd7e4-f304-4885-9991-20b2e6eb33f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0122a23-1282-4f51-8ef5-1fbd5b4d5849"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70409e76-dd73-4454-b157-82974f954285",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4a44d1c5-e5f3-4d22-adc7-c2ec3e318e6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9a29b87-ce42-4f26-91a9-d05c323a468a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e04b2ec0-6277-43d1-9237-301d95b84dcc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31545ae4-f047-4277-9aca-5e1981af96d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "784b4e0b-47b0-4aff-82a3-39a8f5bf1bec"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cec92cd-9e5b-4612-b381-2fab1a0b4405",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "20bed80f-a7d0-4cef-8e1b-0ceba5d0b657"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28f1a2a5-a4f4-4915-916d-cbdf2e043406",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4b2a69d-f88a-491a-9e6a-b492d041a00b"
            }
          }
        ]
      },
      {
        "id": "1be2830c-7921-4232-ae42-b6b554b18d3f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f58bf87a-c1ed-44cb-9e35-f5abb4881d84",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cd9800e-0aa7-48d8-acd7-22a9a233008d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d580b29-fd82-4be9-a936-c1a4c9ab18dd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6aa6a3-ddb2-427f-9087-b33d26986f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294fc2aa-4220-4aa0-81bd-1e7902e6a5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623db7f5-700a-4092-9dd2-418ddb88eb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad1f115-ebae-4ea0-918a-80368052135c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6224e7c-e17b-4743-a365-b5cbb064b033",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84828736-406f-4115-a9ca-9b8ef9d0a38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a3e27e-a3da-4018-96a6-c4ba841266c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d20d6d-285a-4b81-8488-1285661ddc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1b82e7-5d95-45c9-a681-ecf9775dece4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d563a925-d854-4318-9614-7f7077d76b85",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3a03f0-016c-47f1-906b-6983cdb21479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbae4057-8298-4cc5-9c96-eb20b9bdfb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9402bcf8-b3f4-435f-9ee1-15ae1374cb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4ac145-97d3-4bbb-9ed9-975723fe5010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e966459-886e-4ecb-9912-e169eeeb034d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0163bafd-239a-412f-a337-6bf36cf98443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0067426a-1166-416d-873b-1ec5efb2aba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f2ec4a-c5a5-4ad3-a86d-2052234f8f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad80d567-e6ff-48a6-b2f7-6ce6edfb8989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0514f9-9d04-4602-8069-7a66eea8b5c8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af54c2eb-b57b-4679-9833-773c2b6a7133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58c4a0d-ca6e-467e-89e2-520cb5839304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a28532-f424-4f75-930f-7639eeeaf8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f879452-255d-4321-929e-c44b39cf27d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e23c14-8f3e-4610-b549-59f2a6dd23f3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2796bb1a-7d65-4134-bdd8-db2ed1e2b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2733efcb-919f-4e6d-8717-986ab4379fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00165cfc-2ea6-446c-ad94-83f06a1334e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab01665e-401a-4d1d-afd5-e1a99fee39da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0202909f-9783-459b-ad5d-f47df14432a3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ea76fe-1ef6-40c3-b131-5dacdc813e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fc5fa6-8d8c-45c1-86e3-0370f6943775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1904362c-2bc5-4090-b28d-5e4372b81ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d45449c-e6c4-40b8-86b7-6033247def65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d27ac0-4ee0-405c-a1a6-3ab6288127a0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ab1364-0d3f-418d-85d8-e7e8db1fdab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75805a5-0379-47d5-840b-00f1e3f8e849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418d71e6-c9a6-4620-a472-a4f8e8145e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7a4501-dd8a-4972-a4b1-a215c56cb3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaa99dc-ae84-4d88-b5bf-5a6c17f96c95",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ce0500-acb5-4389-9c79-04ddb09b5f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d67ca2-3da1-4cd1-9165-12c4a013c5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427b3731-aced-4f8b-9a70-d7585942879b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab491215-9956-4bf8-b23d-54d958de628b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2676f78e-2855-4f34-a405-b29bf70b0e9d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249c0749-9b65-43eb-b149-143f9489b5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017e8f85-a741-49e9-828a-74a85a069275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863b8aad-98f0-40da-b113-0f44d1e04972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54de5b5b-8b84-4ded-98e2-5929939610d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19a7c51-db01-4287-926d-3676f94e80da",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a405380-3d6d-4141-aec1-15f8d9dd2d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85461034-e27c-4d08-9518-715e17970b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d3eae4-0a42-47bd-886c-2765723f2e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "981cad26-5910-4759-8d32-2967abbb30ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23a09c3-ddba-4805-8bc8-3cb05fbb637a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816b623f-a768-47fd-920a-f5db0b2c5d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05460dee-a3fe-4d22-8ac6-dcecf030cee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dfcd9d-253f-45c3-8e3e-f4217507401e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0782f01b-ca89-4ca4-8f6c-0dd3c68df1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea1db6b-fef5-4995-a407-bd623c47f44f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae256cf7-1e44-44cb-be8f-a6a9fbe02a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af1601f-264b-4bde-9394-24edb2368ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06891cac-0958-4c13-b4a2-8d71c41591c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4100789-5286-494f-b7e0-ee1b2f5e14c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9dab1d-9c45-41f6-b1f0-cd2f7f8365d2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396947da-9318-49f6-ad61-9c745e6ce221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378b67c5-81c2-4f47-aeaf-932e3a4554a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d31a2fe-083b-4843-94c0-72c9c3c59876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc45598e-ddc4-4ca5-b13a-dc59124e983e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d2c4f7-d4bd-431b-89d4-a2699abde45f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffd4d3f-5786-458f-b073-7e110c48c5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7d1c79-d82e-4cfc-a58c-d58282964a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9822ba4-cb9d-4670-a31b-c1c6e0cc00b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc51a54-0aaf-47de-92dc-c0eb2cdd97a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9c68fa-515c-4e04-9ce0-90329ea29a44",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c37cd0-8708-4b53-bbab-8f8928edf32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded6a2cd-df30-4377-ba60-5c98b6ad0d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b40e4ce-b8ba-4a2e-b888-2a86b174b400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc155a6-5843-492f-964b-ab2673a3f64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8188aec7-6974-4109-9c0c-76e9b4824920",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b3a67b-3663-4ac6-bbac-a7802bfbd771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d6ff8b-bbac-492b-bea1-6dd5a8c051d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729bca43-dab3-4304-b43a-9d6d260e1c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef738f3-330b-412e-91c9-dde6af6ec05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed39488-6cb6-4082-a4c5-df7e80deb290",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcc6118-ebf9-4a65-a5f4-c07138e77997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f51f7f-4905-4896-901d-be42226ed94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af29dfcb-78f0-4755-8449-a8ed4cdae385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be1aa9d-533e-4e10-948b-a95cfc175df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13460e0-1c78-4491-bfda-351ef058f0ec",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883fc873-8a2f-42c8-9b1b-ee2b38acffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4db448c-99db-467e-9ae1-4cd2d9509468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4618157a-8697-45a2-8ebe-6dad74fb2acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e75f997-5e49-4dd8-bbcb-cbe7c2e765d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51be2440-a552-4e44-bb28-f00a6902da4e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9f21f4-fcfc-461b-9d22-9e5c6dad8234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8eb495-897f-4669-b196-e831cd7d8c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27661d8c-0d3c-4e7a-92a1-6cc3a77841d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "755e70ac-95cd-40db-a44c-8f37b505606d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa1d39e-4ccf-46ad-a545-9954d1526127",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f677fdef-98e8-4aba-b547-7535d47dcb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958932c3-11ce-403d-8be1-7d6103b66dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e065bb43-b937-4898-85f3-37798dff83a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0273bd-0778-46bb-870a-cb6d84d8dfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9054c019-a21a-4756-840a-cc43630923a0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfdebbf-5953-4c6a-83c7-a4fe96d10ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00f5aab-0330-4e03-aed3-4dc5d8396da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91962e63-6c33-470d-a857-1a9e43202007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0553bb9a-6152-4753-a04d-cf0c67e78c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0b6cb0-e53d-47dd-bf23-9cb5c1c8a5c7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7b4252-c68a-41fc-889b-f6e74957dcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd899d0a-8a3a-4d59-bc26-e58ab7b64ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f53571-3676-472a-8040-6d668c9f4a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06ec6ae-705b-415c-b214-f3fdef4ac811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0399167f-5425-4d20-9549-dd1e5b7b888c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91eb5658-c74b-4e10-a66b-122902845c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c49984-2be8-46f0-bec4-1eeefdc71721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa36454a-08a8-476a-94a4-945c04624451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a65d9972-a50e-46c5-8232-e2191baa317a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f1878c-2c4b-40af-bb9f-b043b3ca6b13",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafac837-c61d-48e0-ab91-7f2e8f5447a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4dbd5a-6a1d-4e47-a92c-19fa2c3b6371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1a50d2-f4b7-491e-8f39-c393a05bf39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c04aeb-6e98-424e-a293-df42f88e0251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7028450c-4a23-493a-804a-41de90fe167f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d66e28-1689-4c63-b835-fd25feb92e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba70459-bea5-4ded-81a5-765587fd3693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b870bd8-724e-4398-90ba-89527b31c826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c37cd52-6e55-49c3-9fe6-54a0a52e4c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239854ba-3622-4c50-ae9b-a5f6331dfb71",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9492ca27-0cdf-41d5-aa01-ecb731088191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcd9c8f-835b-43c0-b5ea-bb4d2fe96dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d636920-061b-4ccd-8e26-6e101f89c698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89599074-74de-4cce-8bc1-8fee456a9d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c87274-5305-493b-8fd8-687d9a700507",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a64729-a0ec-4edd-b1fc-0caefaa6c0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa474ec6-4f3d-4b91-bdd6-cef9802921ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316f2ec3-d37b-4a12-a06b-1c667538bc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df6252e-e320-4a3d-a672-dbbedf3df344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833eca8e-d0b1-4de4-9111-6b540b3bbe12",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c24e7b-6728-4fd7-a6ee-305f8fd27add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcaebf5-e41d-4ed1-b3db-1764021b5fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31673dba-7a59-4a84-be6d-b829b435e406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18d2534-4b76-4e74-94cb-d8f3d5bcddd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5232eb7-e6da-4c84-b805-5824d13bdc7c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429c3092-574f-4b34-928b-d777406b1d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e38f30-5c17-4bd3-8657-2d8eec14e14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9df542-00f5-4f02-83fb-7e9458afe701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd2fba1-9de1-459b-a2b0-815e6c0b2cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1f01bf-dfb7-4ef7-a659-f495de43a82b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ee9b95-565d-4d5a-b067-07c6637bc22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98550e0-3c08-4a31-b83b-8a3f381af951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c1e863-612d-42bd-b46b-d44973ecbff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "560d0e8f-252e-47b1-bcdb-596164299726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d5a7da-b98e-4a73-bfd3-a98235a24609",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89364d6-d4be-4a87-afff-0dfba1a56c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcf8da0-1e9a-473f-91b7-f3d4dadd0865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1129d3c3-f516-43d8-b22f-09494beaa4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e29182f-af6f-41f1-9e80-d3da33a56f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac392662-a9c5-488b-ba86-5d0ed8ee6116",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc44cb89-8ae4-48d9-ba97-ebbc76e7335b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b12ebe7-68cd-41f6-8b4a-b5663a0f8039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06dd02b-9060-48de-8614-3a55a94a3d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2e8056-e845-4cf9-a652-5133ba33b75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f56b3f-8c9b-4fae-856f-0c7301df289f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9398eef2-3298-45e4-a273-a1195f97c0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bc9151-62f1-4777-a478-5cdcec6c1577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dc5e7f-115b-4003-ae7c-d7cba7d7f400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b482aeb2-e974-4be1-9d62-fc57f36fa854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69cd387-5169-436c-8cd0-9db3e7c68a50",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75978a9-5449-46ae-9428-97202e39658d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab9f168-2bae-475e-9cc8-9e3508635c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e884eeb-7714-4a09-b0ab-6ea01a5b512e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "252df42f-cb0f-400e-ab3a-2e9c644776da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0084dede-d2d3-48ed-ae95-9d5b3af5f9cc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bcb5c2-0a3f-4cf2-a205-3f852830d223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcc7170-63ec-4f04-9e5a-bb1d00c7e454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad02ffe-ae6c-4076-8f09-e7e1d2be7535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99c55e20-f3b9-4a58-adb8-581539cf1d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e07eed-b5e0-4467-adf4-d7c948d58f5b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d27129-3ddd-4483-b0d4-3d11237b91c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d01ffaa-37a1-4982-8092-f7037f6a1847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2ca78f-129b-4dff-a23a-7a4bc3246605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17eb89ab-3d17-4ff1-ab65-85db0afe77e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "30ef1d0d-d9a5-45a5-af75-c3b2aba5a783",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0814492e-db8a-4973-9c67-1bae7d602681",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2530271-262c-423b-8bd7-812bd9cf74bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "042c13f3-0d90-43d7-af98-60d4945c981f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba5bbf5-ad2a-4cab-b6ca-869a3492575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "140c9b63-1619-40b8-af7f-e17eafbac03e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b008717-f96e-4718-9fdc-aff079aef61b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0c28151-327e-48ea-9134-900d35f3364f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5691c833-599a-4041-a8d1-3fe0a19d0ee3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9a2f3c3-0dac-49f0-97fe-2531003f5619"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a90fb64d-f28f-47f8-be21-ba69ec944b27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8cb3806d-3bc4-4d1c-b42c-4d6251337dbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8dc1ca6-d103-4e95-841c-586e552db99f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba07f264-7293-40ee-8efc-2aafe8a3cd7e"
            }
          }
        ]
      },
      {
        "id": "c6859c1d-5a92-4213-8430-18fb60513cec",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5e87215d-9ea5-479a-b209-2c8c203e1b9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a22bafe-edf8-4448-aaee-c273aba9f29d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "39acf475-3bea-4b8f-9cc4-e64b43f65ead",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facc4f0f-ed01-41c2-bc4a-3940dc09d9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc1724d-3876-4b57-b4ec-31a5505c92f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f0bfe6-cfe4-4818-a368-ed44f5972534",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13fc0a7-5db4-4b8f-a2f2-e3242fddbd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44426275-daa8-437c-8a7c-79c848abca4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a574204b-98e5-412d-80eb-7d932f92ff4b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c3edaf-700f-4e0a-aa69-3ecbeb73a417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9458c659-64c8-4cd7-b8b4-464635cdc0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924666ed-f6d4-4e96-a419-0184345468ff",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bacf4e7-2a13-4851-8d94-718b5b0802aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a70607c-5557-4772-b23a-bf3cd3f0d1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3cc2f4-ccca-4287-a37e-45c4d14989b4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f95cfad-a58e-4c20-9e4e-cd2df89c6a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb1eb42-175f-436b-86e6-da512adf83dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b32cb87-a49e-4d5c-8294-4dd9ece642a8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1ac24b-fdf7-4ba4-8f43-7140a74aaf3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0fa3e0-06a8-4001-8651-314791ff6b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d3f423-0601-4eaa-8a53-98db6a3070b6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c494604e-86e4-4def-9815-83619ebfc4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9c5fc2-f258-464b-a2f5-276362aabb27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7da0bd4-f17c-4cf6-b3a4-a636506defb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4496bac3-91fe-41a5-a20c-47d02bedb486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bc9673-6b1b-4f5c-bdea-71e41dd3c78c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e12426-d7ba-49bf-b985-94586e162fc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d2ed90-9a63-4a15-bc4a-c5a4123f4355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e24a75-df0b-4a9d-bd48-6aab3835f974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7742e7-dcae-49e9-89f5-ddbef23680d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b65125-4f3b-4d5f-8980-84a12676f754",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9b3f80-ad6b-4df3-bd01-18020660dcde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d3ad13a-14e1-43c6-ba47-4f16126d3728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2ab638-133a-4799-a9b6-0e644a758698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96552016-3e0d-41fa-b22e-05f52d64ac06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb1cbcb-4ca8-43f5-874b-697c02b9adc7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0c0bf8-f542-475b-b8b9-d039e5f7bc2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf26e6cc-2e33-4695-b1a9-e9882c6059ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62af79a2-1012-43b5-b5ad-5b19e63a3907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368200a2-43bf-4fa4-9f02-c79dc21b0d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e042b9cc-4d12-4cff-8bf1-6513a2cdc8f4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd62e0d2-6db2-44c4-99e9-7163135835a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44a6460-27d7-40db-b8a3-22411149c749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce4599b-3b03-4a40-8834-4d668cd87353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cedb4c8-4677-4495-8d96-c7e67e65954c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a074de7-b0f1-492d-b538-19b494d53772",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a0d63b-0769-4286-8b20-cc010bc127da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12bb8453-7713-4e1e-b51c-2625b93ed703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24427514-2998-4011-bf9c-08a8a958b45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14123e37-a8da-416f-b3f8-a434e5b33b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc8e4a3-93fe-4629-982b-e6e2ded80aef",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df16946e-0482-4523-a158-7d056d0622bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84eb535-03f9-4743-ae7e-20dd409401ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b8bcd9-2ba2-4e84-946c-aea1b74a73c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d37ed0-b51e-4e86-b98e-5654d657f5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8a8d25-1603-4644-93be-f93ea1d970d2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31ff3df-8009-4d0e-bfae-99a0ac95964b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3944ef7a-3f74-4989-ab2f-9f9b2222089d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df62eb5-7bb9-4677-9de9-c14fc8afc67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f019be8-9c9c-44a5-9a79-52b1ad3441b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fc4438-9df6-4cd1-8009-10346865da6d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3038fbd3-bc41-4c32-a1e6-9c79f8a425cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad4064a7-ac6a-4424-92e8-310ebaa0a554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2e1458-b515-4a0d-b8e0-60029b2eb950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69e0e8d-49b3-4905-9abc-1086d0f68cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3154e9ca-57d6-4182-bf13-7652b2d3514a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfe5a2d-cabc-4a25-90c7-04b8762e174e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e95123e9-204c-44f6-9c70-c4f3392a4ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5130048b-0aba-4e79-9d84-6fbf4f7ed7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c235d716-dc7e-4e7d-b06c-8d497be6d7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30933c52-dee9-4e98-9aaf-899470a12bbd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e796164b-66eb-461b-92af-d206844082e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052bdf7a-6890-4366-9aab-5fe68f0be9cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fe4e81-caea-457d-8a0a-286dd9d7bf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d827e0-6c21-4bfa-b214-e8179395f52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc37c1e-f9a3-4cf7-88c7-0f6e80fd855b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11a836f-7a70-406d-8128-a6abbb4bfb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f414ed-3587-4486-bc63-fdc3a59f750c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6558175-1a5e-4fcd-b046-49381d8e376a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8825f7-5412-4700-86ba-4010e8541d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c72cfa-d818-4baf-95cb-51b756b24b57",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1895368-dc42-4ebf-9f95-9a5285709b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e96813-8c65-46f5-ba45-1c30f5fd4c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f899f0-2405-4f56-b903-c53f3add6ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c296c8-d621-45a1-b1a5-ef22ff02aa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc147b85-780c-46be-8866-690798c94dd4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d270e839-c77d-4396-875c-94bff4cc340d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acdd78f-16b4-4e57-94e3-3fda7b50bb67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9151b61f-5f3b-448c-a7c4-1dc68ea0c10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa8b724-bc39-45b6-b1b1-c7ea6dcb921c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609c0b4f-1b65-4e8c-b6b0-6d5c012d9ac9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd911cc-39ab-40ba-b8c9-e5fc2d44a4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0cd997-df2b-4d9c-ac13-f7a5df92961a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe6689f-f54b-4cdf-af0d-ba6a5108676e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a0e171-4cf5-4964-bd7e-585cdbdafd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a9a81f-da93-4a30-8d23-c5e3f4c00677",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7311c07a-8e44-44dc-a118-3575a48b6b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2bbe7a4-4852-4473-8d7f-33c30a8614f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8404c1-9cac-42e4-a71a-f0e86a16e231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b2f855-1f8c-488e-b17a-695504189827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0d3902-fd52-4fc5-b0bf-93e28872d9b9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd93c62b-739f-4aaa-a493-83d230db446e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7273552a-c138-4d38-aab4-ae4ad6c7d580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718c08cf-c03c-461f-b8c4-343dca6d6235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cfef8e-2801-41de-993c-e4540f648273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0aa1ed-97c1-48e4-ba3b-7427b215f916",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985754c9-3d2c-4fdf-bbdc-316ef19dbb42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660de878-293b-4aeb-bbdb-1de7c5d1369e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10afa2ef-a621-474f-a9b0-5fe721aa95ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6fe19c-66bd-4ec5-90dd-955e952c72b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1fd224-08a7-41e3-9ea2-646428baa52e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e3bde6-c17c-4b0b-aebd-ac9d783e89e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed74419-f852-4f96-9748-0b775f5e6d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97cd67b-ebe1-469e-8bb6-79cca37a34c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b5d871-43de-4dd7-85f9-a47dc6b60e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c011ede7-89e8-4f09-99e9-dc8672902e4c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f967956d-746c-4385-9cfa-c50281112379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efcd8c39-d419-4e1a-89d4-1b106bb62189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df40ccc2-c4ad-4b93-b3e1-595dff16e715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c625d51-3439-417f-aa9c-13454ab4b035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346f2414-d6f1-400f-a2f1-09a2ead4259b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dc9c23-2e0a-4b61-88c5-0ee659f4e662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9067e84-1508-4e10-bad4-797e9ca884c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5355aa68-e48b-4318-8e1a-1b154407a19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f522fb-c545-41b4-8896-0950e27e9119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2446decd-d82d-4a9c-bb34-e06779fcf869",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1d60c7-f721-492f-9484-16c9fccb0d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df9df56-04e0-45e3-bb84-827dabcc67c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2928e0-c017-49d3-a982-fab52be38b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ff7aaf-6d9f-42e0-b05a-ba2ae0e83fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79eb2291-0bae-4a65-9193-22b9c33c3e04",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50815069-b4aa-4596-9092-0bcbaae20a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8a5b3d8-9f53-4c41-a74b-43092104cea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e93f9cb-252c-499f-93ee-db005750163c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04da7f1-ec6b-4609-9e6f-6a74b966679a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c9f01c-9982-4efc-b693-5fb34140697e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40762ac3-446b-40f3-9fe2-60edd89afe01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27844a4c-7b1a-46bd-9c95-5811ec92b10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f28e262-f5da-439a-9587-66b967d333ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da7dc2a-c856-4384-be78-2b465f2a71a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888be9d8-020b-4501-8f24-c8e5362c65ee",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083a0754-fc67-4fa2-be2f-406537e63705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd9a5420-d1fb-4138-a491-d5febf3e2f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753b06ce-411d-4e31-87b7-410fff26e51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a02193-f5fa-4035-9a5e-338b803907d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15793021-d0d5-40d9-9559-d81ca0157a33",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ad09fb-72f5-478a-987a-995c094f3719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4873b4e-5313-4757-adac-ddcb9c0b1d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d2cc4a-c7ac-40d4-8fa5-d7a2d486fe46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087aa8a8-bacf-4ad2-b8a7-2656435cc712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7723e62-27ea-432f-b3b4-301111634ca2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd1b8d0-27f5-402e-b0de-ae089669d61c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "437301bc-5b02-46cc-84df-aa2eddb25e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88af3238-d99d-4b38-9d2b-0cd6decb21ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdd5c29-bdaf-4ba8-9985-fcce7e2c0e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87af9365-9822-489b-8059-208f896a7521",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee14365-290d-4d85-a8a1-8e71184b2afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4beeae2f-0aba-4a75-aa69-d92de3d575c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5604cc18-b25d-46d3-99e9-14ae50fdf61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242a1b99-87e6-4b87-9119-99423a22f561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd8f137-bfdf-43a9-96ee-f301cd9b747d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c4355c-2f03-4100-ba1c-9797e2cce692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b75b60-db21-4573-9893-b718f0e3c438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db0f7cf-73c3-40f2-933a-4e114d264549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a959f68-0e6e-4aac-8c97-f37818a3ecb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1115b6bd-4423-4f1e-845d-d841195f457a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62a1b19-0e38-4900-97d2-94d070675fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dc2d4a-c9e9-4c2b-a01a-4eb443b50dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a848849-7341-498f-892d-6d563039788e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9a14bc-de9a-40e1-9265-6d79ca412e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcadf9b-00e6-4cba-a1ac-80b2bb5e744a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd3362c-11e4-499c-9dc5-d9449daeae19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfc8cea-f115-494a-b5d2-b0c72d290d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e6655c-b762-4328-80da-e53db1f6883b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651012cc-7aae-4bac-a180-bdda40f20487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15af8030-8541-4b11-95f9-6349cffe3292",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e4f80e-a266-4e3d-b923-5d5640c5821a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd96d0be-f56a-4fce-b145-3f5f9a5af22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366f4d85-af73-4875-b6a7-08bae72a55c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242ce80b-a60e-4e8b-b9c0-3251d4ae89d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0c61a4-99fe-487e-8d57-a4f150eacdae",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ffec87-dea0-46bc-adaf-4f3eccbd5980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5836e3-7ff1-4492-a38b-500d6a775e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcfe0f0-a7e7-4b05-a19c-255c5314bf90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0de045-a044-4679-a816-b423d93aba3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75458ce-0b63-4d4e-b941-85316afdd2c7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2eb272-6a1b-4460-ab50-6c2483b6109c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10356b3b-8252-4908-a780-76d8d3775795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf529f8-7b51-4c88-96f8-7f9b44833631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba40b3c-7b9e-4e95-b5e0-8d9da178523a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395d1036-74a6-4ec3-9591-3051f1d317af",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5700f5-d01e-424f-806e-8542d0ffe22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2215620c-88a9-4aa2-8b5c-dbdbdd774acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4caf31b-7bef-4e1a-b156-76ba70290139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39f973f-f1ec-4163-9295-b58932560782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb313cf-a383-44d0-a7bd-903331261475",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248d92c1-3489-4423-9d09-40835d1428f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c44e2b9-7b87-4af1-b526-10b8877c8473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a675ad3c-1da8-4aad-be42-aa3ee152a46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022c9667-cfcd-497b-8e6e-b79ca1868945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878fdc62-a65d-4b91-8704-56f8b7652f8f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a11ce8-7a23-412e-b29a-4f821ad6ee60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c75bb7f-a44e-424c-8885-5ca947a88adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6c1b10-52c7-403f-98ff-86cfa90f9632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a719065-fb49-4e20-8c27-3108125d8899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ec203c-f70e-49af-8602-5545a5ef6f53",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e593f282-517c-4eb6-a380-7435e0237784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16dc144-a141-4800-bd48-bfd496df9267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00059a56-244e-48e4-b6d0-d5cc94bcab45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3c3978-b6fc-4a90-9b4f-36c15c46a6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7300c6ba-1cc6-44f2-b8fa-d9c52c794219",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57816d03-dc20-4dab-bbdf-64629df7b72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175ad025-ddd5-4cef-9157-1a304d8a7b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9cca36-e427-4fa5-a97a-435c0308d75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9506b83f-a493-45d1-aaa8-7d70d7fdf92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f71ec8c-fc25-41cc-8b01-bdde2cf4d0ba",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bcab99-dc6c-4be5-bc96-9669d1fb7541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bded3412-49b0-4368-970b-24334161662d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0066ade4-6e5a-4e64-ac1b-8d6973635653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e159aa-6c0e-434d-bdd7-ec6d58732638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0bd4f7-f663-4593-8b34-8c62610e2c2a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb9cf68-f767-40bc-bfa9-aa652f66bdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bff5393-7260-48b3-8cd3-de36af7370e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c860f03-607e-42e0-93d8-843fdfc2200d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed24f1c0-59ea-4027-8f8d-96fefc1ef9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e74afaa-841e-42b0-9b5a-d144dfe15401",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b7bfcb-066f-4fe3-90f0-919b4f22dd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c292cf36-2c1e-4abc-95a5-4c9f816e9b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47003632-d5b9-4f6b-bcb7-140bf43e6e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085822bc-81af-4510-9505-55c17968fc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca172346-56c6-487f-9a69-9d5988dc61f4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c0f425-1aa0-4765-ae21-a5e7ea1f2e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e01957-4c7a-47ec-8051-b0e0c0ba67fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce389a18-dd1a-4c65-ac05-db61c9d4362b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3b2ff9-79c9-41a5-a25e-c8cd6f77f04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d608d0-daad-49dd-be58-c88e3f72c5c9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952d3218-c651-4846-94a6-ec362d47df34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88f4607-89e2-4874-b07f-72326eb47937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246ff193-6d52-435f-8c10-4761ce8fba54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23096a65-4b5e-4cdb-8c67-fd3f67cce2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceea842d-d500-486c-b307-e989c512b20f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c73b6f-ccb0-4bb2-a581-bc755f2adeff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a206965-71f6-46db-b97f-52673a28617b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cc1c19-d9c8-4ea5-a478-710c96e81779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae12ed14-98fb-4bc3-aa83-4dcd5a93fdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829153fa-e416-46d9-a8f7-7dab5013b86a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac537458-803e-4dca-aadf-f5911ba60fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ac2a40-deac-4e6a-876a-908b8b0ec210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0471f0ba-b38c-45b4-989c-88b361726c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea4489b-de2c-4c5d-af96-f9c4ad5906fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06686dd-d35b-4582-85c8-760cb1e1dedc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99854be7-c4d1-482d-a08e-a81ad21be729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f45e7c8-def1-41b0-8b74-869a374e1b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0c61bf-a278-416f-9571-d3a4f07bc53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2813f7ad-af3a-4807-8b40-443440b7cab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547c8d09-e791-4f44-860e-9985935cad5d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e182fc9-8404-4411-85bb-4e7ea27cdc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dbc96d4-a678-41a5-bda8-9b454d1a919c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4d602d-f24e-4535-b54d-8f5ade1eb1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932dde21-99c0-46f2-9384-c2bdf12ab62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28247c9b-23a1-449f-bc8a-ee496a0dda25",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e3c0ac-6a9d-4f3d-b3f4-aae78daef715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a382098-d064-40ea-ad82-4b5916e8eee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b73db0d-f38b-4082-ad8a-e44e210287d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be6c020-d312-41b6-be81-9bfbe8d594ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fe495f-63c9-4250-9ad5-9a037bc86268",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1d94ca-4d4a-4d5a-99e8-5755e24f0a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0001c129-a0d0-413c-9317-b0cf624d96a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671d2ebd-0dcd-4a20-a52b-1ea33f8a006b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6e7890-ea11-46e1-99c6-a9da2c77cc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf2fb6d-2eb1-4f58-8df6-67477b59abcc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f764fc93-2f28-40fb-938f-7aeee632abb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ef9ffa-c7b3-43ae-be29-1ccb4223b705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7ec352-2823-4d51-be0f-eb138c87b40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e342c3-afd8-4f98-b2d0-104cee7a5d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c31d06f-9dab-4fa5-8c09-44003246b204",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27406e5f-d5db-4075-8511-67dd8e48be23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f7d82a-2bef-4240-b37e-7d372ed11da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953fc5d6-24bd-4d8a-8d87-bd46d4526f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d03df02-beae-4e9b-a8c9-fbcb9df7ef9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d57e0b-cd8b-4cb7-a757-b6c4016ea067",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e714f32-0ecb-4fc5-bdb6-dd2f9c8936a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafd1f86-76d6-4379-bc9f-578755ade946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "948dce69-d463-42f3-b77d-5a73a8009157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab865c1-e0fd-4835-8102-03203a34f477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba75e15-53b1-471a-bb9b-caf9c3872c8c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cedfe2-05be-4c46-899c-9a46b87ae962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6495ec-4532-4916-8a34-0f958a5ad2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a9c6af-5451-48ff-8eb1-775b6b59faeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62f2828-9e08-4966-81d3-e382550b009e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54209e11-828e-4a3e-ac62-8dbc221bba35",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b22cc98-e3e8-43c7-ba32-4b3f2abaaef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f30dcad-dc30-4527-84d6-4c46ef8e01e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39293494-b741-4658-8b46-04b31ae6c481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706acf09-500c-4eb9-a730-fc9bde17d4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fd9173-6ffa-4992-9e62-2a80bf09285e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d560e9d9-a30a-4191-b12b-2c1b55855879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033730f5-c091-4df3-bcf5-f2d5d9aacda6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb0f0a6-6f5a-4324-af0c-4819a2929376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b24eaaa-42cb-4244-8039-d2e85242d9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c946614-64b5-4e7b-8ff4-d984131521e9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429a9325-e90f-47b0-a414-8c6c72a394b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d63fe5-ad09-4996-a224-cd37a348ffb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8037a59-576c-488f-b9ab-45c16b36547d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1b04ea-d71a-4fa1-8083-670a9bfbccdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475d7f39-faaf-44c0-a5d7-92a0ac1937b0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4922eeb1-da99-402f-a4c1-cd15e5e65175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c65d324-d4df-4dbd-8de7-c9549e541d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4a7bb2-c7f3-46bf-ae3e-edc95593694a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e0e4e0-773e-4e49-a2c8-04cc9bb370f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e261ff6e-287e-483b-b19e-da88ae65b093",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754de4ee-cd22-4f76-8804-f75424563583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2afb4bc3-200f-4baa-8fea-b75988aee003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11461ae6-2c13-41b5-aeb7-5e558b4b60d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fd81c6-1e3d-41c8-a0d1-6d81590d2703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6248a6c5-d696-4d38-a99c-7850aeb0f2dc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99590865-ff2b-4211-afd6-721d74b22292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6afa0a-d645-4028-9c50-f0bcaa559531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677a17c0-1e52-4d14-a536-b5c102c7f3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c6c634-0b70-4920-afcc-dd8269236e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c87194-9926-4853-b576-1ae90f22b146",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1687e468-88d6-49ed-80a0-05db65277ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8bbe667-7217-4bb1-877e-52567f1f38b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03009bb-3938-4a96-aa16-65bcba1400ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edc74ec-f049-4170-8b11-830a886e5cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32db047-1514-4453-b095-1bb8724865d5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7630aa-a852-4db4-92b5-558e0b8ddf3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba0fe6a-a0b3-49ef-9115-a6fe55fda124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf04e4f-9aae-4b2b-90ba-cfc176a1154a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157acd66-8f9b-4d8f-ab72-ad4eeefe06b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c440f38-2527-43d7-a335-a6bea40653fd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bd47a4-d5ec-4e07-a41c-aa532fd4bf0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ceff37e-2924-4faf-ad26-c1cf51169d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9798e5bd-5a48-45c2-b466-c85ccae6e4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89756b34-3319-4180-9287-67b2d370bbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697144ee-f4c7-4a19-a848-3ff52ac0ca86",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234231b6-141d-4bde-8cf3-ffb7f1dcde8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "090a561e-3751-42ff-8d58-38cb6d7aef4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64afe48c-e4df-4a1c-b235-5e30e3803f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3374546c-c639-4585-b79c-01d84bf510d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab3a9ed-3aab-4c59-ae3c-ac26588313b4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0788b2-a2cc-49d5-8a95-390977c97203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a85b57-a33f-41a6-94b9-3c969ad05550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6545efc-bb66-489a-ba28-ddcca5625f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115e859f-29bf-4c42-b16a-197c6f181ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2773266-860e-46b3-8afb-316e355c2b5d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b55d018-ef67-4ea2-8b23-91bc32b61506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd68e44-7c3d-423e-9645-2a38bce30392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92124e3-c9f9-47df-ba86-d992b08511d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0c8c1a-b23e-4022-b238-4f189feb2ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb366d2-0a24-4407-949d-0c47e00d52b2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ad21f6-bf8c-4d20-97de-d55585c7dc91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3038c75f-49d6-4c90-8404-5e40a05ab09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611ed0a4-7a4c-4f73-aaef-ea1948114838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3189d030-d60c-4f61-a799-d721c18e327e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bfc843-6e07-41bf-a66d-3cf4c35ae4e7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0983171a-4af2-46cb-be48-586a9adbd43a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ab0e5a-8502-4c8e-bd6b-edbb7ba24dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb018112-6222-4f80-ba31-fbb851fadc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc01ab9-0e51-43b2-9f2d-fb38ae312d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427e807f-7733-43aa-8c3b-a387a0d1b749",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa460b1e-1b92-4a8c-9e60-8c6acf338db3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd837cd-195d-4bcd-ae08-e35dab3a92ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64d3823-cec5-49f2-ac8c-bcfab4a3d678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3a0a29-76ac-4476-8bdb-ee29e6408684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621abd63-1004-4607-be99-7bafa9ed045d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137527d2-187b-41a8-aa88-36dd390a2233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dbd11bf-8aa4-47fe-add8-544bea84f434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04788b7-3cb1-4bae-b707-d74dfdfc02e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7c9a50-28bb-4dbd-bf54-2663b91ab80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfb8ac5-fe63-4192-b0e0-4e5ed117e72e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975dc2b1-602e-4847-919f-75db67c0d306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0dea9ee-c431-41f0-bee9-66f73a2fa9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e49cce-4cde-4f79-a346-616d12f29a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d483e911-b819-426b-9449-a95dd210ba2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8738961c-c019-4fd9-92a4-68cb202ed282",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d530379e-324c-4454-aa25-6fd5bc15b5d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e636c5bd-d1a9-455a-8b2f-ded3444f82ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2041a4e6-f2b7-4c1a-81bb-60d0fa4747c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befff6fa-0d1b-4d0b-be58-5c22cc26da3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570d45c5-856d-44e7-908a-117577b91958",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5251ffa7-2978-4363-b30c-f250918e8c5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "198497d2-8757-4e84-b2d1-48b39da980a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c978fe47-3aed-454a-830a-3e80eb7c8f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d3ba26-628c-4d07-a378-15bee1176ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed691db-6b86-441e-aead-5397cf3a0e7a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8ac1c7-0b34-4e31-8ee3-8ded3d4e202b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74152591-989d-49b3-a00d-89ec39e0cc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f72415-c33d-41af-b13d-c009422a837c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3864035-56a1-4a2c-84d7-fd39a456ad01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc67fff-9d63-49e2-a6e8-68e9524a24f6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539e902b-66d3-4d1b-91e8-2c7e3661a382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10f84df8-cb7a-4e2f-b5dd-a974b8c717d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44071812-bcb2-49a9-9e2a-9f135e91a56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1d0292-a505-4e0a-89de-92ff67ea49e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff422e1-2612-4f82-ae9a-07ddd4bb2905",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecef4b5-c7a3-4bfc-86e1-6168bead1404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "186cf9f7-3234-4e9c-af5a-a13c55e81349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3f3ea9-d0fa-4034-93e9-befdb0d2b300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46bfecf-7a96-469a-b477-72bd6ef697fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e45fe31-a0d5-491f-965c-f11ee9a8106f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a4965f-e542-4dbe-85d0-bad363ea71a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df57e23a-b4b6-48df-8747-7f936cf7f530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77910ea-e7e5-4fcd-a1e9-9a10e45dcd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fe7efa-0597-47d4-b454-723272e451cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f50c2f5-d4ca-4fbb-ba48-045502e88b33",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69e4712-ea86-4df4-8d4e-7749dc6d5b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d930cb2c-caae-4c66-b1f0-5c6e66a64b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c10ed4a-af3a-49bd-b80d-81b5b5fa276c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8434db5-b070-4a9c-96f6-a67fad74e07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab7fa13-3869-4b67-ad88-a819f6eac4b7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393759fb-4046-4b55-bcd4-b910b56f561f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1409d786-9f8f-4925-b65d-5d4e54e92fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d3898f-b39e-4269-a141-311360a7be7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0483d00-fc81-4d46-a1ee-b59e4c22a8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab809e37-e162-4894-ab01-c9a4e12b0198",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2804f4-823e-4c74-9c5f-a6f78c8a6eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03d53e86-9f17-4400-a066-08b0f925ca34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b6f306-4d51-4357-89c2-71e04ea72136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc7790e-a7cc-4c59-9426-54c00a723583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48eb784-d88a-48a0-9e56-a9af9c3780b5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd0cb58-fcd4-406c-8dd4-407f838c6196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84088a84-4598-4595-8ec3-0ada5cb07009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c454f84f-b72a-41c1-a4ce-a9f779172ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68395f9a-1a9d-4e72-9528-647c23e2538b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acd5ab6-b744-49f8-96f5-31173f6d18d0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992b0758-460b-46a4-9b8b-9f579247b3ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d04c51-8bbf-453b-9ad0-5c707f7dc343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98432011-5e2b-4506-a03c-ebd7506bbfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8569d1b-d000-4d67-940b-0c004c2b1a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73618c9-beaf-4f24-84be-7c118616aaad",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654eabf3-5f27-402e-a6e4-7b500ba8f288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "203971d8-864d-4657-b299-12c457670c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b060b1c2-cf5e-436b-8297-72a7a5fc2932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cbca88-4d33-4b15-b60a-fac316b6c1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f523a6-5427-454b-bcbe-03c08b395962",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbd007e-db12-46dd-b428-91e28d5ca559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b69c719-30b2-4c43-8816-c724c5525a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e55246-791c-4a8e-9b89-3a34b9b29820",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6457a3-153e-413e-bdc6-b3c21dc6d826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d7ac9a-9d8e-4add-a0a3-3d20c92ab51a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ceaa17-de0a-47eb-84d4-255d2edac354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "338b69fc-ad91-49a6-92d9-16ff2b410d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed512c45-e601-4842-ad33-7483f9005f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e1c4f0-f706-40c8-ade5-903819e59ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c39963-1029-49fd-8d2c-bbea7db6911a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba8b222-7597-4cfe-a34e-2a2aeb70ffb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "685cb92b-069d-429e-bbfa-fa27f65f721b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3af1160-ec7b-4885-b970-7412b19d8538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9e5403-11cf-4d95-8bfe-281094c59e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899a46d5-146c-4a16-bd5b-09f8ca699221",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72de70b3-fc4c-4d95-93fa-d9a01b9a6c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b76bd23-5005-4b32-b744-438241aa8a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedf424c-6577-49da-a2d5-163b01ce5629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070def68-569f-4d0f-99d9-e4b450c8498f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e80766-b5f3-4dd8-899a-7263982c9b11",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397fefb7-5d12-43d3-b167-8051c816508b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca4ecef-2dba-463f-b6c5-dbdc5b298a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40db1127-6471-400e-b314-55f1c593d7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd32dcc-6b0f-4c36-9de2-5cca382831d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a534cde3-63b8-49f5-977d-3d15d20698ca",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62493bc-e6f6-4c09-b00c-25f536e6a493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a546badf-87a5-4feb-90fd-480b11b39c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4956fde0-df66-4205-bdb3-096f37bf99c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6ea19b-524c-4877-b655-14d3efea6b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5aa8bb-4041-4742-b154-ebc2cd432c7e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7d6521-bade-4af6-b18f-f439c31a91c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d9c49e-4649-4730-8e02-514855d8316d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405ca176-8667-4575-a783-bceddfa61a26",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd327fa6-7a65-40b7-9b3e-052dc5a5b1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7e7f4f-1610-4c94-93b3-2b22debd1529",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036e9332-53f7-4e39-ad81-b0bc394280b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23740b6f-9942-441b-ba06-2682b68b2202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10788cd6-c52b-4484-9d4f-867d4cc78f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131d8736-a8ab-4a03-9aaf-79574f0ea354"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb1a0c62-7b32-49e5-b99f-f7f6669f23db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67c10b5a-721d-4b7c-82b6-64cd293dba29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2609dec7-732e-466f-b7c7-3174b7b6b9fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88196439-8a46-4a3b-a68b-a45e27ab9e20"
                    }
                  }
                ]
              },
              {
                "id": "4389d038-19cd-4d7f-8594-869dd63d93d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "697bfb53-0641-4e25-adb0-9f8240a58f58",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0441563-1183-4be1-b5bd-46410dab7dc4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2b24cc1d-61bc-4d33-b999-7dcd95529e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1ec4bb-d9b3-4c44-822d-39c0e55cac1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "430aca98-69d2-4967-a9c2-acb81d5fd584"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4ece706-7e36-4fd7-803c-c8f50a900df6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29273905-146a-4eaa-acc2-d8818ea31448"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7daf4f3-f605-42f4-9fcd-02255583f0ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a215091-dd22-4dce-b24e-3c74146da65a"
                    }
                  }
                ]
              },
              {
                "id": "9f8017c0-d221-4eec-8105-2d73ab848b1f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4de3a0ef-3b71-4d97-911a-299277a4ec0f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546fddd2-fa2d-4a3b-9807-1eb9f6e7762c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c185025c-dfca-49dd-8332-e1b57bd8a0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c610cc5-f445-4152-a7de-c35562455343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5df0a3-b76b-4ad0-a4a2-da68bdf5982d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e0bb719b-a903-489e-89ca-c397e729a109",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd6ab01b-d2b4-4b04-963f-a4c35caab6ea",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f76b5c1e-1ba8-40ce-8e46-c516ab86e909",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4d1d6c44-d5e8-41ff-ab06-b84ce45857a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f34c519-db0c-4ce1-8f5b-50c46c11ec43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9853f1c-f8d7-4cea-a97d-03d59de5db0b"
                    }
                  }
                ]
              },
              {
                "id": "bb051485-0374-4b71-a33e-9912dfe580cc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46096ade-9a97-44fc-8bfd-58642ef29407",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2e0d1c01-8fa5-4a6a-816f-0c4e35aa63d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd494969-c6f2-42fb-9f34-c380608a1e2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eedc8537-4d93-4694-8126-8cacf1d0343c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "235c9110-3f3c-4ebc-83ec-1c081a388ed6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "af44079b-b4f6-416c-ae64-bd64ce357054"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d5e4d26-f7fd-45f7-ac8d-8ca0eb4781ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f407b2f-3c28-405c-b09f-68cc4a49ee09"
            }
          }
        ]
      },
      {
        "id": "8808ba6b-b02d-433c-a9df-4a18549e832f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dde13783-f25b-4d3f-b3d8-ed556bc47e02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e74dbba2-015a-497d-a496-a6b757588eb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35e18f81-251a-45af-8d12-57f87a295e53",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c86fc1-365e-4cad-a1d6-6a039efce3f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a42233e4-d596-404a-a821-8d101ce2c296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e142276-bc16-413b-b3f5-23d6b6e27757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cecb17a-c51a-4135-bd77-f254c0c3cb01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "215f109e-3ba8-46f9-ba95-a5bd793ad3df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcc086b7-3193-4d08-80c0-19032ef8e9f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "339d1c45-b5c7-4722-b326-a0cf8639bd1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a817d00d-dd75-4e7b-9619-b6145b96bee9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "113ea2b1-fd4d-4727-b629-7601f70c5b75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "27643a0f-882e-4bdb-80b4-db3e31fd0176"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "320f7ccc-f81c-47f5-aed9-6a83461304da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4cca948b-2854-4f2a-8251-0c4dcdc1e2d4"
            }
          }
        ]
      },
      {
        "id": "fe7c8276-3afd-4e36-9bc6-7d258615bd98",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e83b7c5e-30ca-4a83-ba59-02c9f1db18cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2a848ef-2429-43e3-9c73-040e8eaf49fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b136c9f-80ad-4ccc-a839-34bef8486727",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8cadee-c05f-49a3-aa43-5e3947fbeb72",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8337ae31-95cf-44d2-b14d-ae65c6aec1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445e66d3-3842-458c-a171-b74f646d53ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb1dfacb-7176-4266-b03d-e8e7949b65cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15ce0369-a30a-4c17-b526-fd5e908dc4b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07ba3eaf-2d80-4d61-a53b-1c854bbb0f15"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9601f866-5c5f-4d19-864c-288d20133eff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd70b003-6049-4302-99fb-8cc59cd4cb8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1b7189a-3fd5-459c-9b16-fa06520f2c54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c22c0b70-3460-4200-bc6d-0be9a0c7d231"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29ee338b-5c1f-43e5-9fb9-8c891e716241",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e859bb0-0abb-4a0b-8686-cff6060ea772"
            }
          }
        ]
      },
      {
        "id": "d5e88037-a624-451b-b4b8-f8ad7fba6313",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e55a0f14-607b-43c1-8a2d-eee368466501",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddbb001a-0481-4c01-a427-ace49ab0033f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56ad7441-c525-4391-b16e-cabe682c81ab",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cdd1c5-2e88-41a0-a301-98c7a590fa65",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b156f44f-a4f4-4782-b4cc-5c90b3620d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649a2b47-44f2-4d22-b0c5-e471e2301997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6438afd5-5b34-4ddd-8452-6e38de47c04a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "953af3d2-2fab-4029-9844-bcb5f2f60a83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a43ec71a-f1c9-4492-ac58-7099559cfc77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13181c76-4526-4524-8b23-147be79e8dab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3430028e-1b8c-42e6-990a-475bb8499527"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87b0fdb5-db95-4158-9ce4-33d90003ca87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "046a870f-e751-4eac-9243-208fb735fea2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1a96f13-5053-44de-aa22-17657dc41c0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e2cb877-d54d-4b18-8713-04d15076a0db"
            }
          }
        ]
      },
      {
        "id": "1ba3670e-560a-4687-9b9b-60f7e06997e9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad046fae-eacf-4410-ae97-32326f492954",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "223a7159-f110-4734-ae68-8898a120da66",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1d17b5b1-d6e2-4845-9e3c-0e9442d4392c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ffbbcde-ea23-468d-a85c-cf7d2b2452f5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17a872ea-a3cb-4bb4-a79f-93c5add893ad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 379.21031746031724,
      "responseMin": 11,
      "responseMax": 10451,
      "responseSd": 1540.9840314330463,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723855150049,
      "completed": 1723855254206
    },
    "executions": [
      {
        "id": "d72c2368-90b0-4550-a467-ad0ea9cf7ee2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d07a8845-084a-41a1-b09a-5fa8e6892a1c",
          "httpRequestId": "0f7d6e43-97ff-4ce0-8396-6bb66d7b8867"
        },
        "item": {
          "id": "d72c2368-90b0-4550-a467-ad0ea9cf7ee2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "93d6545a-c78b-442d-b34b-85086c6dbc89",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "66de95ca-6f97-4c44-a368-a009b138d442",
        "cursor": {
          "ref": "53eae368-9241-4415-b4d9-8112259b7e7c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6508789c-e360-4101-9e0d-3fb44e656a54"
        },
        "item": {
          "id": "66de95ca-6f97-4c44-a368-a009b138d442",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "81f3776f-b3c2-4820-894e-3ee0a1b23722",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "6e59d3e4-f5d0-4987-ac49-c4bd72538c77",
        "cursor": {
          "ref": "a1f57466-d6b8-40c0-9268-94077297798a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "40dc2eac-4c83-4604-a9f8-6c39ae7df458"
        },
        "item": {
          "id": "6e59d3e4-f5d0-4987-ac49-c4bd72538c77",
          "name": "did_json"
        },
        "response": {
          "id": "72e8ae84-5610-4160-918b-98eae3874e5a",
          "status": "OK",
          "code": 200,
          "responseTime": 403,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc223e12-5314-4e45-aa0f-082b9297ec74",
        "cursor": {
          "ref": "b4f265c9-77cf-4a38-bc8e-8b9187343065",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "58879cfc-4309-427c-a36e-e87a1f1f2749"
        },
        "item": {
          "id": "cc223e12-5314-4e45-aa0f-082b9297ec74",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0dc7caf-9510-414b-a2bd-d828c76e395e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2333,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc223e12-5314-4e45-aa0f-082b9297ec74",
        "cursor": {
          "ref": "b4f265c9-77cf-4a38-bc8e-8b9187343065",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "58879cfc-4309-427c-a36e-e87a1f1f2749"
        },
        "item": {
          "id": "cc223e12-5314-4e45-aa0f-082b9297ec74",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0dc7caf-9510-414b-a2bd-d828c76e395e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2333,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d58eab-994b-4eca-b587-111ed9fb7e71",
        "cursor": {
          "ref": "e30680a1-7d9f-4d10-9add-5cbeabd75b60",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "87e6ccc6-2398-4eda-9cc4-80b2fc8cd34c"
        },
        "item": {
          "id": "46d58eab-994b-4eca-b587-111ed9fb7e71",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0b7ce36a-21e4-4836-ba05-c85ff0f56066",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2829,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f846174-cef5-45fa-a4c5-a995718696cb",
        "cursor": {
          "ref": "8abab6b6-0995-4d6f-b70d-e400d84e6841",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3532191d-592b-483b-932c-b3d5fcca466f"
        },
        "item": {
          "id": "5f846174-cef5-45fa-a4c5-a995718696cb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "928cd091-b30e-429a-906c-792dd449c1e6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2019,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867f5c1f-e8ae-44b6-aab3-c08c47fd85ee",
        "cursor": {
          "ref": "3382400f-dcc3-4f49-9ef5-9983efdc6b9f",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5cb6faa6-37fb-4f99-8d89-9251abeb10cd"
        },
        "item": {
          "id": "867f5c1f-e8ae-44b6-aab3-c08c47fd85ee",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d6063ea5-dc62-427f-b117-18d9c4b31786",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d890d3bd-4de2-4d7a-9607-eeabf697305e",
        "cursor": {
          "ref": "2c75e5a8-858d-4911-b9e6-5f3082f43b84",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fe7277fb-9672-4e94-b9b0-c09779e01074"
        },
        "item": {
          "id": "d890d3bd-4de2-4d7a-9607-eeabf697305e",
          "name": "identifiers"
        },
        "response": {
          "id": "0dadc0cd-2feb-471f-bcb0-bcf7f18e776f",
          "status": "OK",
          "code": 200,
          "responseTime": 2290,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5317754-5f2f-4774-bae9-917e6388ddb5",
        "cursor": {
          "ref": "757495be-935b-4dbf-a642-cee7547b70bd",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fa86afe2-5508-464e-9d58-c265071b675e"
        },
        "item": {
          "id": "a5317754-5f2f-4774-bae9-917e6388ddb5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7d42f4fc-2359-4246-b518-be11e7f769db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23211b9-8e77-4b96-975f-921d06b60e3c",
        "cursor": {
          "ref": "340ace0f-635e-4aa6-bdf3-c23f45c24857",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "371e927b-d01f-4644-a89d-af1133658ccd"
        },
        "item": {
          "id": "f23211b9-8e77-4b96-975f-921d06b60e3c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4ad03bd0-71d4-4506-b4df-564d115f76c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7c75ac-cb40-4722-8781-8d95a18b140a",
        "cursor": {
          "ref": "8cbc1703-fbae-42c2-8d82-35b258086555",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "afcf9aba-8749-4171-adff-7dbe08a29b51"
        },
        "item": {
          "id": "5c7c75ac-cb40-4722-8781-8d95a18b140a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f9e6d0c1-ea81-4af1-b534-380ce29eeb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcce926-0bd9-48a6-9738-e81e9cc9df95",
        "cursor": {
          "ref": "b1b102c3-5957-4b70-8ab9-535a2ce8f404",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cf112b3a-f729-44ba-ac16-58c563adf060"
        },
        "item": {
          "id": "1dcce926-0bd9-48a6-9738-e81e9cc9df95",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "dcad646a-8d1f-42e9-879c-b8928c65841f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9c8827-7705-4704-91b9-43a8c991bb57",
        "cursor": {
          "ref": "aee4d580-a02c-4583-8056-db4bfa6306d3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9ce8fae3-c318-4bed-8bc1-15ef937c460d"
        },
        "item": {
          "id": "df9c8827-7705-4704-91b9-43a8c991bb57",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fd777d52-7b00-4e7b-a962-b70deef89287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a16986c-e4ee-429c-9cb5-15411a7a6a8a",
        "cursor": {
          "ref": "2c538066-350d-48cd-80e9-0c801e516296",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f9f8fdc2-75ed-46e3-ac43-64fa1f1b73b1"
        },
        "item": {
          "id": "2a16986c-e4ee-429c-9cb5-15411a7a6a8a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4dbaddca-ccf2-4ed9-b8b9-99f612148bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019fc3a7-9b91-47a8-804a-f6ddab1e7cdb",
        "cursor": {
          "ref": "2498c67e-08f4-4220-afe5-9740a62d8876",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "09b70099-a16a-431f-9eca-1d6bcee8be59"
        },
        "item": {
          "id": "019fc3a7-9b91-47a8-804a-f6ddab1e7cdb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "14e8821e-3cda-4700-94cf-1fa67a1fd5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4db5a9-3095-4705-b5cd-399aa3fdd790",
        "cursor": {
          "ref": "72210759-3e80-4830-9660-7f0ffd1ac234",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5964a7d2-443b-41a8-a07a-92157e509ebd"
        },
        "item": {
          "id": "ba4db5a9-3095-4705-b5cd-399aa3fdd790",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5fc3505a-56e3-4c6f-bc61-59f284e8e533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1696c7bb-451c-4d57-a4f7-3b74f2c36e24",
        "cursor": {
          "ref": "53da75a3-b173-440e-a901-8cd0be2f13fb",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "03342fd7-33ce-472e-bf4d-6a51cd98f2d1"
        },
        "item": {
          "id": "1696c7bb-451c-4d57-a4f7-3b74f2c36e24",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "29f208d1-9c8d-49cf-a78a-0fcdae8c1989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eda67d1-23c7-4cb5-acaf-b4adb3449cb6",
        "cursor": {
          "ref": "003ec076-3d0d-4d23-91bb-2e86c626bc1d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "352e669b-4d61-4d00-aeb2-1aceb639dcbf"
        },
        "item": {
          "id": "4eda67d1-23c7-4cb5-acaf-b4adb3449cb6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d048dc28-e7dd-45c0-b4f3-13f5c9aa5305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91bda6e-b282-4fb0-b239-a4f9caba4d8d",
        "cursor": {
          "ref": "7131157f-6a08-4c2d-8a0a-52a1ad306f85",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3e7284e3-dd70-48ab-b901-56ea971c67ed"
        },
        "item": {
          "id": "a91bda6e-b282-4fb0-b239-a4f9caba4d8d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b19b9f30-a5b8-4796-98ee-a7aa437376a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765764f1-758e-43b1-9933-8e1344fa311c",
        "cursor": {
          "ref": "9fb0e3a6-b0d4-45eb-9236-12253397453e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "409eeb69-393c-4d33-992a-b5df49c523ea"
        },
        "item": {
          "id": "765764f1-758e-43b1-9933-8e1344fa311c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "076ea196-d26e-4927-b0b0-eacb08c2b0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bfa346-fc19-4319-952e-e4fa866fbc3e",
        "cursor": {
          "ref": "757732a9-bb21-42b0-9e13-06fadf52eb91",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "94bb1cc8-97bf-45cd-bf18-0782cc425d37"
        },
        "item": {
          "id": "18bfa346-fc19-4319-952e-e4fa866fbc3e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f0b6d3e0-c062-47fa-bad9-d6ee7042f21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bed2138-bdf2-436e-af14-62b1949a21d7",
        "cursor": {
          "ref": "438b022f-57b5-4cc2-925e-f798fbd89689",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d3220389-76d4-4f57-ba92-5e795bf9d269"
        },
        "item": {
          "id": "5bed2138-bdf2-436e-af14-62b1949a21d7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fba03e6b-f261-4e3a-b5d2-6ed5a4db841d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efeba88f-cb87-474c-b554-78bca1fb88bf",
        "cursor": {
          "ref": "bf1a7396-14d1-493e-9662-965e8d8ec75b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8e07a911-012a-4cb5-9593-3f436b4e9122"
        },
        "item": {
          "id": "efeba88f-cb87-474c-b554-78bca1fb88bf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ccfcef1e-577b-41e3-b479-54655c089ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b88ba95-afc1-438e-b070-4583b6faaa3c",
        "cursor": {
          "ref": "b3d73a19-496e-4481-9a88-f75071e3722f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d902f83a-3a1a-453e-8be6-882f5264489f"
        },
        "item": {
          "id": "8b88ba95-afc1-438e-b070-4583b6faaa3c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cd7fb1e9-0418-4c17-b06c-c31355d82047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8cffb3-aa94-40e6-8d8d-18771d336a10",
        "cursor": {
          "ref": "c3c3756c-6337-4b7e-b9e4-b8215804a33c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "37e05231-70be-47da-bd56-97a6acc0ecf8"
        },
        "item": {
          "id": "5e8cffb3-aa94-40e6-8d8d-18771d336a10",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "518bee94-e894-4ead-82c9-98caebc0c532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e6ee1b-c87a-4d27-8220-aafc36df6a71",
        "cursor": {
          "ref": "907853a4-7ac0-400f-b3c1-aad9a82074a1",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b7d1c321-2c49-4a21-8824-d18ff3d76f9a"
        },
        "item": {
          "id": "53e6ee1b-c87a-4d27-8220-aafc36df6a71",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cdbda881-74b7-49ac-882e-47c8358fabe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b472cd10-99c4-4a72-a978-48e70c980916",
        "cursor": {
          "ref": "673b3dc8-44f6-41a4-a7d9-47b70d01df39",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3abb89a9-63a7-499e-9283-c0bafe4ca4a5"
        },
        "item": {
          "id": "b472cd10-99c4-4a72-a978-48e70c980916",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "78f7c797-dd6d-460c-9f41-8b9678008f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4b1ec0-4fce-47c3-abc1-94c81a297fba",
        "cursor": {
          "ref": "3fc4e551-5c8b-458a-8d7f-8a10b4b49269",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "166b1c4f-0e93-4d8c-8df0-a85871cd2abd"
        },
        "item": {
          "id": "0e4b1ec0-4fce-47c3-abc1-94c81a297fba",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5c49e798-4926-4818-ab9f-b08abae433f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5bfbca-68e5-4827-81e5-1b48d19fee6c",
        "cursor": {
          "ref": "8b1f51ee-41f4-41bd-8cc1-fe9c5eded8d6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4fbf48ae-5d62-4ad6-a382-973938eb324a"
        },
        "item": {
          "id": "ae5bfbca-68e5-4827-81e5-1b48d19fee6c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c0e92173-cfb5-49a5-92ea-c6e8641b616b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d4ab43-c362-4a21-9161-e38200dd697d",
        "cursor": {
          "ref": "83c8594e-06e1-43f6-87d4-3af3a63ebd58",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bb81386e-14b6-4d64-9307-2f10c09af057"
        },
        "item": {
          "id": "62d4ab43-c362-4a21-9161-e38200dd697d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ac1ea457-c44e-41d5-bf62-9ab16f5b061c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5f4fa8-3701-4937-80f4-954abdb6e872",
        "cursor": {
          "ref": "52d91624-9777-49e6-ad51-47e900c3e67f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c098ac67-96f2-4704-9916-c1a89034de3f"
        },
        "item": {
          "id": "0c5f4fa8-3701-4937-80f4-954abdb6e872",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c8165509-6432-4338-91b6-76c5f5d3a9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5af105e-01d1-4469-87ff-b92181385507",
        "cursor": {
          "ref": "93fd8e84-77f7-4b4e-a7fb-784ef45385e8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8aaed7fa-8c4b-4161-9379-f27d6835d08d"
        },
        "item": {
          "id": "e5af105e-01d1-4469-87ff-b92181385507",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ef3c69bf-0ff1-4597-b704-0d22615216d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2376fe9c-c633-43e2-ad36-21511854cb64",
        "cursor": {
          "ref": "7ab0d7f5-1ae2-4474-a22d-02be26cc3f47",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ad368355-54df-41a8-9ce0-b2bf59e71376"
        },
        "item": {
          "id": "2376fe9c-c633-43e2-ad36-21511854cb64",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9499edc0-5377-4d84-bf2c-7bbbca48d388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ffca64-1afd-48d5-9965-bb45d155ccee",
        "cursor": {
          "ref": "417a224b-c6fe-4394-a8f8-2ea151b27c6e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e899abb0-b699-402a-a91a-229e74794ca0"
        },
        "item": {
          "id": "c3ffca64-1afd-48d5-9965-bb45d155ccee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "268138a0-853f-464f-9ca1-429ba8d4518a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789903f3-9107-4593-938e-836eb320ab08",
        "cursor": {
          "ref": "0357430a-beb0-4762-ab42-1ef6ee829b13",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f8631c11-4d88-4e3f-8bb5-b1402f7bf0ce"
        },
        "item": {
          "id": "789903f3-9107-4593-938e-836eb320ab08",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "be3aa749-a920-40c1-a359-2172b04f8f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31415561-7704-4cbd-8946-89b88c807720",
        "cursor": {
          "ref": "391f7d6d-88f1-4c12-a909-b8b375e29f63",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5d685322-4d16-4dad-bed0-0bdeef35e66d"
        },
        "item": {
          "id": "31415561-7704-4cbd-8946-89b88c807720",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8e9e51d3-27ae-4e51-824b-ee87a22a8d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21afe76-028f-405e-8fb5-0fba9aa16e3f",
        "cursor": {
          "ref": "684c2863-576f-4016-85c7-cf06e0b67259",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7d0b90a6-cde6-46ee-a6c5-76375e707de6"
        },
        "item": {
          "id": "e21afe76-028f-405e-8fb5-0fba9aa16e3f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "14ad3ef4-e68d-4388-a275-35ee8a8c42c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff02cc9-f19e-444c-8cbb-bad3bae2093e",
        "cursor": {
          "ref": "69d3a8e4-2a61-4a53-958b-05854bc3cb4a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e2e21990-0be6-4359-b2d4-c321417d9d0b"
        },
        "item": {
          "id": "8ff02cc9-f19e-444c-8cbb-bad3bae2093e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "754c7af9-826d-40d9-ada1-1633f1d0632e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a236cac-343e-4771-b896-6c1f79c64ea8",
        "cursor": {
          "ref": "9b03fa5f-1625-4eeb-9220-e86cc1ba5c46",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a8936699-ad49-4b92-8877-e726bb80fb72"
        },
        "item": {
          "id": "5a236cac-343e-4771-b896-6c1f79c64ea8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "db612f33-5926-40b3-9bd3-ef6d25f2de50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54adfc7-9a61-4c8a-8f04-85aa7550b860",
        "cursor": {
          "ref": "8505b107-21de-4854-b6cc-046cc7b2c80f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6c477362-75de-4582-be4a-b858b7308136"
        },
        "item": {
          "id": "a54adfc7-9a61-4c8a-8f04-85aa7550b860",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cc164f30-c5f4-4377-8ad7-ab76ea0d56ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b502b763-6701-43f9-aef7-5ce24bed48ad",
        "cursor": {
          "ref": "ab02f86c-bb5a-4c37-8305-6392c167293b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0afc2d15-8cb9-45f4-86ad-6981e148276f"
        },
        "item": {
          "id": "b502b763-6701-43f9-aef7-5ce24bed48ad",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "18f7bdf3-5675-4ab2-be04-987b6f880c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01614d13-98e7-4438-87a9-ad9261fe337b",
        "cursor": {
          "ref": "b4725d9f-a0aa-4339-b9c5-3437fd234459",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "be04d1e0-8c71-4fc6-a9e0-8d8edbb3dd87"
        },
        "item": {
          "id": "01614d13-98e7-4438-87a9-ad9261fe337b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f7b1691c-fa37-497f-8519-15c927f90021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a89e382-bbb4-4235-bbb4-07ce40a7bce5",
        "cursor": {
          "ref": "c423adb6-7e34-4eb8-a532-c0f19b040178",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eb303945-60fd-4373-b752-b07f432ddb7c"
        },
        "item": {
          "id": "8a89e382-bbb4-4235-bbb4-07ce40a7bce5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "aecfe25f-25ae-4afe-8b17-5f6f4242491b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362af154-35fb-44cb-888c-e91aa3f0a9e2",
        "cursor": {
          "ref": "2b0d2c47-e524-4e9f-a64d-8a57995a1e6c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1901955c-2dc6-471a-9706-0288e55c6608"
        },
        "item": {
          "id": "362af154-35fb-44cb-888c-e91aa3f0a9e2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b459dcb1-5bd3-487a-9a05-114efdf3a1fc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d6c988-1e4d-46ae-aa8d-c566c06b3b67",
        "cursor": {
          "ref": "e9518337-ba0e-4a64-ac09-2cd688f62f43",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c10fc08a-c8a3-433a-9ac1-110238957e76"
        },
        "item": {
          "id": "c2d6c988-1e4d-46ae-aa8d-c566c06b3b67",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "51c75f21-74b1-484a-b606-a6763272e520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2def967-68c0-4a05-a19d-37573020846b",
        "cursor": {
          "ref": "c691ae8a-5cce-48f1-9282-bbe6c9b6029a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7611be65-766d-412d-a20b-8c25966402f3"
        },
        "item": {
          "id": "b2def967-68c0-4a05-a19d-37573020846b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "972d2c2a-040c-4b43-8769-c14251d4c6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4e28d2-8476-401c-b97d-de8f4181c428",
        "cursor": {
          "ref": "01f35965-790e-4fbb-ac9d-330e36059208",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d82e669c-adfb-4fdc-8294-aef1c3e03e14"
        },
        "item": {
          "id": "8d4e28d2-8476-401c-b97d-de8f4181c428",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4b4e68fa-f2ef-436e-838d-ad4c5c35fd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e5ebc0-b396-434c-b999-5daee76d249d",
        "cursor": {
          "ref": "4a0089fd-5159-4d70-8258-db6c3bed16ec",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1b267af9-651f-41f4-a345-cd5792a7b84d"
        },
        "item": {
          "id": "e0e5ebc0-b396-434c-b999-5daee76d249d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1e06ac8f-dba1-47ff-a443-2586d9b334a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd895fa-33d5-4d84-8c3c-b5fc28a95c88",
        "cursor": {
          "ref": "acb092be-acb4-4a49-8ddd-c461bf4b4f32",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e4f55635-2ed4-4e1a-a2a5-eeab41d80b17"
        },
        "item": {
          "id": "3dd895fa-33d5-4d84-8c3c-b5fc28a95c88",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ff910280-256e-46df-90aa-89d6dae9b8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6dea4e-27fa-490b-9413-a764f6ea4ea9",
        "cursor": {
          "ref": "59779425-ff6b-48ad-8d97-967a11e4d975",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "91ffdc8c-ef76-4b80-87fd-febc349c5cf5"
        },
        "item": {
          "id": "9c6dea4e-27fa-490b-9413-a764f6ea4ea9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "46dc8ea8-9e04-46b1-b398-5ca9bca4d844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b70629f-f4fc-48b3-8b87-d2c13d5d57ca",
        "cursor": {
          "ref": "0769cd26-588f-4e0e-b979-2b48c9f7a1f2",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ae9c27e5-a905-4bcf-a64b-be514a4f2413"
        },
        "item": {
          "id": "1b70629f-f4fc-48b3-8b87-d2c13d5d57ca",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d0b9dd71-e2d1-4446-bcb2-4ba986797381",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2128b56f-def4-4964-a37a-03c6d920372d",
        "cursor": {
          "ref": "2596417d-95af-4343-98a2-e7567088144d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bd20b2b0-391b-45b9-9259-e5f59e797b0c"
        },
        "item": {
          "id": "2128b56f-def4-4964-a37a-03c6d920372d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "375ad798-f954-4a29-83f8-8fb7f2453feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0744043-4fe7-4f8e-9a50-d3d349cf6889",
        "cursor": {
          "ref": "78dea7df-939f-4f14-a553-526e6e222d1d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "85641885-ad76-4f09-8f0c-b6607636f86c"
        },
        "item": {
          "id": "b0744043-4fe7-4f8e-9a50-d3d349cf6889",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fad02459-1207-45b8-b432-443b770a1075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40439613-5033-4c0b-952c-a00a5d13a39a",
        "cursor": {
          "ref": "2b8fdece-d7d5-4ede-8091-3f3d4734732d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b84ae95a-593c-463b-83d3-f390c5dcc624"
        },
        "item": {
          "id": "40439613-5033-4c0b-952c-a00a5d13a39a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dd98a843-4d48-409a-a285-ec3687933baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851e7e7a-28d8-479c-8228-82081b2c6c7c",
        "cursor": {
          "ref": "db591e2c-4821-4265-9535-ac548eb1bf30",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ff199023-6184-4247-b984-6d955ebe17d3"
        },
        "item": {
          "id": "851e7e7a-28d8-479c-8228-82081b2c6c7c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6c85bb25-4237-4267-a237-8b8efded2c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4118c29-2c1b-4fa1-960d-107c430be45e",
        "cursor": {
          "ref": "154d9efc-4bc8-4a7b-a4f1-f1c75868d73d",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8cc597aa-bd8c-4a6d-90c9-61afe2a3492d"
        },
        "item": {
          "id": "d4118c29-2c1b-4fa1-960d-107c430be45e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "afb5c07f-5551-4d8c-99fa-812870c20c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba0e9e6-7495-47bc-a1a5-c998e299ac0a",
        "cursor": {
          "ref": "6b8eb34d-4b35-4a97-8440-78b505422636",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8b63854a-c2b7-4811-b804-695409085a8c"
        },
        "item": {
          "id": "5ba0e9e6-7495-47bc-a1a5-c998e299ac0a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "97d85989-48b1-446d-b1ce-338e39a898fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7020a9c2-9434-4a6b-9298-0312a3b712c3",
        "cursor": {
          "ref": "8a58691b-df1b-426e-a354-8d9227df475e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0f93a9cd-949f-4e74-9086-ee4d8da877bb"
        },
        "item": {
          "id": "7020a9c2-9434-4a6b-9298-0312a3b712c3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f27e7b87-fc85-4280-8885-4d25401b0b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b422882-5620-4fdd-a4e4-234295af5630",
        "cursor": {
          "ref": "752257b7-d804-4f70-a126-9760a2f4eebb",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "83f6e44b-8a78-453d-ba04-3eb041eb7fe5"
        },
        "item": {
          "id": "9b422882-5620-4fdd-a4e4-234295af5630",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7e473ba1-6aaf-44d9-941f-a123efe7022a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3097449-249a-405b-a31d-834c681886ec",
        "cursor": {
          "ref": "8e285e27-aabc-4318-b197-1edf71f05695",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2e1d429c-c0f8-4244-882b-10868db4b27b"
        },
        "item": {
          "id": "c3097449-249a-405b-a31d-834c681886ec",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "205cd7fc-9f81-4b96-a66c-2b2afad8187c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bb0200-7f10-426c-9fa2-6b53aa9a6757",
        "cursor": {
          "ref": "4b65981e-e4ce-4241-826d-7380a14c0508",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3d1ce030-96c1-4845-8bfa-ee2aafda9db0"
        },
        "item": {
          "id": "e5bb0200-7f10-426c-9fa2-6b53aa9a6757",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "695f5b7d-9813-4f48-aa6d-9dc183cbe522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541d5f6f-7767-4bd2-9ee0-a1fadf5abd00",
        "cursor": {
          "ref": "53b651cd-019a-4931-8a5f-18e55cd27868",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1328515e-91e6-4d6b-ae97-d464cbede010"
        },
        "item": {
          "id": "541d5f6f-7767-4bd2-9ee0-a1fadf5abd00",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5429302d-c845-4464-ada3-ddd8ff1d374b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12b5b8b-fb72-4a54-a3e8-dd616027f6c8",
        "cursor": {
          "ref": "e915384b-595b-4f95-bb69-dbdefd6af3d5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "66412623-32e7-4fdf-bb36-357637938dc4"
        },
        "item": {
          "id": "c12b5b8b-fb72-4a54-a3e8-dd616027f6c8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a4b26173-def6-413e-9c34-62142e13914d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654cba8f-45fb-4e43-a305-0b857115663d",
        "cursor": {
          "ref": "ae2cdaf5-b9de-4d1e-b06f-9d72c46f4bd5",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a5d3188d-dcde-4784-9147-f781fc5e4d8e"
        },
        "item": {
          "id": "654cba8f-45fb-4e43-a305-0b857115663d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "192d5c7d-52e1-498e-a347-4efc92e079ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f107b7e7-2f00-4133-a65f-dc2069ad7297",
        "cursor": {
          "ref": "2547712c-4f0b-4784-89a0-152b8c38e64c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4e74b318-a0ec-4ba6-9b8e-2a3c21070818"
        },
        "item": {
          "id": "f107b7e7-2f00-4133-a65f-dc2069ad7297",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b52c9445-2458-48bc-814c-1f5338ee9757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bb6bd1-1483-4f1e-847b-53309a58fbcd",
        "cursor": {
          "ref": "3e430b0a-25fe-4c13-9cf9-6acdf8b1f108",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8a2aff8b-da92-4967-a1bb-01b323ed4c7c"
        },
        "item": {
          "id": "b6bb6bd1-1483-4f1e-847b-53309a58fbcd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f118a903-7d76-4114-bbcc-f8a6f0ed599d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3a4234-7e8f-465e-ade8-8cc7eea21af4",
        "cursor": {
          "ref": "def2086e-7d16-446e-850a-9dde7930a491",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "04c36bb7-6940-49e6-a129-6cae2cda8eba"
        },
        "item": {
          "id": "cb3a4234-7e8f-465e-ade8-8cc7eea21af4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "414b6b96-c1fb-4ca5-b8dd-fcddb2ea7410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746b45a1-ce02-4db3-a76b-5d778fe6953b",
        "cursor": {
          "ref": "bcbc90f2-5c54-4f80-bcb7-0bfdf59c4721",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0bf62a02-c235-481d-a34b-000618079ea3"
        },
        "item": {
          "id": "746b45a1-ce02-4db3-a76b-5d778fe6953b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "09d3b0b3-f486-41c1-b2fc-6e21ca09b40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5204e90c-8b2c-402b-b58a-44d03033dcc3",
        "cursor": {
          "ref": "3b83f8db-6c26-4280-a467-3010dfe712eb",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3a32abf0-62e7-4eea-8885-e7f87d5f2372"
        },
        "item": {
          "id": "5204e90c-8b2c-402b-b58a-44d03033dcc3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "49c3fba4-4cd1-4d31-8d4f-a2737c1b6b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6daa04-8ba6-4299-b278-070799cd03f9",
        "cursor": {
          "ref": "675df391-c44e-4b05-a96b-1fd26f61a78a",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c46605a1-7c4a-46cc-a1b3-e0643645005c"
        },
        "item": {
          "id": "3a6daa04-8ba6-4299-b278-070799cd03f9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "58b2e0bd-ebbb-4c98-8c88-3fb8b7798186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d204b5-2c56-41c3-9f99-41b33aced838",
        "cursor": {
          "ref": "84d52538-37ee-47bd-86ff-46d9ec4cf0b0",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4620368b-d9db-4082-8e50-dfb0b91d4ba4"
        },
        "item": {
          "id": "09d204b5-2c56-41c3-9f99-41b33aced838",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "781f99f5-e6a6-4f93-b2c7-008ca2ab3c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a69929c-d295-40dd-94c5-55cce1e2959f",
        "cursor": {
          "ref": "c117d771-25f0-4747-b027-736a7442b997",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ab799d81-a7a3-4f7f-b3db-e9f25bff7930"
        },
        "item": {
          "id": "5a69929c-d295-40dd-94c5-55cce1e2959f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "784b8d44-0516-4df3-a3c3-ab3b338a54ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5b421a-dd24-40b9-b841-073bd8936ed3",
        "cursor": {
          "ref": "7c7e9b13-3092-4560-bba9-d099970c6361",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e01a79ec-7ce7-4a8d-b9dd-099ad202c5f0"
        },
        "item": {
          "id": "fb5b421a-dd24-40b9-b841-073bd8936ed3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d7ef7470-8c1e-4693-aa9a-702aff76a0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ed3db1-2727-4961-adf9-9003059f74d4",
        "cursor": {
          "ref": "c8616d43-05d7-4cf2-8aa4-6a347c14260e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "24f0e80f-f3b8-47ab-baca-48d668f7783f"
        },
        "item": {
          "id": "b8ed3db1-2727-4961-adf9-9003059f74d4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8e682ccc-db4f-42f9-8a16-3c8085370b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bd3897-13d9-410f-9edb-55a654598751",
        "cursor": {
          "ref": "9db0f06f-9d88-4983-a4ac-02b7849774f4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "042f7964-d0ae-47d4-bc8d-c65877c3e7bd"
        },
        "item": {
          "id": "27bd3897-13d9-410f-9edb-55a654598751",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b99f058e-3087-4a76-8558-d1a98b53d7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d3376f-7e0f-4b13-9a65-aba7c14ed21e",
        "cursor": {
          "ref": "5524ba64-b375-4c1a-848a-8eacd42cbdde",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "38439137-15a5-49ed-85e9-ed7f4a6f311d"
        },
        "item": {
          "id": "b7d3376f-7e0f-4b13-9a65-aba7c14ed21e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "63357bca-a68e-4bb4-a440-da6f48119890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c491ef-a38c-4bc2-8d9e-6d7a2c279d1d",
        "cursor": {
          "ref": "0d7f1177-5e7d-4584-9797-44ed6fa5ad53",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "93c400cc-8036-4b11-9292-3a22440e11ed"
        },
        "item": {
          "id": "54c491ef-a38c-4bc2-8d9e-6d7a2c279d1d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "95b664f8-ad3f-4a68-ba3f-a06e5c4ac655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60a29f5-4dc2-42cd-940d-acb3a679079f",
        "cursor": {
          "ref": "fc7b59ad-a7a2-4248-aa95-ff22c1e8aaf7",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b431ff31-5c4b-41c4-b073-6ee1cd86b15f"
        },
        "item": {
          "id": "a60a29f5-4dc2-42cd-940d-acb3a679079f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e40104e1-9e79-4122-94a3-b6b860f66393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043f2180-5e8c-487b-9ec3-c3c3dcf04df0",
        "cursor": {
          "ref": "cee2f614-667e-472d-ab00-292777ab5bf7",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d1f2a957-34fd-4509-a42a-9ac28e840c7c"
        },
        "item": {
          "id": "043f2180-5e8c-487b-9ec3-c3c3dcf04df0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5f22d082-d80c-4b4e-be7c-b2f092c75703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc18bd4-4bf8-413b-9b15-2d6ab318541d",
        "cursor": {
          "ref": "f865a69c-2490-4f6e-8b82-f4f8d93c2ad2",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3eb68748-edb8-4004-ad05-ca174af25826"
        },
        "item": {
          "id": "7fc18bd4-4bf8-413b-9b15-2d6ab318541d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d6777b87-61a3-4e3c-a264-b041facc6558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91084ad-c336-41ce-9f40-d3c994fe80f9",
        "cursor": {
          "ref": "56fb6447-35f6-4ff1-af2f-96b27dac5e78",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2501bf32-2436-4562-ae34-1ae14b94b733"
        },
        "item": {
          "id": "a91084ad-c336-41ce-9f40-d3c994fe80f9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "82d67812-88d4-4b24-a926-4635c4267e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04788532-41aa-4fd1-8281-233bb999dbfa",
        "cursor": {
          "ref": "e71c4ea9-c1ec-46ce-9c3b-529238aa439f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e16e4818-2f60-4c5c-bdb4-e80865701ea1"
        },
        "item": {
          "id": "04788532-41aa-4fd1-8281-233bb999dbfa",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "01f0232f-e208-4d1d-8d0b-b599fef8470a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d042c442-db52-4e7c-927b-3bd7928e52cf",
        "cursor": {
          "ref": "b426ff3f-894e-4df2-825f-85b3e168781a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a2893f16-c59b-45ea-b7f2-bfc3f3f964a6"
        },
        "item": {
          "id": "d042c442-db52-4e7c-927b-3bd7928e52cf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "68d46b36-1a2c-4f47-b980-5be28bbdd888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d30d4f7-803a-4ad6-98fb-37ab878964ad",
        "cursor": {
          "ref": "9ff0810c-885c-40f0-ae54-bd5b2e7a4717",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dde453a7-88aa-4fdf-87de-51e75aa9233d"
        },
        "item": {
          "id": "4d30d4f7-803a-4ad6-98fb-37ab878964ad",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e9886d05-7a46-4634-91e3-af26984517b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9afc855-1030-4f0a-a6ef-973d0dc78dab",
        "cursor": {
          "ref": "515911f9-7340-40c0-8cf9-6d7f4877c380",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "05cb8692-4d6d-4475-a885-25e4149d9898"
        },
        "item": {
          "id": "a9afc855-1030-4f0a-a6ef-973d0dc78dab",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ca547275-0c1c-43e4-9948-4f42c1ad5ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2559d67b-36cc-48cc-b69d-10b169a596fb",
        "cursor": {
          "ref": "5d14b587-0c92-42f1-a63b-c3887fc9c12c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fdca5881-a9b6-4f3c-8680-84abb67ee607"
        },
        "item": {
          "id": "2559d67b-36cc-48cc-b69d-10b169a596fb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1729432d-8cdd-44d3-9ec0-e55896bb92fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1628133a-e7fd-4671-9b34-6029e93c3cb1",
        "cursor": {
          "ref": "12e5ea11-aecd-4817-8c4a-75ed743404db",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a4a524f1-8d6c-4489-ab3e-0ea0be4f638c"
        },
        "item": {
          "id": "1628133a-e7fd-4671-9b34-6029e93c3cb1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "deca822f-f0db-4fcb-b82a-a767d22021b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8243d4-7d3b-4e52-94e5-9298ac874b7a",
        "cursor": {
          "ref": "5c0e26bc-9356-43f3-a1f4-379b117a0113",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e58ab640-3bec-48da-a687-1656d2e7f725"
        },
        "item": {
          "id": "cc8243d4-7d3b-4e52-94e5-9298ac874b7a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6d0c5e15-251c-4236-a02f-1aacba7f290e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3823bd-0958-4cdc-bcca-a2350e33652e",
        "cursor": {
          "ref": "17c4cf56-4a78-4db9-abf7-87e6a9cfe464",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "56f86176-4a99-46f8-b310-6691bc523e2e"
        },
        "item": {
          "id": "ce3823bd-0958-4cdc-bcca-a2350e33652e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3f44056d-2c8f-4930-8c1c-311833f32c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50f12ed-cc93-42c3-88e4-84bef1f29ba5",
        "cursor": {
          "ref": "6bb6563c-6031-425a-bbda-2fddecbe3ab6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "448bab80-ae75-44b7-8194-6d3291dc2b03"
        },
        "item": {
          "id": "b50f12ed-cc93-42c3-88e4-84bef1f29ba5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ea8c7164-6328-4b8d-a0e8-a50c29757495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b7cab9-d330-4fa8-964e-d59b30f15a14",
        "cursor": {
          "ref": "04e07ec2-c9ac-44c3-a74d-fa2aafcd29d9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "253306c3-cb00-44d4-8c0a-5deda1250e94"
        },
        "item": {
          "id": "74b7cab9-d330-4fa8-964e-d59b30f15a14",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0cf24ea4-de89-4c80-b593-fb7922df2d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfbc5bb-9e00-4db9-a6f8-d08a4936c3be",
        "cursor": {
          "ref": "d5082a7b-c6de-40bc-8d4c-b6c8a7613ff1",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4307e42f-5a52-46e1-a22c-504c95be35f6"
        },
        "item": {
          "id": "6bfbc5bb-9e00-4db9-a6f8-d08a4936c3be",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "def92082-f2c9-41e0-af4b-2ccd0bdaafe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3bcdd2-1910-4e95-860a-70bd76ead3c4",
        "cursor": {
          "ref": "6519b52c-f75d-4203-8938-48a1e6d479b7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "255da8a6-69ff-4f9e-bf37-950021789a02"
        },
        "item": {
          "id": "3d3bcdd2-1910-4e95-860a-70bd76ead3c4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b10d2a29-16a6-4d15-a9e6-80b59e41e87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73972d4a-b0e8-4c30-badc-0a17ba7967b7",
        "cursor": {
          "ref": "d7a7ce6a-2ff5-4ea5-aff8-e7600086510b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6365677b-fe3e-4c9c-ad31-aa70fc5f56b1"
        },
        "item": {
          "id": "73972d4a-b0e8-4c30-badc-0a17ba7967b7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9996ac18-9e49-4f38-9fbe-cd112d3820d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48061ecd-d171-434f-b00a-93da82c27d83",
        "cursor": {
          "ref": "3bf81b23-ab08-4525-80aa-e199f3e1533b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "db70ecbf-6032-492b-86f8-67b56a01dce5"
        },
        "item": {
          "id": "48061ecd-d171-434f-b00a-93da82c27d83",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dad69e2a-dad7-476d-8c11-c9167d2070a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965dabe7-0fb6-4289-a1bf-9ece3cfa68e4",
        "cursor": {
          "ref": "079562e1-a022-4f0f-bda2-c8ee19097b4c",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9eb83080-f40b-4c68-a6e2-e0737a7d5913"
        },
        "item": {
          "id": "965dabe7-0fb6-4289-a1bf-9ece3cfa68e4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4e8bd40c-9a01-46fe-a083-76caca038efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edb2439-83fe-4d2b-91fa-d3de0dadc371",
        "cursor": {
          "ref": "07d7ee8c-e769-4b03-83c8-9eebbcef6684",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "253b2f1d-e2f6-457a-82c9-c3030dd5b8a2"
        },
        "item": {
          "id": "7edb2439-83fe-4d2b-91fa-d3de0dadc371",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a28a5bc2-5491-49b5-a331-eb16e70f4207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4cd3cf-fcea-4847-bd61-09b30860e3ab",
        "cursor": {
          "ref": "09403ee5-03f4-41ad-8a87-ff41edb6b529",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ddb0f6d7-fb95-4bf1-a5c1-cf92826ec631"
        },
        "item": {
          "id": "9a4cd3cf-fcea-4847-bd61-09b30860e3ab",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "18f1db39-fab5-412f-b4ec-c6bac2432aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d6d68c-d351-4f1f-a803-8a7a848f8e56",
        "cursor": {
          "ref": "2a29ab48-0dd1-4214-95d7-b502d39bbc53",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "06e98f6b-b882-428f-8a3d-5015546b7042"
        },
        "item": {
          "id": "a4d6d68c-d351-4f1f-a803-8a7a848f8e56",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d4f494ac-da1b-48d8-9358-43a870e3014e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1719dac-856a-436c-99f4-60feda324922",
        "cursor": {
          "ref": "190f2005-83bf-4f10-b5c6-8765647bdd82",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "64f50748-21fc-49e5-bcee-5ef216bafd92"
        },
        "item": {
          "id": "a1719dac-856a-436c-99f4-60feda324922",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8b9207e2-d759-494a-b813-0fcbd17fceac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95069cac-4379-4266-ab08-0380b8962462",
        "cursor": {
          "ref": "e1da1020-6bd7-4123-9312-27e71dcaa33e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dac07945-44ce-422c-9172-f9eb11ca80ae"
        },
        "item": {
          "id": "95069cac-4379-4266-ab08-0380b8962462",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d5722dd6-9d3c-4c9a-a22b-f5191609a15d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839ab79d-0806-4537-8910-9eba8f99dea6",
        "cursor": {
          "ref": "322fa3a2-7fab-43d3-b8f1-b4ff3f68e220",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0e241558-c043-426f-9863-1ada7f4d8a82"
        },
        "item": {
          "id": "839ab79d-0806-4537-8910-9eba8f99dea6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "af9fad2a-fbb1-4018-9686-3552c711a491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a741bba1-e0cf-4ab9-b2cc-e917044cc2e2",
        "cursor": {
          "ref": "35335dc6-617b-4b69-83e8-5c591fef046f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e0a939dd-11a1-4e26-87f6-35799d171d90"
        },
        "item": {
          "id": "a741bba1-e0cf-4ab9-b2cc-e917044cc2e2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b3459315-b337-48a8-aeed-848c8e35c3b5",
          "status": "Created",
          "code": 201,
          "responseTime": 10451,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e9c9b0-7095-4566-bd77-0af9548fbd30",
        "cursor": {
          "ref": "a5abeb50-1f95-4e8d-80cf-d259b098d010",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d085eed4-90de-4462-880e-5cc97504a8e5"
        },
        "item": {
          "id": "00e9c9b0-7095-4566-bd77-0af9548fbd30",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1919930c-1d4f-4270-ab7b-85d1773d10ef",
          "status": "Created",
          "code": 201,
          "responseTime": 9718,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b27877e-03b0-405f-9501-0ad9cf33f8ce",
        "cursor": {
          "ref": "c96eb1a2-9165-42bd-8775-4e2916df6bc7",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d7006766-a74e-4fe4-9f89-569e06613381"
        },
        "item": {
          "id": "8b27877e-03b0-405f-9501-0ad9cf33f8ce",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "91dc1803-a23b-4572-acf3-dde14024b153",
          "status": "Created",
          "code": 201,
          "responseTime": 10056,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13ae320-fd74-4d93-8637-c6cf893a0243",
        "cursor": {
          "ref": "66c97155-8bca-4d93-a619-e108777f519f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a2cecd02-4205-4cc5-b8c4-b1e797e2e0ba"
        },
        "item": {
          "id": "c13ae320-fd74-4d93-8637-c6cf893a0243",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bd98af0e-4fa8-4aab-aebc-7c16fa2c352c",
          "status": "Created",
          "code": 201,
          "responseTime": 9637,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a60ddc-03a3-4f95-b8ad-1b99774afb60",
        "cursor": {
          "ref": "a053b930-e361-48f2-8afb-c6b081cfcfe1",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "080cd12b-0357-415d-a412-06ccd2356f05"
        },
        "item": {
          "id": "a5a60ddc-03a3-4f95-b8ad-1b99774afb60",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "791e2d0d-aad3-4acc-a69c-b7218e296855",
          "status": "Created",
          "code": 201,
          "responseTime": 9658,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-17T00:40:21Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-17T00:40:21Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "222802cb-df76-4a0f-b8bc-b46b97655b21",
        "cursor": {
          "ref": "a0fe3699-a8c3-403a-9942-b802d18fc533",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "130e7661-ddd3-4486-b907-12d1260841ff"
        },
        "item": {
          "id": "222802cb-df76-4a0f-b8bc-b46b97655b21",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "372a7939-e55a-4645-b1f4-d8ee2863bd6e",
          "status": "Created",
          "code": 201,
          "responseTime": 10053,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d580b29-fd82-4be9-a936-c1a4c9ab18dd",
        "cursor": {
          "ref": "87f23edc-e158-4055-a710-e0f6e6a5c098",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bfefd127-0d58-4e72-8102-1e5ba64bf824"
        },
        "item": {
          "id": "4d580b29-fd82-4be9-a936-c1a4c9ab18dd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b1d2f52c-f1ad-4789-8aa1-ea4fd169f3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6224e7c-e17b-4743-a365-b5cbb064b033",
        "cursor": {
          "ref": "80719b2a-672f-484c-acea-4cf3fea2a561",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c7d6b89c-8a3d-4fbc-a067-c03913f2d700"
        },
        "item": {
          "id": "e6224e7c-e17b-4743-a365-b5cbb064b033",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "174f25dd-3cf8-4c7e-86b3-4f0e49b54b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d563a925-d854-4318-9614-7f7077d76b85",
        "cursor": {
          "ref": "7e957596-7b19-442b-9dac-80269086c570",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1450a826-965c-42a9-8de9-33e1c3e057b7"
        },
        "item": {
          "id": "d563a925-d854-4318-9614-7f7077d76b85",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "67751ed1-dfed-4bdb-bf50-27fa07ce2af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e966459-886e-4ecb-9912-e169eeeb034d",
        "cursor": {
          "ref": "0f75efcb-8cd1-43ae-be31-af48aa585942",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c24524cf-5c35-4c9d-b84f-d0cda91337ac"
        },
        "item": {
          "id": "4e966459-886e-4ecb-9912-e169eeeb034d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "83b67509-7669-4a73-ad38-fc1226aefe7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0514f9-9d04-4602-8069-7a66eea8b5c8",
        "cursor": {
          "ref": "b4ba3190-882e-4b2d-8b05-a4f3ac9f86ab",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3c7602c8-fc26-45e7-a2f1-5e37e4189ea4"
        },
        "item": {
          "id": "ff0514f9-9d04-4602-8069-7a66eea8b5c8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "17dc5c63-cefe-4aa4-9e5b-156674a6e2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e23c14-8f3e-4610-b549-59f2a6dd23f3",
        "cursor": {
          "ref": "ebb166c9-1d6b-4ab4-b61a-4e16e31093c1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2601e333-55fa-45f3-b470-73bcccdf2fc0"
        },
        "item": {
          "id": "d3e23c14-8f3e-4610-b549-59f2a6dd23f3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2d7d7bd2-4645-4ca7-9499-19e38d4c4256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0202909f-9783-459b-ad5d-f47df14432a3",
        "cursor": {
          "ref": "279d2b7e-9ed6-41a8-b522-364687e9f976",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "baa44731-4375-4386-838b-f158332c8d4d"
        },
        "item": {
          "id": "0202909f-9783-459b-ad5d-f47df14432a3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "61330ced-7a42-4d2e-a2ee-1be805345190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d27ac0-4ee0-405c-a1a6-3ab6288127a0",
        "cursor": {
          "ref": "70bbe4a5-c6b2-4d0a-bba7-27d9651f5a2f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ca3ce99c-0bf9-48d2-8c6b-7787cd7e36ab"
        },
        "item": {
          "id": "88d27ac0-4ee0-405c-a1a6-3ab6288127a0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4131e5c0-fabe-4368-b5c9-7f89f7f068d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaa99dc-ae84-4d88-b5bf-5a6c17f96c95",
        "cursor": {
          "ref": "d2bff084-c370-4ed1-b5b0-bd2090482532",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d0efff4e-8a0d-4e49-931c-2fecb852d5ff"
        },
        "item": {
          "id": "baaa99dc-ae84-4d88-b5bf-5a6c17f96c95",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a67c4f81-37ea-4664-a071-a88899d0230e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2676f78e-2855-4f34-a405-b29bf70b0e9d",
        "cursor": {
          "ref": "0ed770f3-7493-4a40-bd5f-7e2237d6e6cc",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "72f9f3a7-5fed-401c-a661-af23e124f15a"
        },
        "item": {
          "id": "2676f78e-2855-4f34-a405-b29bf70b0e9d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "08b85605-3fd8-4ef4-9090-7d504ded27b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19a7c51-db01-4287-926d-3676f94e80da",
        "cursor": {
          "ref": "914c5ebd-a37d-4ede-91af-251fb2135599",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "16ace3ae-91f4-48a4-b6d9-2a39efc2959f"
        },
        "item": {
          "id": "e19a7c51-db01-4287-926d-3676f94e80da",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d803e387-27e9-404c-af83-83122d47441f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23a09c3-ddba-4805-8bc8-3cb05fbb637a",
        "cursor": {
          "ref": "dcd2a355-e962-4d0f-83dd-de02b5edb975",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6c0d7b4f-0a24-43d4-8b0c-10fc076dd1bc"
        },
        "item": {
          "id": "f23a09c3-ddba-4805-8bc8-3cb05fbb637a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "876e7b93-f7d7-4e33-980a-06b6c0766c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea1db6b-fef5-4995-a407-bd623c47f44f",
        "cursor": {
          "ref": "cca5993c-7998-4f82-beb9-f8f61c360a10",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "23de87af-59d6-4846-9c95-41a7da69cdab"
        },
        "item": {
          "id": "eea1db6b-fef5-4995-a407-bd623c47f44f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e716cb77-22ba-4cdb-842c-3f6b80322bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9dab1d-9c45-41f6-b1f0-cd2f7f8365d2",
        "cursor": {
          "ref": "ded4c647-5da9-441b-b37b-dc5e526e461b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5d395241-d51a-4441-8303-032633fd0bd7"
        },
        "item": {
          "id": "6a9dab1d-9c45-41f6-b1f0-cd2f7f8365d2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c545cbcc-5c36-49b1-867f-fd4a306191c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d2c4f7-d4bd-431b-89d4-a2699abde45f",
        "cursor": {
          "ref": "7b4d0133-0cd4-42c9-a1ac-58bf4103713c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a3430127-b80d-47ad-8d42-54fc34af4a95"
        },
        "item": {
          "id": "06d2c4f7-d4bd-431b-89d4-a2699abde45f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "71e473b6-9e65-4da7-a5fb-d80341b8104b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9c68fa-515c-4e04-9ce0-90329ea29a44",
        "cursor": {
          "ref": "a5a75640-3fb1-46a8-9f1d-89ad9004bd8f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9be696b2-181b-44e2-9d7c-c36d7fe9a42a"
        },
        "item": {
          "id": "be9c68fa-515c-4e04-9ce0-90329ea29a44",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "06f174c3-d019-4d81-843a-aa4658165c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8188aec7-6974-4109-9c0c-76e9b4824920",
        "cursor": {
          "ref": "8405d99f-b54f-42d1-b37a-1ee4d2b3cde0",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9e835904-387d-44e1-8ab1-580626a3e17e"
        },
        "item": {
          "id": "8188aec7-6974-4109-9c0c-76e9b4824920",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dfe380af-a6ac-4861-ab9f-04ac6e45356c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed39488-6cb6-4082-a4c5-df7e80deb290",
        "cursor": {
          "ref": "3460c0b1-fcb8-4f4c-a4e8-589e3d9f7e4e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "22d7dfe9-778a-49ae-b967-e2cd7cb967a8"
        },
        "item": {
          "id": "eed39488-6cb6-4082-a4c5-df7e80deb290",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "80ca6f6f-df58-4668-b5e7-5c092de906b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13460e0-1c78-4491-bfda-351ef058f0ec",
        "cursor": {
          "ref": "77522fc3-b892-4ff5-bc6c-9a60d328d40b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1fb6c39f-d98a-4fcd-9be5-c544e5d17839"
        },
        "item": {
          "id": "a13460e0-1c78-4491-bfda-351ef058f0ec",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f26c981e-3b19-4234-8509-285a028876e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51be2440-a552-4e44-bb28-f00a6902da4e",
        "cursor": {
          "ref": "a70fb4e9-4d75-46a6-9427-b9cf7662a486",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "365ee68b-b39b-48c3-b19f-4ee2298f88de"
        },
        "item": {
          "id": "51be2440-a552-4e44-bb28-f00a6902da4e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9b12fe6d-177b-4ae5-a3cf-d17169e9593b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa1d39e-4ccf-46ad-a545-9954d1526127",
        "cursor": {
          "ref": "dfb4545f-4f05-4a3a-a00b-7189de30f20d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d469b5ef-af2b-48ba-8a75-823ddcba32cd"
        },
        "item": {
          "id": "caa1d39e-4ccf-46ad-a545-9954d1526127",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "12500edb-a30d-484c-a43a-215e77c65382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9054c019-a21a-4756-840a-cc43630923a0",
        "cursor": {
          "ref": "b3816005-5847-465a-95a2-fffd0adbe2ae",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0c931301-069c-4fb1-a602-36d05356bbaa"
        },
        "item": {
          "id": "9054c019-a21a-4756-840a-cc43630923a0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f6bbd335-19cc-4789-96f7-cc22d60e7754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0b6cb0-e53d-47dd-bf23-9cb5c1c8a5c7",
        "cursor": {
          "ref": "c29aceb2-72b8-404d-bc4e-322fdf23f2ba",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0cfaab42-c4f2-45f3-9836-9876542ceeff"
        },
        "item": {
          "id": "0a0b6cb0-e53d-47dd-bf23-9cb5c1c8a5c7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "28bb90b5-e09b-43f1-b69f-98b87d9c1db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0399167f-5425-4d20-9549-dd1e5b7b888c",
        "cursor": {
          "ref": "8a122f38-13b2-4ecf-8f84-90abf78cd8dd",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ec32d43c-844c-4446-878f-7a4b4047bb50"
        },
        "item": {
          "id": "0399167f-5425-4d20-9549-dd1e5b7b888c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e785692a-e2e0-45c9-b27e-225205d4c03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f1878c-2c4b-40af-bb9f-b043b3ca6b13",
        "cursor": {
          "ref": "4fd44460-026e-48db-ae86-2e9819fe1853",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b82eadf8-7899-4756-a6b3-7205ea0b1a49"
        },
        "item": {
          "id": "d0f1878c-2c4b-40af-bb9f-b043b3ca6b13",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bcf44ede-629b-462e-aaf7-9326efbcfbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7028450c-4a23-493a-804a-41de90fe167f",
        "cursor": {
          "ref": "2902abbe-2541-4e80-9fa3-d8a91fb7f57e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a7057eab-ffed-44df-8b4e-bb6fc5f95d0e"
        },
        "item": {
          "id": "7028450c-4a23-493a-804a-41de90fe167f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "83d6c6b6-6b3d-4e46-b7e4-8b85448d1e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239854ba-3622-4c50-ae9b-a5f6331dfb71",
        "cursor": {
          "ref": "ae99a85e-ea14-441b-9881-109b0af798dc",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1b608dac-4f18-4a3e-b40c-a8b10ecf86de"
        },
        "item": {
          "id": "239854ba-3622-4c50-ae9b-a5f6331dfb71",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7bd563b9-450e-4f36-97b5-5a850d831ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c87274-5305-493b-8fd8-687d9a700507",
        "cursor": {
          "ref": "eedbb509-900d-4e9a-8576-e353899ee1ef",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c75d3735-5b69-466b-a07b-7832bf375428"
        },
        "item": {
          "id": "27c87274-5305-493b-8fd8-687d9a700507",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1281efc6-ed1b-4a7a-9041-2552530d2b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833eca8e-d0b1-4de4-9111-6b540b3bbe12",
        "cursor": {
          "ref": "62aacc29-934d-46dd-b67d-363e85b57ec9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ca6cf33a-6a0f-4f72-aa63-a6ae991a77e3"
        },
        "item": {
          "id": "833eca8e-d0b1-4de4-9111-6b540b3bbe12",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "455f381e-62e1-47e4-aa26-b5da909de881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5232eb7-e6da-4c84-b805-5824d13bdc7c",
        "cursor": {
          "ref": "dc2c81d1-773f-4e63-b61d-176d40735fee",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8db05eb8-912a-4393-9f80-3ea27053eb60"
        },
        "item": {
          "id": "e5232eb7-e6da-4c84-b805-5824d13bdc7c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c42ff003-8344-4e99-a1b7-2262825af6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1f01bf-dfb7-4ef7-a659-f495de43a82b",
        "cursor": {
          "ref": "1e89a544-557b-4dd3-9dcc-e3ffcf17b144",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d5223b8d-4bc4-43be-9383-5d19068c32c7"
        },
        "item": {
          "id": "8c1f01bf-dfb7-4ef7-a659-f495de43a82b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f6ef11d3-de47-40ff-885a-764203653913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d5a7da-b98e-4a73-bfd3-a98235a24609",
        "cursor": {
          "ref": "4ab113ba-e3c2-4351-a41c-55d5b7de9f90",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "78b3c633-4c88-4009-92ae-0ad2759cb1ab"
        },
        "item": {
          "id": "97d5a7da-b98e-4a73-bfd3-a98235a24609",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2b94c114-2062-4c98-a02c-69fd6218d70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac392662-a9c5-488b-ba86-5d0ed8ee6116",
        "cursor": {
          "ref": "c30bef92-6c9b-4281-869d-fbe1eaea25af",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "69d0feda-83ae-42c6-a206-62116e5a8f27"
        },
        "item": {
          "id": "ac392662-a9c5-488b-ba86-5d0ed8ee6116",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1095683d-5067-4455-95ba-1c876c01191d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f56b3f-8c9b-4fae-856f-0c7301df289f",
        "cursor": {
          "ref": "4a0313ab-6e38-4921-87a3-d259bbf39e3f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "84e3c1e0-b713-446b-ba9e-e61757a26102"
        },
        "item": {
          "id": "83f56b3f-8c9b-4fae-856f-0c7301df289f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a7694241-daad-49c1-bf8a-e2d6ad015d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69cd387-5169-436c-8cd0-9db3e7c68a50",
        "cursor": {
          "ref": "5a190ba3-7a76-4990-873a-aa592ada08c1",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d714d183-8e76-41d0-9b8e-840955dcb3ae"
        },
        "item": {
          "id": "c69cd387-5169-436c-8cd0-9db3e7c68a50",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "406058b3-f0ae-4b5a-9d93-2b6823209a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0084dede-d2d3-48ed-ae95-9d5b3af5f9cc",
        "cursor": {
          "ref": "c21f9d8a-8902-462b-b34d-7501186e4e70",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fbcc93ff-2d8c-4855-801e-86ad49223cc1"
        },
        "item": {
          "id": "0084dede-d2d3-48ed-ae95-9d5b3af5f9cc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "36fb63ba-8999-48b0-84cf-fde6320a0126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e07eed-b5e0-4467-adf4-d7c948d58f5b",
        "cursor": {
          "ref": "0b1455d7-cb8b-4fe9-8044-465d8d03c7f8",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cd881050-c926-44ed-a6ce-ae73134a4c68"
        },
        "item": {
          "id": "72e07eed-b5e0-4467-adf4-d7c948d58f5b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b236e466-8a31-49d7-8411-e01aa5b7be2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0814492e-db8a-4973-9c67-1bae7d602681",
        "cursor": {
          "ref": "46329e5b-8794-4d39-8706-a1b9c774a09b",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "553d4579-246e-4511-8e0e-b32cb3ba7964"
        },
        "item": {
          "id": "0814492e-db8a-4973-9c67-1bae7d602681",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4bfbd6e3-9dd8-47f3-9b0d-c7f91dbd4241",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39acf475-3bea-4b8f-9cc4-e64b43f65ead",
        "cursor": {
          "ref": "d2d6ff77-24bf-489e-9e08-f5a84ac6ca23",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f83140a6-fae2-4a24-a36c-253917aee6d1"
        },
        "item": {
          "id": "39acf475-3bea-4b8f-9cc4-e64b43f65ead",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "991d81bb-1843-4793-80c4-15d60df6bb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f0bfe6-cfe4-4818-a368-ed44f5972534",
        "cursor": {
          "ref": "6dd65818-60cd-44b4-87c0-107a0fa08b34",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a64a1efa-981d-4fc8-8e7c-62ec47b74365"
        },
        "item": {
          "id": "07f0bfe6-cfe4-4818-a368-ed44f5972534",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e690a5c4-adbe-488c-9f77-a21956330374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a574204b-98e5-412d-80eb-7d932f92ff4b",
        "cursor": {
          "ref": "16a6fe07-3c90-44ed-b0e8-da52d9e9a1ec",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "76b72623-36b5-4abc-97d0-1e80b6d862bc"
        },
        "item": {
          "id": "a574204b-98e5-412d-80eb-7d932f92ff4b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7b926891-fee8-4eaa-91b7-57ee02e45134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924666ed-f6d4-4e96-a419-0184345468ff",
        "cursor": {
          "ref": "6fe9596a-67e2-4362-b3a7-e37ac2a9facb",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "23573e48-7201-4a90-b13b-573e2e5b2817"
        },
        "item": {
          "id": "924666ed-f6d4-4e96-a419-0184345468ff",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "047e9726-497e-4b43-b9ae-81cd7a655b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3cc2f4-ccca-4287-a37e-45c4d14989b4",
        "cursor": {
          "ref": "ae5c97f1-92cf-4e30-a96c-ec2a67656f6e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fe2704d3-404c-4e02-b002-b5df9e3a4eb2"
        },
        "item": {
          "id": "ea3cc2f4-ccca-4287-a37e-45c4d14989b4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4264ee93-d654-4283-a531-ae4040aa38b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b32cb87-a49e-4d5c-8294-4dd9ece642a8",
        "cursor": {
          "ref": "d8cd8854-bfa4-4eb8-b563-a641b79ec559",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ba593e04-29f1-4617-845a-7df957c0f82f"
        },
        "item": {
          "id": "8b32cb87-a49e-4d5c-8294-4dd9ece642a8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8ef29ded-de09-4729-a58d-c2aa22ad0079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d3f423-0601-4eaa-8a53-98db6a3070b6",
        "cursor": {
          "ref": "9563f9b8-b6fb-4eda-8f09-1e8664512da0",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8955b619-1098-4605-aba8-4fc49bfebd1c"
        },
        "item": {
          "id": "88d3f423-0601-4eaa-8a53-98db6a3070b6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "977fc0b3-0894-45e5-a561-0717cca924a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bc9673-6b1b-4f5c-bdea-71e41dd3c78c",
        "cursor": {
          "ref": "dd18738f-fe27-4b3e-ad01-093a2357e3a6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4fd4fe7c-867d-47d3-959e-8ce2881f6581"
        },
        "item": {
          "id": "88bc9673-6b1b-4f5c-bdea-71e41dd3c78c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1a4a238e-4409-494d-b6f5-8f7ebeb253ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b65125-4f3b-4d5f-8980-84a12676f754",
        "cursor": {
          "ref": "418c569f-8684-4c07-8dcf-6e1c2e64f192",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e2b7c2e2-96d1-4b70-adf0-b27aba8f548e"
        },
        "item": {
          "id": "f5b65125-4f3b-4d5f-8980-84a12676f754",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3e3f1c1c-aed9-4a71-b676-c911c94f1942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb1cbcb-4ca8-43f5-874b-697c02b9adc7",
        "cursor": {
          "ref": "452cb682-aa66-44b2-9c61-d6a74a099970",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2a8ff5fd-a6c9-45ec-aeaa-9d97362b66c1"
        },
        "item": {
          "id": "9bb1cbcb-4ca8-43f5-874b-697c02b9adc7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "90c06865-a4c2-4d56-9a39-e61d6523efc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e042b9cc-4d12-4cff-8bf1-6513a2cdc8f4",
        "cursor": {
          "ref": "8ed6bef6-1d51-4ca0-887d-0fd394566b6e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0bec4cb1-b537-4195-9fe4-f0982882dc19"
        },
        "item": {
          "id": "e042b9cc-4d12-4cff-8bf1-6513a2cdc8f4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "da60fa58-0aca-4704-a7e3-2b0368141c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a074de7-b0f1-492d-b538-19b494d53772",
        "cursor": {
          "ref": "71650338-b61d-45f0-a1c4-8110167b7e16",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b717c54f-b8ec-4a64-af9e-d5975f0463a4"
        },
        "item": {
          "id": "4a074de7-b0f1-492d-b538-19b494d53772",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a645e741-088d-47a9-8801-ee7611751263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc8e4a3-93fe-4629-982b-e6e2ded80aef",
        "cursor": {
          "ref": "386c7575-b87e-4aba-b9bb-cd1be99bc43d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a2be25fa-4deb-4d37-ae03-dbeef2cb1eec"
        },
        "item": {
          "id": "9cc8e4a3-93fe-4629-982b-e6e2ded80aef",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6f9e780b-4198-4ec2-a1bf-c004ce09b669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8a8d25-1603-4644-93be-f93ea1d970d2",
        "cursor": {
          "ref": "42346df5-c141-4b1d-9333-ea22e0a28698",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "611283c1-b595-4c1e-9525-7736f1bc325e"
        },
        "item": {
          "id": "9a8a8d25-1603-4644-93be-f93ea1d970d2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d215a6f7-b635-45bf-99e4-c65c780c925a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fc4438-9df6-4cd1-8009-10346865da6d",
        "cursor": {
          "ref": "5ce37cb1-bae1-4189-bc41-62deaea4f706",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "57c6f2fd-f64d-490e-aca3-eeb4a9ae3f52"
        },
        "item": {
          "id": "b8fc4438-9df6-4cd1-8009-10346865da6d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0b7ab114-bcae-4317-b58a-9c9ac54c7a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3154e9ca-57d6-4182-bf13-7652b2d3514a",
        "cursor": {
          "ref": "fbdb4734-bc78-443e-bcfc-fa0eca6f36da",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "efecbfab-9da2-4e6f-a4f0-2b7a2ac27494"
        },
        "item": {
          "id": "3154e9ca-57d6-4182-bf13-7652b2d3514a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1c7a38ac-2149-4e02-b37f-b519d2fed0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30933c52-dee9-4e98-9aaf-899470a12bbd",
        "cursor": {
          "ref": "bfa8aae6-ba7f-4ee7-b62b-6e7e26533fd8",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7b39a0a0-60cd-42e2-b958-427927b05399"
        },
        "item": {
          "id": "30933c52-dee9-4e98-9aaf-899470a12bbd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "43022382-e1fb-4c18-a873-c4342ad5eae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc37c1e-f9a3-4cf7-88c7-0f6e80fd855b",
        "cursor": {
          "ref": "44fc93bb-e4ea-4fc7-987b-743b74b27884",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a0a0c9fa-2850-40e5-94a1-518b5db00409"
        },
        "item": {
          "id": "efc37c1e-f9a3-4cf7-88c7-0f6e80fd855b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c5ff0690-0944-4027-8d0f-061a8c763dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c72cfa-d818-4baf-95cb-51b756b24b57",
        "cursor": {
          "ref": "fa419704-e4d3-4de1-b83b-e22b8b77e76d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e446bae4-c0c4-4226-8633-042612d74dd6"
        },
        "item": {
          "id": "c5c72cfa-d818-4baf-95cb-51b756b24b57",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "24b7364f-d64f-4adf-b549-2d008489e54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc147b85-780c-46be-8866-690798c94dd4",
        "cursor": {
          "ref": "880bfa17-b0d3-46a8-b280-54875bc08a4c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "41eff6be-07cb-4510-b6c4-4c2c2ed008d2"
        },
        "item": {
          "id": "fc147b85-780c-46be-8866-690798c94dd4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bb05d17f-e830-494c-be87-32023b42f47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609c0b4f-1b65-4e8c-b6b0-6d5c012d9ac9",
        "cursor": {
          "ref": "f52d4b47-b430-4ade-a56f-2e583c55efdb",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "39089c57-4e9c-4237-b74a-7fdf122a892a"
        },
        "item": {
          "id": "609c0b4f-1b65-4e8c-b6b0-6d5c012d9ac9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "dc1f7730-cd54-4f18-a9f0-5dc60c4a7dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a9a81f-da93-4a30-8d23-c5e3f4c00677",
        "cursor": {
          "ref": "1849aba2-171a-4f6d-b999-0e42f3ebae07",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "100f52e0-42bb-4c28-b586-986d92117607"
        },
        "item": {
          "id": "d3a9a81f-da93-4a30-8d23-c5e3f4c00677",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "50a8de8d-4b01-4aa0-b824-c07efc1c96c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0d3902-fd52-4fc5-b0bf-93e28872d9b9",
        "cursor": {
          "ref": "12505263-d698-497c-86ef-465531e6186b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8ff01b07-642f-44d1-90dc-4e54714f1168"
        },
        "item": {
          "id": "0c0d3902-fd52-4fc5-b0bf-93e28872d9b9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b212f36c-69ae-4395-8735-933b95bbcdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0aa1ed-97c1-48e4-ba3b-7427b215f916",
        "cursor": {
          "ref": "535c4e89-3438-4351-976b-6c751a58766d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3987b64d-d55d-4536-bdd1-3662d69bad9d"
        },
        "item": {
          "id": "0d0aa1ed-97c1-48e4-ba3b-7427b215f916",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c18f0e46-dcae-4501-9df6-7f7b0b287192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1fd224-08a7-41e3-9ea2-646428baa52e",
        "cursor": {
          "ref": "0e79e319-3998-4f55-9a2b-62def32f37b7",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5f92e566-ec7c-41c6-818f-ebb957e9b690"
        },
        "item": {
          "id": "2d1fd224-08a7-41e3-9ea2-646428baa52e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3a11eac1-1693-48a6-8fec-139d19b99512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c011ede7-89e8-4f09-99e9-dc8672902e4c",
        "cursor": {
          "ref": "b091f46b-9cc3-4dbf-817e-8ecc5fac5064",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0e5d2f6e-3b1c-40c0-bd5d-248a1f97fc60"
        },
        "item": {
          "id": "c011ede7-89e8-4f09-99e9-dc8672902e4c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e6644ffe-d8bd-4855-aa90-1e2c34e0f506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346f2414-d6f1-400f-a2f1-09a2ead4259b",
        "cursor": {
          "ref": "8b2d8421-8d69-46dc-b821-93c4eff4c7c3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "311b6de6-a700-4de6-b309-4eb8f27b6b60"
        },
        "item": {
          "id": "346f2414-d6f1-400f-a2f1-09a2ead4259b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1afcd080-4d07-40e5-bc17-1237c89b368f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2446decd-d82d-4a9c-bb34-e06779fcf869",
        "cursor": {
          "ref": "57d87f49-6f95-427f-bd91-43f5fa22561a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "99c2c1ca-9648-4116-869e-702e1dc9ba91"
        },
        "item": {
          "id": "2446decd-d82d-4a9c-bb34-e06779fcf869",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "82f35722-7ffb-4c0a-83f9-2ea7144c3ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79eb2291-0bae-4a65-9193-22b9c33c3e04",
        "cursor": {
          "ref": "96b67a17-626c-40fc-9df0-0bb7f2d489b7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "44973268-7285-43ae-ac54-4cbe44c32942"
        },
        "item": {
          "id": "79eb2291-0bae-4a65-9193-22b9c33c3e04",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "59ded72b-7721-4dfe-b26b-12136657b51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c9f01c-9982-4efc-b693-5fb34140697e",
        "cursor": {
          "ref": "ab1cff96-66c0-4700-a16e-224e9f9f5342",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "83d0c2ab-0b37-4f11-92ff-16fafc664daf"
        },
        "item": {
          "id": "63c9f01c-9982-4efc-b693-5fb34140697e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "41d388af-d113-46bf-9bdb-928a09fae41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888be9d8-020b-4501-8f24-c8e5362c65ee",
        "cursor": {
          "ref": "76c7b795-29dc-4389-bf37-afe1b98aaf4d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a2b35172-a890-411f-a3cd-9d044786657a"
        },
        "item": {
          "id": "888be9d8-020b-4501-8f24-c8e5362c65ee",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "beb6c1c1-eef0-435d-8712-bcb6ae6f06f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15793021-d0d5-40d9-9559-d81ca0157a33",
        "cursor": {
          "ref": "84e22068-9577-4eee-81ca-941d5367ec4c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1ca13156-9236-4153-8a94-a99cb1c4ed18"
        },
        "item": {
          "id": "15793021-d0d5-40d9-9559-d81ca0157a33",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0facd058-d238-4547-aa69-0764cc409545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7723e62-27ea-432f-b3b4-301111634ca2",
        "cursor": {
          "ref": "cc6c1700-79d5-4bbe-aade-637ff2efd29b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d2ad342e-1a15-4dc7-a61d-d325b77bad97"
        },
        "item": {
          "id": "a7723e62-27ea-432f-b3b4-301111634ca2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7900812f-4a11-4070-8e69-7ca5fe5f6c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87af9365-9822-489b-8059-208f896a7521",
        "cursor": {
          "ref": "11de1f80-08ac-4941-9c16-f42f31ad9d3e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a2c3027e-4db3-438d-b935-138e60453e3c"
        },
        "item": {
          "id": "87af9365-9822-489b-8059-208f896a7521",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d994a0f7-8f62-45d6-a5c6-81d76b4ebf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd8f137-bfdf-43a9-96ee-f301cd9b747d",
        "cursor": {
          "ref": "bd8f4255-b981-4317-b723-d1e813dd3b07",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0cdd63c5-2e11-4829-a773-87cf0e2fc74e"
        },
        "item": {
          "id": "fdd8f137-bfdf-43a9-96ee-f301cd9b747d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b860ada9-9c74-4d33-8716-b1876f564282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1115b6bd-4423-4f1e-845d-d841195f457a",
        "cursor": {
          "ref": "98ad1db0-e060-4b09-9d22-7829068c69f4",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b0a5066e-79d7-40ba-b1f8-4c1ddedc5951"
        },
        "item": {
          "id": "1115b6bd-4423-4f1e-845d-d841195f457a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3ab1e532-5e83-4e67-8a77-3b4d51594405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcadf9b-00e6-4cba-a1ac-80b2bb5e744a",
        "cursor": {
          "ref": "4ef741a1-9b55-44bb-970a-ad971da3bc33",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "197ef7ac-1070-44de-9125-4abffff35008"
        },
        "item": {
          "id": "6bcadf9b-00e6-4cba-a1ac-80b2bb5e744a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0ab2a7ce-7194-47e2-9793-31693a8f66a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15af8030-8541-4b11-95f9-6349cffe3292",
        "cursor": {
          "ref": "a86e5f6b-367a-4483-bf44-c678ec175fd8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "45482139-983e-4265-a11a-646e889955b2"
        },
        "item": {
          "id": "15af8030-8541-4b11-95f9-6349cffe3292",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a471e8e1-37a9-4777-957f-6ead661b04c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0c61a4-99fe-487e-8d57-a4f150eacdae",
        "cursor": {
          "ref": "c2d8fc9b-70d3-4b7a-8337-2322e79e39db",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e02354b7-f2c4-4219-8dd6-5ad900902b76"
        },
        "item": {
          "id": "de0c61a4-99fe-487e-8d57-a4f150eacdae",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "030a9d30-bf4f-4692-bc12-43f5622c2ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75458ce-0b63-4d4e-b941-85316afdd2c7",
        "cursor": {
          "ref": "0317d0ed-dde7-490c-953b-4b50a2f7e607",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5b89134b-379f-4322-abef-008c575add57"
        },
        "item": {
          "id": "d75458ce-0b63-4d4e-b941-85316afdd2c7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "62a15c19-96d4-4072-9541-0855a0522db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395d1036-74a6-4ec3-9591-3051f1d317af",
        "cursor": {
          "ref": "c838fa01-527b-4937-b494-2e1aeec8fb8f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3f4b4023-b47c-4d6a-a776-616214e8c8cb"
        },
        "item": {
          "id": "395d1036-74a6-4ec3-9591-3051f1d317af",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1c4f2ebe-ab7f-40c2-b651-027e47b05531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb313cf-a383-44d0-a7bd-903331261475",
        "cursor": {
          "ref": "cb19ef3c-0510-4ee0-8ef0-b252a4cbfc40",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "819925f0-0e16-4df8-a8b1-a3ebeab392ad"
        },
        "item": {
          "id": "8fb313cf-a383-44d0-a7bd-903331261475",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fc7eba32-c063-4332-aa72-f225dc7f97a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878fdc62-a65d-4b91-8704-56f8b7652f8f",
        "cursor": {
          "ref": "8049bd09-a075-40c8-8c04-41dd91fac1e3",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bf9186a4-9fbc-494c-b421-60b5929b8c39"
        },
        "item": {
          "id": "878fdc62-a65d-4b91-8704-56f8b7652f8f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f4b74e64-02ef-4e5c-800d-1b865e5ff99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ec203c-f70e-49af-8602-5545a5ef6f53",
        "cursor": {
          "ref": "15db870c-fe24-4d0e-94a2-5034ed6c6928",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "498eb37f-abb5-4210-b4bc-ae0dd01cb6dd"
        },
        "item": {
          "id": "20ec203c-f70e-49af-8602-5545a5ef6f53",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "07e25ef3-ecb2-46f3-b465-fdabbf0e8c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7300c6ba-1cc6-44f2-b8fa-d9c52c794219",
        "cursor": {
          "ref": "f325e17a-bccc-4218-8927-19308c96d9c6",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "20880af3-94f0-4ac3-b76a-5b6716aa6db3"
        },
        "item": {
          "id": "7300c6ba-1cc6-44f2-b8fa-d9c52c794219",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b50ad35a-5c11-416f-9463-7dc5d215eee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f71ec8c-fc25-41cc-8b01-bdde2cf4d0ba",
        "cursor": {
          "ref": "dc5c76f6-5fc5-404e-8fd9-99b739f4da82",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3ff992bf-a483-4cf7-ae22-ad14fc367ed0"
        },
        "item": {
          "id": "8f71ec8c-fc25-41cc-8b01-bdde2cf4d0ba",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d42eabb5-bb58-4efb-986b-33b05e5fd29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0bd4f7-f663-4593-8b34-8c62610e2c2a",
        "cursor": {
          "ref": "8e85f5eb-b859-45b1-a3ad-4a3d113e8e0d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "630b086e-2731-4157-a5d0-e8f08ed4da8b"
        },
        "item": {
          "id": "8a0bd4f7-f663-4593-8b34-8c62610e2c2a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e99d8d14-5209-4442-a84a-c733f8844829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e74afaa-841e-42b0-9b5a-d144dfe15401",
        "cursor": {
          "ref": "73453038-de25-4017-a403-f11d3a1ad0e6",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e6ce85f0-8f9a-46e5-8f96-fd0a92c36acd"
        },
        "item": {
          "id": "8e74afaa-841e-42b0-9b5a-d144dfe15401",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c7373a5e-b143-4a34-b271-63d2a54bd9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca172346-56c6-487f-9a69-9d5988dc61f4",
        "cursor": {
          "ref": "b8ee07ed-0300-4baa-bd2b-588c90ba0126",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0e2e9db8-bfd8-422d-825e-5fc5fdfdefaf"
        },
        "item": {
          "id": "ca172346-56c6-487f-9a69-9d5988dc61f4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e4f35a01-ee23-4491-8688-2de6d62baea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d608d0-daad-49dd-be58-c88e3f72c5c9",
        "cursor": {
          "ref": "2ee06fa5-c9c5-47b7-85a0-c68d82ca6754",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5ea859c8-69c9-4fa0-9cd9-666bf5aefb28"
        },
        "item": {
          "id": "a1d608d0-daad-49dd-be58-c88e3f72c5c9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "73293568-a41c-47e5-8074-5b71e9c4a3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceea842d-d500-486c-b307-e989c512b20f",
        "cursor": {
          "ref": "75994626-110f-4490-95d6-bc1c8f7b30fc",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6221eeb3-58ed-41cf-849e-87e779460b4f"
        },
        "item": {
          "id": "ceea842d-d500-486c-b307-e989c512b20f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "084ea8e0-cba3-4338-902f-d61e53f520a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829153fa-e416-46d9-a8f7-7dab5013b86a",
        "cursor": {
          "ref": "45858e02-5e50-4939-82f3-3b65e99da9d2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e75c54dc-f275-4ee0-a765-ac6c02240977"
        },
        "item": {
          "id": "829153fa-e416-46d9-a8f7-7dab5013b86a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "12f18d3d-6f52-4c09-ace8-63ba88153bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06686dd-d35b-4582-85c8-760cb1e1dedc",
        "cursor": {
          "ref": "5bf4df2b-27e3-41cd-ba49-985b57227ff5",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "33224024-ee91-405b-95b0-6c41fb2b8cb3"
        },
        "item": {
          "id": "f06686dd-d35b-4582-85c8-760cb1e1dedc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4fa0f3ef-bcf0-44f2-99e5-7239b2bfbdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547c8d09-e791-4f44-860e-9985935cad5d",
        "cursor": {
          "ref": "62ad274a-bf77-492d-94e2-1ae0aff6d7c0",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "76bfd7b4-f298-4e43-be33-82594f09dee6"
        },
        "item": {
          "id": "547c8d09-e791-4f44-860e-9985935cad5d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "edc78426-c48a-40cb-b02e-cb700d1d79dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28247c9b-23a1-449f-bc8a-ee496a0dda25",
        "cursor": {
          "ref": "899a9fbe-b0ae-4aad-a89f-54a78de45fd0",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d7205a8e-4bcf-4efd-8771-7d4d4ba499b9"
        },
        "item": {
          "id": "28247c9b-23a1-449f-bc8a-ee496a0dda25",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1e17ba20-152e-4589-9ff0-749c6e6fa521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fe495f-63c9-4250-9ad5-9a037bc86268",
        "cursor": {
          "ref": "e2fd075a-3dd6-432f-993f-21072fc14566",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6430e32c-c051-47b2-b3ab-c867092ddd7e"
        },
        "item": {
          "id": "a6fe495f-63c9-4250-9ad5-9a037bc86268",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "aace9a83-b299-4f1c-abf1-f70f4739ffef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf2fb6d-2eb1-4f58-8df6-67477b59abcc",
        "cursor": {
          "ref": "8541ce39-82ae-43d5-a847-88431809f378",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "61b034d9-611e-45f5-bb5b-4065708b2fd2"
        },
        "item": {
          "id": "edf2fb6d-2eb1-4f58-8df6-67477b59abcc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b9b4def0-a4c1-40d0-91e1-91a37f701df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c31d06f-9dab-4fa5-8c09-44003246b204",
        "cursor": {
          "ref": "a3f5c27d-809c-4a5a-81c9-27b2745c562a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "20b2f372-d6ba-4cbf-9316-e6a62c4bbb14"
        },
        "item": {
          "id": "0c31d06f-9dab-4fa5-8c09-44003246b204",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b5dcbd2b-33f6-47b9-a808-65a5a7628631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d57e0b-cd8b-4cb7-a757-b6c4016ea067",
        "cursor": {
          "ref": "cf9918e1-811d-4081-86aa-8d2a3ed5e5bb",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b21a11a9-ff0e-41b2-a7a5-68a66ba3e378"
        },
        "item": {
          "id": "75d57e0b-cd8b-4cb7-a757-b6c4016ea067",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3feeb084-a562-42b4-a85b-044b83a634f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba75e15-53b1-471a-bb9b-caf9c3872c8c",
        "cursor": {
          "ref": "29d2041e-4759-496f-8ba6-9824428b61dd",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cafb19b1-19d0-46e7-9a84-3aefadd4fcea"
        },
        "item": {
          "id": "aba75e15-53b1-471a-bb9b-caf9c3872c8c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d1fa0c43-014f-4656-aa8a-390259462508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54209e11-828e-4a3e-ac62-8dbc221bba35",
        "cursor": {
          "ref": "f5d4336e-25da-4fb4-b124-4c836886ee8d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "74f3b465-ce14-4b3d-a077-fdd98a4b2f4a"
        },
        "item": {
          "id": "54209e11-828e-4a3e-ac62-8dbc221bba35",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "665b1027-b17b-41c1-b086-2b1ca048699f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fd9173-6ffa-4992-9e62-2a80bf09285e",
        "cursor": {
          "ref": "f710484f-5c7d-42cc-bd69-9bf350df3934",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "14413cbd-01f7-4855-a062-75d7fd70f097"
        },
        "item": {
          "id": "e4fd9173-6ffa-4992-9e62-2a80bf09285e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f5ecdd94-7d89-48a5-bda7-57512e859735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c946614-64b5-4e7b-8ff4-d984131521e9",
        "cursor": {
          "ref": "e665188d-bdfe-4eda-b453-5765e87d019a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8ee11f99-710a-4dc8-be63-f1fac034d5ce"
        },
        "item": {
          "id": "4c946614-64b5-4e7b-8ff4-d984131521e9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "09f3b4d9-b463-4586-aba6-7a45955d00a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475d7f39-faaf-44c0-a5d7-92a0ac1937b0",
        "cursor": {
          "ref": "da9ca621-d799-4d3a-a8e7-5454f16c20aa",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "38146865-2852-404c-8394-fbbb318c5c47"
        },
        "item": {
          "id": "475d7f39-faaf-44c0-a5d7-92a0ac1937b0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "db1cb3c1-d9d2-41de-9ea8-6e8b0082204e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e261ff6e-287e-483b-b19e-da88ae65b093",
        "cursor": {
          "ref": "40b12898-e883-42be-b5d7-1e3649891247",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5997ede4-ae4d-4d76-a03d-043a06f1640b"
        },
        "item": {
          "id": "e261ff6e-287e-483b-b19e-da88ae65b093",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9ff25c43-53f1-482d-8558-96d076b5253c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6248a6c5-d696-4d38-a99c-7850aeb0f2dc",
        "cursor": {
          "ref": "154ccfd1-3b8d-45f6-8dfd-8e83e7217b63",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d9f1a593-3fb6-4b5c-b8ad-0816f68e0e41"
        },
        "item": {
          "id": "6248a6c5-d696-4d38-a99c-7850aeb0f2dc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4317dce6-ee9f-487f-b8b2-0be23854860e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c87194-9926-4853-b576-1ae90f22b146",
        "cursor": {
          "ref": "9e6ff4b4-c91a-4d7e-b6f6-21d1d8e1d969",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3733ed3b-3278-482f-b28a-6f0cc3c65164"
        },
        "item": {
          "id": "22c87194-9926-4853-b576-1ae90f22b146",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "69156b21-b291-4a20-b4c6-db7b6681291f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32db047-1514-4453-b095-1bb8724865d5",
        "cursor": {
          "ref": "60c31f6a-8fc9-42c7-91fb-dda8a12c1d6d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6eec98f9-bc7c-4ba4-ac7a-534f85858284"
        },
        "item": {
          "id": "a32db047-1514-4453-b095-1bb8724865d5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f1cfe8ca-d273-4306-bb29-902fd41c0433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c440f38-2527-43d7-a335-a6bea40653fd",
        "cursor": {
          "ref": "f28ca374-f5a0-4817-9cd8-33a0769f81c0",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "492de985-4207-46bf-bdac-19e5421dd911"
        },
        "item": {
          "id": "3c440f38-2527-43d7-a335-a6bea40653fd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d8696800-6399-4e0b-b595-c06dae5efe58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697144ee-f4c7-4a19-a848-3ff52ac0ca86",
        "cursor": {
          "ref": "82e1ec21-8539-4291-bfdc-5adced5eeb3f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "10999dd9-b0e9-44f7-a32d-4c8ffe8af619"
        },
        "item": {
          "id": "697144ee-f4c7-4a19-a848-3ff52ac0ca86",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1cd31d2c-6932-4d92-83ff-4093dc40c9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab3a9ed-3aab-4c59-ae3c-ac26588313b4",
        "cursor": {
          "ref": "7b924087-9b21-43be-ba89-fb3a53a30642",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6370af9b-074f-4519-8d72-4b03e3bd1c13"
        },
        "item": {
          "id": "1ab3a9ed-3aab-4c59-ae3c-ac26588313b4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0dace1ac-d1ef-4091-8354-401e3b614311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2773266-860e-46b3-8afb-316e355c2b5d",
        "cursor": {
          "ref": "34449a47-948d-4e94-b76c-e026991a733a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3f5e4022-4c5b-43ca-b410-b3ab7199e442"
        },
        "item": {
          "id": "c2773266-860e-46b3-8afb-316e355c2b5d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6446e89f-de98-48ce-a0bb-d96c22cca362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb366d2-0a24-4407-949d-0c47e00d52b2",
        "cursor": {
          "ref": "cb38da74-4a45-4253-8612-a2946b707b8e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5d8caf5f-56ee-4646-ba1d-3205895e137d"
        },
        "item": {
          "id": "8cb366d2-0a24-4407-949d-0c47e00d52b2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d1cdd3a3-9aca-4389-86ec-0916265c76fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bfc843-6e07-41bf-a66d-3cf4c35ae4e7",
        "cursor": {
          "ref": "a5a88daa-58e1-4396-8be0-3e96139b6135",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cd663603-0f58-4449-83d5-c20a89e3c672"
        },
        "item": {
          "id": "d7bfc843-6e07-41bf-a66d-3cf4c35ae4e7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5d947538-4ff1-4948-aa72-e695e834bf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427e807f-7733-43aa-8c3b-a387a0d1b749",
        "cursor": {
          "ref": "1992183f-a511-4546-b950-e2be08e1bdb7",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c16584c1-3df8-48f1-9710-511b277980f1"
        },
        "item": {
          "id": "427e807f-7733-43aa-8c3b-a387a0d1b749",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5ff2425c-ca91-459f-8f74-ccb34630e698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621abd63-1004-4607-be99-7bafa9ed045d",
        "cursor": {
          "ref": "c5a051ff-4318-4f56-b4bb-09bcc8a6c739",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b17389ee-2448-49ae-881d-2bb246d25d31"
        },
        "item": {
          "id": "621abd63-1004-4607-be99-7bafa9ed045d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "06c608f2-6262-4e61-9875-82b8fa2090c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfb8ac5-fe63-4192-b0e0-4e5ed117e72e",
        "cursor": {
          "ref": "a053a0cc-9308-4913-81c0-e1f05df9c008",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f679fc69-05b4-4fda-918a-53e8ca891daa"
        },
        "item": {
          "id": "5dfb8ac5-fe63-4192-b0e0-4e5ed117e72e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "be8eaae6-99f8-4b56-b63e-2b41eada608c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8738961c-c019-4fd9-92a4-68cb202ed282",
        "cursor": {
          "ref": "cb4e75f7-45b1-4afa-bbbc-286e25fb76d3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0f82122e-10c9-4e0a-8897-e5cccf98528a"
        },
        "item": {
          "id": "8738961c-c019-4fd9-92a4-68cb202ed282",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "00ddb3bb-a166-49c7-bbb6-1efbc64ac859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570d45c5-856d-44e7-908a-117577b91958",
        "cursor": {
          "ref": "d18c0a46-a869-4438-bc3d-910437a841d1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a87c9a7a-17cb-4a74-8e5b-dfd253662994"
        },
        "item": {
          "id": "570d45c5-856d-44e7-908a-117577b91958",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "453c2b0e-3416-49d1-aae7-0a787b530aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed691db-6b86-441e-aead-5397cf3a0e7a",
        "cursor": {
          "ref": "950ec93d-51cb-4551-93d5-415b9edb97eb",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "994e2411-cc28-4e17-909a-b47a7a5528a8"
        },
        "item": {
          "id": "7ed691db-6b86-441e-aead-5397cf3a0e7a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "eae8a305-b6c7-4d20-9ea8-506c7fd2ba5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc67fff-9d63-49e2-a6e8-68e9524a24f6",
        "cursor": {
          "ref": "ec47e48c-6339-4c3b-a7c9-fed163a78b86",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "973c2078-5a4e-4863-b2b7-fad47a8d72c3"
        },
        "item": {
          "id": "dfc67fff-9d63-49e2-a6e8-68e9524a24f6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1d8f2173-7dc9-43a4-8f41-79fc1ed845cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff422e1-2612-4f82-ae9a-07ddd4bb2905",
        "cursor": {
          "ref": "d97190b6-2e6c-445a-b57b-dad04cd4a5fa",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4d247033-740c-46f9-9307-ffc75716f228"
        },
        "item": {
          "id": "eff422e1-2612-4f82-ae9a-07ddd4bb2905",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6aac47c9-2bce-45eb-8893-8962a4353563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e45fe31-a0d5-491f-965c-f11ee9a8106f",
        "cursor": {
          "ref": "d565070f-0321-44bb-a420-96539124d927",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e9060494-c07d-40a1-8e84-81f06772774a"
        },
        "item": {
          "id": "8e45fe31-a0d5-491f-965c-f11ee9a8106f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "055935a3-1882-4424-b728-e530c2ff050e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f50c2f5-d4ca-4fbb-ba48-045502e88b33",
        "cursor": {
          "ref": "4f3070c9-f4a2-40e6-8878-3fc58d79223f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "14020d79-5ea0-41c2-9640-083c7b52e188"
        },
        "item": {
          "id": "8f50c2f5-d4ca-4fbb-ba48-045502e88b33",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e38916bf-15d1-46a9-84c5-e875ebc8a0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab7fa13-3869-4b67-ad88-a819f6eac4b7",
        "cursor": {
          "ref": "d8bf63f7-b135-4e2a-a3e3-98ca2b6cf55d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "914043fe-1d94-455b-b23d-d3ff67f53e8b"
        },
        "item": {
          "id": "1ab7fa13-3869-4b67-ad88-a819f6eac4b7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8523340c-2e65-4bad-9421-150e0923c5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab809e37-e162-4894-ab01-c9a4e12b0198",
        "cursor": {
          "ref": "43018e07-116d-42db-8c5e-f7210d67438b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8bb6ee6e-1ac5-4e2a-aa03-e950398ab43f"
        },
        "item": {
          "id": "ab809e37-e162-4894-ab01-c9a4e12b0198",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a415c8dc-e7ee-418b-9017-690765c9a046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48eb784-d88a-48a0-9e56-a9af9c3780b5",
        "cursor": {
          "ref": "6c60d646-ae4b-4e08-b5b1-4d3c60a38ba3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8cd79828-5b2c-4945-b53a-bf1c1d1aabdf"
        },
        "item": {
          "id": "e48eb784-d88a-48a0-9e56-a9af9c3780b5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4f35ce15-d8d6-4637-a03c-a3ef537cfc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acd5ab6-b744-49f8-96f5-31173f6d18d0",
        "cursor": {
          "ref": "5c078bac-7c77-4b2d-9ea4-7b590f5c9fa5",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c3f60c23-d673-42b6-b3ef-48e33a9b3555"
        },
        "item": {
          "id": "5acd5ab6-b744-49f8-96f5-31173f6d18d0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7cf29482-5939-46ef-8124-2ae5a8fd524f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73618c9-beaf-4f24-84be-7c118616aaad",
        "cursor": {
          "ref": "eafb9158-4d6c-4c4d-8cff-e6e014735097",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e1978d92-44fe-443d-95d1-843ea3eafe86"
        },
        "item": {
          "id": "a73618c9-beaf-4f24-84be-7c118616aaad",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a0c398fd-ea8c-4838-9123-b8b5cfcb49a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f523a6-5427-454b-bcbe-03c08b395962",
        "cursor": {
          "ref": "e93c88a9-cff0-4458-863c-c2dd81fe22da",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "30d8dfb2-8180-491e-8c08-407c47cf1cd2"
        },
        "item": {
          "id": "68f523a6-5427-454b-bcbe-03c08b395962",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "93cd912f-2474-4e98-8a23-fb3609048518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d7ac9a-9d8e-4add-a0a3-3d20c92ab51a",
        "cursor": {
          "ref": "a26480b1-17db-4d46-a77a-df2cae6aa024",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6a75cb45-b0eb-44e7-9388-d1350f598f72"
        },
        "item": {
          "id": "f1d7ac9a-9d8e-4add-a0a3-3d20c92ab51a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f4e82ada-38e1-49f2-97a3-a9666b425047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c39963-1029-49fd-8d2c-bbea7db6911a",
        "cursor": {
          "ref": "3c8a33dc-30a3-440d-972a-b2c4dc0a3d31",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ac946620-4229-4bba-91b2-6a9f8ef1b052"
        },
        "item": {
          "id": "e2c39963-1029-49fd-8d2c-bbea7db6911a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "872d3c17-ed5a-4a62-8773-40c8d5ef0b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899a46d5-146c-4a16-bd5b-09f8ca699221",
        "cursor": {
          "ref": "9729c257-ccd9-4de7-9e48-ae871e241106",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1ad10a1a-5ba5-4632-b3c8-2d000cdd8d29"
        },
        "item": {
          "id": "899a46d5-146c-4a16-bd5b-09f8ca699221",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5f16e3f2-07af-4061-bb0f-9930b39795fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e80766-b5f3-4dd8-899a-7263982c9b11",
        "cursor": {
          "ref": "0c6f9542-a7d8-4847-bbf7-5de8074e788e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "07920768-40aa-4bc4-91eb-81103a50a48a"
        },
        "item": {
          "id": "76e80766-b5f3-4dd8-899a-7263982c9b11",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "96b0ef73-d12f-4a9b-aba0-99f997f94c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a534cde3-63b8-49f5-977d-3d15d20698ca",
        "cursor": {
          "ref": "eab8f51d-51ce-4f8e-b3fc-fe48c0ee5ed2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7a15193d-ad0a-43fc-bbf4-95f741af26fa"
        },
        "item": {
          "id": "a534cde3-63b8-49f5-977d-3d15d20698ca",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0ed5cc24-71e8-4277-931f-1befa23c610e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5aa8bb-4041-4742-b154-ebc2cd432c7e",
        "cursor": {
          "ref": "3b5df2a7-6c24-4b15-a224-0afb52123e85",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "420ad56d-3a74-4395-9569-85fc8aa042a7"
        },
        "item": {
          "id": "0f5aa8bb-4041-4742-b154-ebc2cd432c7e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "918a71f2-b0e9-44a3-b014-814534b4f75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7e7f4f-1610-4c94-93b3-2b22debd1529",
        "cursor": {
          "ref": "b4985ca4-78a8-48e2-8665-ac3c8e103d41",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f34b5a67-c54d-4b1f-9560-44a43d09786f"
        },
        "item": {
          "id": "5c7e7f4f-1610-4c94-93b3-2b22debd1529",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b8bf1791-323a-4aad-a6c5-1f8e16299fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697bfb53-0641-4e25-adb0-9f8240a58f58",
        "cursor": {
          "ref": "e436a62a-b0e9-4cbe-a1f9-01db19330a1b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f54c6333-ca25-4a9a-bc67-0ae1ce8874cb"
        },
        "item": {
          "id": "697bfb53-0641-4e25-adb0-9f8240a58f58",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "43342bb4-84a8-4dcb-a890-cc3e6c42bd49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de3a0ef-3b71-4d97-911a-299277a4ec0f",
        "cursor": {
          "ref": "64705c94-9de6-4245-823f-22fded2a0c00",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "37bc8cc8-96bd-445e-a6b7-55784dd9fe8f"
        },
        "item": {
          "id": "4de3a0ef-3b71-4d97-911a-299277a4ec0f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "73811346-75c1-4b85-8161-7325c413356c",
          "status": "OK",
          "code": 200,
          "responseTime": 2174,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6ab01b-d2b4-4b04-963f-a4c35caab6ea",
        "cursor": {
          "ref": "90325cc2-749c-429a-91cb-c08b67a44d3f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6b39035a-e8a8-4b5b-a3a9-44adc03efa92"
        },
        "item": {
          "id": "bd6ab01b-d2b4-4b04-963f-a4c35caab6ea",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0935d27a-d656-4ef7-9ddc-683b523e0d92",
          "status": "OK",
          "code": 200,
          "responseTime": 2692,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb051485-0374-4b71-a33e-9912dfe580cc",
        "cursor": {
          "ref": "65743820-0b20-4c6b-8c81-aa1eb06f999e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0dae977f-a4e8-444b-9265-580f9eda17a1"
        },
        "item": {
          "id": "bb051485-0374-4b71-a33e-9912dfe580cc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4249dda7-0443-4015-97d2-8dca2941d616",
          "status": "OK",
          "code": 200,
          "responseTime": 2496,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e18f81-251a-45af-8d12-57f87a295e53",
        "cursor": {
          "ref": "02027ce6-2e61-4065-8e6d-843328f8f8e2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d498efea-4f1b-4b87-a534-a02be8391307"
        },
        "item": {
          "id": "35e18f81-251a-45af-8d12-57f87a295e53",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "42671162-c6ba-44c0-9ded-a3a334a7af69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e18f81-251a-45af-8d12-57f87a295e53",
        "cursor": {
          "ref": "02027ce6-2e61-4065-8e6d-843328f8f8e2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d498efea-4f1b-4b87-a534-a02be8391307"
        },
        "item": {
          "id": "35e18f81-251a-45af-8d12-57f87a295e53",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "42671162-c6ba-44c0-9ded-a3a334a7af69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b136c9f-80ad-4ccc-a839-34bef8486727",
        "cursor": {
          "ref": "93eb40cd-1b85-418f-bb11-fac02b1fc962",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9bb74768-a84d-48b3-87f1-6f8a94eb4438"
        },
        "item": {
          "id": "6b136c9f-80ad-4ccc-a839-34bef8486727",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6800119e-0729-4078-84ab-927541081677",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ad7441-c525-4391-b16e-cabe682c81ab",
        "cursor": {
          "ref": "f5432919-1b87-4b2c-b179-c0796997eb14",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9117a52c-0202-46e9-8376-a49e4c3ffbe2"
        },
        "item": {
          "id": "56ad7441-c525-4391-b16e-cabe682c81ab",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bece2933-cccf-49b0-af46-f6d31de01689",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}