{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "17b87065-8164-4141-9c96-f6e8a1e4e71a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b979f339-1ffe-49b8-9842-e766db780ceb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30e457d3-cefc-4fc0-8aa7-9b5191553eb9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b44346d3-ae7a-4493-ada8-0763ea93a074"
                }
              }
            ]
          },
          {
            "id": "dd2c5089-df64-4bf8-9138-052aada3ada5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "92ec80ba-e474-4dbd-90b8-7015480ee1aa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8d660793-6d9f-4920-8374-1ceb7e90ec2c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "676e587c-5248-4476-9fe0-af5d90a49676",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cb0c946e-eeae-4425-9889-45b551ae2897",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b849292-be8f-46aa-8d26-8f168d7fb5da",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d4c41cc-436d-47ab-bcb3-20510971ae24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9153af2c-368b-4482-88a4-b059b9295988"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85bd0849-f3fe-42c7-8357-5f1a78095ffa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03c9eb5d-8404-4388-850c-2f9529a04db7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "00c850f7-c318-4027-ab10-c51164bbf128",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39f76d76-6a53-4426-8257-9a7011a01198"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "040d9642-087d-44d3-be9a-f78aead3ea02",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a6d2bfbc-c69c-4ed0-8102-f5f38d5a2aa5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47382d4b-e5c7-4070-b74a-095cd0fd828d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "124819bc-6b28-45ce-9140-30ce354ad915"
            }
          }
        ]
      },
      {
        "id": "05ab6046-fa2b-445d-af29-18bb82df5533",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6b7eb012-3098-4267-839e-9d0babe16da0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9802518-2aa4-47c4-91bc-634f23cdd8de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7709bc9e-c7ed-4901-931f-2eb2504aaac2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562bdf6f-a2d0-4b99-b296-09eefe47c90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd5a2262-852a-4279-9575-34955be05121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9483ed09-57f4-4e7e-9046-a98364cba24e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c6b51d-de40-4fbb-aff0-20ab2e9a8671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b1a5485-ddc1-4c4b-ad61-adb6383decc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e038afc-c615-4b03-84ca-8a7d0f5ed06d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7fde12-87fb-454d-868b-626cf94b9bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2e5596a-708d-4536-aabc-0d4c27fcea30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c84c694a-aca9-43a3-9307-0472a4f9e2ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11cc883e-ac55-4367-bed4-01d63ea1aa73",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c399ad5-dc32-4b74-ae2e-763305e446ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce09e157-9d69-45f9-b51e-29f39ea7c209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf754db-10b3-45b1-9424-fd6e03daa082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b866c2-7e00-47f1-b4b9-2904a18460b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9f07af39-acc5-4ab5-bcad-62f92dd6c306",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4af7a4cc-a20f-4820-9dfa-dcdba9196d60",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe8e6536-3be2-4e2b-8e23-46994840f289",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9e07d5db-215d-435e-962c-c8e4762a8e4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1112cdf8-a646-4020-a4eb-d6d4d76bcd35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0561e98f-8023-4750-bad3-8c85689018bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26283256-2e2d-4fb6-967f-681782b9bb86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89310c61-d3ec-4db6-b9e6-d8106d8adc3a"
            }
          }
        ]
      },
      {
        "id": "53f19bbe-7aa8-43e1-b420-01c81b081bd5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bd15e970-8548-43f8-9177-6cb51a03b160",
            "name": "Negative Testing",
            "item": [
              {
                "id": "809d2aac-9d55-4fb8-b179-50c3c0f4e78f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "de909478-407a-460b-ac6a-219378c89089",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb7010e-6e55-4264-9381-9aefc1a273d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5992a56-16f8-4ed1-89d1-1c3fe56a0176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64898fe0-288c-40da-8bb3-e9d64ab17a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb747116-7ccf-4539-9599-747df431b491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fee813-9a44-491f-9142-0e1f7f67296a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21d26b0-f4e3-4505-bd61-da5e7deeb561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4136695c-c747-450c-bdb3-1630adcafeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a1aab0-aa89-4c9f-9654-6efe3f7dcb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25f0524f-617c-465b-b1df-98318439551d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057ceabb-2f9f-4f2e-8eac-030df4775f57",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8b5c11-4552-4e67-8471-ce4139986d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d7a967-8b75-45bc-abdc-51dd9314f3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf42685-05fc-4fc0-8be9-3009c68c20ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1404497e-faba-4053-a6ae-b651ff0dce8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c4e69f-2b4f-4617-b9ef-d95783f25470",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d52728-ab0d-4d7b-8bcd-6c0ddf150264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e2a125-9e4e-45b3-a933-42171fc3f56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9157d083-f39e-443c-bb02-a66583489d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8081c86-f24b-4904-a490-8c6073eedec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2566c294-9682-4df2-8a2a-d0e636ba37df",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4a8f5a-6324-4f19-beab-be55db8b9060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4d471b-2152-4ceb-9767-7901536eb51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0725d1e-4c05-4c42-890a-f4b0f856265c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73578b14-224b-48fd-be0a-968aaf66397c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6751829-6738-4ec3-9a67-fe029baf7cc3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b67c69b-023b-43f3-b65a-aa1b4ddee6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038d7492-b733-45d1-bfb7-c48462360700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f909eaaf-e628-4265-a789-7b60b33b6fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73f2f3be-7655-48a6-bf43-d661b3e5937d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa052d1d-cd26-4111-aa89-558e01c71b96",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150d8dc3-5222-4ed1-b159-7bce27f62738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2760d713-e78a-4133-b20e-e9d9730f434d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab16a9c7-f36c-4ce0-8e93-a8cf93a0cea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58088178-98f5-43ef-9ade-b26e870df31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a97893d-0290-49be-ad8e-36a81d9d35eb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5168438-fad4-4d61-ba8b-f2386be3073b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b3d223-a067-4cb3-867e-6e495b9ea76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870366c9-058e-412f-a69c-b9d3b2c1efc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4d32ec0-13cf-4647-bc66-285fa0ab7001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf027990-5706-4a8c-814b-cfe05c51c42b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45643ae0-cb68-45ef-89cb-9dbb24110be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7448d7-44e8-4baf-8938-533187595008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acacbe3e-7d86-4806-888f-781add84d29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98c764d7-f337-4b2f-802d-1e600c7a7c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58728605-d50d-41c3-b16a-d093b698ecb4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64db532b-8bd0-489e-9c32-6d0bd80a82e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0415796e-7fd8-4b26-bb50-7fcf0d146c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd99ee67-6be4-496f-8106-30cc6101bed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55807dbf-6184-40bf-863c-49a39e0c6ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bb4049-c745-4016-866d-86ebef76d08b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8808be60-26cf-48b6-a9e9-21a7fd9ba33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02de9942-bcda-4685-8bd0-1e5d4154a748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e38e79e-b9f5-4ee8-b111-05fccb6167c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ae41cec-72da-4412-8486-e181c0f3e1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9614aafd-302f-4803-82e9-dc5b00d3d51a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985cbb7c-223c-409d-be72-1f76cc0ba16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290eaf00-de8e-4751-8d58-44b532d2fee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb90a727-360d-4779-bdc4-5d2921118656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d6cde6d-5e51-4a10-b7cc-4ef6087bd231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adb228e-2416-4638-80f8-f9cb0827b495",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3858c0-3284-412f-a893-faa555c31fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d381083-09e2-423b-83ee-0cd62afd046b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7716d770-0952-4b16-b331-ad6744f0ba11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aedeca59-f6d4-4eb6-b838-b022e1fdfd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cb2ff9-e156-48a3-b3db-5c8fe9d30e40",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1821321f-da2c-4bee-887d-72358e33b939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ef9fff-51d8-4b3c-a66a-78042b54e40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32ae75d-98a5-452d-a7ee-c65e2613c83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7551562-e2b8-4a1f-ad78-ede07c809978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8ee262-1bc9-43f5-832c-8964ca8288fb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c21d599-3d53-4035-bfdc-1637d4cd6e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b653d1-56bb-489f-83d8-269676cea5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975be92d-6241-493d-99f4-632727993e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "416fd3a1-f36e-41fe-9ac9-c05aa71b788c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2ec7da-e34a-4ab1-8d61-847b01452d9d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7acc2f4-878f-4e5e-9b5a-66438f76180a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a401bdd2-c849-4d34-a73e-1a90e3c1d249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37dc1ef-4db6-4890-b76a-93898cac9d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ae8da83-8983-440e-a44f-698ec2237a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8c92b0-9617-460e-bfa6-9b5323301ec6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6830025-81d6-418e-bbaa-977fbc51fa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4ac41d-d277-4e66-b216-083c4313577b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105a1e8d-9e30-470a-bd30-c9de3d772549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caa562d3-388f-4947-9036-8a5d1c28be8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b73447c-a2a4-4a06-916a-60386a60f706",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3486b11d-7ca8-4cbe-bd73-161d6e9c5bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046ba041-03b7-4f47-9cfa-b5c6fc74fddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9810d39-843d-408a-9f9b-4c8795d1932e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1d9e04-b76c-44d0-b1ae-85e608809072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f457406b-8180-49c1-87b8-3e0f31ec1b2f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374452c2-0d75-460b-9237-218c24b41dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560080fc-7748-40f5-a0ff-e013eeb2955f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613be832-6726-4e46-9ec5-4fe3a65b338e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57914779-de9e-43e0-bdf2-3e7544d65461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e04cece-c259-411a-8408-0647c8716c03",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3cb07d-43f1-4d11-b2ca-d2dbb4ca4770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71d2972-8f89-4a79-87a8-2074cd046249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7e8150-cffd-4905-90a3-cd9310e051d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15adec89-68d3-4dc3-8d99-dc69d60ee22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9e2dd9-b032-4564-856e-cf2b76a8c010",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f652a8ce-5f54-4a29-8ffc-5bd64adcd097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6649327d-9217-4f21-8be4-773788586992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52596ae-f0b9-4edf-91b9-bb718e7e00a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23ab7859-e2fe-438e-900c-453f1258a3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3126baa-0358-43b4-afcc-ee73499dbf7e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bef39b-1688-4299-93e2-04eab9486a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d838133a-1d09-43d5-9501-2f8d9bdcb9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9239d6-8de5-41f2-aa18-8bc6a21733e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67b2fa90-39d2-49fb-896b-4d2a33852945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd0d429-cdb3-4300-8c9f-f556b1735991",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740741d7-c4e2-4157-ba96-dcf414912127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2e07c1-5692-42d4-ba5a-dcfa76a8d6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6010acdf-49c7-4265-80a1-97584872064a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5663ad1-4f34-475e-b267-2a2241328ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ccd597-0ad8-4cd1-9952-57895502a900",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac8deb4-5e38-4cac-b297-73b3dc0eca92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6ef693-ed64-4fdd-9502-27950dfd7fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f983fbf9-c34c-4261-ba1a-94736ffa6bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14ddf50-cbc9-49b6-a8b3-bf2447a55aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61c5f92-eb8f-493a-a942-d6a9705501bc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4c300e-21d8-442d-b366-2e04e12b6379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6df250-32b0-4632-adeb-68b836e9051f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ae8c35-13b9-4542-8370-a083259f503b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfe7ba7-225e-468c-8758-36d5ff68957e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ae03d2-63b7-44ac-88d9-c79b9d1c5413",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb25c0c-bc03-41d0-92c2-329f00b74d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758ef969-103f-44b7-9a56-92f4c82764bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe65ee4e-48f5-41fa-a90c-8ea15bbd5ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e66d5e86-1366-4155-82e9-2c88a393d782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb44a89a-6045-4076-a063-3f46f51c14ed",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83011bd0-e9db-4bc7-aad1-f0d53b394169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6801f73b-e7b2-4150-870c-7501826c5186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa259171-b96a-4210-b422-251b6fdbb81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa36315-e443-444d-8ce5-235b6ca728e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8628f8-cbe3-45fd-a4f9-fb86aa976387",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a12c127-3b19-4be1-b197-0ce7462821f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5061b8-016d-4c49-b27e-8bc28c7a4c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3cd90c-c919-44bd-82e7-79eb3d7ffacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd93d643-6c2d-4ec7-a0ee-adafc104d0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5e1c9a-78d9-400e-8b10-4a74db423e27",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331bae84-7745-4110-9ec5-b5ed3feda7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e857c4-e793-47d8-806f-62d162020701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e022ec9a-538f-4234-a4a4-1773ee10bef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01fc5433-b37f-4b9c-91d8-9844241289a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3c9eb1-4f6e-430b-a255-ebad6331b9e7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af946799-3ba2-4d8e-b9c5-0ab59cb90afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b15dc5-f798-49b0-b36d-192137f6bb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6db01e3-6f10-4a8c-beff-7f986dea8666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc5fdcc-63f2-4c7d-a73c-a94dada15478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124704ac-1abe-437d-938a-5558b76a0a33",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bbe84e-7f0b-4adc-947a-b12a84c74204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d99ac0d-db7f-4ef7-b27b-3e95a299a6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93069adb-d4b1-4753-87d1-5235cfcf93ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce19fb14-4b51-4bfd-88ec-c7462500bfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712d1f7a-6e36-464b-922a-c9a449e7ba23",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a68188d-6350-40d6-b0a5-b30ff61577e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b94aa6-4076-4a1c-a898-5b1d2f74a510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b91434c-c451-43e1-9cb1-4e0c0a44788c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a66eb769-37f5-4255-9ce0-778b825bb786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800dd020-99ce-49d4-a4bb-7ae5e2a5c92f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaec8935-93a2-4e75-bb11-3b2c7b404e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0425ac1-0839-4761-83f1-22aa8f28acf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884d50c9-0f49-47fa-b9be-20a70c8dcdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3df33e-4865-44f0-b373-0116ccaa9f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4452157c-a019-4041-9c04-1968e2b33ef9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e2721f-da07-4dc2-9b8b-f420e73fd54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44fb6b2d-91e0-468d-b789-f120132585ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32c1a73-99aa-4b13-ad8b-d48358aabbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "263a1848-dd07-4d28-8a7c-cfb0c97b8c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ec520c-c9b2-4cdf-aa88-128f1294277a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccee90a7-c5b9-42be-9839-7e1e9b5a31a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2c97f3-9895-47f9-b3e2-3afb7cebd8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1eeef57-5898-4446-aa95-0595c3171643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f1d45e-fa51-4055-a560-0fda77819cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6379df-6b09-4d06-a427-f5d5a091c589",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3053a7-8e44-41c3-ba0e-98a51af9c6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a56e124-feb3-4b36-b218-168bc947aa6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce459206-e05e-4616-a9f6-54663a5a070e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f30defa-e37b-43a0-a1a9-28f5a2c48874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6e3793-1460-4546-8a2c-7cfc7ddb0eef",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c916b4-2262-42bb-902f-71bb53ff3eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072ecc7d-923b-4a6d-99df-99cc2ff39ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6464c998-7df4-4264-85c7-6c62f756794f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c89a6c5f-2ac5-4fb6-ba43-3b8450f0d25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a64551-6217-4525-b29a-271dd2212e4e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca26655-576f-40a6-9601-4b3adc1b4d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c8fbcc-b310-4299-8488-4ceb94bebb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dbe58c-1dbd-48ae-a287-4af49394acc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97d11b37-9af8-4231-be6e-8bfb768fb58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f9c538-f7c3-415a-8c91-73ee308b5f79",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1a0696-a932-43fc-bbf0-1308af41ee0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a9a851-0fb6-409f-a189-b487965d0254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adb8ab2-497b-4a33-9422-bc15577046d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "07f10183-700b-4a53-8f34-f67e674bcfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b46b50f-23f2-49b6-b6ee-713867d50a37",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ee1f2f-93a3-4902-968d-c1e30cefb1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371d586f-5ade-41f0-a33e-dd6081cd03fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5edd272-0bc1-4b3c-935c-9cffcf11fefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "171e1aed-6461-4107-a45e-4253c123e192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413d399d-dbe4-4f5f-b803-17b7d8fec91f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53a1db1-556e-4b52-b2b8-13fa737ecb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59da12ae-7fa0-4925-801f-671f5e169319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03ae83a-8b98-4319-a2ba-a9fa332b4772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a220a8d2-3518-4804-ae09-1e53b3cfdf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6b2d66-7622-42fb-ae7a-d6f51d915ff4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbc0f1a-0d64-4319-bcc0-715ce414acfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1513b5bd-aebe-403d-9350-7e160ee31b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9468f8c2-2227-47b2-bc0c-304c220e9dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f25e51c5-2064-4e97-a9e8-96b04673d6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1a33a2-0183-4d31-a28e-f2fbfd9bd7ab",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21228e8-ff86-42b8-a7df-6a7dcbf44dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76f34c7-b41c-4143-9017-569826c8af99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b13620-4ecb-4518-8168-c3f0c37c417f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a820772-842c-4851-84e7-af6922b7f9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984285d3-006d-4fab-b318-b44653fd81a4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b3f58e-4074-47c7-b6f1-d4c89f7c94b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e35460b-181e-42e0-b96b-f6fe4a2e4dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89275a00-bf9f-4b01-8682-478a949c4789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3091ce-db9a-43f2-8c30-8f39faeefee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed50b02a-c65c-4411-ba3d-42d46aa8679d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed3c7ce-5d1e-4728-bf58-99648705197f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89edd1e-98d0-419b-9cf8-7d1c8e375458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c52a67-dcd4-4911-a0c2-9c939b956d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47297702-f809-44e5-a564-9e869a74c845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02883c9b-9aee-4dc5-b743-901c55bf000e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871b7a26-2bc9-46a6-a37f-ac9b9f7b2b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b11db6c-092a-4a72-a6ed-2de557adaa37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5c7087-8e7d-411f-b53c-bf371a80e959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26d6185d-cab0-4590-920f-70975dff5881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4877f486-c7f7-45c4-9ea0-d949ee5260c9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc440ee-1ef6-4292-b790-9da87661a499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bce43a-c6d4-4d81-80a9-49047269e7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902d86c3-f6a2-4748-9a5d-fd33de49af72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "258e8d1f-187a-4db5-a735-f7f4e99703f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1643f15f-cf20-4463-9cdf-3d2c994186c1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabf9383-7de5-4d84-9ccf-0887799f90b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9744161-d03e-4c96-b7ba-1336b3c349ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e82dfb-ea00-4ad4-9ed2-739dae17376f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eefdd7b-6bb3-4496-b6ce-60eb04ffa017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d853a69-28ae-4762-8a58-a573ff8b37e3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e519c5a-ad09-48f0-b903-77e80497ff3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8f0370-323b-4763-80a0-a81cf018267b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e15e9e-ee63-4146-b3d1-35b3f4906b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54e8dbaa-a45b-47c2-86ca-c0de926574c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8c6154-88a0-4bcd-9bfb-ef8114a8e173",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edacca65-ea77-4658-95a0-44651b464bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7c424d-b020-49ec-b007-216bfb9945ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1850d9db-742f-4a35-9ce6-11cc3152115b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afea198b-3628-4996-a81c-3e1363711451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b338c93-e67c-4bb7-917e-0c08ed750b38",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d728d2d-4652-4e59-a6d4-f2c31d68d997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fb90e9-277c-4111-9fe1-4079ea46fcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be73afdb-f67a-42c7-ae70-c10c1676978f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed4413f-9c1c-47bf-87b3-5bc6f56ec247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125437d3-dea8-449c-9867-51b971c9fb55",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5810a1f-1fc0-4ef7-ada3-196cc7984849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3575b8fb-ec1f-4f76-beb8-4bada4aba853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df98ee3-14ab-49e5-8e93-bf7defe2ac69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a376e77c-4a50-4671-998e-f9fea39f3aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1301062-8228-40ad-8f61-e663fc15b5d1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cc5c70-98fa-4cf0-b165-fc8d52f20e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fa3802-eb6e-4399-8c97-fc113a9e52e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131f93e2-55a5-4b1f-9321-9fef07e4c906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94630bbb-c45b-4a97-af5f-1e3544dd13b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c62a8c6-038e-4c7c-91c3-1b568955483d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7d9023-b594-43a2-9159-c7fce05d9001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26748ed-36fe-4cd0-be68-dda0a85680a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2372dd0-5b34-4664-beac-7009288a6316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49e699da-f832-4ad2-8cae-78da22066db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfadfe7d-a7be-4478-8dd8-190eb7822ed1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5d5e3e-929e-4bf3-88ed-430a8b532e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678de742-5d7e-49a0-b6fe-bbcf29943a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f37aac-70cf-4288-9715-aaf432c31009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68373867-74d4-4be7-ab57-5894d7c10691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade7f029-aba4-4016-9794-e6d45164adc8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92b60df-145d-443b-844a-fe91e69403c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecea34b-f3fe-485d-af7a-069f0e125ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c183e671-0254-46ed-b750-ae604ffe6c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "671aa30f-f5c7-4787-a4ea-3823d862859f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba29889-bc06-498c-97ea-2749908a590e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a87fa9-e9fe-408e-b249-521911763651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cc9f4e-4456-45a1-942d-1de5f2114ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75838d79-7f90-4c05-b7a3-7098ce573e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56058ada-44f7-4e65-89e3-41907d7573ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19790f4d-e110-4985-b30f-5ab74bb3dd2b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc993b60-e673-4156-8899-31c273c8d5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63041aa8-be53-42f2-b8df-b378465293b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8fd244-42c7-4bd2-afeb-849bf348977b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc29d465-eff7-4b2a-ac3a-e51501aacebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f62354-c0b1-463f-af1e-d78f42eecfde",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3977655-e2c7-4e75-9e02-3b4d89482290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933696f0-2c6e-44e4-ae29-2838405e82e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0576acc0-6928-4e72-b8bb-fdadadd1a0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d69ddd-4ac7-4b24-aadb-8c9eb3d02430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56de1340-1aa1-4a12-a833-183d8d2a51c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c114f477-6ada-427c-8f42-86c98b4cf88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bad303c-b434-4b75-98c6-7d9f12b99416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01373137-d0ac-4c42-954f-729c2d8169dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce87564e-905b-4703-8ffb-7e12ef3b995a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccd785c-8e1e-4bd3-a2cf-f12539a87a04",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f246967c-2adf-4e7a-9176-b926b224409f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4db01d-194f-401b-8cf3-3337e0b8c8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5144f37-ddef-45da-bd61-d57d078d9738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "36f33814-1abc-4b26-939b-727b0cd35e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf2785f-b8c3-4297-9c3b-4e25f460e495",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57223e7f-20b2-4770-97ff-69f4355d4022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c90c7a-5d97-4ebb-bd20-8170137d728c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ac35c5-b651-414c-bfad-3621c957c750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "14161f92-78bd-4878-ac0a-dc917e8661a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b68a169-9b2c-4f5b-9eed-4326a59aac74",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dc3a8c-10dc-4029-b64c-45f2c1f1b579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2887df25-266e-4807-a2e4-46f5de5ebca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa95fe87-74a1-4777-b0d4-d12a80c4456b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "024021aa-68ba-4df4-bb9d-128227b64d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67287cd9-1670-4323-bdcb-d550030906a7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e6f512-b8a4-44fc-af05-fece4b13a6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6809211d-c915-464c-8f94-dd6de878d9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f86775b-1b7c-4bd0-b6b2-5dd4a33255a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6886153d-bbfe-45ad-9d7c-1fcdc68d0392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6adda43-3244-438d-8693-449ab7519af0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b689f245-c625-492b-ab30-6408774b3081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65a33ab-09dd-422e-85a7-f9939d50b236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716f2c15-8590-4952-9972-18ac3e3111d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72cdb684-5e70-4821-812d-998ab243d625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59cbce5-fd10-47ca-a6b7-3c69248663e7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c58af9-cf54-453e-86c8-3c80443ba264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db04767-26c8-45c2-a47e-a8eda9cc9463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756bedee-7308-4e3c-b731-930b8fa908ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5364b3f-cae0-439f-be6b-7159d1aee255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16fa1a4-b956-45bd-b2c3-0ae29618ea88",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bc4dfc-6093-4d86-a2c3-7f72e6fc071d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05a95a1-9c31-40e7-af20-d30e774e6dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271ed32b-3adc-47c7-8e3f-667667e9a41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f0ac1a-63d8-49f1-89a5-f7e5b0be69d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b18ee4-19bb-4823-af01-abae10722bc3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f28b37-a724-4945-8cf8-6239076f1578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cac226-1d0e-4a61-b3c9-ee8f546d635d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6412c21-9a20-4b11-b93d-c3cfa61a277b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8feca272-7974-4a05-a12e-ad9ba8e71904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a6b2f4-ad4e-4a54-8bf7-dbb0ca8c47b8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac417973-cdec-410f-9203-bf3db08a3fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee3bb73-a62d-48d4-ab19-f0cc4efa962b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c930530-27e7-4fd2-8938-7dec5ef82e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e8552a-06f6-46b5-8fa4-74f67e1a6b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62caea9b-5dfe-4db2-afc7-4603c568bf15",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20c56c3-16cf-4770-9a91-715f12d038c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8593963e-0222-49d9-b1fa-d257c661badb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b0517e-301b-4fbf-8881-376a0ce18439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c752ced-e9bc-48a1-91c9-d840fe220481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab655bc-325e-4e72-8cd6-87d76680e95d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e8e0c2-7b51-49ee-96f1-9858234ffaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd54187-ba10-49c5-96da-a78173544a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aeed2f-c732-4606-bcbc-5234a521a5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b4eaa0-bccf-4a81-8e9e-161c4afa072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8ddc0b-4989-4ea8-a716-9db3de0a3836",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a878c009-596a-4a27-89e1-160563cff3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137a7628-6f9b-4018-8e90-6a30ee5bc3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27aa348d-87bf-4c7d-8ddb-9b3cffede900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e46cc3ac-3a00-474a-89d3-b24a3c864300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8349ea76-daf1-47c4-b4bf-cb04dcb2702a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d26900-176b-4d81-9d1a-9a263db71f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eae3ea3-87c8-4166-a2c9-da0d04f514b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8c917a-ea92-479a-b967-c7f9a4ca168d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b110976-a41b-4d25-8a93-97f6b1d5c0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de6be44-ad40-4de7-9bdd-c3560c4a324a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa3397a-6b10-4157-94fc-deab6fbbd4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86eeb98-aadf-472e-9a7b-9914ae49ae1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68ba1cb-dc0d-4c22-9726-8c6ad7a95f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f75a5eb7-1288-4afd-a372-655db2f952af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea87044-305c-4e3d-be53-3cf812de5642",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c44ba6b-a3ba-467c-b35f-033e4f08c00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ac21f4-62de-4a00-b7eb-8c1b1b7d0283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc84033-25f0-47d3-9ee9-0173bcdc2db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7cc6d3-00e5-4dc1-a725-36aecdeded6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caf0df3-34e5-4feb-912a-5fd68dd7474b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098016e5-6863-48cf-925a-1465d7f23490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30191db9-b0bb-445f-9c88-77b4275e0435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbc8cca-f975-403c-be62-2770446469d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da2c0a9-f327-422a-8e31-130b20c3e36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40afc59a-4bdb-4211-ac88-49bdb16cd3b4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56ea29a-96e3-40fb-bbf9-33291a06b0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfd47d0-d13c-49cc-ab14-0703912238e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fc19ef-d788-477e-8ba7-67c1cbdbef08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb728413-4487-499b-b36e-6367fb3b757b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b0bc76-9e63-4714-9261-c8a1809fb382",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0dc0b7-620a-44bb-963d-317506d85acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2441c58f-330d-4f86-85de-2f6ae4f53def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f05fdd2-40e8-4068-8e15-03a93c298084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f770c6-0dc7-407c-89d1-a56a34aca924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5bfa54-05e3-4f9c-9c36-48a8e7aa9d03",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9782d09-8807-4eae-b902-1485494312a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8c35f9-6539-4399-ad9e-097892b8ca7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bedaca-8810-4fb6-bb42-d60fd588e02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c775d7b9-7d28-432c-9e5c-1fadd3e6cc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d08539b-b5da-4690-b1f4-7da9484418f3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d80bf9-41fe-4558-acee-93b0703e6ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5629f1fb-71fe-4856-bb95-c81e1f30cb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca70e73-ed18-41f0-b982-cfb7f1149690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b42b7331-8e6f-46bf-bf94-d78ee29be31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ee5d15-5b83-4977-b739-9ea1c7e5ed25",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f47447-62d2-46e2-acc3-54e6b2a8c985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04e61e0-158c-4513-91c7-4fa8a903c1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1da380-663f-4be6-82de-ebaee74bb28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6caf63b3-281d-4f6e-bc05-772dcebbfb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c645d7bf-4613-4a3d-a914-191f08300b5e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd6c749-977a-4cb9-973e-f137cce2546f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aba5377-a02d-49af-a289-d68e8702f15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915fca84-945b-47fe-a0d1-a903ae55f920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd242ec-29a6-4cda-93ea-38de1b6e36f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa73302d-615d-4fea-828d-d852e4a25d38",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7c29d8-9354-41a5-a8f4-c4f4a5c79dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efc28b5-ef85-4a55-b040-18e568192c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a84a41d-30d7-4c6a-bb11-29ff2b574780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7a5a6e-52c3-48e4-b63e-fdc039b93b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c034258d-6b68-46a3-8f19-e4733c0baa5b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cb7836-2f6c-4d22-8c91-52bfef910e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bb1603-1481-4bf6-a161-ab1d086d2483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25e411d-f1d3-4264-b841-bd156f6e3244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a61747a-a6b2-4342-a10f-95f1cfed5b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced9915b-2146-44d8-b5e7-19cd2acd5a88",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28a38ab-af85-4efd-a085-03e96d6618c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d425fd-f6d6-4db9-9fdc-046077295aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7805bb23-7001-4741-8d17-7e4f8dadeaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9080cd-b88a-4a41-bd6b-249a05e2f4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cdc0ae-04b4-483a-8bd0-abf8b3d0f6ae",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73b46f1-8e1c-48cf-a67e-23b9443084c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e61509-32a1-4013-acf8-0c24e2f104d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0201149-0fbb-4c88-af11-9af9bdbac307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80431fc7-6fb0-4549-a889-b116a79be00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2201d656-ef26-4987-bbfd-9527728a42d2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d6479f-8e26-488a-be0e-7c0417d363ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f289a05c-72e4-4a0d-a745-8534b992613a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2629639-3167-4942-8bb1-edbb8eaacf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fac6f328-601a-430c-a75c-0c34c81f12a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdaaf5a-27ab-43d7-a5f5-dfc9b865346c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e7d332-cf2a-4793-abe0-4621a74fec76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a111458-a392-4ea5-b1db-fc9e51943b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce68eae-1b3b-41fd-9091-1b9739c526e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91d99cb4-87e8-4c0d-b83a-9d762a1ad083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675416ad-b748-4f5a-afe7-e334876325a4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e568eca5-fb2b-409e-b93d-5ca336b2c1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fbbc98-a18c-455e-89f7-cc2a70dc0556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2733643f-b14c-40e9-a06f-545cc7e2ec70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "afb9e592-ae82-406e-b187-5eefd18423a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83410f16-2dcd-49e8-ab0c-d53725c1ad3a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15395efa-0dcd-48a4-8ad9-b8f1109826ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97fd726-fb35-44f1-b132-0bc4fc3ba0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc777ef3-8bdb-4a2c-ad90-18c571e08af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "36406a98-7edf-4e1a-bf8c-e65da8b5abf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f331ff1-4f4c-4810-8f5c-95525c2c182e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c76b8ef-9b91-4ae0-813c-53a1131f6bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c14686c-d55c-4357-8b5e-34db51024f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d231b21a-6a06-4b31-a995-eb5bd924301d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bba568af-567e-4aae-860c-748898a89f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d287d2-86a3-468a-919e-ce10f87ded0d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b451e25c-d95a-4a7a-a4d5-fc7cefce10ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a52d8e0b-b23f-444a-98eb-599d49c8227f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ee34e3-6824-46f8-b41b-ca3f52907e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0da9286-6cc9-409a-b0c5-1d4d0cc7310c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75fb0522-8aa4-4a64-b3bf-ed58a7205a38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a42fbda8-745b-4011-8966-a98aa455eb79",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ff1568-5ba8-42a1-85f4-57a374028110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47a0bc00-534a-44df-a8c4-2a0840c8d63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887e54b8-f2a5-4b67-b7b5-ced8557169e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9e65e5c-24e6-49a5-8b40-bc69e1a66570"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7920415-cc2f-4411-92fc-623b28cd3163",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d8a2d0a-df64-43f1-9ec7-c5a6b552d063"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd85c22b-707d-4e4f-bd3e-61e751345986",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "805461ca-67f1-4032-bb0c-84883173acd7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eac69ee9-73f9-4041-9a99-77de4ccdf09a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe121fcf-7c48-4e3e-a53f-8af1af47ac5b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0a15510a-d4ed-4153-934d-2e31bf1aaa21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eeed3417-83eb-4f83-a1fa-b560c8ee2d7c"
                }
              }
            ]
          },
          {
            "id": "d73231f2-c0cc-4e1f-bbb9-7ec6a8a09930",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91efa66a-3e10-458d-b6f0-108744f61dd6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "524a761a-700b-4f13-a166-e1f92b4f47ea",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0cbf23-005e-492d-a954-c22197225d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "23d00470-866f-40fa-b9d8-94865a49cd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63af513-6060-4a25-87bf-2f53203c2f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bd7204-bd73-470d-ad7d-8e57a371bc16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa24a37b-4efa-4d4f-98d6-f728c74652cf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b71affd4-bccd-41c3-a73c-c2604c522449",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4193044d-9c43-4afb-9a7c-9a96d180cbd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1338122-bd9e-4f75-986a-9258a05f323d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "038f7fc1-5643-49b0-94c9-cc4d9e2a3dd0"
                    }
                  }
                ]
              },
              {
                "id": "09422ac2-0d23-4b08-9530-e7c27a314a0a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c0d7705-04b0-402a-9625-ca7b3eda92a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cce8aadf-feaf-4ee9-88b8-3fa5200ed0e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b47cfdc1-ac7d-42ca-a213-0ee15b72559e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "113c0cce-afac-43fc-8a18-48c8315f0b2b"
                    }
                  }
                ]
              },
              {
                "id": "ab43645e-dbb1-4bdb-a2da-1e7d1052ecbe",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f63bab1f-bdf9-4496-8526-198e65a9c413",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f171d7c-9017-4fb4-8076-00e7a7108f54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92b8d069-4c13-4fa4-ad0a-c3432846a49a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa99a165-9f5e-43ff-b98d-7ba004e5fe0c"
                    }
                  }
                ]
              },
              {
                "id": "49cb6169-481f-4a3d-8efb-56ddcbdc43fa",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b1a7f7f-a3ec-4cfa-a61e-bb57163aac4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "280c4ede-bfba-4383-bc07-129046c8690f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96e7153b-aa62-4481-9bdc-0e5c1b740005",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "425c6fe7-0cda-45b5-8245-429cbc5fb8bc"
                    }
                  }
                ]
              },
              {
                "id": "a0657dc8-d378-4288-8c14-f48cc63f1c82",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "625b5bc4-01cc-4f50-9c31-abcc14dfe6a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6dc01e1-e4e1-4813-8cbc-a3153178a9dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3951b4f7-c0bd-4dee-8e62-09abf3e92bea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c0241ce4-f4bd-4d57-b680-e3f4dce45ce5"
                    }
                  }
                ]
              },
              {
                "id": "02ca5c0d-6aac-46d1-9290-5115e75204cb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "601f6772-e6d3-4587-97bb-e1476ed9c2c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ac1ae9d-9389-4560-92b0-664800fc73c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37578a0b-5331-4e89-a4df-4663bd365b3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bfbfa963-7413-4a7e-94df-466186c28ffa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3e543907-92c8-4e2b-a161-822d234811ba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f083f35e-fa03-4ff8-a704-4da9cba90442"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fa7cd8bd-6db3-4005-8c13-03436807a821",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e65b421-0b7a-45b1-b99b-7a167b0a2238"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a88c3a4-37b8-4970-85e0-d42c3185a293",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7fe34607-a2a8-49a4-a999-0ee4cb61ffa6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7c72124-03d6-48a7-9bb4-52ff8c6cbf56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db001145-d40b-4efb-9116-dbfca84156ae"
            }
          }
        ]
      },
      {
        "id": "b28ee329-32e3-4409-a8d0-c3e5489341ce",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "55321686-065c-4e0a-9286-b643f74c3dd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61dd7653-2695-4204-afac-1cce829a6ed7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67cc8671-fe6d-49ee-b13d-ede44eed97b2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e631de9b-889a-4a7b-bdbe-feca90c48346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f208933-66b8-4669-89fa-c78ba5c747fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f72e1e9-4ea2-4958-b7bd-fe603a09c8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef178aba-b238-4195-8dc3-49de4841323b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0e3217-3cfa-4997-b02b-f9661aef90af",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d76310d-8fc8-4e1b-b61e-8f4b6b82856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d279538-5673-4023-9428-336da2b22365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c6f2cd-db09-4e09-9c89-f4f079b0c88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0efa73-8f95-43d1-8e89-9c36b017592b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d641d861-f74e-4e51-84df-90126df62177",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075b3558-e55d-4e8c-93cb-74e085ff068f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ec5ea8-d56c-433f-a4f5-3c612100d933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2f43ec-b397-48fe-9933-e09911893459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fedcf8-1155-4fdf-aa2c-38ba4e1369a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c843b422-b6e6-4be6-ac0c-c80665995d85",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be495be8-66d6-4a5d-ab6a-d90bd6ed0e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6e0d98-6a45-4d2c-8a22-892e21b523e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16726b8b-6196-4270-ac5c-dda2fccbcd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f00ccb1-0df0-4df0-b170-a66dd9353e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36923b0-0f0a-493a-ad5f-0d8e7e4babdf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3046a4-0aff-4004-a7c8-323211411745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdce3e6-5cca-4629-82d1-6e007e54fbca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de3f65b-0fbe-4311-97e4-9902a3ab46c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e314da-710a-4556-9d25-e552a1170457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866968ff-8cf4-4820-bf4c-00e569395c62",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96283b33-a5b9-45a6-8bfd-849330ea4b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd668e79-393a-49f0-b107-62d6e2495c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae96cde-25cd-4266-97b5-e9ca1eb86170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca25bb1-3bfe-4c70-8e2c-b1e92ece7013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b0f4c8-3d95-4f6d-b838-c32430e08b92",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7a77e7-8f06-4422-9d7f-99e84b9ac120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c1c9dd-6e3e-48d6-8a19-6c84b61846cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3906555d-5e84-496d-8656-044553cdff63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd2032f-097c-4d42-bb80-8a4183d82f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2add05e-40da-4bf8-8cb2-b2d77f6681ea",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a3c6cc-8d1a-400f-8b93-2dd528f36524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7101505d-499c-4545-8a4a-161fcc92b5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32f8f12-ef20-4181-ac6e-5f266c0c5608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4873379e-b93a-4e60-8603-6b7be65874e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da56341-10f8-4a58-a137-c1d0bac7ce1f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939c9cae-550a-4d8a-822a-7fd7deae156e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e119e8b2-72db-4243-b484-24dc1ca9d6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef1f23a-ec81-426c-9fa7-15fd303724a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "793edb83-7f9e-45c0-b13f-8230e60ab117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a38c331-51a7-4cd5-af05-c4c1cb5c68ba",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4ad649-d9e8-4b0e-b00c-41f9139748b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40b1207-42e6-4a94-b800-5cbde454e496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcf98ea-3c7e-4a8e-863f-1284187fda5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d933b915-46e8-492c-adf3-051a829c6076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65529012-b10e-4cdb-bf1c-863f2a6424f9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da011d56-53e8-456e-9743-b0c083d2fcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff11aed3-51ac-4c3c-a5d0-77c44b4cccbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d796fee0-267c-4b40-8dfa-2584d0c8132a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a979ed3c-b033-4c92-b710-2852f6ceabf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb104e48-fbf1-4b25-9f11-2c70056cb2c9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bff2852-bb0f-457b-a85f-31aefd62f475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272d99c3-592c-4ba7-9236-11cdf3eeea32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f27d8d3-9e96-486f-9c04-6ca05b09fe2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1baf50-2ac5-4ad2-9cd3-be51b47ed7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fe1194-0232-4cc2-a75f-7ab6ccea7cdb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb7e3e4-52cc-4dbf-ba20-5584730c72e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce701700-45aa-43da-a661-3a46d5b77e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42efcce9-b522-499d-8f4a-54f81932ce1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b08296b-20bd-4a21-9ba0-15026a641b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b77b08-46be-4c54-aee7-965d06d3ea79",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c45244-059f-4eec-96bb-f844b0179a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91058fa3-cb30-46a9-bb1b-78c769f79a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490c7530-2082-40a1-a4aa-4004c8408c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c10b9d94-b9d5-4d40-9b70-5ac7d16ec745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c00acf-5b72-4ad9-aebc-625c3b307b41",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1820c2ca-c337-4f01-abc2-cb46ef338218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3aaea44-af83-446b-bcc2-fcc9f420863f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8a9ccf-7f79-4859-bd86-097660ef5d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cca9d6a4-37c9-45f2-b105-7e7f8fc5537a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2959165-1c29-416e-ac7e-eea9bbc46183",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb529eb-e3b1-4a52-b36c-0c68c3692f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c017255c-3636-43a4-94fd-a76c89d6a7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba29282d-fd7c-4e4a-9a40-330d3bee7e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d946a2c6-1069-4b81-8f8d-2d4588aa4132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f38e579-da0d-499d-b2d1-dc47628494a5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab86da8-0420-4492-bdec-8ab6014f9a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c47799b-fc3e-4a60-b4ce-96bb5fd351c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a74fc59-2aa4-4559-9227-78b04ee8314a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac7922b-7e42-49e0-86a6-d958f87ceae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d957b4-540a-4841-b08b-a74b072ccfa0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d59390-01ce-42c2-b1e3-9fa643268544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ce50e9-1010-4866-bf4c-50d658ec769d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c519b8-c0d5-45bd-819b-b106d9586b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "adacb44c-98cf-4807-a1e3-f7db71ed48cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559d2795-4392-47cc-9667-6cf6cf3a7f76",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ca4adc-b839-4130-88db-2663a88510e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e31a17-1671-4784-ac80-91c7ffed63b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5de43c-1e7c-4ac7-b278-f4e5b059a0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "562b8cf7-e65c-43d4-8d83-5aa2de20dcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088cbc59-9e32-42be-96a7-533421fafb49",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e3134b-653b-4166-89e7-d7b4adf9cfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a05b7bf-1175-48a2-bdee-f9f665e5a8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf35ae05-1434-4fc5-8c28-399ca1301546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "513ce31d-0a0d-4d56-81a6-4985b235904e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab554db6-2b5c-47a4-a700-b27ae8c69fcb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c4f7e7-1a38-4b55-94ae-3abb2f8a03bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a8e80d-6e9c-4910-89d9-63023b4257f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69616ca-d9bc-466c-89a7-13081582e3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1da1ff-5b97-4b56-b191-faeedb90ae40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed742717-e136-43ba-8d3c-6342834e305b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e4b674-4b5a-471e-b1e4-31f4919f1ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3533cd8-8cf5-4866-872d-c3c4b65b7028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2ec3bd-0c89-4ce8-ae6e-eeed6b0def2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "659f38ab-87fa-4a4a-a0de-bec4319fad4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d744f717-fe2a-423b-9469-8f2a0b8d9f75",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4284509-62ff-48e1-af71-bd276e063c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce434c8-8159-47b3-b823-4d2ac38984cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e990957-af15-4402-b8f3-f74dd06747b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63bea77d-9209-421c-a72a-fd37ae8facff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0bfe6c-0a63-450c-9852-0ddd9763ad87",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c24b8d-247d-4dd8-877f-5149119f9d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852a9a41-7d39-45e8-81b0-35817a94d6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2358a89e-bb20-4e83-a72c-63145ba73aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d29f4922-b537-4574-8644-46bf71cbad02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19e34d5-7ecd-4a77-adae-e04bbcd37592",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67b7892-a7c5-446e-9aea-47ebe89b4be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91fc958-7d8e-495b-b126-ac7fa33a1286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188a0438-c0de-4fdf-b834-f33a9e7e769e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cd682c-3f67-4a13-9b33-d8fb229fa531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5a10a8-3875-4b5c-9866-771cc488410e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47c2e3f-177f-4eb8-867c-4d8f584d83cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4754e90d-232f-4ec4-9335-61233d9d1f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bd6d8b-4670-420b-8e7b-53575496d3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff230a39-8e58-4b77-b92a-4a672adcd5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80750820-0362-47ec-be17-43d70ea86ca6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa633be-856e-4668-a0a9-af9325b56252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11e0765-9eb9-4400-811c-74bf204ebad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729414e4-cc3d-43f2-ac9c-de77cf9bff95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96cbcf26-0bed-4abd-9d6a-8c33d9247894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d05373f-03d1-43b7-bb7f-9730e1bf7e66",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801785ed-de32-41af-a042-625eb56a7fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca84de29-d18f-46d1-84d7-1dcd96db01a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94d798b-de6d-4305-95e7-63af3809d9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24d8bacf-c963-4f0e-a0e4-c7488256691c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de52bb1-5a64-4929-a447-80637d8a4370",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2499576-e3c3-4f74-b334-09be74491655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbeb06fd-1421-45db-9659-a36deb53b404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7305899-db5a-42bb-a213-9faeb134557b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce007ba-8f30-485f-a051-a3a0c3bdfdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13790f61-b1dd-4935-8583-870cadbae7fc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f988b53-daab-46a6-8338-c0ccf5783215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068d6714-22c7-42e8-af2e-b2d9592b1f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709dbf08-49e1-4905-a345-32dc734e3fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af73c12d-0991-4316-aed6-d5e480d6863b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406220a2-cc0a-40d3-9a22-2e09a41d45b0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39081aa1-0766-4cc0-a2e1-201452d7591a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1997450d-4edc-46eb-8ee7-ef09077d173b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3c0929-f56f-4712-b832-d7548982790e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecc6537-fe9b-4456-92b4-c08641b47d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbb5457-2366-4374-8ac8-15d9a8ee4b84",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33e9554-deb4-4f26-8d92-1732d5b2370d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c3586c-a4a2-47e5-8342-0c1409d11da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fce335-aa15-4ef8-abac-ca5f46e269a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "147f0e8e-aa90-404b-9359-4d264db366c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "86e13bd8-6d4c-41d4-8f01-d1a8f0acc234",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1cb3ffb-8b1f-4244-a402-5c77912b601e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abb13eb-f1d2-4dff-9edb-a6667f8754e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e792d1-8295-4a69-b21c-73978ba0d020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031d37b1-e49f-4a62-a77c-d3beb984b6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42c8f0fa-068b-4e78-907f-40ec44101635"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62a6ec8b-14d8-4d13-a63d-fae4ab69de59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9554abdc-6adc-46bf-96ac-afcc605d5517"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ac0d207-ea0d-48ab-834c-4ca04fb89f62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81af31b2-532e-44ad-8409-beae14ec7eed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cafa138-4c0f-4cd7-b0cd-7569684905a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d3ae3e35-8a08-4ad8-8bae-ede24ac46ac2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e44075b-9320-4fff-a995-a0ee1cff343e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fcc711ff-3b43-4da5-a41a-e5afc7464266"
            }
          }
        ]
      },
      {
        "id": "0eafb690-d4bc-4edd-a240-22d37647fdb8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8db97a42-e96c-4408-89f8-1695b2a3ab66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f6c914c-9d1f-4a83-b6bb-ea344d713fc0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c11fd696-11f2-4791-b101-613dc5610aee",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161391da-33a3-4921-9bd6-cf03e20e3e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec7d419-9d12-4b64-b931-d06f26d2184f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa48f2c-5f46-46c5-9a0e-cac78078af4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "790096e7-c433-4623-9376-06dca8dee40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3464643-98cd-4e6d-a17f-ca1148fffd5d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cf78aa-a4a3-4ea7-a232-fa08bded7c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ef7a85-561e-47c2-883c-08409e7a3d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bd37db-48ea-431a-bef4-381a8cba02cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb82175-7e87-40e1-90e2-d51096ca8af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27afdf3b-6336-4953-b639-a3a525f3eeb2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94908e89-992c-4438-8536-aeb51dbe9d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4763e76-cdf0-4244-aeb2-6f23ed781637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303b4d23-d13a-4193-aa6d-89592287c1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5af146a-c639-45bc-b252-fee0d4c6ff45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc15e59-7038-4063-bb9b-d32d2fd301ea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970ec5bb-1bcc-49a7-9172-89f82e823154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f1b1b0-e19b-499f-805a-bafdfdca3c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec93ce5d-afc9-4676-b17e-5e37b4c6b51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5821300c-da2c-4286-8dcd-1d04752e9bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47153195-5687-43b1-9090-718666e06962",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03ebbf2-1c00-40ec-ac28-40ba2d9c1907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b9e21c-aa25-49aa-bc7b-5b8295936777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43820f1-786e-43fd-baa9-e3dd5f9bffc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1bc5e3-52f3-4876-ae08-0e1527c97548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc01c299-2dc1-4ac8-96c1-cd6a6b73df6c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cffd4d-0665-42f8-a1ee-e8e092a12ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d73537-c1e7-4a10-bec1-d647e199506c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756f9285-935d-4c9f-a438-020c710ab601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08f2fc55-ac8e-4a91-a9af-26e14493eca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa725b3-e8c2-4b2e-b482-8b1cef91e7fb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df7d098-3521-4bd6-ae71-c33f8bb09fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4986bb3-d9f0-481f-b09b-a2fcac074895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c47ab1a-7c2d-4819-a81e-50c6ca3d1ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "062d44f5-13d4-40c0-97f4-4b2fe5478c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44af5a7c-7948-4769-849b-a63f7db084ca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a04757-8960-4316-8a0e-c2c24f13bad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3afb33-0b1f-4719-bfe6-42b7d4ba77c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e103a-6654-4d74-bf55-ee1c46decd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d769f043-2022-4c58-ac18-49592c9776d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0335c619-f5fa-4637-87e8-e9dd054eba4a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973b4c6f-f25c-4b5a-a677-b4de5ace70db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5086a1-f75d-418b-b7e5-8d100384418f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8b3f9d-0dd2-47ab-8e4f-401fae412a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9efaf1a-782a-4da9-bbf2-ad2c8d5c345d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29a954d-0529-472a-8452-47c31aa290d5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f174a44-1071-4c77-a615-bc69b6ee2149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3660620f-1bd2-4710-9bcf-4fe76864edc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f84426-5456-4b30-81a5-0dba7ca95bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78496153-62e4-4a17-bab1-a30625c94adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3f2da9-39fc-41b5-a459-f6a202c55f7e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9866e413-5312-452b-b440-68fc94198974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5526be-7c27-4417-9836-054ab950bcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a742200-4379-4940-846d-082522f8512e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f8c7da-46c5-45b1-a5cb-deaacb946628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acea503b-a90a-4bdf-9006-6d2fdc8850aa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80349830-a2e9-44e2-a8d8-044bc8e287e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad72d48-297e-4324-a9b2-a929cdbbb250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ed7356-486c-4d12-82e2-537d95a8b096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5cc5c8-de6a-4372-b8c3-116694d11333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b109e9eb-e4e2-4756-bf82-747fe71916dc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521078c3-de89-4a0d-a336-87b9e245c14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e2f828-a03b-4b08-af70-cfa68659635b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7088a8-044e-42f8-80be-e327f5797316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b05fa7f-f4ea-4a19-a8c6-502fdd9c3a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70744490-f311-4d7b-93b9-51f389cb45f1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c2bbb2-144e-48ec-bab9-beda283bbe25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bd5967-b00c-4911-b346-1bd0b4588db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21658638-7e19-4b40-8193-20b9d3a97ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa4325a-9137-4175-8712-6bf65f94c0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698c3025-0b92-4c1a-92f2-b119673c6bce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adbe2ac-33c5-4cdd-9344-0adb868cb6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f2e2b7-85af-43e1-920f-50e334fa573c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45da5c9-7d0b-4757-add2-7b25e0d5e05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6debf8-1e33-4a7c-ac6e-7bc83c18b3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307125b8-e824-4d5c-a016-101655ea39a1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f180f1b-88ce-494f-a903-30ba74c34309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3819e132-4844-42f5-ac27-4c3083f22586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5233092f-b1cc-4a27-9a86-f4a3649f5ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8db481bf-8f6b-4dd6-b3a5-fffa03f87fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b0c76b-2417-438d-97b4-624d8b6475b5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbff987c-74cd-4998-b2ff-f0a66c061e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d6d61b-ebc6-4a20-b4d8-77690a3c471d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48e976b-d8ba-4ed9-9836-83972868cc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4394ac5-a3d3-4d49-8a50-b97cba52b3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a707073-6a8f-4c77-9dd4-93abbd362924",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738a8476-d68a-457c-aae8-b43b14a73959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c51977-7aaf-467a-a5aa-e7256a96c392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca284a2-c8b4-46a9-ab50-193a457571c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd6cd0b-1233-47ce-abe5-fcc48986ff28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d3ec46-6182-40cf-970d-2d394c9bb67c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6320d233-3944-4469-9333-65558ad0a455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd7d5a2-9156-491f-be13-f919c4fe0ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3b9793-277e-49cf-8c38-a5f25ae79dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "241d47ed-b1fe-4a7a-bb9b-770a7f7d7af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea295c0-714f-4c70-80f7-e525d77f30e9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cc925e-bfa5-49c9-847e-28bb80c8a94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef436456-62ee-4f5f-b7b6-89e3c22dc162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343bdca0-7c83-4313-a4e6-d760d9c7f3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ccda06-d66b-471d-afe1-f83da6846ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c937a2f-9b9b-4eec-bede-92196c084405",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1e8c9a-1253-440f-ac45-c26472f8a760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee3c859-e332-4e5c-b6ab-1ee27262979f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e46a08-e57e-4ae4-a7f3-9a2ce1bee607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dea3e8e0-9be0-45ac-84e6-cd6c59ab9061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76329b4e-eb1b-49fe-8f64-91d22694a8e4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf56634-3018-43b4-8f22-b2e03fc79d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7aa39ff-76e2-4627-8814-d98e439b893e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec9c789-e912-45b2-ba78-0965a17a126a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4e0b1c-404d-4e61-bf56-9da55c7d80b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89e61d7-6f57-4981-8481-d87a26f1084a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2627aa2a-8084-4c29-ab91-67612598c486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a436795b-cb9f-406f-a475-df280537620b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46981b91-bfdf-44f9-ad3f-0fcb40939906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e178d91-4c2d-4f26-bd68-07468a05d9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a26a0fc-21e5-45a3-a340-765ade17a4b5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41197ab9-2731-4f62-8f93-0fe4b907d5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a367a64-e4b4-4e4e-93b0-c957d5f99960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fdfb01-e794-4ca1-8f2f-256932ad033e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "873b0964-4731-436c-baad-699172699e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65edd1f1-eccb-4a38-b032-e456171672ac",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1cfb7d-edd4-469b-9a1b-e069c3a7db38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc56f949-ece7-44b1-a3cb-896cec7d3b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf04f81e-1659-48a5-95a7-367aa6a712a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a16781f-42e3-4047-8217-75bed9f8b71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ad2bb4-9b35-4b9f-9047-247e66294789",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c45031c-d297-4aa3-ba9a-1f1066be1c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef17198-48e8-438d-a3b0-7c05b2e8a9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d123dfcb-045d-4e60-8c9d-9559e470e72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f14874e2-ce33-4acb-ad2f-aee9b6b89412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169cb85d-cb7e-465e-9b9c-78f8b8c5375b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2328504f-bea3-44f8-808c-2df8503beb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f551fb64-268f-4094-89e8-e1657c197a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c91423-eb9e-49bb-b971-9a5216614ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47e9233e-6cea-44c1-9153-5dd9cee8ba3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327febe5-03cf-4f42-aae5-2045bf4630f7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd72fa06-6227-4487-9e92-a6af3f450b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef70893-a495-408a-a6cc-f5e0d076f18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa27e1a-2701-47ee-8e61-4ea8d2b2da1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36c25437-3680-4af0-ad3b-54cb6f05ce84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89794b5c-21b2-448d-b0ea-995a0b74db99",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6f8d98-9639-4d79-863b-8a00062b7463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ee8ad5-fa24-47ac-bb54-e7859eefefe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c088311-5592-479f-b54b-64ab7e927119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ffd991-58c3-4940-aa54-fedd8d7bd061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848248a7-bc14-49c0-b205-c58ef2ac6c80",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfe2546-ce79-40e0-91f3-254f547ecf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74466855-49c3-4770-87ee-df1ade43c036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f90929e-fd0e-47dd-9697-be24d9c760db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "037bfa28-50a1-48b6-a08f-f124f7d7d3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ed50b4-d813-4b62-b782-35550c8f4ae6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d465ecfd-852e-41f1-8ce0-9f280692eba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add31a75-7c63-4ee1-b805-f58c62fc09af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cc33fb-357b-4d81-a1d2-4eaa4d38a0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "776811fb-de86-4c6d-bd41-e07717649f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b812fb67-eab0-4bfa-946c-0b536e5b5441",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5219cd61-b505-4eab-9826-dd3d98568303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741dd73a-0657-494c-be82-58a566b91c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735139e9-0044-4a42-aaa6-ac20a586d7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c3a419-e003-4541-a788-8e1aecef936f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e99f0e-1138-4d44-9de5-f59a33f41170",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c8aaf0-c8c1-44a8-8bb8-a6c2432c55b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6328c7f-73cb-493f-9b90-780747b396f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec76682a-a4f2-4aa8-bf2d-925cef5a302d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "172db41e-3504-43f1-a64c-64aa17ec22e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9a5734-6836-4607-9a7e-e97b32d38ea5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af10f9dc-bd94-460c-9c5a-58cf899f60b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0931d1e-22b6-40a9-a858-6b5b3e948cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc52ea3c-a9e8-4b95-bb47-10312e8a437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ddfaf13-0d3d-43b7-94fe-914ebec123cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f2ba7c-3119-4542-8365-db84f43725d4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6288438-e6f7-47f3-b383-89b2b721e25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd04401-fd41-4fbc-b5a6-d083a47867e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44cab63-2c14-4ee8-9e92-ac9448a769c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "325b4238-044a-4107-adad-a7f0e22ccb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583123e2-5df2-42f2-9970-e17ce8391805",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418b5f30-1c57-4ced-931f-daac940484f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1230722-4b54-44e7-81a9-e8c8d41471aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e5b368-9d12-45de-ad4d-b6a73ec1e097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e6a156-3266-49e9-846e-d9ef0b652cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78f3f6f-4342-483b-9513-28e3871f9690",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8373dd-d1f1-410b-a148-ff14d0ef450d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a8ddea-8a83-4b2e-8b8f-c83077269dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8c2c31-20a1-48c9-badf-509c20e9be0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d58c50c-4ce0-4650-9d7e-a63dc761e98c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e6c383f-b0a5-4d20-90ad-282401914ef3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73d32ad7-6961-4068-b993-f74021236a85",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70ed3cc-dc89-469a-b603-807700e0b5ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f4f7cd-be59-48ee-a012-43a45dd403b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69853b86-af04-40d1-8408-147a2d8ffe75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aee528c1-5e41-4a22-bcd1-ea80b30fc845"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f23b501c-7591-4bb3-885a-d0141da4b339",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0baabc84-cd01-46ff-9544-0650259adde6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "820c5921-c00e-428e-a206-c2d3f4f80b3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e44442eb-56e4-4052-983e-b3f0d184881b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2dfc1172-0c4a-4c58-85ad-d47f922d01f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e6c8fc9-b218-4c7d-b0c0-0bd5522ffc00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fd22374-d2fd-435c-b00f-12a681771e85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f281c006-434d-4e5b-a881-1174bf05e524"
            }
          }
        ]
      },
      {
        "id": "d94d9ac3-9e2c-487c-9069-8aa64664a930",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0d48328e-5a41-4f45-a987-0b45b3a79e10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6673d1f2-c54b-4cab-9a21-880aa1520c64",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9304efe3-4b15-4c23-928d-78d90728f64d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e47a9fe-2400-4912-a865-f15aa8cd344e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bb5b77-9803-47a9-a6bf-1b89372ab6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d412da53-bff7-407c-88b5-f5ff07732515",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7675918-88de-4b5c-8ff1-375857116271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a3d453-0328-4f5a-8a1f-64b2a9223117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ffb363-bbbf-492b-96c2-bf56031c54ea",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4383671d-2b96-45b2-b13c-93e9f33ca69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4f1433-ceda-4ffe-8864-c503aa07826c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea37db9-158e-4ed3-a176-d5bb82ac3a9f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3205b6-2ca6-49dc-a734-3321c31b051b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf70011-7728-4aca-ac6f-70fb9436af92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cb408a-288e-44a5-aa0b-506e8bc21d51",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea80374-f7de-46f9-afe1-64b6df5182d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ea1b56-ff2c-44ec-822c-cd67095bf46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddae4c4-f9b2-4a56-ad1f-db027657b303",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9cd117-050c-4189-b42b-02e4ece0adb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174d7446-3ca3-475d-9f72-84d77a7c0e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9000321-62ba-4b77-aa4a-196f96c92e8a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efd3f88-08c3-41ea-808c-be60127a8284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f437613-293f-4107-8fbe-e11f8751e234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1932976-d4a2-4533-aec1-8cc61f84052f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c137e8b-4f87-40c2-bc2b-5e566c6fa70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac22249b-3868-4416-a162-cc901a7ef24a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d54e1b7-6067-4524-a323-c3fbd178cd61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d35013ce-5df8-4708-af9d-d39684658a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb371edf-4304-4385-bdf7-c10507ad38a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2aa7b2-dbf6-40cd-8cfb-06d707b03ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0864eecf-7132-4c13-b1c2-12809754b192",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3e906f-ab70-4abf-af57-ad9741add4dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19255e25-40eb-4d0d-8f63-f2f90d203b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ac9889-1d22-410d-806f-63c46dfc7082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6654e904-9ed9-4b70-9274-670241c6c4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff7a0fc-13e7-4f97-8f6a-456cc249784a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272157d4-5b58-4683-b58d-9164a5114acc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9e62c1d-f060-47e4-835f-49f97e405351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cc90fd-7c30-459e-8d2d-72b446a84710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe91af1-9f0a-4b04-90f6-2d7b62d197b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6eab1a-3266-4398-a23f-42b3507f56b6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40b17d3-07a7-4cda-9251-a958d8e2093e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c616cfd-f482-4fbb-9060-d279710cfbeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de42764-cf10-4cd6-b1d0-5577f120ca19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef84702-9c4b-4400-b1c8-bdf14b89b3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e40689-6da1-4295-bf16-885ee704e707",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7546b606-e67f-4929-8331-bfe923fe6cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcfc726-cdc7-4a12-a5b8-2a9a88533f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51487712-b16e-4f54-8799-bd9b333cb434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a99eca-5884-4d24-b294-1cc04db652e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496a55b7-b3dc-4b1c-8d95-e6bb79b69f87",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508fdc5a-0319-46b4-988c-47a899cd925f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbebd0ea-99a6-4f0c-be87-2d3712cc6fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683707ab-0889-42da-8d1a-1c3cd2a45f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e5410e-c848-488d-a700-51ac5a43960a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b94bad-f965-4fb5-b758-e38b7990276f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6def7af-73d3-481b-8c13-404724d0d470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90451f8d-cda9-47de-affa-fa9343927d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d17649-f094-4373-88d7-564d2400f9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8271ad37-51ca-4b0f-8043-b016736c042c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5071edf6-ea16-4351-b861-3c8f6c656e16",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484bc74b-3e9c-48a1-848f-902c48f28ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "663715d1-6819-4beb-bdc6-e53b75a6c3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4fa350-80b3-47b3-afb3-b253368be873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8454d66b-b94f-4990-8adb-30d076e7802f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3464dd-c77f-4574-9002-5f690d3db914",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6df98e5-475f-4a87-9020-cd8fae34d943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c85850a9-65ef-4ab9-9a03-3f6d10870559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cda1a40-52a4-45c6-918a-666008fa3335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e1be0a-d865-4aae-96a1-f4025743e672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f8272c-889d-4dc0-a3d1-ff2cbec38504",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2682294e-048b-4d67-9b20-aa4a25cdf049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec675bc-e9dd-47ed-9396-d2c9efd6e6e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3cdafa-9d7c-4a66-a5b0-0a260e831f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bec4734-b3fd-49d2-b37e-900f119f7d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49481b9a-e382-4020-b67f-c7efddfcd7fe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b123a41e-2845-4a83-bf3e-15f4bad4d642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033e0841-4aa1-49ec-88fa-1fe8fd2548e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f168938-e489-42ed-afa0-7a3bbb1e3091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3f228d-aa2d-4832-a98d-0afaaa6d25e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286d60da-3f3a-4e18-b417-d91a6a75d77f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb17c7b-4473-4607-b583-2f8919c09a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726d32cf-6798-43f6-b4c1-690d49d6ea09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18674319-9a8e-49d7-8819-c905b956c3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b73085-f33c-4369-ada4-e2700e3144f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d98933-22f6-429d-b8e8-43a0a3b3928c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd6419a-839c-426a-9f9e-3be65bcb14b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b4109f-4628-4bcc-bf14-06e32b6c2557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405d0182-6984-4a9d-b4d9-a7d4eaf8f501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704c0b8a-90fd-4f3a-8704-31e7f26943b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4628c940-5c5e-4e4b-9bb0-45a8ebb1613c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad9e790-508b-479e-abb5-cce306dd5abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6ff1c0-85b5-4047-ba8f-0997c937917f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c5deb7-f0c3-4beb-b0f2-726ce9d8bd68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b32d5d-3a85-41dd-8b7a-aa8b26dc9f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3fc903-352f-4598-b8c1-76b97a393214",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8213f9b-5558-4b2e-9a62-4b1b8550607f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdd6f90-b3a7-4578-9038-836b53108d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52c22c4-a525-42f3-82c9-e550f9090f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cfd83c-c03d-4ed3-80ec-79f451d107d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be13e45-88ae-4991-904b-8aefd7e45769",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57426ea-701f-44b1-a7ca-d97d4eeff4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cae242-0420-4ae5-b86d-9e0ad3a91550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c17883-1445-47f7-a99b-7d7315d9bae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08bcbd6-f307-4359-badd-fb9a5f39893b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92b04a2-0682-4b58-a2ba-eb7e1de50335",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea64ceb-ec05-4d0e-8049-3be99ed40669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb855470-0126-4c9b-ba9b-3137794bce2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e51a626-e51e-4ca5-8653-38fe5e95c2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8157f370-408d-4fbc-bd91-47becca06559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e249ca-89b7-4e25-aa6d-c08b22b5d050",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66255251-2d19-4ba8-9d19-d484a87c35a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71452c3d-ca79-44b9-9e89-436a857e2acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b217580-546c-4551-b38c-2be7bb4b4bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a6face-b792-4e5c-937c-906829dc438a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480ed11d-6300-49b3-adc4-a1efc7a83308",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aacc040-b4b2-4421-903e-f1cefce97aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9afbf602-cf80-44b1-8b07-1a115a6bbba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e44383-8a08-4af7-bf1b-af10e7013530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524bc405-3369-47bf-9dab-8426528a36d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e6a6d6-bd86-4f55-9538-5e509e1b68d4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26049050-103b-4392-b6dc-43c6d33e405d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f8756f-25e7-4393-ba38-c263a4100db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d9bd3f-6347-452e-a970-b2a701adde22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4faf5e-c347-4f4b-bb68-74bc737894c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14ba462-52b2-4e8b-aadd-00d49e1113dc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041377df-00b4-4cdf-a155-6b309b30a25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a76a6b3-a92b-4b64-a282-4c0a125c292d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930011f4-fa4f-4227-8638-a934af170851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88313c48-9315-49cf-a18f-5ad4bf0b2c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7b684c-59a2-4c73-990f-eebf71e25156",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0228c6e2-596c-45c3-ac66-f5f3b4bd86b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7fce24-01fe-42a0-afa9-5a252121fb7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36fe09e-f5e3-43ba-9b4f-47f8c233d69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10240616-fcb7-4959-bd8f-8bae5e509a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650a752a-2d43-4444-9609-246fd9b56089",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35684165-b617-40e0-a463-bf9c3dbe1884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d233e641-dd3c-462d-bc55-01cc2a36e109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f729197-e7d2-4d4b-b3c6-e4ec98d8a5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cf55aa-7ee2-4382-8822-d90b8bbf0d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051ef87d-3a77-4a51-89ac-a8413e6a91b6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa56a67-9529-4cea-9380-24332ed9fd91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d64b3dc-159e-4105-9025-f22a60139b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765b641c-dab0-4700-abe7-7a1160c4eb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081c0ad6-59d2-492a-8fdf-9db46262525e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa5a644-d70a-456b-8112-c125ece65d5b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b0ae7c-6483-4283-a980-902780a6d131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b01c69f-89c0-4ec6-be82-74a2eb60a53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffed600-c6e9-4b8d-a982-66c5a0c3f49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0a65f0-5203-4b77-91ed-dd8791c9508e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10016fe4-c16b-46f6-9577-860b3f05cfd6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cba93c3-20fa-4f75-a6ac-11d0ccb3c0c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2e2a50-7f6d-431a-8bfe-aa91e3a52c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa37ec23-771b-4abf-844b-fe1900851b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d240564-e5c5-473d-9e5e-b39056bee7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19781f3-4731-4a63-8a3d-fbc82f56690d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1946ef43-0c09-4829-a896-b0f19c86087c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bae3286-ecb7-4d3e-8640-f28a45a67829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602adea8-d396-4e52-af22-17124ad92917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d11e5e9-6fb0-4a21-a03c-db1f3d9833d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba9375d-0e01-4317-b581-630c8a2558ef",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f1e594-e9b5-468c-a87d-22cca41ee807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81830782-6ed4-4c3f-b260-4e9fa9472ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395c24b1-012a-4ceb-80cd-66610b29c664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854d78b0-ecc2-49de-b0ea-3859e3f2d213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78789700-62c2-4f3b-a1ac-fdd5240f025f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cf9837-7cae-4751-a51d-aa723397f8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d2c691-cf59-4987-9012-5184513d5f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0861eaa3-20e4-4cac-a8a8-91568391fbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272d0797-5c37-492f-a3ec-aa0038a73352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7493611f-a97f-4a99-b8b4-3a493ce63eb5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff3e579-db10-467f-a4de-1b8996a4c130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e130e857-1546-4951-961e-02a1b984babd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae218779-3b03-424f-96f4-f7fed0ace9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c83d75f-8458-4410-9107-c62296bc174c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2674b8a8-4570-49f6-af99-dc64e41d47f4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb22b3b-541d-40ce-b31d-b2135a4b711a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c7a27a-7f0e-4521-b0b6-98b4d09cbcbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af41c972-d96d-4922-9103-37999df962d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ed6dd2-f513-46dc-82ef-41e7766bdb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5656556f-5953-49bd-934e-d4d0038e45b0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5453886c-b462-43a1-a36d-e3e805c7a2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ac1d82-99cd-4c02-8deb-0c0d8d11f087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e792c22-7b72-4a0f-adae-de55eed3ecb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346f4696-3b6c-44dd-a3cf-8de78eda3f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8f055f-69a0-485f-bf8a-bf8ce366837c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6deaf0d2-6edf-4929-8bb5-4370fe6d656e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f802151e-9b84-4c22-9c88-e779866f29b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afc58c6-04a8-4161-a6f6-64f4cd265200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba13159c-9b93-42a1-bf3d-3a14bc036683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0131a467-7b92-4844-90e9-b469a0578e12",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55055712-78b7-4359-bedd-b816334f3ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6858e333-11fd-46cc-9f2a-7adb268347a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df37591a-58e4-4607-ab2f-83707ba12024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d594cb0-4cb9-4b53-880c-4f6b3eda2446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733a0aea-1d39-4c47-bb5a-bc5289e7fa82",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a5fb7a-ee92-40a0-88ee-f29d4fea6c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c09ac7f-d05b-4fa3-891c-c56d5023cde4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba44ada-4cef-4574-915f-d3c4f00fff99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153762e0-10a8-4909-b96a-2b3aa1a061d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2717599a-8066-43c6-8125-d53b4d70b2f5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6919cd8d-1b5b-4863-b09a-b85d7b709cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a81a2d5-4851-479f-b093-76899e638c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16148f2-5e1f-432c-a3ca-a7a87185678d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfeabaa-ed01-4e73-8ac8-1f54e80ad8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7a8988-0095-4332-9388-9e0311f9a90b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cff54a-81ad-45a2-a535-ceb7a5740dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e63f5b-2f90-4791-9eb3-e54cbfebe5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424adf69-b1c3-4b89-99a2-08919b5ec815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53382b19-cc16-4f79-bab9-f85d88ccead7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f1bd63-af14-48b2-bb84-dd0a53627225",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d840980-4cb6-47bd-b88d-c64493e78bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4651a11b-ee50-43bb-ac30-020a2b70eba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06892168-97b5-4b67-812d-6eaf29bebe4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bc5780-2006-44f7-a0d2-0ca31ba7472c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b210caba-8298-4ed7-ac66-ff048c2826a7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3184ef-0421-4d43-b2d2-ba5446e0b09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f44fb9-08dd-4a41-851d-e178b350993f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9efb1e4-49ea-415b-a496-75f9a97cc1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4657293d-2c25-4ec6-a82a-b9d87cb53ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8660e0b8-4dea-4e74-8b6c-9ef23a3cf183",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159d4305-e8f7-4b6c-bb5a-4708c485be98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45204231-3b4d-45ea-853f-7be92b58579e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412ac234-32df-4de9-bea2-8af55203d4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e9e71b-7f07-419f-a751-26559fc18e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59c895b-b182-4ee8-9ea0-de1f629bfd45",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65307c4-b6f4-42ce-8a9e-ed7ee2494a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d127273-366c-4f06-a6d5-c526a4c86c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a201ed31-2081-43c4-9e87-199dec279bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6f18dd-4122-4fbd-aab5-c528494e6cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be58d052-6093-423e-aebc-2cc16e5f7823",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b764891e-55ee-41b9-a74b-492109675a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1729e098-37be-4aeb-af49-f46a72d7e164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d0e329-fbb5-456d-96de-1b8f61b7f843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce6d421-4f03-4119-b0b7-86e437ba58a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2358d5f3-7dbb-44fd-81cc-24399dc69860",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9b195a-51d6-4e20-bf68-9d751d1014ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d9b27b-6efe-4655-83d3-cb6cc31afa9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8b9ed4-8f45-4abf-8c96-f374ade4940e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b946317f-3d77-4606-9486-7083e01775e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce37e332-f114-4602-9682-2898252ba098",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87123c6f-1296-406d-956b-02a96902b360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebc3bf6-cdfb-4059-a38f-4ae60ea7344d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93c0dc7-46c0-485d-aa81-5b00120822df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a9ac58-659a-4be2-857f-2858fe7ebd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a3bd2e-d24c-4924-bc1d-8438a47f019a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f0d954-d102-44dd-8298-995133fb9fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b1b948-7d5e-4df1-8886-190d7623e2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a350e1b2-02c9-4a40-9b1c-eb5b5fc6ef1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053a5480-0fd4-4aee-af29-8513024cb37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68dad5e8-d5cc-4611-9161-fd8ad6591e51",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860f29fe-7b99-4dbf-8c4e-7e28af08dd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556a35a9-d359-4a19-a0a5-1cd924bc2851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99120b9b-6ceb-4472-8b7f-7c8c1f5e0b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27fac8e-2e6e-427e-9d07-3b808b146f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2fa2e8-c871-4f35-a3be-5243e327c246",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536eac6d-c78d-42c3-9c22-d3b3e6da9569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098bcd47-f700-4990-98ae-038da69f5444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c9804b-0b54-4cac-9f73-96cf03e490f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f986ac-0d6d-4f47-8042-716ea7c42c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5b2aee-02b6-4edf-bf98-7015aac2deaf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93f4662-e13d-4b03-9afa-63fd69e3dd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3eb4ef-c034-4b95-99cb-109450ade4da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5834ff7d-d9d4-4616-a37c-a441c4419609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d464d6d5-328d-40ef-ac7e-97b64b747d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb6073d-3cc2-4b59-b906-e220e06c62b8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03816ae-754d-47a1-8329-7ca6f58c1b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b355e104-18a3-4560-a4e8-1f6ea7b284f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fc960e-2bf8-4cf4-a020-1588f2d7f381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31dcb3a-275b-44ce-9634-4d79b33a642a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62c4d81-0669-4332-b5a9-11c0b8eae9e9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d794086b-9642-4032-85c3-a4a3e09269c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21e1c83-0730-4a76-80d7-38bde50e3639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3fa913-2318-481d-9765-102bea8d3888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3333a4f1-ee47-4204-a773-5e051e029e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a19218-d67a-47f5-80b2-c64a127af761",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c166f4d-fdc5-471a-9e2c-05b850e91236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff82b82-16b2-457e-bd80-81c317206eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921441bd-33e5-44f6-8192-3d6d854e8e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa49dda-ffda-422d-bb53-df50834ec004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b817db-2954-4657-a10f-7fe384dec63e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d7cde1-94cc-48ca-8b6d-33ac7197faaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedf3cc1-aed9-4ba1-8033-475dabdccb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfba7e73-c24b-4e08-ac6c-0a29cf4add5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d1d3b6-b0c5-4cc9-958c-fbdcf19c1130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4f8ab6-badb-408b-a4c6-d149b1c3a78e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96947a12-e371-4b09-9c9c-3f52425d71a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bed7da-5e92-45e9-aefd-9f37386e1cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc339b0-3f54-4679-98e5-022138c6b1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cae2a83-0b23-400f-a7f5-f71987fa0b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76213f3d-f3ab-476e-85bf-4759b02a3c5b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77e90f3-677c-4a9f-958a-75a3895e687b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1071d0fd-204e-4746-9d6e-9c9fb5f4e3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86478982-7107-47e4-9b74-bd284089d4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2664ab-89eb-4cb8-958f-d16d52960e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcdb9f9-c116-49a3-a3d3-cbccca97d711",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9df2c7-feb8-4972-bf36-8727da0fdf35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adaf1b9e-2d8c-4b8f-be9c-855f989a762f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66164f1-5b7f-4b6c-87c5-62aa1fa31ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149e6061-ae99-40ed-a17f-c0b83b08d211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1253c2e6-fa60-4cd8-a0c8-2f394c59e18d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583e7abc-2c50-4606-be54-5d8381c27222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789b0f69-801e-413d-854c-d77b9b960d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5617cd1-ddad-4dcb-8a3e-b38fc66a5cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58722a6-7779-42a6-a02f-bbb74a966d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fb84a7-5444-499b-aeef-dc54b89ea004",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ee0023-9b08-4405-9740-081c68a95bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "510cb732-a3fa-45dd-bebc-e07b91ac0d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7047d1-ddd3-4e0f-b46c-a325a6306844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5262f922-46db-4dfe-8635-e7eebdcf6b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c2f3da-c460-4fda-a32b-da8a5a6416e4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e574c3c-d931-4599-8d67-d787de94c2b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86ccb9e6-f104-4352-9239-87907d37de39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821480d4-cb46-4b75-9a89-a1e60a246308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0bf32a-db92-4dc1-b4b2-6f7ff76c6e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd16f921-bc3c-4b93-a7be-13b978036582",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa1adb6-e0ec-43d7-a83a-3cda9426c388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "991668b1-e035-44d3-afef-a186bcd0d9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec46548c-4f85-48d0-bcb0-c4ab63be5fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8803c3f0-94d9-4f14-9b5c-00d0c5ebf931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c475cd10-58ad-4be6-8e41-427504bbad38",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f4846a-6e90-4a16-970e-5cb80b182a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae6960ad-118b-474d-b33a-47dd1b3f06f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4327890a-5657-49f7-9d18-38969590a021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36986a38-9093-43ae-82f0-f2fb04354b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667f17e4-e28f-4746-8c6b-227324e4a566",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e54423-fbb3-44b9-8d2d-12b8d7c17086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a56158-058f-4e10-ab18-149299255aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded69918-74ea-46c4-a15a-dd1890b086e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb14f4c-e0c4-49d4-a804-a4542a3a7ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cf4162-5769-4c94-8e43-2cfebcac32a1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0d4510-0027-4cfd-a077-ea522cdbd938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0b97788-292b-4cbd-b214-baca8fa55369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690739a7-d9ba-4337-85a2-58a9eef1270e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71da63cb-6613-4d2a-bd4b-9ef233ad578e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef36e337-bcb8-430e-a6b7-a03a71c7ae3d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63223b60-2549-4b9a-9a8b-37cc7ca99638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a5b51cc-0e05-44c7-8af9-7b228e7acad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddde81d-7d62-4456-bacd-11d7328726d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb338c58-7598-4509-a614-f79e63cec76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e319fb79-bdcd-4dae-8fc0-28d07e473481",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f90e320-4cba-4c95-a489-750406d49e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4d75241-eb1f-4f61-9afe-8e94199324be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17af94e-1aa9-447d-900a-5f1f7547e822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfa916d-fc47-4e3b-8632-82f12b0289a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5805e957-cfcf-4fff-a619-ee5b5513fbc6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d5b062-40e1-4dbb-a1e9-7fa690cebe28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "654629f7-ac4c-44c2-b101-8243b9a4e3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba874a8-457b-4354-88ea-fd7cebf1b9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c76ed7-ec6e-455c-af47-1c5298494a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4a9166-4e81-4099-8d69-a889e16ba6c0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afee72a-f4d0-4e53-bedf-a086582dba4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3263fca-8074-41d5-bc11-1246f781f719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4e2f67-512a-4524-b23b-9e5b100521c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0a4784-7f22-4d1b-bba8-ef8304dc52cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dd2031-d237-4d2d-abc2-13c20f9940db",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0276cc8-5c12-44db-af36-70e2707104d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da81705-c554-4999-98c2-0a2f43f25d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39999885-c699-4801-aed3-25c0b8bc3bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16038e50-97a5-4811-a12a-01e8c6f1c624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc70bf0a-285a-4e7b-9423-e47d29095d5b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996b4b36-4ec1-46eb-87bd-34bc18ef7a86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c31dee7-0e4f-4fde-8311-54669e14dad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a75ee4-cdb3-4104-ac3e-0eb266b4c470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5514568-7192-413a-b9fd-174071093c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa38049-c904-4618-a0cd-5ec649fbc76b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea59e36-86f2-48b6-bd65-650bf94fc233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "961b053e-b807-4e97-923b-cb5e705ad8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d496704-d0f4-482b-b0e7-772b62cc5054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b497fb2-0bc6-4d5c-842a-5a529ba506d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c98a9f-cca0-460d-acd9-a3decc875538",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3ba3bc-7cdb-4038-9363-8b8b5e77de55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17f1390-757b-4ff3-8fd5-c355c017f2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18313afa-eb7e-45c2-8375-3c5bab61548c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8853ac-a14c-4cd2-b10b-239a4acc30c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d993e7e-f5b7-47fb-8bee-af1a90159995",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b3afea-38f0-4ed8-82a3-e7cfc53de3b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6846dd00-5155-412e-bdaa-4f667e8a0c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b61bfe-e045-4a62-900a-ca47225b6423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26da8fd-81e6-444a-ade5-eb16de790db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5402693b-c2bf-40e6-baff-6804ae284e1f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f4e481-7869-406b-8ff6-cd354291103e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b68931-e814-4323-a5be-07659e37f9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a622aee-1d55-484a-beed-31f4c7f8dba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee93958-f0bc-4ff5-a0ce-0cde37b0db3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e12dd66-e99c-4eb5-b58c-5cf82c569135",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4b9e92-4d90-4249-b08e-00a316a2e29f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57cf8c6-1cc4-4644-8e4a-1ff41fab68d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e39c5ec-8b5f-48e0-98c1-e8a33b4601f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52acc3e-8ddc-4768-b5e3-f2b72360f0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7468e58e-b9e1-4104-81e8-b628850ff8fb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3273ba6b-68d3-4718-8ace-9384f8e72450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "227e9a00-517f-4b75-a97a-7abac62039c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116bbbcc-c8c0-48eb-807d-5e0f5c4f0d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251bf5a2-08e8-4435-8da7-8e729429101a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da37fce7-12ad-4ff2-891b-eaf3d2693d35",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbf69c7-bcfe-42b8-8424-c4b0c457ba1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2516b1e5-c93d-4a7e-93fe-d7eba184cb38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b10fa2-eaa1-4692-8f9f-c30955e10358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc544100-530f-4343-ab75-ecd155f39d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becafdb9-c5f6-4618-a6fa-b05f3cd6d92b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d4082d-f2f1-4194-ba53-083997ce5bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e93631-c314-41d9-9eae-fa051011d7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2f5ab5-1315-4bc3-8581-19c537101ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33720ff8-95c1-44a2-9925-ba40640bd705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91931775-dfb4-42e6-b216-9b43c8ba1b76",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a307b1-6b8d-445d-b9b3-6c4bab1b6dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e6abec-db97-4343-91a7-c642647ebc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64cec66-28de-4f17-ba95-6f4cfa1c373b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bde07d5-ac5e-490f-8e8e-315378efc2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4de727-bbc7-4bfe-b524-3ceed36ff234",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900d7d34-dd64-4aac-ad70-af503cad6e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d8daa0-4fa7-4e4e-976e-8e097362a25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20847ffd-3d53-491b-9d2d-f27bd6f5f3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7467ed1f-7083-47e4-b8f6-7cc349cb13eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4034425-84d9-4d4c-a5c2-1d53b0fcbc5b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5a6dd5-3df1-453a-b24d-54a41e18d900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80574bb5-a0dc-41fd-9914-dfba05e52e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8cb4ee-b4a1-45b2-9782-3231c83975b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4391f353-07af-4c0c-a083-4466d124b0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d6eb64-8eca-40e9-91d4-cf036b28809e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edf7ace-0a5a-40eb-a4c6-cc3f6da59901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f73babff-570f-45ff-825d-80f2a34736e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471d49af-a41a-4608-b632-c42650cd1f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb765457-d343-4fa5-9d76-aeabe4bf2a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc224512-d1a4-4069-a711-450462954b91",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5fe831-0db4-478b-b1e0-092c531890f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40edad0a-c41e-4fcd-a295-0c5b984635c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62de5a71-3a57-4ac2-91ea-52b4df8b220d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2864d741-bc7d-427b-82ee-f830f22296b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de476a9f-22cb-4519-9b54-0784cba86abf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f440d33b-0a5a-407e-8862-d9a2fc29abcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75de0ccc-1c10-4676-b23d-75d3d3f1188d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5b6ee6-2572-4149-8ee2-e5294f90d6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eded58e4-c1d7-4ab0-b217-4e257997fa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9268993-c33c-4a04-bcf7-1b692cb5a7a8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0025a1f-5137-4ad8-b0ef-7cf4ddb804ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d95e8f06-fc64-46ce-aef9-56d49c2a3bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a401a4-6304-4a63-84c1-77e6e6833d4e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2412cb-2ddf-42f9-a1c4-c318aab7ac11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a22e15c-24aa-4211-b10f-880415253715",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e96d857-a95b-4e56-a671-af65f40567f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a059a4c8-d884-4e4e-92bd-21bc8ad805d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbf616f-6808-4129-98f4-8c8821cd9a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6fb81d-3f45-4c93-96e8-924c6645302c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b54aad3-c117-46ea-9935-6a612b4a2845",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a997b5e-b14f-46da-8b84-c374ad17b7db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26cc44c2-761b-4481-b9d7-ced67e85e72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dbb959-8195-4574-bef6-60f5fd61bc71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a74ef1-5f61-40f1-b0e7-2a8ac749cdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d313226-a079-4de7-aae3-9cdc2d9fcb24",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8da2d86-db38-49c9-96be-4c279de8eb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9912c4c5-c1eb-424d-a977-1458f59ed009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be368669-7a06-4b6e-9ccd-d555140993d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c838a95-fa91-4468-8857-ff1fe27d9c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1c1420-240f-42d9-a409-68bf320656de",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b8962b-c10e-4a6f-9c06-a97ec36046e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a46b38a-a4be-452e-a966-0d0260e4a877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62fa04a-8ddd-4436-9a95-c7b3bd688356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20854dec-e9bd-49c9-b97f-641e1d731d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca1771d-ee13-4faf-8942-8fb5039e5a10",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6732aa-9148-471e-8207-3cbefb6b4e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56dc732e-8b7a-4bfb-9e67-05daa9c9a4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af21151-5a64-4aba-9c00-745d20480e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fc8c2f-2836-48ec-921a-60bf30f22aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e0e0d6-85e9-44d9-b181-e37abfb97460",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1143ed-da2a-4d4c-bf84-a586d0c6ed07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2e2295e-417e-4316-9a8f-dd3f46fa2770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04eaec0-bb5d-41e4-afd8-36e85599bc2e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bad74d-f655-4789-8223-55bf56abf54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db0417f-7d9c-4567-87be-02787c85f775",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e6119f-261d-49a5-ac00-350328acce95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb08e46c-87f5-40dc-8fe5-26f40cbd98a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced325dd-4fc0-4946-b703-09804890cefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31aa0307-6501-4c86-9631-de543039e302"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff5a5c93-e4ae-49af-bebb-94fa4c23c5e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcadcaa7-29bc-4abb-8e5f-559ba1804f6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae1d3310-31f3-4612-b0e5-4b9b46446647",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "351a851c-e5ca-4be0-8cf0-86e345294044"
                    }
                  }
                ]
              },
              {
                "id": "22538d3d-e3eb-446e-a3dc-d80ef60d6915",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41bc133e-5f86-4a5c-8b42-55712a95da8e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f6851b-6ed2-41de-a70c-f971b934b5fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cc7848cf-292d-460e-9b39-2a3886870476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb982869-6fb5-4e62-8140-b939efa7fe0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ea38b18-38e5-4a71-a1ea-5f80c612e696"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80603258-6332-4ce3-a73b-e30619cccb05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae3e28d0-bd8c-4b4a-8bd4-5f4422fc9b16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "472646c9-d42e-4816-bfce-b5978b879c49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79383d37-1dfc-4fb9-8165-59eec9dba40a"
                    }
                  }
                ]
              },
              {
                "id": "cbae481c-6de4-469b-832d-9bd3c2015887",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "377c4834-b94f-42d6-afbb-530654f24d01",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220c51f2-6d7b-4cef-aca9-40fa799f92c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e5896f84-0f2d-4aa4-9003-d323044db483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb08cc5-f08e-470a-8fa9-d472c12872c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a720a9ea-0416-4e39-b1e8-c602b640fae1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bf475539-5d6b-4c84-880a-f0e2f1bf3ed6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af286108-6546-4484-b899-2d3a664327f6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed5ea37e-ef6f-4226-9a8e-0510310c006a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b141f7f7-decd-4439-b369-c5de17a5eb8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cc5b538-c19d-4194-85a9-669ac9fd5c91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "756ecd70-a33f-4038-a102-f3bb1dd76aca"
                    }
                  }
                ]
              },
              {
                "id": "97b588c8-3dee-4a3f-aa73-c3fe5845c14e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f4e8b0f-d642-4ca7-bd2d-b050eccfa886",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3a4bce8e-4d77-4e42-82f4-afd41086fb7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7db47a5d-6391-4152-8d95-93c7a7b3bfb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56b8ffdc-ccb1-4a7c-88c0-6b2ec17875ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13e12190-68ce-460b-ae3f-97a09eb7cd15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6bae898a-5eb2-46be-83d7-62b78d410ece"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ffbd824-c93b-4932-bc25-775689c0356d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3f72088-b45d-4ee5-9aff-80b2512962da"
            }
          }
        ]
      },
      {
        "id": "1b816582-03c9-4b44-8649-8bf81124d1a1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "60cdc8a8-7ecd-4016-99e3-640daeb20a14",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ad504a5-d107-492b-9225-76c9a7e7f08e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "184e24ac-8a1d-4c0e-a008-05843fe32bdc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2041244b-e161-46c5-ace2-7bb5babe8892",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a1ade3b0-9002-4cc2-b867-0e6afa541ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d55c55-141d-42ef-aba8-98360b395d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03e8b503-b1f1-4189-9c92-59024ff8b68a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38266a64-4fed-47a4-8cd0-6ed88b3f34ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60ae59a4-a20b-402c-abd4-8627a160a2fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39b2d528-9c4c-42ce-b7e6-eec12f01e26d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b3ec47a-0bb9-4d06-bd5e-84f08bf987ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02476ed4-4548-422d-a9bd-7154d3dc24fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "550faebe-264a-4285-b22d-96e738880677"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "374523f8-94bc-44c1-be8c-37b6722823d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dda4155d-3e12-4cd5-8cfb-99ecd7528899"
            }
          }
        ]
      },
      {
        "id": "8c1f4172-85ec-4523-86cd-85e9fdcf0af1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "32ad0d15-72d0-44ea-8c1a-0aaadb240071",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b85e3eb3-5982-4e63-bdf6-5351fa8043e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17bb611b-eb41-4893-a3b4-91b00a85b1c3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228bfbcd-c5d0-44f2-a86e-11256f6c4466",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71d59a03-fa08-4f0f-942a-e75d9b4d59d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37169430-c3b7-42e9-ad55-98df189bdf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaf52493-73a5-452b-958f-d9951f66dfc0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cfe4100-1054-4112-97ca-339a407b150e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de76c504-5987-413a-ba70-cc3f1be3dd2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20ddf075-ca47-45e8-bb59-d03099a052b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcc694bc-2e61-480b-96a7-b75712a8ee7b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ba1c51a-5211-451f-9cd6-9fcd4d97bb8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "25e048ed-eedc-44a2-acf5-f590ca03eda7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5ce9f88-52ea-487d-a1da-9eca35254f66",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e133fbe4-f571-4722-8653-a667e806dcd3"
            }
          }
        ]
      },
      {
        "id": "cf71b48e-eec3-4fb6-994f-473843806d62",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "66bcc502-1e06-45ac-9c01-c6579d06cb2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ce66e18-96f1-4cd8-b148-ae58c8b18fd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6bbfae98-54c1-48f7-ade2-49f3cb946a11",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903b8006-41db-497e-acad-60fbbf40b58b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76a95024-64ba-4696-b6df-96050c81aa15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e904a229-d632-4d94-b469-ab423db7df5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "390fdd3a-dc01-4f76-8168-0e7d64e61e3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abef6544-bfe9-4f44-9f1f-937467b995c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2c119f7-c1b9-4abe-a80c-24c6510689ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c79c948f-ee85-49a9-a65f-d8bd753e24a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60d54f5d-00e0-457b-9696-9563e5c2995e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91f5078a-40fc-406a-8eb0-5dbac0fd3fa4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e16f0bbb-13e1-4388-ba82-67a7d1469585"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51a882af-8c12-450a-a702-84626619cab8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89333d0e-616b-46b7-b1af-a6cc5b045fcb"
            }
          }
        ]
      },
      {
        "id": "e132e943-1db1-4d26-a6b6-60df42806cf0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "953310a0-b094-48d5-a528-8e2e0fa62909",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4de6e3a5-9f1b-4466-8b95-4493e89ff6d3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1ff5e087-6145-4b45-8f4b-0191f8ae5834",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6887d9ff-b5fa-4d68-9806-9ce07da46ac4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78456c7d-241b-4421-bda0-d873c2a9e814",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 114.97543859649127,
      "responseMin": 5,
      "responseMax": 9523,
      "responseSd": 624.1730159040058,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710549157803,
      "completed": 1710549199734
    },
    "executions": [
      {
        "id": "b979f339-1ffe-49b8-9842-e766db780ceb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "51cd38fb-e84f-4ec0-945c-f5b39a80dde9",
          "httpRequestId": "02d16563-33bb-4a1d-bc0d-b6c8002049fe"
        },
        "item": {
          "id": "b979f339-1ffe-49b8-9842-e766db780ceb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "437c87db-253c-444a-8aa5-b2e6bdc526c9",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 0
        }
      },
      {
        "id": "dd2c5089-df64-4bf8-9138-052aada3ada5",
        "cursor": {
          "ref": "3fb3aa3a-6d9f-4f13-9225-f837af9d7c58",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "75af6170-1c33-4f57-943f-41aa011f1daf"
        },
        "item": {
          "id": "dd2c5089-df64-4bf8-9138-052aada3ada5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bfb7017b-d150-406c-b618-7c56531690e1",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "5b849292-be8f-46aa-8d26-8f168d7fb5da",
        "cursor": {
          "ref": "caa18948-efcc-43e9-b415-5238814aa92d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "54cac06c-e3bc-4be2-8990-2635b3554218"
        },
        "item": {
          "id": "5b849292-be8f-46aa-8d26-8f168d7fb5da",
          "name": "did_json"
        },
        "response": {
          "id": "6c81945f-4ac5-41c9-9c71-3e03a4b95c3c",
          "status": "OK",
          "code": 200,
          "responseTime": 340,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7709bc9e-c7ed-4901-931f-2eb2504aaac2",
        "cursor": {
          "ref": "20c83050-e28d-436e-a635-a00b556f16fe",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "18696c06-0568-4186-b795-e14e3a8c0985"
        },
        "item": {
          "id": "7709bc9e-c7ed-4901-931f-2eb2504aaac2",
          "name": "did:invalid"
        },
        "response": {
          "id": "7438b79a-66a3-4ad0-926e-ba66b7a68dbe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1082,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7709bc9e-c7ed-4901-931f-2eb2504aaac2",
        "cursor": {
          "ref": "20c83050-e28d-436e-a635-a00b556f16fe",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "18696c06-0568-4186-b795-e14e3a8c0985"
        },
        "item": {
          "id": "7709bc9e-c7ed-4901-931f-2eb2504aaac2",
          "name": "did:invalid"
        },
        "response": {
          "id": "7438b79a-66a3-4ad0-926e-ba66b7a68dbe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1082,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9483ed09-57f4-4e7e-9046-a98364cba24e",
        "cursor": {
          "ref": "7fcaf29f-f3a0-4fe7-a046-f01434fac944",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "876df87d-df08-48fb-bea9-b340c8493dd4"
        },
        "item": {
          "id": "9483ed09-57f4-4e7e-9046-a98364cba24e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c70f59db-8ee9-451c-b2d0-02f769fd3b7d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e038afc-c615-4b03-84ca-8a7d0f5ed06d",
        "cursor": {
          "ref": "7ff445ed-be4d-4f62-bc47-9dd8afafebd8",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5070b41e-1ad9-4f07-8c81-322550282335"
        },
        "item": {
          "id": "5e038afc-c615-4b03-84ca-8a7d0f5ed06d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5b3c5d4e-162a-4a32-bdbb-87eaa6157562",
          "status": "Not Found",
          "code": 404,
          "responseTime": 926,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cc883e-ac55-4367-bed4-01d63ea1aa73",
        "cursor": {
          "ref": "f7b7ec31-8ab7-488b-ae87-441989ce92c1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bade9167-90ad-4ed4-907b-826515a4d9cd"
        },
        "item": {
          "id": "11cc883e-ac55-4367-bed4-01d63ea1aa73",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e241505e-5df4-494e-82e1-008c6fe894d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af7a4cc-a20f-4820-9dfa-dcdba9196d60",
        "cursor": {
          "ref": "18531a47-32b2-4fe4-91c8-b0b717f6ff7c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bb13f72e-6791-4e3e-b25a-bc3f4c7a6c9f"
        },
        "item": {
          "id": "4af7a4cc-a20f-4820-9dfa-dcdba9196d60",
          "name": "identifiers"
        },
        "response": {
          "id": "0dbea8fd-3fbb-44c7-aca7-d78051f5d072",
          "status": "OK",
          "code": 200,
          "responseTime": 211,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de909478-407a-460b-ac6a-219378c89089",
        "cursor": {
          "ref": "367fb934-00b3-4804-b494-9404a351aaba",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ec565d98-c187-4e42-b9fa-0c42abb1cc24"
        },
        "item": {
          "id": "de909478-407a-460b-ac6a-219378c89089",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ec68fa51-c913-493c-85d8-b4482d7cf949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fee813-9a44-491f-9142-0e1f7f67296a",
        "cursor": {
          "ref": "c4b99f56-2ed1-4b09-88f7-73c60393f778",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "48930343-45da-4d85-b350-495b66120f2e"
        },
        "item": {
          "id": "a9fee813-9a44-491f-9142-0e1f7f67296a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f18aca09-019b-4eb2-b6b6-1e3fa86556f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057ceabb-2f9f-4f2e-8eac-030df4775f57",
        "cursor": {
          "ref": "645c8193-01b1-4cbb-bab0-5a1dc747171d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "12d2cbe8-de96-452e-b5fa-fbe2bdbcb760"
        },
        "item": {
          "id": "057ceabb-2f9f-4f2e-8eac-030df4775f57",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4687b1e9-fd75-47ed-986e-5d9ed7fbfe53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c4e69f-2b4f-4617-b9ef-d95783f25470",
        "cursor": {
          "ref": "71e2fc52-f186-4d1d-96b8-5b3727f8b142",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bd8f862f-27e1-4fd3-a7b4-83b32f6730b4"
        },
        "item": {
          "id": "82c4e69f-2b4f-4617-b9ef-d95783f25470",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bf73498f-2cd2-41bb-9093-e7688183e179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2566c294-9682-4df2-8a2a-d0e636ba37df",
        "cursor": {
          "ref": "ffe5f0ca-90fb-4b27-b432-e8dd34db4e4e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fe059e90-5b99-4e8f-b05b-d2fc8419b29f"
        },
        "item": {
          "id": "2566c294-9682-4df2-8a2a-d0e636ba37df",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "08f34e6c-6f05-4d41-80ad-236370a64fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6751829-6738-4ec3-9a67-fe029baf7cc3",
        "cursor": {
          "ref": "7edcd95c-40d5-4bbf-af0d-f3d25649b32b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "41e33b06-72e8-4ad4-b9d1-81e2572a907a"
        },
        "item": {
          "id": "c6751829-6738-4ec3-9a67-fe029baf7cc3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e33a8972-a7ed-4e22-8549-fbee89d3bd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa052d1d-cd26-4111-aa89-558e01c71b96",
        "cursor": {
          "ref": "54c4f916-9361-4776-b790-2ad0ac16eec7",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d14ee96f-99e4-4d8a-a65e-231ad76f971b"
        },
        "item": {
          "id": "fa052d1d-cd26-4111-aa89-558e01c71b96",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "67142101-8935-41de-8c3d-5c840bf469a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a97893d-0290-49be-ad8e-36a81d9d35eb",
        "cursor": {
          "ref": "f952117c-1e93-497f-a1f3-6e9662dbeb25",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a2a12c1d-d724-404b-a77a-23467354cef2"
        },
        "item": {
          "id": "6a97893d-0290-49be-ad8e-36a81d9d35eb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "36b28e2d-f0de-449c-b092-57458d813b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf027990-5706-4a8c-814b-cfe05c51c42b",
        "cursor": {
          "ref": "d8adcd1c-df08-40f7-979b-e7f88e6f1771",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fd64ef6a-41ec-4613-94be-a1272edb063d"
        },
        "item": {
          "id": "cf027990-5706-4a8c-814b-cfe05c51c42b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "123f4964-d3ea-4d74-8246-911948191575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58728605-d50d-41c3-b16a-d093b698ecb4",
        "cursor": {
          "ref": "bed4337b-b698-4818-b7e1-1b7865ebf2bc",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0b2af701-a75e-4b7e-a5c5-0379d76a2b72"
        },
        "item": {
          "id": "58728605-d50d-41c3-b16a-d093b698ecb4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "37a68115-5c0e-4a1e-b87a-7635b4e3b62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bb4049-c745-4016-866d-86ebef76d08b",
        "cursor": {
          "ref": "13aa9512-ee23-44a1-985b-192523aa48fe",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0333a2bd-932f-41f1-a309-894cc2c71c3f"
        },
        "item": {
          "id": "30bb4049-c745-4016-866d-86ebef76d08b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6936d866-2b0f-4d54-81f1-800ab0d31bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9614aafd-302f-4803-82e9-dc5b00d3d51a",
        "cursor": {
          "ref": "f394738d-0b81-4a5d-b0b0-52c9b64babed",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6adfb152-8aed-47c5-9370-a1680944ec41"
        },
        "item": {
          "id": "9614aafd-302f-4803-82e9-dc5b00d3d51a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5641a92f-b55b-4c41-b9ff-f1890c78c655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adb228e-2416-4638-80f8-f9cb0827b495",
        "cursor": {
          "ref": "a06668ed-e68c-4f94-9ddb-9077a39072f3",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "43bc307a-7e7f-4ea2-9178-800bb3ee8425"
        },
        "item": {
          "id": "0adb228e-2416-4638-80f8-f9cb0827b495",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "46096027-b2ec-41b1-9e6b-44136f8b15dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cb2ff9-e156-48a3-b3db-5c8fe9d30e40",
        "cursor": {
          "ref": "9a540867-579c-455a-ae0c-43c6c743e7a6",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1ecf5863-f797-43cb-877c-4f9306fc3243"
        },
        "item": {
          "id": "41cb2ff9-e156-48a3-b3db-5c8fe9d30e40",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "973e936b-2ddd-4a16-accc-6e73a42b328f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8ee262-1bc9-43f5-832c-8964ca8288fb",
        "cursor": {
          "ref": "9f024853-43cd-4d9f-b6bc-1b83ed42ce87",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "63d24aa0-1175-45f9-84fa-316e2829d567"
        },
        "item": {
          "id": "cc8ee262-1bc9-43f5-832c-8964ca8288fb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e08b66bb-3bfa-409d-9b63-61eba2a41613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2ec7da-e34a-4ab1-8d61-847b01452d9d",
        "cursor": {
          "ref": "b8bd6288-0f55-48a3-9407-08b387fe8f2e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d80c933d-b591-4c20-9548-0e5e58b70405"
        },
        "item": {
          "id": "9c2ec7da-e34a-4ab1-8d61-847b01452d9d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c7a31331-66dc-4616-887b-1a319070f448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8c92b0-9617-460e-bfa6-9b5323301ec6",
        "cursor": {
          "ref": "894d3088-8937-4adc-b21c-a2c48a1fdcfc",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8f37ba9e-29e0-4e21-9a2c-849d85b10079"
        },
        "item": {
          "id": "9b8c92b0-9617-460e-bfa6-9b5323301ec6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "da7a4c49-6f7e-45ec-ae26-2e7eef90708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b73447c-a2a4-4a06-916a-60386a60f706",
        "cursor": {
          "ref": "28a1dbde-9837-4c7e-8ba5-14371500a8c5",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "691f1fad-a07b-40ee-b19a-d092d9e77d77"
        },
        "item": {
          "id": "6b73447c-a2a4-4a06-916a-60386a60f706",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "35623a68-535f-46ca-9674-24bac6dea179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f457406b-8180-49c1-87b8-3e0f31ec1b2f",
        "cursor": {
          "ref": "abbf9fa6-2d49-4fb1-9c26-b0de3197ddf6",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "995f1952-576c-4f7d-933b-1c862032a95d"
        },
        "item": {
          "id": "f457406b-8180-49c1-87b8-3e0f31ec1b2f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1c01047d-d3bc-4e04-9864-74fdd12dc981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e04cece-c259-411a-8408-0647c8716c03",
        "cursor": {
          "ref": "f10d1960-0ef5-42c2-a83c-1f07862d1e75",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9a379a2f-0ab8-493d-90b5-0191e21a3678"
        },
        "item": {
          "id": "4e04cece-c259-411a-8408-0647c8716c03",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8a00419e-96cf-470e-88eb-4799dd117a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9e2dd9-b032-4564-856e-cf2b76a8c010",
        "cursor": {
          "ref": "fba0933e-0613-4ddf-8727-40269b317740",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c2d12594-3dce-4b09-a4db-10e1c144bd87"
        },
        "item": {
          "id": "bc9e2dd9-b032-4564-856e-cf2b76a8c010",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "99357661-b191-4c65-b162-7218b513d76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3126baa-0358-43b4-afcc-ee73499dbf7e",
        "cursor": {
          "ref": "a5a66343-5384-4369-80cb-82f99a289ebd",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c2d89fdd-a3fb-4e16-8d7d-0cd998e4d549"
        },
        "item": {
          "id": "c3126baa-0358-43b4-afcc-ee73499dbf7e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e5c4eabd-6872-47c5-9cf2-9f18f81e923b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd0d429-cdb3-4300-8c9f-f556b1735991",
        "cursor": {
          "ref": "40459906-c0e2-4921-9d4c-6ed233848c71",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d4a3b088-5f70-4560-bb68-1674762db81e"
        },
        "item": {
          "id": "0bd0d429-cdb3-4300-8c9f-f556b1735991",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "800851d3-6cda-4a0d-ad36-b365a1c87ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ccd597-0ad8-4cd1-9952-57895502a900",
        "cursor": {
          "ref": "a0c8946a-f866-4c0c-94d8-421ae76f3597",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "79cd0b70-bf56-4c9c-9875-9873651836af"
        },
        "item": {
          "id": "25ccd597-0ad8-4cd1-9952-57895502a900",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "812ad4e0-7300-4efb-9f67-71db8044bbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61c5f92-eb8f-493a-a942-d6a9705501bc",
        "cursor": {
          "ref": "3e4cafde-8872-4b36-9010-5a8509940939",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dd02799f-ad11-4ec3-8b4c-f399d99c0c0e"
        },
        "item": {
          "id": "a61c5f92-eb8f-493a-a942-d6a9705501bc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "260fc0b3-85e7-44d5-bf3f-75335a82def8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ae03d2-63b7-44ac-88d9-c79b9d1c5413",
        "cursor": {
          "ref": "cb718e59-fe19-4043-9b90-e2f9591f2d4b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e84d763c-e218-4c81-aee2-3b2fd6126070"
        },
        "item": {
          "id": "f3ae03d2-63b7-44ac-88d9-c79b9d1c5413",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "deeb4b52-58b1-4e78-a5d2-344398e4e970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb44a89a-6045-4076-a063-3f46f51c14ed",
        "cursor": {
          "ref": "d0639146-6d0f-475f-bd69-11f8483c53e9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fb6db984-b5f1-4763-8971-32ee8c643f09"
        },
        "item": {
          "id": "cb44a89a-6045-4076-a063-3f46f51c14ed",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8c4a69ff-eae8-43c7-9523-4df707e8b4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8628f8-cbe3-45fd-a4f9-fb86aa976387",
        "cursor": {
          "ref": "0512839a-1e63-4736-8322-2564a915d7f5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4ed22a10-f172-415b-9dd3-b356a07da542"
        },
        "item": {
          "id": "fa8628f8-cbe3-45fd-a4f9-fb86aa976387",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f504195c-3066-4a2f-ad44-4b5874dafe14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5e1c9a-78d9-400e-8b10-4a74db423e27",
        "cursor": {
          "ref": "f1bef856-f7b6-45ab-999a-b0a0cc2604fe",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2de13524-df36-4eff-94aa-c0aafe682114"
        },
        "item": {
          "id": "1a5e1c9a-78d9-400e-8b10-4a74db423e27",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4fd02019-af42-467e-8845-d01d73351727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3c9eb1-4f6e-430b-a255-ebad6331b9e7",
        "cursor": {
          "ref": "d0992c5e-5f59-403d-a48a-3c28ed870e51",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b17682e7-0925-4ec7-8758-da04190f00bd"
        },
        "item": {
          "id": "9f3c9eb1-4f6e-430b-a255-ebad6331b9e7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "333cc3e7-adc3-4eba-b217-968c07333d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124704ac-1abe-437d-938a-5558b76a0a33",
        "cursor": {
          "ref": "9f2533d5-2c60-43e2-948c-0a25b1a2376c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "73a7637f-adea-46fe-90b5-ec51ff358012"
        },
        "item": {
          "id": "124704ac-1abe-437d-938a-5558b76a0a33",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e8cee253-3dc2-4563-8ff9-c554299bd830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712d1f7a-6e36-464b-922a-c9a449e7ba23",
        "cursor": {
          "ref": "ea6ec530-45f2-4f69-bf13-97cc07cd53ec",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5a48464b-e4fc-4474-8a24-90c7f3b5ca05"
        },
        "item": {
          "id": "712d1f7a-6e36-464b-922a-c9a449e7ba23",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aeac1173-c34e-4bf3-9c00-6f9c7536dbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800dd020-99ce-49d4-a4bb-7ae5e2a5c92f",
        "cursor": {
          "ref": "0784ed95-64c5-46fe-b41f-f2989f04c3e0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8e8074f3-41bf-4da3-8c7f-df73daaac941"
        },
        "item": {
          "id": "800dd020-99ce-49d4-a4bb-7ae5e2a5c92f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "caf786f6-993f-4765-8fd2-e5005bb0b26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4452157c-a019-4041-9c04-1968e2b33ef9",
        "cursor": {
          "ref": "740fa9b9-a239-4ffd-b2f0-220e57236c33",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9bdad042-b54b-45f7-94d1-5522df72fb61"
        },
        "item": {
          "id": "4452157c-a019-4041-9c04-1968e2b33ef9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2ec359e0-05af-4b88-9673-29eb90bc5350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ec520c-c9b2-4cdf-aa88-128f1294277a",
        "cursor": {
          "ref": "b8c7d58b-ba6c-4e2a-9470-e73afa1ae026",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b791e1a0-005b-4a05-9c4f-55f292fa75df"
        },
        "item": {
          "id": "20ec520c-c9b2-4cdf-aa88-128f1294277a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "95c648a3-1875-4455-a149-cf274b969534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6379df-6b09-4d06-a427-f5d5a091c589",
        "cursor": {
          "ref": "75828d33-b7c8-4746-90fc-86d52b636ae8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "39773876-96df-455d-a408-64b9bb73a51b"
        },
        "item": {
          "id": "6a6379df-6b09-4d06-a427-f5d5a091c589",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bb6060f9-21b1-47b4-8717-ad7a7b67fb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6e3793-1460-4546-8a2c-7cfc7ddb0eef",
        "cursor": {
          "ref": "48f1a5af-1945-435c-8bfe-1acb731d0c69",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "45a65dff-f789-4df1-b714-3d2c513c4182"
        },
        "item": {
          "id": "9d6e3793-1460-4546-8a2c-7cfc7ddb0eef",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cefe2b57-e2b5-425e-863b-69696a475807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a64551-6217-4525-b29a-271dd2212e4e",
        "cursor": {
          "ref": "cbf92021-698f-423e-86b9-7d30d6f87081",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e0de93f0-3e06-44a2-8324-eec0ba42d2be"
        },
        "item": {
          "id": "26a64551-6217-4525-b29a-271dd2212e4e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4a975a9f-03ef-4b3d-9d29-a21399b3451e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f9c538-f7c3-415a-8c91-73ee308b5f79",
        "cursor": {
          "ref": "47dd705d-b1c1-4587-bc73-db913e64d0ca",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eb764e6f-9c65-4dd5-b32a-ebd700264862"
        },
        "item": {
          "id": "48f9c538-f7c3-415a-8c91-73ee308b5f79",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2b77b742-f6e5-434d-bc49-c66a461ac46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b46b50f-23f2-49b6-b6ee-713867d50a37",
        "cursor": {
          "ref": "0a170846-6101-4e14-9832-5645dfb0b617",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "06b41d1d-90d0-4d0b-b840-c6fff5e72687"
        },
        "item": {
          "id": "0b46b50f-23f2-49b6-b6ee-713867d50a37",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "35be5ccb-cd58-4fc7-825a-6474ad2d2946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413d399d-dbe4-4f5f-b803-17b7d8fec91f",
        "cursor": {
          "ref": "381c5762-f8ca-4ded-8305-25d0eea92eb5",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d65f051a-857a-4654-a23c-688be04e6dca"
        },
        "item": {
          "id": "413d399d-dbe4-4f5f-b803-17b7d8fec91f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "07118171-c3e1-4019-8e55-6f03401140f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6b2d66-7622-42fb-ae7a-d6f51d915ff4",
        "cursor": {
          "ref": "37ddcb94-47d8-48ee-98cb-5517a6e4786e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "74fa568c-ad12-476b-a874-fa5231517df7"
        },
        "item": {
          "id": "dc6b2d66-7622-42fb-ae7a-d6f51d915ff4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5ed13977-9b19-48df-8dc3-2f08ee2c1e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1a33a2-0183-4d31-a28e-f2fbfd9bd7ab",
        "cursor": {
          "ref": "325b8e9a-db0c-4596-a2b1-c23e32c5a4c2",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "845e483b-968f-4462-b98b-9a8e0d122135"
        },
        "item": {
          "id": "4f1a33a2-0183-4d31-a28e-f2fbfd9bd7ab",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e880a086-e156-403b-af92-fd3d9347b829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984285d3-006d-4fab-b318-b44653fd81a4",
        "cursor": {
          "ref": "3b826647-7ad3-42a8-9c8d-c9e1041122fb",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3f4aa952-6033-4d89-9c74-7e3a47e7a110"
        },
        "item": {
          "id": "984285d3-006d-4fab-b318-b44653fd81a4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7ed8b383-48aa-4236-b61e-2c3a1a59f964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed50b02a-c65c-4411-ba3d-42d46aa8679d",
        "cursor": {
          "ref": "a24ab6d1-2f53-4332-aadf-bc74ca2c74a6",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6b57b090-7003-466b-bc08-40796d7ab957"
        },
        "item": {
          "id": "ed50b02a-c65c-4411-ba3d-42d46aa8679d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1fc99d2d-58ce-46ce-8db5-567d5ab30e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02883c9b-9aee-4dc5-b743-901c55bf000e",
        "cursor": {
          "ref": "ef7e30de-e218-4460-9669-2ce89ca2ac5e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f94eadd4-18b7-4a2c-9ffb-0589c6da8cd0"
        },
        "item": {
          "id": "02883c9b-9aee-4dc5-b743-901c55bf000e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2139b471-ef8b-4002-bd02-81833eaad4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4877f486-c7f7-45c4-9ea0-d949ee5260c9",
        "cursor": {
          "ref": "9f242211-e2b3-439a-98d4-454d407bbbfe",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "328f2788-5c09-4a30-8df4-4c45fcc09689"
        },
        "item": {
          "id": "4877f486-c7f7-45c4-9ea0-d949ee5260c9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "53383b0b-615a-478c-87f1-527db03d3411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1643f15f-cf20-4463-9cdf-3d2c994186c1",
        "cursor": {
          "ref": "42cf5b05-c4a9-4d26-a70c-befab05428ca",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4abdb031-85d3-47de-9de3-9b9f368cd366"
        },
        "item": {
          "id": "1643f15f-cf20-4463-9cdf-3d2c994186c1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5a9ab313-7eaf-4238-a1a5-b5581495622a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d853a69-28ae-4762-8a58-a573ff8b37e3",
        "cursor": {
          "ref": "2b802209-8253-4cc7-9478-58ecab42ef63",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d4907857-860d-4cbd-81e6-d0d713188ccc"
        },
        "item": {
          "id": "2d853a69-28ae-4762-8a58-a573ff8b37e3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f704876f-3e2b-4341-a9a1-d2755b40852e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8c6154-88a0-4bcd-9bfb-ef8114a8e173",
        "cursor": {
          "ref": "bee6e97f-baf1-40d5-83d5-0473c8f3bcac",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c4f16c3e-bf1c-4366-90c2-4732f6962daf"
        },
        "item": {
          "id": "fc8c6154-88a0-4bcd-9bfb-ef8114a8e173",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "45f0d291-c2f9-4b0f-b7e9-cca3af7d14f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b338c93-e67c-4bb7-917e-0c08ed750b38",
        "cursor": {
          "ref": "7ba09120-2775-44d3-b01d-2aa4e80cc582",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4895d57b-b9ae-4458-948c-0a420495c933"
        },
        "item": {
          "id": "4b338c93-e67c-4bb7-917e-0c08ed750b38",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8d9b5915-4555-4e84-b3a6-62591b9273cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125437d3-dea8-449c-9867-51b971c9fb55",
        "cursor": {
          "ref": "f8090f16-95bb-4bf9-b237-ad36b0e0cf1f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d35df66e-4ccc-4cbb-9c0e-ee5212e712d0"
        },
        "item": {
          "id": "125437d3-dea8-449c-9867-51b971c9fb55",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4118e40c-70db-4d17-b604-c8ec8688dfb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1301062-8228-40ad-8f61-e663fc15b5d1",
        "cursor": {
          "ref": "b240629b-7dd8-4b01-a936-708ead796622",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "27d064eb-f7af-45d8-aad7-af8d0bc08d5f"
        },
        "item": {
          "id": "d1301062-8228-40ad-8f61-e663fc15b5d1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "76c28c3a-f750-42fb-97ef-c89c134d83b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c62a8c6-038e-4c7c-91c3-1b568955483d",
        "cursor": {
          "ref": "e781d80f-d103-4037-9022-732d96ce26c9",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f46bee2e-8847-47a8-9426-5879a519d0ea"
        },
        "item": {
          "id": "8c62a8c6-038e-4c7c-91c3-1b568955483d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "517a2d7e-d593-4839-8c4f-766806aa1bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfadfe7d-a7be-4478-8dd8-190eb7822ed1",
        "cursor": {
          "ref": "7d04b311-f2db-44e2-a0ee-cf1a34d34917",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "354b5304-6fdf-4226-923a-fc525573a795"
        },
        "item": {
          "id": "bfadfe7d-a7be-4478-8dd8-190eb7822ed1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "23df3bd1-2eb1-43d4-8a8d-3925b28b019b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade7f029-aba4-4016-9794-e6d45164adc8",
        "cursor": {
          "ref": "ee86d276-4a76-4645-bfa3-32de09e74bfb",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "64e1ab28-a728-4221-b993-8738d40c054d"
        },
        "item": {
          "id": "ade7f029-aba4-4016-9794-e6d45164adc8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "278938fc-ef59-45a9-9f8c-16c86dfa2310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba29889-bc06-498c-97ea-2749908a590e",
        "cursor": {
          "ref": "c4e6a2df-b3bc-4a70-9fe9-4aefeaee6109",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fbdb93a7-21d3-462a-97bb-85502580ed51"
        },
        "item": {
          "id": "8ba29889-bc06-498c-97ea-2749908a590e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ee28156c-7826-41ca-8de3-dbfaf9cd1445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19790f4d-e110-4985-b30f-5ab74bb3dd2b",
        "cursor": {
          "ref": "eae8c66a-ba89-426c-946a-d8ddc10c5c4b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3b3f0a2f-f360-4edc-9996-0d0fea4ab71f"
        },
        "item": {
          "id": "19790f4d-e110-4985-b30f-5ab74bb3dd2b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3102b59e-3556-4f3f-98c7-869c4e70ebf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f62354-c0b1-463f-af1e-d78f42eecfde",
        "cursor": {
          "ref": "8d838955-6689-4b7b-87dc-c0c8817b0049",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "67f85187-f81f-4e13-a5c2-6c8ea3ba209f"
        },
        "item": {
          "id": "09f62354-c0b1-463f-af1e-d78f42eecfde",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d78f551f-3779-4bec-9409-ecbd5feddcb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56de1340-1aa1-4a12-a833-183d8d2a51c9",
        "cursor": {
          "ref": "130a5815-0514-47c8-80c9-ddae98d43300",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dd9a886a-d278-4e0c-92c1-0f806389e2cf"
        },
        "item": {
          "id": "56de1340-1aa1-4a12-a833-183d8d2a51c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "904c2007-e947-43b6-81a6-e81afbb6b283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccd785c-8e1e-4bd3-a2cf-f12539a87a04",
        "cursor": {
          "ref": "7939b1c8-48ae-4bad-81b8-78e05a0fbc1f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4cd265a2-b2a2-486a-921f-46d3ff38762b"
        },
        "item": {
          "id": "cccd785c-8e1e-4bd3-a2cf-f12539a87a04",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4981d297-b011-4458-bb59-9c2c758b3f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf2785f-b8c3-4297-9c3b-4e25f460e495",
        "cursor": {
          "ref": "ab758c9e-304a-4449-a928-753988f81881",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e9256b83-0c0a-4c2a-b37f-9f1ec4fc527f"
        },
        "item": {
          "id": "bdf2785f-b8c3-4297-9c3b-4e25f460e495",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "646208e6-237c-4cdf-b397-6b331817ae6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b68a169-9b2c-4f5b-9eed-4326a59aac74",
        "cursor": {
          "ref": "c27f43fc-5b07-4f59-a093-8511916e70f3",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c498b2d4-cc3c-4e78-b54c-1a6511b62920"
        },
        "item": {
          "id": "4b68a169-9b2c-4f5b-9eed-4326a59aac74",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a55bb4ad-3793-4898-a133-6c424d9baf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67287cd9-1670-4323-bdcb-d550030906a7",
        "cursor": {
          "ref": "fd1de3ec-1acd-49c5-81ab-4983af1e136e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8ac37308-3d1a-46b8-bdbd-6c9b41877c38"
        },
        "item": {
          "id": "67287cd9-1670-4323-bdcb-d550030906a7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b99615aa-e0ba-4ffd-b7bc-bc6ee6b0e92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6adda43-3244-438d-8693-449ab7519af0",
        "cursor": {
          "ref": "fd6d609b-29ac-42e6-9e7b-af4c0fd8376b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6ee1b7a5-2c51-43f3-9dd5-bc053aae2cf6"
        },
        "item": {
          "id": "f6adda43-3244-438d-8693-449ab7519af0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e87a1db3-337d-4f68-9003-6bed2828a2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59cbce5-fd10-47ca-a6b7-3c69248663e7",
        "cursor": {
          "ref": "46eb84cc-7bc7-4b36-abf7-8628094b1ce9",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fec85002-5383-4126-a38b-d30fa492efe5"
        },
        "item": {
          "id": "f59cbce5-fd10-47ca-a6b7-3c69248663e7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "376267bb-f929-4de4-a2b2-62928096c01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16fa1a4-b956-45bd-b2c3-0ae29618ea88",
        "cursor": {
          "ref": "b35e28e2-ddbb-42a9-9edb-7d29337e1e8b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d347314f-a853-4075-ba57-33d062aa58a9"
        },
        "item": {
          "id": "b16fa1a4-b956-45bd-b2c3-0ae29618ea88",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cd1ada8b-b3ba-46e5-bc97-02b6a4338ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b18ee4-19bb-4823-af01-abae10722bc3",
        "cursor": {
          "ref": "3afd5cc0-e9d3-4388-a519-18cc34912282",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a207849f-d49b-4585-9602-b6b3dd2cef70"
        },
        "item": {
          "id": "94b18ee4-19bb-4823-af01-abae10722bc3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f87efe46-a490-48eb-a172-d95e9534e7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a6b2f4-ad4e-4a54-8bf7-dbb0ca8c47b8",
        "cursor": {
          "ref": "141ce2ae-2ee5-4494-99f0-f1cc0c92b22f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bdd71351-a904-4030-86a1-e4c5f6b2dc51"
        },
        "item": {
          "id": "c5a6b2f4-ad4e-4a54-8bf7-dbb0ca8c47b8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a9346a8b-1f07-4104-80a8-46f09bd91cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62caea9b-5dfe-4db2-afc7-4603c568bf15",
        "cursor": {
          "ref": "de3695b6-27bc-4741-a2ef-08c5edfbd765",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0063f4f0-963a-4517-9922-6af0ccf3734c"
        },
        "item": {
          "id": "62caea9b-5dfe-4db2-afc7-4603c568bf15",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2ea88b1e-4f33-4117-8bfa-f4d4c89b491f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab655bc-325e-4e72-8cd6-87d76680e95d",
        "cursor": {
          "ref": "477ff1a4-c18f-4a9d-b619-a6b084d050d3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "988f3c65-b127-465a-ba1a-42e7d2652a04"
        },
        "item": {
          "id": "bab655bc-325e-4e72-8cd6-87d76680e95d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6f4057b0-e4a7-4880-bf4f-7aa5a9c188e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8ddc0b-4989-4ea8-a716-9db3de0a3836",
        "cursor": {
          "ref": "b22f6349-2398-4966-9040-8073de27a703",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a91e1ca5-f084-4611-b24e-91a66fdf6e34"
        },
        "item": {
          "id": "ad8ddc0b-4989-4ea8-a716-9db3de0a3836",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5dc6a5ad-0330-4df3-995f-b6ed98744d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8349ea76-daf1-47c4-b4bf-cb04dcb2702a",
        "cursor": {
          "ref": "bf4bcc7e-d05e-4826-94c0-27deb05ff8a8",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bd5bcf50-4243-4a55-99e7-76b919f3ae71"
        },
        "item": {
          "id": "8349ea76-daf1-47c4-b4bf-cb04dcb2702a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cb923895-d0dc-4368-9644-a5ae433c5468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de6be44-ad40-4de7-9bdd-c3560c4a324a",
        "cursor": {
          "ref": "1841807b-c505-410f-bace-5fc624a52a00",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2e6484d3-3c08-4509-8e25-dafe75280107"
        },
        "item": {
          "id": "0de6be44-ad40-4de7-9bdd-c3560c4a324a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9634cfb5-7a66-49d5-a4dd-e6cc08f12e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea87044-305c-4e3d-be53-3cf812de5642",
        "cursor": {
          "ref": "a00e6051-166b-4be1-b859-17680d7da247",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0d9469c3-7052-4a7d-a238-69c918e2b2ae"
        },
        "item": {
          "id": "bea87044-305c-4e3d-be53-3cf812de5642",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b52457f7-20a3-4049-9813-a130fa50e842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caf0df3-34e5-4feb-912a-5fd68dd7474b",
        "cursor": {
          "ref": "e19e2d42-97b5-4b7e-a0e5-03ed014de199",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "be71a1a4-554b-4a3c-a9ad-e5555788a5eb"
        },
        "item": {
          "id": "3caf0df3-34e5-4feb-912a-5fd68dd7474b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1fe7241e-b0c3-4584-9394-6f5a1d17fccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40afc59a-4bdb-4211-ac88-49bdb16cd3b4",
        "cursor": {
          "ref": "2597d02d-47bd-4fb1-a985-f21e7c025dc9",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e561331e-5114-4799-90a2-055f1948f809"
        },
        "item": {
          "id": "40afc59a-4bdb-4211-ac88-49bdb16cd3b4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "09d7629c-4698-46b6-a8b6-a6d3bc0f2edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b0bc76-9e63-4714-9261-c8a1809fb382",
        "cursor": {
          "ref": "c0462728-6352-4ffa-9211-0db02aa7f1d8",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9916ddd9-dc34-4a49-a7eb-5c29b28f2603"
        },
        "item": {
          "id": "c9b0bc76-9e63-4714-9261-c8a1809fb382",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "91041032-6dc7-48c3-a2e4-f1be57e5a0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5bfa54-05e3-4f9c-9c36-48a8e7aa9d03",
        "cursor": {
          "ref": "dcde4fc6-da31-40ee-b9eb-9c5a30ebc2ea",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2ec1f424-386f-4f82-8d8a-e719fdbe5dd3"
        },
        "item": {
          "id": "9e5bfa54-05e3-4f9c-9c36-48a8e7aa9d03",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "51a8ef46-2d28-4f20-a6fd-bc08012f4d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d08539b-b5da-4690-b1f4-7da9484418f3",
        "cursor": {
          "ref": "bafe1e0b-a2e3-4ec0-b63f-534ee4d6792d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e822bf64-a9f3-4cdd-b456-dbeeab0296e9"
        },
        "item": {
          "id": "0d08539b-b5da-4690-b1f4-7da9484418f3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d1e4747e-9804-4839-b614-d33df916e713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ee5d15-5b83-4977-b739-9ea1c7e5ed25",
        "cursor": {
          "ref": "6d69d185-0ea6-496a-ac4a-68e5e9d1049a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "93ce519c-34f2-4675-9945-69fa24984d0a"
        },
        "item": {
          "id": "57ee5d15-5b83-4977-b739-9ea1c7e5ed25",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5f91737b-7435-4d03-9cbe-577d83f5dcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c645d7bf-4613-4a3d-a914-191f08300b5e",
        "cursor": {
          "ref": "1cd8cf9d-6fc4-4b1f-b38b-a931e257ccb6",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b16daa49-523f-4990-af4a-308b207f8365"
        },
        "item": {
          "id": "c645d7bf-4613-4a3d-a914-191f08300b5e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "82fcfbbd-8081-4f3d-89a7-71763a4420ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa73302d-615d-4fea-828d-d852e4a25d38",
        "cursor": {
          "ref": "b7f43adc-9d03-46d5-ad2e-f9d994d85f27",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3e531291-9a49-4b9a-ba3e-3f2b363bafd0"
        },
        "item": {
          "id": "aa73302d-615d-4fea-828d-d852e4a25d38",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ed17a189-7ac2-4028-b475-2f111c63f860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c034258d-6b68-46a3-8f19-e4733c0baa5b",
        "cursor": {
          "ref": "c325c887-ad28-4345-bb86-d2c9c9562e11",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a90efc6f-188c-40a6-a650-42b8be63e872"
        },
        "item": {
          "id": "c034258d-6b68-46a3-8f19-e4733c0baa5b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dca62eec-fd87-4c73-8121-603e0e4dedc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced9915b-2146-44d8-b5e7-19cd2acd5a88",
        "cursor": {
          "ref": "493e371a-5c80-4af9-a9e6-2503ed97d722",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9e71c4d1-f518-4307-b2f6-a8360ad65d39"
        },
        "item": {
          "id": "ced9915b-2146-44d8-b5e7-19cd2acd5a88",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c583e82b-4c44-4005-b37e-fd50c91156be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cdc0ae-04b4-483a-8bd0-abf8b3d0f6ae",
        "cursor": {
          "ref": "805d98a2-5b5b-41c6-8aad-9fba33d09672",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2b461496-34b9-4375-ba10-17eb2e6911cf"
        },
        "item": {
          "id": "88cdc0ae-04b4-483a-8bd0-abf8b3d0f6ae",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d585b187-6ce0-43df-8f6d-1c4705b10606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2201d656-ef26-4987-bbfd-9527728a42d2",
        "cursor": {
          "ref": "b574c5e4-6faa-4ec3-ad96-60b196ee6cec",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "eea152de-3a4d-4db4-93f5-19b76e1d8a71"
        },
        "item": {
          "id": "2201d656-ef26-4987-bbfd-9527728a42d2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "91ca6534-4f9e-4f1a-b3d3-6b4f0302d422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdaaf5a-27ab-43d7-a5f5-dfc9b865346c",
        "cursor": {
          "ref": "ce5deeff-9153-4a10-b66b-629e93eade23",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bca46379-b3ec-4cf7-99d2-30ed20184300"
        },
        "item": {
          "id": "9fdaaf5a-27ab-43d7-a5f5-dfc9b865346c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e09afce9-e0e8-4ea1-8742-433f41051579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675416ad-b748-4f5a-afe7-e334876325a4",
        "cursor": {
          "ref": "a7be1ec1-6444-4a0a-82dc-2465e3d8b418",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7a922ad9-0538-43ee-ab08-2a8f7f131a8d"
        },
        "item": {
          "id": "675416ad-b748-4f5a-afe7-e334876325a4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e3f0f658-d92c-43f3-9945-ce1688168868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83410f16-2dcd-49e8-ab0c-d53725c1ad3a",
        "cursor": {
          "ref": "193ec4f7-894c-4629-8c2a-bdab2573324d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fcd31529-a97a-42ac-a95b-6a488ae41671"
        },
        "item": {
          "id": "83410f16-2dcd-49e8-ab0c-d53725c1ad3a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2fee532d-4895-4680-83e6-1fc2d647171f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f331ff1-4f4c-4810-8f5c-95525c2c182e",
        "cursor": {
          "ref": "b322fde9-311c-4794-8373-71f51d71fd2d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "06e94c67-404a-4f48-a7a5-79a320042a66"
        },
        "item": {
          "id": "6f331ff1-4f4c-4810-8f5c-95525c2c182e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "71f282d5-02f0-4d7d-99de-217bbd8f7d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d287d2-86a3-468a-919e-ce10f87ded0d",
        "cursor": {
          "ref": "2ed2251a-7b24-4b46-ae32-d58f521496c2",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d427a64f-ea53-4295-aee7-09b14a6fd59a"
        },
        "item": {
          "id": "a2d287d2-86a3-468a-919e-ce10f87ded0d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "da348d0c-842b-4c33-958b-577ff0528008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42fbda8-745b-4011-8966-a98aa455eb79",
        "cursor": {
          "ref": "2e98df8a-46dd-468f-b28d-0a3e2e0afaa1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "119ab86f-a31d-4e01-b013-1951de19d43a"
        },
        "item": {
          "id": "a42fbda8-745b-4011-8966-a98aa455eb79",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "93f4190c-5a4a-4592-9b90-0291152d0071",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524a761a-700b-4f13-a166-e1f92b4f47ea",
        "cursor": {
          "ref": "8ec3c83f-75f6-4151-b73b-60f859c5b422",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "40e5046f-3ea6-4a45-8bff-b8a938c51026"
        },
        "item": {
          "id": "524a761a-700b-4f13-a166-e1f92b4f47ea",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "12fda2db-a8fa-4b35-baba-c45b633bfe42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "fa24a37b-4efa-4d4f-98d6-f728c74652cf",
        "cursor": {
          "ref": "2b5d58e9-2c00-4c1f-a82b-5046fe178a60",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4edfd76e-d7f1-43fa-b3fc-e30e21dd049a"
        },
        "item": {
          "id": "fa24a37b-4efa-4d4f-98d6-f728c74652cf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "64f72709-c4b2-40d8-b752-23e1b58b9311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "09422ac2-0d23-4b08-9530-e7c27a314a0a",
        "cursor": {
          "ref": "07796eea-0109-42eb-a174-a44cd54fbf8d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d7162b28-f293-4426-a80c-2ba9e71fe397"
        },
        "item": {
          "id": "09422ac2-0d23-4b08-9530-e7c27a314a0a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b9855bc5-848a-4f03-9600-acb6e3f1de0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ab43645e-dbb1-4bdb-a2da-1e7d1052ecbe",
        "cursor": {
          "ref": "3f3cc511-c3f9-4dc9-b7b5-aba2157915f6",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "92a30e8d-34f6-4e31-93f8-5f3cb1ec268f"
        },
        "item": {
          "id": "ab43645e-dbb1-4bdb-a2da-1e7d1052ecbe",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "954c0a9d-45e9-40ac-97f7-be3e5426aee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "49cb6169-481f-4a3d-8efb-56ddcbdc43fa",
        "cursor": {
          "ref": "e0b4bc89-6050-4134-8047-e21a6fef3950",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8b33be1f-092c-49d8-b2a2-458866accbe3"
        },
        "item": {
          "id": "49cb6169-481f-4a3d-8efb-56ddcbdc43fa",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "55091993-792b-4157-a546-b448dc36b486",
          "status": "Created",
          "code": 201,
          "responseTime": 9523,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0657dc8-d378-4288-8c14-f48cc63f1c82",
        "cursor": {
          "ref": "660d9f45-5241-44d1-b9d5-02cfed5061f5",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "20b550e7-8f1c-4d11-8977-d543e4db4459"
        },
        "item": {
          "id": "a0657dc8-d378-4288-8c14-f48cc63f1c82",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "810e1dd1-c2e1-433c-8083-248eda73bab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "02ca5c0d-6aac-46d1-9290-5115e75204cb",
        "cursor": {
          "ref": "dd4eb6cb-01b1-4f1a-a3ab-709c0d4af181",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "da667a21-dcbd-4f8a-ad5f-07553c13ca1c"
        },
        "item": {
          "id": "02ca5c0d-6aac-46d1-9290-5115e75204cb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bfbbd6e6-24b3-4b02-8f45-0ac406462089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "67cc8671-fe6d-49ee-b13d-ede44eed97b2",
        "cursor": {
          "ref": "15646023-7a78-4df6-b2ad-a1bf20727412",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c59b39cf-c36c-41fc-b836-8847ffb6786b"
        },
        "item": {
          "id": "67cc8671-fe6d-49ee-b13d-ede44eed97b2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7eec4fd6-a150-48a1-bb13-e0869416980e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0e3217-3cfa-4997-b02b-f9661aef90af",
        "cursor": {
          "ref": "8c8e4f53-9e8a-4c42-a7ad-300d9b609232",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fe106cfb-e950-4fae-9c28-0fa4c4e06ae1"
        },
        "item": {
          "id": "3b0e3217-3cfa-4997-b02b-f9661aef90af",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6c1d5572-7a8d-4856-a2f1-7e423ad4d399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d641d861-f74e-4e51-84df-90126df62177",
        "cursor": {
          "ref": "f38b8286-71c2-4f54-9999-d57ff847a96d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6f86ef43-a278-4de0-abd3-3bba2e3b897e"
        },
        "item": {
          "id": "d641d861-f74e-4e51-84df-90126df62177",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "231bdcc5-aaf5-4248-b416-e899ea58cc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c843b422-b6e6-4be6-ac0c-c80665995d85",
        "cursor": {
          "ref": "d7b73b9b-0bee-4dd0-8221-02d8aa8f09b2",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "90a915cc-522f-4b96-9fdc-fd0be79c6621"
        },
        "item": {
          "id": "c843b422-b6e6-4be6-ac0c-c80665995d85",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d7d20f15-82bd-4aca-92ac-d85b5983b1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36923b0-0f0a-493a-ad5f-0d8e7e4babdf",
        "cursor": {
          "ref": "a0491312-cfc8-4d2c-a81c-4386eaa7198b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e695ce81-e39f-4cd8-86c0-378ed9621f54"
        },
        "item": {
          "id": "b36923b0-0f0a-493a-ad5f-0d8e7e4babdf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b2804807-7a25-41fc-8102-75ef392e635f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866968ff-8cf4-4820-bf4c-00e569395c62",
        "cursor": {
          "ref": "d8f9fca4-8de1-4f12-833c-c809c41bf066",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d2123337-4c0c-458e-bd70-04fbea854530"
        },
        "item": {
          "id": "866968ff-8cf4-4820-bf4c-00e569395c62",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "66f7cd36-68ee-4f9c-8711-58b02ef75ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b0f4c8-3d95-4f6d-b838-c32430e08b92",
        "cursor": {
          "ref": "962e15a0-2870-471d-9aeb-743800b6b061",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c4186160-b53b-496d-a296-8200faafe7ed"
        },
        "item": {
          "id": "02b0f4c8-3d95-4f6d-b838-c32430e08b92",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "666d623a-0103-4224-9bf1-9b8466d9eea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2add05e-40da-4bf8-8cb2-b2d77f6681ea",
        "cursor": {
          "ref": "d1b661d7-69ee-49d1-8eea-be75933587c6",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "de2a91f8-14f4-4a12-80cf-1aafd7d74418"
        },
        "item": {
          "id": "a2add05e-40da-4bf8-8cb2-b2d77f6681ea",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2af9e6ea-9436-4561-8458-aeb495c20cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da56341-10f8-4a58-a137-c1d0bac7ce1f",
        "cursor": {
          "ref": "15a14820-e7e2-404e-848e-c86750133152",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "38ade0ab-5678-43b8-94f3-3c7b0ea0b743"
        },
        "item": {
          "id": "3da56341-10f8-4a58-a137-c1d0bac7ce1f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3d3ee290-0517-4615-b7c2-f7dba0aba316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a38c331-51a7-4cd5-af05-c4c1cb5c68ba",
        "cursor": {
          "ref": "33c73514-9d37-46ce-af07-c0b8d6e4b054",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a523e4b4-e12f-4443-98de-61057105bcf8"
        },
        "item": {
          "id": "4a38c331-51a7-4cd5-af05-c4c1cb5c68ba",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d00308a4-24dc-4d1e-aac2-4708d229fba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65529012-b10e-4cdb-bf1c-863f2a6424f9",
        "cursor": {
          "ref": "4e754a01-7fa5-40d4-a784-fb1958499a73",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4afcd631-fa75-4b43-8cb4-2e368ed16620"
        },
        "item": {
          "id": "65529012-b10e-4cdb-bf1c-863f2a6424f9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ae10b9a6-1ad0-4901-b1d4-fd11d7702452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb104e48-fbf1-4b25-9f11-2c70056cb2c9",
        "cursor": {
          "ref": "86a16f02-1376-434a-acc2-b2007706c9c9",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ac54f25a-b35b-4a96-a827-920d15bf125a"
        },
        "item": {
          "id": "cb104e48-fbf1-4b25-9f11-2c70056cb2c9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2ac9563c-d206-4ec3-a313-c3c92f94448c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fe1194-0232-4cc2-a75f-7ab6ccea7cdb",
        "cursor": {
          "ref": "8477c7fd-c7c6-45c6-a4da-9af7aa8cb64f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c9b5e742-5779-4b72-93e6-822230261d5e"
        },
        "item": {
          "id": "30fe1194-0232-4cc2-a75f-7ab6ccea7cdb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "86088f54-0267-469c-acb8-fa6ccd4957b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b77b08-46be-4c54-aee7-965d06d3ea79",
        "cursor": {
          "ref": "e4faf334-5ca4-4935-b051-e5ca29ac394c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "78fd8326-68ee-4efb-9b0e-9d0068a32069"
        },
        "item": {
          "id": "c9b77b08-46be-4c54-aee7-965d06d3ea79",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c06d6642-62a3-4a25-af99-97baa0a6d05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c00acf-5b72-4ad9-aebc-625c3b307b41",
        "cursor": {
          "ref": "0ebe5277-4a42-4a18-8932-2a257f09e00c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a5b20c78-4fed-46d0-8712-420fa7917583"
        },
        "item": {
          "id": "27c00acf-5b72-4ad9-aebc-625c3b307b41",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6d365fab-817d-41df-b177-17f8a9478d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2959165-1c29-416e-ac7e-eea9bbc46183",
        "cursor": {
          "ref": "d20ae3f3-6891-4f33-bce1-42e4c3ae96bf",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dfbe7f02-3a47-4980-962f-5abebfb0711d"
        },
        "item": {
          "id": "d2959165-1c29-416e-ac7e-eea9bbc46183",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "72eb1a46-3296-48a6-8f41-f9255c4195bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f38e579-da0d-499d-b2d1-dc47628494a5",
        "cursor": {
          "ref": "60713574-dd7c-4b99-9ea9-d86d4c22eeb9",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b8b0def1-033f-4237-a694-a2ed0dc5d32f"
        },
        "item": {
          "id": "6f38e579-da0d-499d-b2d1-dc47628494a5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "402e7c05-aa4e-47b7-8020-5fd285cce1fe",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "46d957b4-540a-4841-b08b-a74b072ccfa0",
        "cursor": {
          "ref": "198d53c3-70cd-454a-9401-10e37177a0b8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bc9b4f08-21c9-4b27-a92b-655bb3356499"
        },
        "item": {
          "id": "46d957b4-540a-4841-b08b-a74b072ccfa0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "85860c1d-e0ae-41d3-9e2e-9f948c7a0cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559d2795-4392-47cc-9667-6cf6cf3a7f76",
        "cursor": {
          "ref": "9a791207-d3cd-42f6-bf08-6f382769e1ae",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f17d7166-6bce-40c4-8651-b07447a2e3f3"
        },
        "item": {
          "id": "559d2795-4392-47cc-9667-6cf6cf3a7f76",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f5d0962e-8ec0-44bb-8d04-f1eef0147704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088cbc59-9e32-42be-96a7-533421fafb49",
        "cursor": {
          "ref": "9674303e-b862-4bf9-aa80-4d8994ec6508",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bb20fc54-49cc-46e3-9941-1bf7f59ef6a7"
        },
        "item": {
          "id": "088cbc59-9e32-42be-96a7-533421fafb49",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c1a4e1ed-271d-4bb7-ae29-7027ffd9b7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab554db6-2b5c-47a4-a700-b27ae8c69fcb",
        "cursor": {
          "ref": "ea27ab6c-056b-4a98-b20b-298e1bcbbcb9",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7b3093ab-58d5-4051-bd64-d007b7a105d0"
        },
        "item": {
          "id": "ab554db6-2b5c-47a4-a700-b27ae8c69fcb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a50d5b8b-b94f-4872-86a3-855685db8401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed742717-e136-43ba-8d3c-6342834e305b",
        "cursor": {
          "ref": "74064ae4-e89d-4082-8717-417fb94b4d34",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "08b51db3-cb93-4d03-88e9-9498aee5e006"
        },
        "item": {
          "id": "ed742717-e136-43ba-8d3c-6342834e305b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7faa7809-c420-48ec-9104-ae015c52ea37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d744f717-fe2a-423b-9469-8f2a0b8d9f75",
        "cursor": {
          "ref": "585606d5-977c-4444-b6b9-3d199092b9d5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bebdaa3d-f0f8-4519-8cf2-a958b56d7feb"
        },
        "item": {
          "id": "d744f717-fe2a-423b-9469-8f2a0b8d9f75",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "769195c4-4146-4540-9b81-1055a6a814a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0bfe6c-0a63-450c-9852-0ddd9763ad87",
        "cursor": {
          "ref": "4e8c702a-b017-4878-a61c-751a6aa7ef31",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9d627497-3fde-4a06-99e8-56a8ce493306"
        },
        "item": {
          "id": "1f0bfe6c-0a63-450c-9852-0ddd9763ad87",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2d15d2dd-de67-437f-aa42-a634f04a3dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19e34d5-7ecd-4a77-adae-e04bbcd37592",
        "cursor": {
          "ref": "4619d1d8-d9b2-4726-bce9-c0810ec25131",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0c538e11-63e8-46ac-85ff-3073bd1ecb77"
        },
        "item": {
          "id": "e19e34d5-7ecd-4a77-adae-e04bbcd37592",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c2aee734-d1a7-45ba-bc72-4003b3f437d7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "3d5a10a8-3875-4b5c-9866-771cc488410e",
        "cursor": {
          "ref": "2c9fca12-d1f3-46a9-b7f3-bbade5d6cb4e",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "70c1c517-394c-4631-84f5-28f220f80a92"
        },
        "item": {
          "id": "3d5a10a8-3875-4b5c-9866-771cc488410e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "454e0aed-3996-4328-8c9b-b68beee2457a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80750820-0362-47ec-be17-43d70ea86ca6",
        "cursor": {
          "ref": "30fae786-2107-4c90-b82e-541cd7de010b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ef215590-fb04-4708-8cfa-c0e561ee1080"
        },
        "item": {
          "id": "80750820-0362-47ec-be17-43d70ea86ca6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2589dfaa-4425-4fed-a7ed-7a513e87c32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d05373f-03d1-43b7-bb7f-9730e1bf7e66",
        "cursor": {
          "ref": "98a40c4a-7c9b-4c2e-9d75-251660f9b3eb",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d431e875-fc2a-4557-b4b4-f7b355088a25"
        },
        "item": {
          "id": "0d05373f-03d1-43b7-bb7f-9730e1bf7e66",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e6493ffc-324b-4548-820a-2ba6abf516a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de52bb1-5a64-4929-a447-80637d8a4370",
        "cursor": {
          "ref": "1a547e29-e8b7-4cc1-ba64-5d7bf7cc9f87",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cf120dc9-02d9-4571-bad2-200c4fb5e9d2"
        },
        "item": {
          "id": "6de52bb1-5a64-4929-a447-80637d8a4370",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "94f11bf5-693f-4a98-af05-ed32d72e7222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13790f61-b1dd-4935-8583-870cadbae7fc",
        "cursor": {
          "ref": "f00c91a4-98cc-4217-a19d-f43009fd36ba",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d1f9b724-01b7-40ea-a37e-04622c2edb78"
        },
        "item": {
          "id": "13790f61-b1dd-4935-8583-870cadbae7fc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b6eccc37-917e-41c8-bd53-62a07d9e50f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406220a2-cc0a-40d3-9a22-2e09a41d45b0",
        "cursor": {
          "ref": "7703675f-4916-4b68-be14-cf3bf15a7cc4",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ad2a3d91-3790-49a2-93c6-63745b36e7fc"
        },
        "item": {
          "id": "406220a2-cc0a-40d3-9a22-2e09a41d45b0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c6dba6ab-59c2-4cd4-9b3e-f5195ad7e50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbb5457-2366-4374-8ac8-15d9a8ee4b84",
        "cursor": {
          "ref": "876d7ab5-f8be-4922-ba2c-51ac16f274a4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7a946bc2-2df6-43ea-b4c8-e87235c503e0"
        },
        "item": {
          "id": "3bbb5457-2366-4374-8ac8-15d9a8ee4b84",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "73a6233c-1880-4b3b-af44-cd4a366fd4bf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 102,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "a1cb3ffb-8b1f-4244-a402-5c77912b601e",
        "cursor": {
          "ref": "328a167b-ad13-45f4-b870-c9a6ea936af0",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "54ee3704-fb45-4f43-82b2-fe6eedb20489"
        },
        "item": {
          "id": "a1cb3ffb-8b1f-4244-a402-5c77912b601e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f4c8ab6e-c1b8-47a9-b126-3393c295f8b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11fd696-11f2-4791-b101-613dc5610aee",
        "cursor": {
          "ref": "e099907a-d1f3-455f-9ddd-78062c874089",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bdc96d69-e98c-4be8-ad17-7e350049732e"
        },
        "item": {
          "id": "c11fd696-11f2-4791-b101-613dc5610aee",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bcc76806-3264-4f1f-94c6-154387195eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3464643-98cd-4e6d-a17f-ca1148fffd5d",
        "cursor": {
          "ref": "1dd4608f-1b7d-4275-ba55-3217db5b8992",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "04019dd3-7923-4010-a325-d35098aaa0f5"
        },
        "item": {
          "id": "c3464643-98cd-4e6d-a17f-ca1148fffd5d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6017102a-02b2-43dd-9282-dae3e3277f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27afdf3b-6336-4953-b639-a3a525f3eeb2",
        "cursor": {
          "ref": "8a1d061c-5737-49cf-9266-79e33d5f29c2",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2b230829-4aa1-41ac-80ff-0d58ec5ceb57"
        },
        "item": {
          "id": "27afdf3b-6336-4953-b639-a3a525f3eeb2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ab39cdb6-d4e1-4b23-b112-fee49b862882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc15e59-7038-4063-bb9b-d32d2fd301ea",
        "cursor": {
          "ref": "7f62321a-9131-400b-87cd-b7a1ce7e1e98",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b5fb2a9f-8132-4097-849a-5a748598109b"
        },
        "item": {
          "id": "3fc15e59-7038-4063-bb9b-d32d2fd301ea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7abc47c0-12a0-4e9a-a912-da6ee26bdd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47153195-5687-43b1-9090-718666e06962",
        "cursor": {
          "ref": "b8f30a15-6605-4175-87d1-22f91cc3c4ef",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ec1e220f-94fb-45ee-9a89-84b646cd13b6"
        },
        "item": {
          "id": "47153195-5687-43b1-9090-718666e06962",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "32503ce6-6faa-4098-9686-6a3ebb66c2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc01c299-2dc1-4ac8-96c1-cd6a6b73df6c",
        "cursor": {
          "ref": "477bb456-9972-4bb2-9807-f496160e899a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "82b41391-63ba-443a-957c-a5ed6dd11199"
        },
        "item": {
          "id": "fc01c299-2dc1-4ac8-96c1-cd6a6b73df6c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f435bd01-0c63-4209-a92b-eb94d1c431bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa725b3-e8c2-4b2e-b482-8b1cef91e7fb",
        "cursor": {
          "ref": "06e651a5-96d7-498a-92c5-3aa7ee8efcab",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "19c020f2-d366-4f6b-9a27-bce024ed1c80"
        },
        "item": {
          "id": "7fa725b3-e8c2-4b2e-b482-8b1cef91e7fb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2027b229-2ce4-4120-82da-008c2e00e7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44af5a7c-7948-4769-849b-a63f7db084ca",
        "cursor": {
          "ref": "809e611a-c37b-4be4-8ba4-0990f67fc96c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c3b81666-b571-4cd5-874a-eedb007a7fd7"
        },
        "item": {
          "id": "44af5a7c-7948-4769-849b-a63f7db084ca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "88b55ea9-c884-486d-a5fa-7d2683b089d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0335c619-f5fa-4637-87e8-e9dd054eba4a",
        "cursor": {
          "ref": "414c4c47-0b67-49e8-9d03-96f89e583533",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "533ef4bd-3b57-4633-a4e1-397d639f3d4f"
        },
        "item": {
          "id": "0335c619-f5fa-4637-87e8-e9dd054eba4a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "65abc038-bc2d-4148-808d-cc2e92314cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29a954d-0529-472a-8452-47c31aa290d5",
        "cursor": {
          "ref": "833b43a6-3de2-4f36-ad3f-7185769d790a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "857ef5a8-2374-41da-a011-9604c9ba43c4"
        },
        "item": {
          "id": "a29a954d-0529-472a-8452-47c31aa290d5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "960805bc-340b-4dcf-8dea-86d3f5248fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3f2da9-39fc-41b5-a459-f6a202c55f7e",
        "cursor": {
          "ref": "694b5d5c-56f1-4e9a-b223-0384e18cde12",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "50653447-3604-4a29-a369-3b888622b18a"
        },
        "item": {
          "id": "9a3f2da9-39fc-41b5-a459-f6a202c55f7e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9b0cc3d1-da40-4b82-9740-4d73c9b5ebaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acea503b-a90a-4bdf-9006-6d2fdc8850aa",
        "cursor": {
          "ref": "834d93c7-5eb0-46ab-8163-c5d20d17a8a7",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8d348bd5-b567-4267-ad35-d3d7e7985207"
        },
        "item": {
          "id": "acea503b-a90a-4bdf-9006-6d2fdc8850aa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "561b308c-5bbe-4085-a311-565cbdc88f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b109e9eb-e4e2-4756-bf82-747fe71916dc",
        "cursor": {
          "ref": "b6210bcd-b401-4393-8ac7-5dad0e34d94a",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ef1de400-8b74-415a-bf4e-ced516886d83"
        },
        "item": {
          "id": "b109e9eb-e4e2-4756-bf82-747fe71916dc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "be6ad35a-956a-42fb-b477-65500301c348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70744490-f311-4d7b-93b9-51f389cb45f1",
        "cursor": {
          "ref": "b6eb5a06-38cb-41c1-9ad9-dcb8e35def59",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e1c2c551-81c4-4fd7-a495-18e8190ed763"
        },
        "item": {
          "id": "70744490-f311-4d7b-93b9-51f389cb45f1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8d98c531-c7d0-4a83-b556-1a2332921d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698c3025-0b92-4c1a-92f2-b119673c6bce",
        "cursor": {
          "ref": "907ac46c-801e-4369-a3c3-f030a15cde18",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a5a5376e-1e79-4aff-b5ce-6603b2a54e34"
        },
        "item": {
          "id": "698c3025-0b92-4c1a-92f2-b119673c6bce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8acfabaa-a7f3-4539-adac-d5bbc1694b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307125b8-e824-4d5c-a016-101655ea39a1",
        "cursor": {
          "ref": "5576aafd-a020-4a80-b783-d4f49bbd9200",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e4abfaa3-c3dd-4a67-94e5-a2f8f6c0c87d"
        },
        "item": {
          "id": "307125b8-e824-4d5c-a016-101655ea39a1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "05c90034-4509-4832-8355-07094ca7adea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b0c76b-2417-438d-97b4-624d8b6475b5",
        "cursor": {
          "ref": "56fecbad-c7f3-4394-862d-0159088ecfe0",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "accdd877-e485-4bff-a440-9e28eab670ce"
        },
        "item": {
          "id": "67b0c76b-2417-438d-97b4-624d8b6475b5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "52301d88-9006-4a5e-a448-46aedd39eac9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "8a707073-6a8f-4c77-9dd4-93abbd362924",
        "cursor": {
          "ref": "c05d075a-4ec6-446d-a347-214466c70fd0",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6821b888-56cb-49a5-aa66-ad06ed3bbada"
        },
        "item": {
          "id": "8a707073-6a8f-4c77-9dd4-93abbd362924",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b9914f4a-37ec-451e-b727-6681d5e868f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d3ec46-6182-40cf-970d-2d394c9bb67c",
        "cursor": {
          "ref": "e5421d3c-51d2-49f2-a7bd-5cd5bef470ae",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8003024a-fd8e-41d8-ad2c-656dd7949f50"
        },
        "item": {
          "id": "54d3ec46-6182-40cf-970d-2d394c9bb67c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8460dca8-a85e-496e-b1d1-282129af1315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea295c0-714f-4c70-80f7-e525d77f30e9",
        "cursor": {
          "ref": "5bfe1ec0-f1fe-42dd-8ec5-a63dd20aa68c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4ff66458-8e0e-4f3b-8c4d-20454e4ed295"
        },
        "item": {
          "id": "8ea295c0-714f-4c70-80f7-e525d77f30e9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e2197030-cbc9-4f37-b4c1-d1c6b1d3fa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c937a2f-9b9b-4eec-bede-92196c084405",
        "cursor": {
          "ref": "e5ab716a-e341-4f91-9652-343dd38ae9c1",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b9887bd1-6ab9-43ea-92cf-348a438f5d0c"
        },
        "item": {
          "id": "4c937a2f-9b9b-4eec-bede-92196c084405",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "895e2c97-d99a-4fad-a8c6-837a789a6a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76329b4e-eb1b-49fe-8f64-91d22694a8e4",
        "cursor": {
          "ref": "9def7a74-0625-4e4e-bbef-f47bffa6337f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "71720d9e-2ee2-4ba6-96ac-39171001210b"
        },
        "item": {
          "id": "76329b4e-eb1b-49fe-8f64-91d22694a8e4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d3427b6d-83eb-4710-9f51-cdb02a5d4203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89e61d7-6f57-4981-8481-d87a26f1084a",
        "cursor": {
          "ref": "c5240df8-83ed-4531-8d28-cf2901aca910",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "818e7369-36fe-489a-b319-86f5f5a00c29"
        },
        "item": {
          "id": "d89e61d7-6f57-4981-8481-d87a26f1084a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cbd6ecde-20c3-4b47-9525-0ab9e5d7b6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a26a0fc-21e5-45a3-a340-765ade17a4b5",
        "cursor": {
          "ref": "8776bad9-fff5-4d18-8434-3747155c7e99",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8c95317b-8714-4358-af26-63c73ce56315"
        },
        "item": {
          "id": "8a26a0fc-21e5-45a3-a340-765ade17a4b5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d541295d-4721-435d-b850-4b35df4612f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65edd1f1-eccb-4a38-b032-e456171672ac",
        "cursor": {
          "ref": "779f197b-3689-4022-a3e5-34e0ea762f56",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5de98883-c1b0-49a1-9259-385c8881b531"
        },
        "item": {
          "id": "65edd1f1-eccb-4a38-b032-e456171672ac",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6315d274-8d0c-48ac-a1ca-91b85e35d982",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "07ad2bb4-9b35-4b9f-9047-247e66294789",
        "cursor": {
          "ref": "9e211496-2f5f-41d7-a8f0-da21cac170da",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "af79763f-3ea6-4dfd-b99c-1befeb9e83b8"
        },
        "item": {
          "id": "07ad2bb4-9b35-4b9f-9047-247e66294789",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "26e59bb1-97c2-4d7c-980a-c71fe0ecbdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169cb85d-cb7e-465e-9b9c-78f8b8c5375b",
        "cursor": {
          "ref": "e91d2e8d-b263-423c-a383-ee6a98be6372",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "014b9f78-fbfc-49ec-adea-046272435033"
        },
        "item": {
          "id": "169cb85d-cb7e-465e-9b9c-78f8b8c5375b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ec511da0-5829-40b0-b5b2-99d54a3a8fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327febe5-03cf-4f42-aae5-2045bf4630f7",
        "cursor": {
          "ref": "3e4b183d-7384-467a-92b9-9df1538d5749",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b207b925-09bb-4368-96e2-46f45d910ed5"
        },
        "item": {
          "id": "327febe5-03cf-4f42-aae5-2045bf4630f7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bb5ef9b0-395e-4bcd-84ee-fa3d26ae2b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89794b5c-21b2-448d-b0ea-995a0b74db99",
        "cursor": {
          "ref": "e0fc3d2c-2e8f-49da-84ff-aa40f397aab1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "369548ab-675f-4216-aeff-937a0f15d6a1"
        },
        "item": {
          "id": "89794b5c-21b2-448d-b0ea-995a0b74db99",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4b70c109-1069-4e13-9b19-b5757f962a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848248a7-bc14-49c0-b205-c58ef2ac6c80",
        "cursor": {
          "ref": "13896eab-5847-42bf-89b0-ff9f952b764b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "69890950-bc1b-4e5b-9ca2-a472b16bf59b"
        },
        "item": {
          "id": "848248a7-bc14-49c0-b205-c58ef2ac6c80",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "16859f7a-d9ec-4ae2-aa11-c77caddf82a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ed50b4-d813-4b62-b782-35550c8f4ae6",
        "cursor": {
          "ref": "de4b522c-c66b-4d7a-9cce-f4cda982c167",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "09b4d41a-0608-4b45-bd28-b1c50fc79c72"
        },
        "item": {
          "id": "79ed50b4-d813-4b62-b782-35550c8f4ae6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4151f65d-6630-4099-9549-ecc5bd8518cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b812fb67-eab0-4bfa-946c-0b536e5b5441",
        "cursor": {
          "ref": "de917986-b812-43c3-9755-0f01f6ad64db",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ee1aae2a-152f-45b2-b577-0b2524a95571"
        },
        "item": {
          "id": "b812fb67-eab0-4bfa-946c-0b536e5b5441",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d133f486-21e8-4dc7-85b9-8f01ebde3711",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "90e99f0e-1138-4d44-9de5-f59a33f41170",
        "cursor": {
          "ref": "43dfbae0-e1b5-432a-b34c-82e0c6ebed5b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d9520c66-71b0-426e-b265-60fb3af0d2bc"
        },
        "item": {
          "id": "90e99f0e-1138-4d44-9de5-f59a33f41170",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5b3b8c09-f31e-4fef-b994-8d984e44b7b0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "be9a5734-6836-4607-9a7e-e97b32d38ea5",
        "cursor": {
          "ref": "3f84b979-cd32-4560-8927-3cbfb8537413",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d39b5efc-8377-4c40-8112-fe492e384815"
        },
        "item": {
          "id": "be9a5734-6836-4607-9a7e-e97b32d38ea5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fb639a90-1fb0-45db-bf34-658e75eebb9a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "73f2ba7c-3119-4542-8365-db84f43725d4",
        "cursor": {
          "ref": "da2789df-fae4-425f-9060-b99ad822af03",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c20096c3-dcb3-424a-a0c8-c502ffad79fc"
        },
        "item": {
          "id": "73f2ba7c-3119-4542-8365-db84f43725d4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "da57e541-4516-4578-a286-4027907217b6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "583123e2-5df2-42f2-9970-e17ce8391805",
        "cursor": {
          "ref": "380b430b-85df-4e84-9951-c18a7d75fef6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "73ed0117-1148-41db-94a0-3135fc84ce7c"
        },
        "item": {
          "id": "583123e2-5df2-42f2-9970-e17ce8391805",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4cfb0ba6-ea47-42f4-90ce-b58fe6fff0d5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "e78f3f6f-4342-483b-9513-28e3871f9690",
        "cursor": {
          "ref": "f7b3ef74-1a0c-49fe-8697-fed086f6595c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0dba1dc6-4546-4f80-951e-da2a5a45cb6d"
        },
        "item": {
          "id": "e78f3f6f-4342-483b-9513-28e3871f9690",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "538bc799-7d15-49c4-b540-6b79a61d6edf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 112,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "73d32ad7-6961-4068-b993-f74021236a85",
        "cursor": {
          "ref": "02ebaaa0-dcc3-4d28-899f-6ede1b370201",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c056f2c0-c5ba-40f5-bc29-2a4ae244380b"
        },
        "item": {
          "id": "73d32ad7-6961-4068-b993-f74021236a85",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dc6a48a3-b9c5-4da2-aa7f-384b7c3282c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9304efe3-4b15-4c23-928d-78d90728f64d",
        "cursor": {
          "ref": "772bb17b-c673-4426-8fe3-8431058f4c7e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1fc0e92c-1245-4f6b-ba68-6e6e044f584d"
        },
        "item": {
          "id": "9304efe3-4b15-4c23-928d-78d90728f64d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b9dc192e-d1be-4ae6-b305-cb30a056ec5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d412da53-bff7-407c-88b5-f5ff07732515",
        "cursor": {
          "ref": "1d5aadfb-f6ae-456e-bef9-ae9e785ae966",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e3dbde8c-531d-4470-a0aa-4297ac58ee33"
        },
        "item": {
          "id": "d412da53-bff7-407c-88b5-f5ff07732515",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f2ac3bb1-1aff-4270-8644-2ed05b124fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ffb363-bbbf-492b-96c2-bf56031c54ea",
        "cursor": {
          "ref": "143e8a2b-b980-4f8c-8d44-c4ec18164980",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0512314a-a438-4dfc-9a69-0782aa5bbe6d"
        },
        "item": {
          "id": "a9ffb363-bbbf-492b-96c2-bf56031c54ea",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9a89698b-8a4b-48e5-8c9a-ed58fe2f20db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea37db9-158e-4ed3-a176-d5bb82ac3a9f",
        "cursor": {
          "ref": "41cee8fd-99e9-4a50-92bc-c52681cae9f7",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fed31ca4-9a25-4857-bd4d-8a3f3b000b30"
        },
        "item": {
          "id": "dea37db9-158e-4ed3-a176-d5bb82ac3a9f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "99c24469-3299-4d00-8585-1a7298eafaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cb408a-288e-44a5-aa0b-506e8bc21d51",
        "cursor": {
          "ref": "eccac826-abd5-40d7-b862-ffa42d2fb4b2",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "99aec9bf-2b3a-4379-91c9-022be0b5844a"
        },
        "item": {
          "id": "72cb408a-288e-44a5-aa0b-506e8bc21d51",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f3bea51e-bd46-4ac6-bf94-7d5a65fe37e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddae4c4-f9b2-4a56-ad1f-db027657b303",
        "cursor": {
          "ref": "1ea57cb8-a480-4ed0-891f-c0ed0d2faf2f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0955caee-898e-4435-8148-bd645b9020a4"
        },
        "item": {
          "id": "cddae4c4-f9b2-4a56-ad1f-db027657b303",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "220c019d-9db9-432d-b64a-f8a8c1244a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9000321-62ba-4b77-aa4a-196f96c92e8a",
        "cursor": {
          "ref": "e3a61b3a-ae5b-45b7-b58a-bc2c4ffcb0bb",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "11bc2a0b-70ca-4927-bc33-ce0786c66224"
        },
        "item": {
          "id": "b9000321-62ba-4b77-aa4a-196f96c92e8a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "014f4661-c552-48a0-b457-aa0e5f20f9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac22249b-3868-4416-a162-cc901a7ef24a",
        "cursor": {
          "ref": "7007b9c1-df5d-417c-a36d-e3d8c38abbb9",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c41c4e35-b070-4735-8911-fe2e8c54ec41"
        },
        "item": {
          "id": "ac22249b-3868-4416-a162-cc901a7ef24a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d0ca6caf-eae1-4539-9d85-4fda9ec5cf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0864eecf-7132-4c13-b1c2-12809754b192",
        "cursor": {
          "ref": "b6ff6f55-e2cd-4c6f-9551-378b9f22edde",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2eae5c4b-3df1-4563-a329-4cf00672983a"
        },
        "item": {
          "id": "0864eecf-7132-4c13-b1c2-12809754b192",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d2d3c04d-8183-4f22-b9a4-eaf8d59f0101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff7a0fc-13e7-4f97-8f6a-456cc249784a",
        "cursor": {
          "ref": "628101ea-6c3e-49dd-90cf-59f51461a901",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "19cde023-0b36-47b9-96c8-b052379640d6"
        },
        "item": {
          "id": "3ff7a0fc-13e7-4f97-8f6a-456cc249784a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4fdf7103-7f72-40c3-a587-32a6703dd02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6eab1a-3266-4398-a23f-42b3507f56b6",
        "cursor": {
          "ref": "c5421912-fa4b-409c-add3-90f810765f64",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "842f822e-a88d-46d0-8500-2903ce9e35a1"
        },
        "item": {
          "id": "ad6eab1a-3266-4398-a23f-42b3507f56b6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cee59a78-f781-4eae-afc0-7182947f450b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e40689-6da1-4295-bf16-885ee704e707",
        "cursor": {
          "ref": "d1b1d4ef-5027-49f7-be37-07c1ed3888f6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "16976022-6c2a-4de6-927a-c6c34ddec58c"
        },
        "item": {
          "id": "d9e40689-6da1-4295-bf16-885ee704e707",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "05dab458-97e9-4c3b-85cd-d980bc50dc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496a55b7-b3dc-4b1c-8d95-e6bb79b69f87",
        "cursor": {
          "ref": "d26eeca2-94fb-4deb-9d41-a1a8608a1cc0",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "442dd9a8-db09-4b5d-a572-f9df4c6770de"
        },
        "item": {
          "id": "496a55b7-b3dc-4b1c-8d95-e6bb79b69f87",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3e956313-11cc-42c4-8bbd-a5e8839a811e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b94bad-f965-4fb5-b758-e38b7990276f",
        "cursor": {
          "ref": "467a4ad8-82c9-438e-a91d-c523d221180a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5b7debf6-113c-41a1-b446-f2c625d77742"
        },
        "item": {
          "id": "f3b94bad-f965-4fb5-b758-e38b7990276f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e8f5d278-5a95-4131-b602-2ce8583907b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5071edf6-ea16-4351-b861-3c8f6c656e16",
        "cursor": {
          "ref": "1a56789f-d3f4-4f1e-a11f-cf2456ecbaef",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0f987c89-73ce-4a17-9011-657710277e03"
        },
        "item": {
          "id": "5071edf6-ea16-4351-b861-3c8f6c656e16",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6a8d223d-5912-4388-9d00-ebcf5d1f24cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3464dd-c77f-4574-9002-5f690d3db914",
        "cursor": {
          "ref": "b91cbb49-f41b-4eaf-a77a-d4a3f2156726",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d1424762-fc09-4229-92fb-acd7b07daacf"
        },
        "item": {
          "id": "2f3464dd-c77f-4574-9002-5f690d3db914",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a065bd4c-faf6-4a11-acd6-68b4233080f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f8272c-889d-4dc0-a3d1-ff2cbec38504",
        "cursor": {
          "ref": "6cb6f9f1-3d5e-42d0-a525-fd41f742d1d2",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6948fc82-26cb-4a46-86ff-78ab34d9fcb3"
        },
        "item": {
          "id": "91f8272c-889d-4dc0-a3d1-ff2cbec38504",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "49d3b91e-953a-420f-ae5b-6d67b05429fe",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "49481b9a-e382-4020-b67f-c7efddfcd7fe",
        "cursor": {
          "ref": "74be0436-b213-4089-98fc-630335b11553",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5785b937-1a63-4000-a455-2d1e6afe3d7e"
        },
        "item": {
          "id": "49481b9a-e382-4020-b67f-c7efddfcd7fe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4cdf21e0-d5b7-4468-b6d4-f053836106f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286d60da-3f3a-4e18-b417-d91a6a75d77f",
        "cursor": {
          "ref": "a703003d-02bf-40c4-b1fd-a08cfe58c096",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2efe4ab4-aeec-45b0-b572-ffc166aea850"
        },
        "item": {
          "id": "286d60da-3f3a-4e18-b417-d91a6a75d77f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "59b1404a-ccb2-42f8-af27-8f697d22cfd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d98933-22f6-429d-b8e8-43a0a3b3928c",
        "cursor": {
          "ref": "c5aa669c-989c-4ed3-8ecf-ea62ff389192",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4cf68c2f-cc9e-4534-812c-4adda48ca239"
        },
        "item": {
          "id": "a4d98933-22f6-429d-b8e8-43a0a3b3928c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b77ec31a-8f05-43ed-803c-6e8865d4818d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4628c940-5c5e-4e4b-9bb0-45a8ebb1613c",
        "cursor": {
          "ref": "31f35798-4537-4636-bd99-746bcd1c3629",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ec1fe236-f98b-4df7-be1c-d0afc8ab680c"
        },
        "item": {
          "id": "4628c940-5c5e-4e4b-9bb0-45a8ebb1613c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9156f9c1-f011-43a5-9282-9785c7010a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3fc903-352f-4598-b8c1-76b97a393214",
        "cursor": {
          "ref": "8a1e4301-69fd-4004-8155-59a14a37c5d4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "26d757ab-4f63-4cdf-be56-75f65d2f2b27"
        },
        "item": {
          "id": "ac3fc903-352f-4598-b8c1-76b97a393214",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0560cf76-d43f-47b8-99b5-39eae8f42092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be13e45-88ae-4991-904b-8aefd7e45769",
        "cursor": {
          "ref": "c72ad2fb-0dc8-4c92-b39d-15440d9e0e93",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5dfb2289-f58a-4b1b-be46-6ab6d66a6222"
        },
        "item": {
          "id": "3be13e45-88ae-4991-904b-8aefd7e45769",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "987f24bd-9a3e-4f89-95dc-568da1c7bd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92b04a2-0682-4b58-a2ba-eb7e1de50335",
        "cursor": {
          "ref": "48879fe4-5006-4059-af8b-a04c75f043f3",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c1834c2b-c379-44af-baa0-c6aa695e6f8b"
        },
        "item": {
          "id": "b92b04a2-0682-4b58-a2ba-eb7e1de50335",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1eaaef1a-f391-4f4e-afd7-28adc47c9293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e249ca-89b7-4e25-aa6d-c08b22b5d050",
        "cursor": {
          "ref": "d4c28a47-d1b8-47c1-9524-baa9e676fe8f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "248ef70b-a778-478b-90ee-cbcf32ba866e"
        },
        "item": {
          "id": "d2e249ca-89b7-4e25-aa6d-c08b22b5d050",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8f398828-3f84-42fa-a874-2c3d645a9e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480ed11d-6300-49b3-adc4-a1efc7a83308",
        "cursor": {
          "ref": "d29bbde1-9386-453d-abb5-ea335195d4b2",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3f56b715-fe41-4943-9d9a-a97ee8ab5f25"
        },
        "item": {
          "id": "480ed11d-6300-49b3-adc4-a1efc7a83308",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ad384eb7-2b89-46bb-abaa-3967bc6f9391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e6a6d6-bd86-4f55-9538-5e509e1b68d4",
        "cursor": {
          "ref": "ca1979e1-b9e8-4d48-96fa-60ab3a71b85c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3179c9f8-8031-4d6d-9998-b9d39076a670"
        },
        "item": {
          "id": "56e6a6d6-bd86-4f55-9538-5e509e1b68d4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "67c3794c-ec10-4f84-bffa-34f35eb555f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14ba462-52b2-4e8b-aadd-00d49e1113dc",
        "cursor": {
          "ref": "56d5275b-677e-4a82-acfb-ff5510314b17",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cc02403b-ed83-4791-8477-d9b4ad4934fa"
        },
        "item": {
          "id": "f14ba462-52b2-4e8b-aadd-00d49e1113dc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2f347a10-de5e-45be-9287-573cf362bcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7b684c-59a2-4c73-990f-eebf71e25156",
        "cursor": {
          "ref": "c24e3922-8336-49cf-913a-f51e25ef6781",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4cf3e7e0-71e3-4de3-9ec3-1463ab133953"
        },
        "item": {
          "id": "4a7b684c-59a2-4c73-990f-eebf71e25156",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fc310abb-b0cf-46c8-bd84-b3f8a3091f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650a752a-2d43-4444-9609-246fd9b56089",
        "cursor": {
          "ref": "e1c9c2fc-7e72-4918-ae4e-474b81e5d8bd",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7c3444e7-1fdf-4c39-9282-7322a7e2b6ac"
        },
        "item": {
          "id": "650a752a-2d43-4444-9609-246fd9b56089",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ee84e60a-dd1f-4adf-96f7-c6d3a4e51b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051ef87d-3a77-4a51-89ac-a8413e6a91b6",
        "cursor": {
          "ref": "c54d91b6-ada5-48aa-93a3-91c9e4fc5612",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a15952f1-e1cc-42f2-a759-b28254c12f84"
        },
        "item": {
          "id": "051ef87d-3a77-4a51-89ac-a8413e6a91b6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9eb18af3-62e1-4041-80e6-0c9f4139d683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa5a644-d70a-456b-8112-c125ece65d5b",
        "cursor": {
          "ref": "16d4ba57-487b-4706-80cc-4713f6fa13b5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5a4f38bc-8887-4949-aba4-f82faebde052"
        },
        "item": {
          "id": "4fa5a644-d70a-456b-8112-c125ece65d5b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f7150934-23f3-4e57-a7a7-7009592d566a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10016fe4-c16b-46f6-9577-860b3f05cfd6",
        "cursor": {
          "ref": "3a9b1b93-c9b0-49a5-9dfc-ca2c7f5d046a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7222a18e-f3b6-4679-96b6-23591a2e1f78"
        },
        "item": {
          "id": "10016fe4-c16b-46f6-9577-860b3f05cfd6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a7815af5-d291-4bb5-853f-9aadfe52f4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19781f3-4731-4a63-8a3d-fbc82f56690d",
        "cursor": {
          "ref": "9dc9401b-cb2e-4ba6-898c-c092ffabd9e6",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9a5128c6-c840-43bc-95d7-b4ca56a19919"
        },
        "item": {
          "id": "d19781f3-4731-4a63-8a3d-fbc82f56690d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7b686710-7fc4-418d-a170-a4b615cdb218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba9375d-0e01-4317-b581-630c8a2558ef",
        "cursor": {
          "ref": "5179b849-47cb-477a-8354-671ac850870a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1d2496f4-ce3d-422c-a7b1-4ab13283f12d"
        },
        "item": {
          "id": "eba9375d-0e01-4317-b581-630c8a2558ef",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "577c718a-6fe1-4c1d-a5e6-de93f6a12351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78789700-62c2-4f3b-a1ac-fdd5240f025f",
        "cursor": {
          "ref": "33ff6e7f-2d20-4d5d-a752-36d84bb544da",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c11f2afa-15e5-4946-b5e6-5915719b5276"
        },
        "item": {
          "id": "78789700-62c2-4f3b-a1ac-fdd5240f025f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "efe49a2f-2983-4a9a-886a-c3bbe3b6eb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7493611f-a97f-4a99-b8b4-3a493ce63eb5",
        "cursor": {
          "ref": "08848299-0699-4aa2-b83f-3c1f7924cdcd",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d209dc03-cac1-4c80-bf99-e2997c1aef2d"
        },
        "item": {
          "id": "7493611f-a97f-4a99-b8b4-3a493ce63eb5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "965b3efd-d6c1-43a8-bfdf-96c2b7e75d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2674b8a8-4570-49f6-af99-dc64e41d47f4",
        "cursor": {
          "ref": "3174e3d9-de3c-4289-a69a-6a2dafe66334",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0d681b2f-f8b1-4cf3-bd6b-c0e4630e8a19"
        },
        "item": {
          "id": "2674b8a8-4570-49f6-af99-dc64e41d47f4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "df5295be-cfe2-4579-acb1-8da97b947573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5656556f-5953-49bd-934e-d4d0038e45b0",
        "cursor": {
          "ref": "563fea84-6767-40a3-889e-98bfdc572fc7",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9e9f6a91-ad28-4d06-a26d-4c62fd59666f"
        },
        "item": {
          "id": "5656556f-5953-49bd-934e-d4d0038e45b0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e3015ad1-772d-4b82-ad5f-c3a0d670c31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8f055f-69a0-485f-bf8a-bf8ce366837c",
        "cursor": {
          "ref": "060e6e60-0015-4a69-893d-673e4c91b366",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2870a42b-39b9-4e36-abf6-b01e0093fbff"
        },
        "item": {
          "id": "fc8f055f-69a0-485f-bf8a-bf8ce366837c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fef00411-b4a1-4af9-b303-ad13880f8b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0131a467-7b92-4844-90e9-b469a0578e12",
        "cursor": {
          "ref": "472708ea-5836-40b3-bc62-ceecff38c571",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8e49336f-f49e-4a06-8e68-f1a6bbcfa086"
        },
        "item": {
          "id": "0131a467-7b92-4844-90e9-b469a0578e12",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e47061e2-121b-4cc5-b5e4-b9b02e892a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733a0aea-1d39-4c47-bb5a-bc5289e7fa82",
        "cursor": {
          "ref": "14459d7e-efd7-4f8e-a167-9f64654a678a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "95909133-394b-4ee0-9739-caccce6abf3c"
        },
        "item": {
          "id": "733a0aea-1d39-4c47-bb5a-bc5289e7fa82",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c1f91e21-d7bf-4679-9215-def394749fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2717599a-8066-43c6-8125-d53b4d70b2f5",
        "cursor": {
          "ref": "377b78cb-211a-4a2a-9624-5b8d7c703635",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b80b01a5-1f1c-46ff-88c7-2c236a566107"
        },
        "item": {
          "id": "2717599a-8066-43c6-8125-d53b4d70b2f5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a4d3cb7b-8561-4d91-9d2e-36041d89e452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7a8988-0095-4332-9388-9e0311f9a90b",
        "cursor": {
          "ref": "6a56c317-0c06-4c75-b75e-d4c3773bac0e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9d678daa-98b1-4921-964a-97c18b67e6b4"
        },
        "item": {
          "id": "ed7a8988-0095-4332-9388-9e0311f9a90b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ab96d717-aa06-4931-80a8-8e132bc5224d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f1bd63-af14-48b2-bb84-dd0a53627225",
        "cursor": {
          "ref": "22ac1a0d-81fc-44df-9888-143733ffedaf",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9a466c8c-9c4a-4916-a245-ed474edf9c3e"
        },
        "item": {
          "id": "78f1bd63-af14-48b2-bb84-dd0a53627225",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "be7f56fb-89ff-433e-a80e-024c9d9a8029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b210caba-8298-4ed7-ac66-ff048c2826a7",
        "cursor": {
          "ref": "b69d7c5f-bfcf-431b-8b0d-aa98f1b5ed2c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7ad807c1-d14f-44bb-8a55-8f6957fd39be"
        },
        "item": {
          "id": "b210caba-8298-4ed7-ac66-ff048c2826a7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6036c7b8-6636-4161-9631-4b6a93ba2d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8660e0b8-4dea-4e74-8b6c-9ef23a3cf183",
        "cursor": {
          "ref": "8a0e6ecb-9183-4836-95a0-c9ab372e1ea7",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "91941243-1404-45f3-ad3f-ee3c9b2aeff4"
        },
        "item": {
          "id": "8660e0b8-4dea-4e74-8b6c-9ef23a3cf183",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de61c23a-54b7-46ca-b515-ab199f838183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59c895b-b182-4ee8-9ea0-de1f629bfd45",
        "cursor": {
          "ref": "19710529-9e88-4e73-9929-e712388ea8bc",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "58265236-ecfc-4134-b5f8-7f8d0d8fe411"
        },
        "item": {
          "id": "d59c895b-b182-4ee8-9ea0-de1f629bfd45",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "64c28a94-1410-4f7a-98be-4c1e364f6506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be58d052-6093-423e-aebc-2cc16e5f7823",
        "cursor": {
          "ref": "7fe973c2-0174-45d1-8b81-f8cfdafbbf62",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ff1735df-1ef8-470d-8634-f7701b231237"
        },
        "item": {
          "id": "be58d052-6093-423e-aebc-2cc16e5f7823",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "81cc328c-af8b-4083-9fb0-ee7b1db54e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2358d5f3-7dbb-44fd-81cc-24399dc69860",
        "cursor": {
          "ref": "265027e3-70f5-4bd0-b9c2-854423ebd57e",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6145912b-1d4c-4e1a-8b3f-2a8ce9dc2d42"
        },
        "item": {
          "id": "2358d5f3-7dbb-44fd-81cc-24399dc69860",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "512904b4-d5ea-492b-a697-a3c4013292f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce37e332-f114-4602-9682-2898252ba098",
        "cursor": {
          "ref": "8cd9338e-2ddc-4a4e-a8ca-95a878b7149c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "234d1731-5c5b-4998-833f-acdb0ff751be"
        },
        "item": {
          "id": "ce37e332-f114-4602-9682-2898252ba098",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "25f6a136-6fcd-4350-ae32-7619eea8665b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a3bd2e-d24c-4924-bc1d-8438a47f019a",
        "cursor": {
          "ref": "c0a61bd8-e98a-4b6e-841a-0655632a9ea5",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ad16fc62-a0eb-4131-8bc7-08607f9eb70d"
        },
        "item": {
          "id": "09a3bd2e-d24c-4924-bc1d-8438a47f019a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8f057677-7bf4-45ef-bdf3-0be4d7f79dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68dad5e8-d5cc-4611-9161-fd8ad6591e51",
        "cursor": {
          "ref": "f03e5cf8-4ea6-4c2f-a305-05588d251bb7",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "32b8a346-0d05-4be6-88ad-7cfd8e49283a"
        },
        "item": {
          "id": "68dad5e8-d5cc-4611-9161-fd8ad6591e51",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b0366309-cb64-4803-8ac9-01305b4abc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2fa2e8-c871-4f35-a3be-5243e327c246",
        "cursor": {
          "ref": "f7251e00-2cfc-4d4a-8f59-c6847fa6753c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c2d82f41-c77c-4745-9e2b-a01b6614185f"
        },
        "item": {
          "id": "aa2fa2e8-c871-4f35-a3be-5243e327c246",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ef36a6f3-a3e6-41f0-b2ab-1d64f993fc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5b2aee-02b6-4edf-bf98-7015aac2deaf",
        "cursor": {
          "ref": "918f5ca3-e8a1-4315-bf71-6674df914b2e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "96b160c2-b355-4771-a5b9-870ff813baff"
        },
        "item": {
          "id": "9e5b2aee-02b6-4edf-bf98-7015aac2deaf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "70ce0a60-b766-4711-b043-447a767dc0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb6073d-3cc2-4b59-b906-e220e06c62b8",
        "cursor": {
          "ref": "cdd489c6-eea2-483c-853b-4679f2c618d6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f3ed7f78-92b5-4eb7-89b1-fafd0b3f671d"
        },
        "item": {
          "id": "fcb6073d-3cc2-4b59-b906-e220e06c62b8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "da3d7ff2-0d8b-4203-8f42-7a199b75e368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62c4d81-0669-4332-b5a9-11c0b8eae9e9",
        "cursor": {
          "ref": "69aa7b53-2af1-46a8-af99-00efd1a54694",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c4046132-7bf2-4d41-b0f1-3929467df388"
        },
        "item": {
          "id": "e62c4d81-0669-4332-b5a9-11c0b8eae9e9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "01a0a53a-01fc-4237-a0ff-d11cd181192e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a19218-d67a-47f5-80b2-c64a127af761",
        "cursor": {
          "ref": "a524c128-f991-444e-b4fe-8655dcd3e08d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "77aaa404-926f-450a-bb72-8393ee3e4ff7"
        },
        "item": {
          "id": "01a19218-d67a-47f5-80b2-c64a127af761",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "70612d25-35f7-45a5-bbb8-16e33fa486d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b817db-2954-4657-a10f-7fe384dec63e",
        "cursor": {
          "ref": "9181354f-ead1-43dc-aa56-7140cdd0d1a1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3518afef-227f-4787-8829-6a4631d71e3c"
        },
        "item": {
          "id": "57b817db-2954-4657-a10f-7fe384dec63e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7f95e70e-9df1-4e25-aa31-2968960c0eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4f8ab6-badb-408b-a4c6-d149b1c3a78e",
        "cursor": {
          "ref": "c08c6fef-1120-4c9b-884a-fb2cde922ebf",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bc476e32-dc6c-404c-a8e8-bd08ecb5e16e"
        },
        "item": {
          "id": "6b4f8ab6-badb-408b-a4c6-d149b1c3a78e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a710a0bf-b7e3-4a73-89f7-52d5840390f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76213f3d-f3ab-476e-85bf-4759b02a3c5b",
        "cursor": {
          "ref": "5f69ec02-f801-425a-8471-fbb3614a38ae",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a6b8efce-65ed-478a-82b1-dfe01f46adbe"
        },
        "item": {
          "id": "76213f3d-f3ab-476e-85bf-4759b02a3c5b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7f917a3a-f1a4-43d3-a816-7fd264b3d0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcdb9f9-c116-49a3-a3d3-cbccca97d711",
        "cursor": {
          "ref": "70e91dc8-0488-4215-8ff1-ae6cf5f48f9f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7bad82bd-19ee-4435-a29a-69a03f829685"
        },
        "item": {
          "id": "5fcdb9f9-c116-49a3-a3d3-cbccca97d711",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9b1b5fcf-7d04-4a0a-bcc6-8aa7d5261425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1253c2e6-fa60-4cd8-a0c8-2f394c59e18d",
        "cursor": {
          "ref": "2a819e9c-8bf8-47bf-8016-c44786d3b17c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "96335da6-a600-4070-b10d-840ae0b1c969"
        },
        "item": {
          "id": "1253c2e6-fa60-4cd8-a0c8-2f394c59e18d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8972a6ab-76a5-4944-86ba-79511aeb890d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fb84a7-5444-499b-aeef-dc54b89ea004",
        "cursor": {
          "ref": "364dc329-c555-42f5-9849-84124f6dfc9b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cc53bb03-838e-46c0-8ca7-9b7c4581c8c6"
        },
        "item": {
          "id": "b9fb84a7-5444-499b-aeef-dc54b89ea004",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f12b2b82-9827-41cb-9717-d5d9ef6e2f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c2f3da-c460-4fda-a32b-da8a5a6416e4",
        "cursor": {
          "ref": "56989d96-f275-4d17-b9c8-8cacdb5bfd3b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6276008e-933b-44c3-8cdf-19de69b552d1"
        },
        "item": {
          "id": "76c2f3da-c460-4fda-a32b-da8a5a6416e4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "52269316-245d-40e2-93c7-e4b56878e0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd16f921-bc3c-4b93-a7be-13b978036582",
        "cursor": {
          "ref": "1f29d745-e0df-4c65-93fd-3243a9ee42c0",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "79820a83-b1d5-48e8-bd1d-ecccb4ee4f12"
        },
        "item": {
          "id": "bd16f921-bc3c-4b93-a7be-13b978036582",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b1ee6c7b-42e1-4897-87eb-b4d139a96902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c475cd10-58ad-4be6-8e41-427504bbad38",
        "cursor": {
          "ref": "481df03e-37a6-4a3c-95e9-3834ecc83bc5",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "581e5edd-97db-4c27-950b-da1bb8aa2d54"
        },
        "item": {
          "id": "c475cd10-58ad-4be6-8e41-427504bbad38",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ae61cd47-b357-4556-b291-c5abaa205985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667f17e4-e28f-4746-8c6b-227324e4a566",
        "cursor": {
          "ref": "13fdb821-8749-430b-8ffc-a6d6ad8f9298",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "70ca9517-bec1-4c2a-b511-5ef563c277bc"
        },
        "item": {
          "id": "667f17e4-e28f-4746-8c6b-227324e4a566",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "000916c3-6fa9-43d4-968d-34980c370273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cf4162-5769-4c94-8e43-2cfebcac32a1",
        "cursor": {
          "ref": "06113051-adcc-4341-9830-f2fafe70eb92",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ca432abb-a336-4c47-be2a-e85aad91b792"
        },
        "item": {
          "id": "06cf4162-5769-4c94-8e43-2cfebcac32a1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8f6f1859-44e2-4e04-b715-6a759b35d1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef36e337-bcb8-430e-a6b7-a03a71c7ae3d",
        "cursor": {
          "ref": "fa2feb91-5635-4c58-a7d3-42515a270826",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2a48f3ba-d60d-4082-ab7d-99f4702fbb3b"
        },
        "item": {
          "id": "ef36e337-bcb8-430e-a6b7-a03a71c7ae3d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f239f653-a2ed-4910-838a-e8e9e599d4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e319fb79-bdcd-4dae-8fc0-28d07e473481",
        "cursor": {
          "ref": "bfc431b1-036d-4b84-9505-0cf5e484483e",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a2b22cfd-aa4f-45e4-b186-634c3e8c6586"
        },
        "item": {
          "id": "e319fb79-bdcd-4dae-8fc0-28d07e473481",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e77a5983-9323-492d-a438-c28fe0c82c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5805e957-cfcf-4fff-a619-ee5b5513fbc6",
        "cursor": {
          "ref": "aa61f028-1f80-48cf-8a43-6010591b4da5",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2412fc18-b589-4487-9a86-62106bd5ad01"
        },
        "item": {
          "id": "5805e957-cfcf-4fff-a619-ee5b5513fbc6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "692c34c2-0772-4195-acab-a098e7c1c9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4a9166-4e81-4099-8d69-a889e16ba6c0",
        "cursor": {
          "ref": "1dc9210d-a95d-4a9a-92df-cf01ab22174f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3d22e958-d717-4bbd-8924-80077bb9e8f4"
        },
        "item": {
          "id": "0b4a9166-4e81-4099-8d69-a889e16ba6c0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "785520de-7e17-441f-8337-287612da4067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dd2031-d237-4d2d-abc2-13c20f9940db",
        "cursor": {
          "ref": "940dfee3-c538-438d-8354-69266c09d297",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e9411d9f-40b0-4743-9652-63bd73e1080e"
        },
        "item": {
          "id": "73dd2031-d237-4d2d-abc2-13c20f9940db",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "398688b8-7e4c-46a4-b812-b8d6b0dde59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc70bf0a-285a-4e7b-9423-e47d29095d5b",
        "cursor": {
          "ref": "0b4cfaf8-bc3c-4644-98b5-35c9ff0e6c4c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0608dcd3-1a6e-43b5-b922-a10075ccac83"
        },
        "item": {
          "id": "dc70bf0a-285a-4e7b-9423-e47d29095d5b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "06d588d5-88cc-46e3-915b-f4a06c780d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa38049-c904-4618-a0cd-5ec649fbc76b",
        "cursor": {
          "ref": "cac76ec9-71e0-416b-bb5e-4f09ff0bec8a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "765e5917-4e2a-4dd3-8c28-fce178e0f8a1"
        },
        "item": {
          "id": "ffa38049-c904-4618-a0cd-5ec649fbc76b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "855ba9f4-2d6f-4b04-bc54-2da0de796c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c98a9f-cca0-460d-acd9-a3decc875538",
        "cursor": {
          "ref": "ade99540-2936-4285-a549-d1cad3e9903d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8d7d429b-63a3-42bf-8655-2c686dff93f2"
        },
        "item": {
          "id": "d8c98a9f-cca0-460d-acd9-a3decc875538",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "43660e42-3f7d-4c8a-ac38-401047b94c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d993e7e-f5b7-47fb-8bee-af1a90159995",
        "cursor": {
          "ref": "a306b64c-fcbe-4e35-8e9e-60652d1fe5a7",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "52689dcd-ed8c-4554-a17f-8005b3b66926"
        },
        "item": {
          "id": "9d993e7e-f5b7-47fb-8bee-af1a90159995",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fb2f7479-2f7c-4f7c-af3e-ede2eb3db9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5402693b-c2bf-40e6-baff-6804ae284e1f",
        "cursor": {
          "ref": "d9a8ef92-389a-410c-8a1f-6afe51f5c321",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "73d1c80d-e310-4157-bd02-776f897df27e"
        },
        "item": {
          "id": "5402693b-c2bf-40e6-baff-6804ae284e1f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c510bed7-4810-463f-ad76-8daf42fbfe11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e12dd66-e99c-4eb5-b58c-5cf82c569135",
        "cursor": {
          "ref": "a5477e78-f58d-432f-8969-be3bcef8715f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "066e30ab-634b-4d88-aa65-36feee2013ab"
        },
        "item": {
          "id": "0e12dd66-e99c-4eb5-b58c-5cf82c569135",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "97af7e40-fae1-45df-ace1-302390ee2897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7468e58e-b9e1-4104-81e8-b628850ff8fb",
        "cursor": {
          "ref": "9a2e4bb6-c254-42cd-a453-681d6f864209",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b8e5f026-f196-4157-a0d1-5994ef80c8cd"
        },
        "item": {
          "id": "7468e58e-b9e1-4104-81e8-b628850ff8fb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2308ed81-f901-4c19-b2b8-13ad3767fbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da37fce7-12ad-4ff2-891b-eaf3d2693d35",
        "cursor": {
          "ref": "6ce92ee9-c295-440d-8000-2776b62ea37c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9b98e4d3-9734-4e0b-a351-ba70221b45b3"
        },
        "item": {
          "id": "da37fce7-12ad-4ff2-891b-eaf3d2693d35",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "db78ba56-d1e3-4126-8452-8bd86f7c3763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becafdb9-c5f6-4618-a6fa-b05f3cd6d92b",
        "cursor": {
          "ref": "55d65a8e-72b1-49b5-95ef-aa6426da20bb",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bb055db5-cf18-4898-9491-24beb7e1215e"
        },
        "item": {
          "id": "becafdb9-c5f6-4618-a6fa-b05f3cd6d92b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "41c972e9-a095-4be0-9a24-56836a7f5df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91931775-dfb4-42e6-b216-9b43c8ba1b76",
        "cursor": {
          "ref": "da780b05-e2e6-493b-afa7-0980252fa772",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9828797b-7381-4084-aafa-5cb576475573"
        },
        "item": {
          "id": "91931775-dfb4-42e6-b216-9b43c8ba1b76",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c11a8db3-ce7e-4aa3-a49b-85d938643259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4de727-bbc7-4bfe-b524-3ceed36ff234",
        "cursor": {
          "ref": "110af6fb-e67b-45ea-b763-dadd424e139e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f5c7b025-5f9e-4bb4-a6e2-8e123bdeaa9b"
        },
        "item": {
          "id": "fb4de727-bbc7-4bfe-b524-3ceed36ff234",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ed9b65f8-2593-44b1-af63-579b083b2415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4034425-84d9-4d4c-a5c2-1d53b0fcbc5b",
        "cursor": {
          "ref": "aa9146d0-2f35-4a24-ae17-20364c0e73e5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a397242d-8ca1-4b46-9fd0-934b79804339"
        },
        "item": {
          "id": "a4034425-84d9-4d4c-a5c2-1d53b0fcbc5b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d2dcf3b5-1baf-4ffa-9ab9-369b82ff6b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d6eb64-8eca-40e9-91d4-cf036b28809e",
        "cursor": {
          "ref": "b9f3e106-6de3-4b7b-b411-f5edff22c6c6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8adc2edc-d1c2-48b9-a918-b17399ccdf79"
        },
        "item": {
          "id": "43d6eb64-8eca-40e9-91d4-cf036b28809e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c5c720d2-bb1b-4f8b-b31b-4ee0194303f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc224512-d1a4-4069-a711-450462954b91",
        "cursor": {
          "ref": "f22b4904-6d61-43af-b5db-d9e1e89bbc95",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6e854acc-60c8-44d6-a98c-d98b0526622c"
        },
        "item": {
          "id": "fc224512-d1a4-4069-a711-450462954b91",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "02c84e04-512e-4e0e-8f29-f5b70872da94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de476a9f-22cb-4519-9b54-0784cba86abf",
        "cursor": {
          "ref": "25d5895a-3209-4be2-9bcd-0d2a5b34f787",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d4d97f5e-12f1-4f2a-9e2a-7787ae43d57c"
        },
        "item": {
          "id": "de476a9f-22cb-4519-9b54-0784cba86abf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "69e8fe28-3005-46c1-b75c-88753de19b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9268993-c33c-4a04-bcf7-1b692cb5a7a8",
        "cursor": {
          "ref": "2ccf376e-0a22-4640-94a6-a6727f4a8c1b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d613f72d-b8f0-479e-afbc-3195d6aff455"
        },
        "item": {
          "id": "d9268993-c33c-4a04-bcf7-1b692cb5a7a8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3250c886-f382-4324-ae0e-63117fc922f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a22e15c-24aa-4211-b10f-880415253715",
        "cursor": {
          "ref": "4a4904bd-c1cc-49e6-8f0b-f44c024a8152",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d8d7c88d-4c28-498c-bfa5-cfe170be7b31"
        },
        "item": {
          "id": "3a22e15c-24aa-4211-b10f-880415253715",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "df61d900-0c82-4637-9574-d67e4572ef2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b54aad3-c117-46ea-9935-6a612b4a2845",
        "cursor": {
          "ref": "d756aa37-829a-472d-8556-1c7f9bfe9ccc",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5d0ee160-9f30-4d03-b97e-a67510d08e92"
        },
        "item": {
          "id": "6b54aad3-c117-46ea-9935-6a612b4a2845",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "149a982d-4fde-40fc-820a-f59e5c131866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d313226-a079-4de7-aae3-9cdc2d9fcb24",
        "cursor": {
          "ref": "8afbeb7b-0344-4b9f-b4cf-13d6492b9c63",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3103c804-ea74-4815-98f9-e394dea657a2"
        },
        "item": {
          "id": "8d313226-a079-4de7-aae3-9cdc2d9fcb24",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "783575f5-294f-485a-a195-fffa0db5c93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1c1420-240f-42d9-a409-68bf320656de",
        "cursor": {
          "ref": "d9ec5cfb-f841-4e1e-a366-3cd94a60d45d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8696ded1-e612-4324-bdf6-35a4e7413d38"
        },
        "item": {
          "id": "4a1c1420-240f-42d9-a409-68bf320656de",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "85e8a422-d776-4a0d-bd22-a5c33e346da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca1771d-ee13-4faf-8942-8fb5039e5a10",
        "cursor": {
          "ref": "9fb4eef9-6b7b-414a-8d38-a765bd4fb821",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b58694f3-835c-47db-a675-8dceb521d87f"
        },
        "item": {
          "id": "5ca1771d-ee13-4faf-8942-8fb5039e5a10",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "355b59cf-3606-4e44-a2a2-40cf83c1dc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e0e0d6-85e9-44d9-b181-e37abfb97460",
        "cursor": {
          "ref": "ea75c091-5c0e-4553-a8a1-1b6ff42bfc5a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9e42805a-4438-47f7-b1c2-6b01411d2d92"
        },
        "item": {
          "id": "f1e0e0d6-85e9-44d9-b181-e37abfb97460",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "10877b22-b0ba-44d5-93cb-1ead1b1538d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db0417f-7d9c-4567-87be-02787c85f775",
        "cursor": {
          "ref": "6ec64c05-46d6-46bc-80a9-25cb34fa1e03",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1fb5d6ff-7bf7-4779-8e0b-d723b897b839"
        },
        "item": {
          "id": "0db0417f-7d9c-4567-87be-02787c85f775",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5a9a45e3-9915-4d15-bd6f-0304874f28ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bc133e-5f86-4a5c-8b42-55712a95da8e",
        "cursor": {
          "ref": "fcfdb851-f3a1-4924-895f-531c4b9d3355",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6dcc4a00-3757-405d-a06b-a9f71cba1be3"
        },
        "item": {
          "id": "41bc133e-5f86-4a5c-8b42-55712a95da8e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6d6653cc-af90-4a98-9c7f-4ad72fd7669b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377c4834-b94f-42d6-afbb-530654f24d01",
        "cursor": {
          "ref": "4d0a5ac5-569e-4532-b965-0a550f6a6a96",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "de049586-2bce-43f1-9163-50675a1481f9"
        },
        "item": {
          "id": "377c4834-b94f-42d6-afbb-530654f24d01",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5ed1ec97-7c5e-4d2b-99f1-84a6d3ca2da0",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "af286108-6546-4484-b899-2d3a664327f6",
        "cursor": {
          "ref": "b42822c6-eb28-410a-8a32-7c12ac7740c5",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "56f57fd2-9908-4fef-83af-a43d971da143"
        },
        "item": {
          "id": "af286108-6546-4484-b899-2d3a664327f6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "508e113b-6d84-4afa-8964-16d9451286cf",
          "status": "OK",
          "code": 200,
          "responseTime": 3369,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b588c8-3dee-4a3f-aa73-c3fe5845c14e",
        "cursor": {
          "ref": "c090783d-4a87-4f42-b271-a2ea5f4a4734",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "10255b60-51fd-4a69-9287-bfb27144eb6e"
        },
        "item": {
          "id": "97b588c8-3dee-4a3f-aa73-c3fe5845c14e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "91b9e36e-aded-40e3-99ad-96b3a91710e4",
          "status": "OK",
          "code": 200,
          "responseTime": 2747,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "184e24ac-8a1d-4c0e-a008-05843fe32bdc",
        "cursor": {
          "ref": "05ef6543-b62b-44ad-b9b5-3a5658c300ce",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "65b05e49-2f9c-482a-84b5-443282f63e97"
        },
        "item": {
          "id": "184e24ac-8a1d-4c0e-a008-05843fe32bdc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff81bc46-8a6c-4ccd-8ab6-344ccc4889c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184e24ac-8a1d-4c0e-a008-05843fe32bdc",
        "cursor": {
          "ref": "05ef6543-b62b-44ad-b9b5-3a5658c300ce",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "65b05e49-2f9c-482a-84b5-443282f63e97"
        },
        "item": {
          "id": "184e24ac-8a1d-4c0e-a008-05843fe32bdc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff81bc46-8a6c-4ccd-8ab6-344ccc4889c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bb611b-eb41-4893-a3b4-91b00a85b1c3",
        "cursor": {
          "ref": "d52cfdd7-fa2d-4319-af80-ee7f4200e73b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9aa51ec5-0cc0-4580-9eb4-031e93094ef7"
        },
        "item": {
          "id": "17bb611b-eb41-4893-a3b4-91b00a85b1c3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aa54b8dd-29c5-4f46-b4b4-dc7f768de9d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbfae98-54c1-48f7-ade2-49f3cb946a11",
        "cursor": {
          "ref": "d4bc807f-522f-4e1b-a601-28a993c7c365",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "266322ea-3290-4a39-8828-d970fba19fdd"
        },
        "item": {
          "id": "6bbfae98-54c1-48f7-ade2-49f3cb946a11",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c6aff735-5458-4162-811b-55ad4b344675",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}