{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2cf7b7d3-e11e-46db-bad5-8437aa700915",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4ab250a5-2a7a-402d-8fa8-08f4412f03e5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "066cf353-7684-439b-a9bf-b68da76bc814",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "98d343ce-b2c8-45ca-811d-0895c163eebf"
                }
              }
            ]
          },
          {
            "id": "4cf090cc-ac0f-4cae-a438-dd4783dddac8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b3a00c4-e5c7-4423-a0fe-49c26e28ffcd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2374bb9e-205e-437a-a461-0c97245155a6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b73f3d8d-deae-482b-aaf3-ea76ffc3de7f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a949eeb1-8192-407a-a384-0e0d6d84d50b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a23bb84-3434-4957-a544-978236766f3e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26478e37-8be8-422e-ab29-53fa3673b125",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b2c5ace-bccd-4118-a5ce-fdd2a801b86d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "26ecd681-d9de-449b-8fff-e497eb2c9b8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5c53260-306e-4ab0-b8ea-cc4b9c8a9641"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4bed7ee0-4853-43dc-b50a-0490295807e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c122bd5-21e5-4216-86c9-7caacf226cd8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "381c0950-4eaf-4f00-829f-7eb96c230ac2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "07dd3b96-74f1-47a3-ad27-c940d66bf6f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f69c5ab-6686-47e0-a5af-9449d3145d8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2021745f-daf4-48d5-85c3-1242322faa94"
            }
          }
        ]
      },
      {
        "id": "0b54b6bd-f4ea-44a5-9ac3-b38c0adfc386",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "74fbd1cf-8dc6-456d-b52e-218f881e17d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dc59fc5-df0f-465b-a6c8-759ac0cce216",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c88729a9-3607-4d0c-ab25-b94010e226b1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db61c812-0aa6-4684-94ce-fb6fd99855b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff881f03-e64f-429d-9ed2-d28fa5e54f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f7865f-d32c-4045-a397-a715f29309de",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e4252e-6f7e-4ad8-afac-56b15fb5f2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "787e96a7-badd-4d49-8305-fbaf7a599562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def8f1cd-1738-48ad-b8ab-88aa80ec232d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91da9e4d-4f1b-4cc0-8b02-387290f332ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47de5125-1e2a-4252-92ad-8bbad43108fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f84db407-49f2-46ef-9432-540a654c674d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed7bad65-0227-4627-92dd-ffd020183e31",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f0717b-64f1-4959-a9bb-ffd3ece39034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8309ed0-5de9-41f9-b219-d9db95fec49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e893896d-32a3-499c-8f99-3738da899878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7513c6b2-7734-43e8-ba01-48ed99c17a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d07831e-ea52-4aef-869c-eedadac1404e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce88966-2380-4b26-906c-b66d4a0465f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ead03ac4-99e1-4847-afe5-e19ee434541e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033d4d20-508a-4697-96ac-585fe430b027",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "31d83959-31b4-47d7-900c-9fb494b3a848"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "43e6aec2-c344-4ca7-baec-16fa81d4fc2d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70bd06b0-fe4c-4117-8c17-56d19f57dce1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d2cab44-1f59-47a9-8c56-921de89318e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "384247d9-aced-48cd-bde6-7f399a511a2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8568dd7-7e77-4b3b-a915-964913780786",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "80ebb2a9-3a5b-44f9-a5c0-267179796bc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8846376a-5b6c-4539-82ad-6a4f320286d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "050583d9-fec1-47ae-ae1d-df07f3c96d55"
            }
          }
        ]
      },
      {
        "id": "d7c94dd1-6d0f-499c-ad24-f0a3cf606dc3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4c9b07b7-1fd2-4d75-a054-6b279e104554",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f055374e-3745-4d33-b2ea-785654fcac20",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c30082c3-347a-4e81-9871-976398146584",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec83dce-d16e-4a78-9865-fa0c97b42e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d5da7e-b629-4566-984c-83260892fdf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f456f6-5098-4f37-9332-146102202f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dac4dac9-af28-4124-867b-ea08df97ee19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35741a6-6134-4599-80ca-591bd5191c7b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35e6b4a-9549-478e-8b4d-872e513b50c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012e425c-223c-490a-9647-fb7aa0a227f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cbf8ba-c090-4c33-89ec-cecb27998f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bb35709-876e-4168-b4db-286b413acc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfa9ee9-9d4e-4431-8230-dbda23388226",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d512062b-ee0f-4c24-8a51-4864c6184695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d4c873-7b6c-428d-b9e8-a636e7f0d0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db39b5b-6848-49c8-9910-ebbb11231fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b39c68f0-7b53-4b32-af2e-9ce3f4ca63db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3795a49-a9c0-4e20-a39c-99e978086aba",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634f4fbf-4026-4bd5-bf9d-67349d4f721e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5739da-27ac-4ada-a716-b4f2a281760b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04eb5bbe-b356-4b20-92c6-85790b021312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee9d46dc-e27a-4ae2-a3b3-cce828315a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0673bd54-b16a-45b8-89f3-ff975f4645ba",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58aa2089-669d-4ed6-a81e-f39d309c5556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd401ef5-f204-4256-a06c-545958af8e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c595464e-ff63-4aa2-be85-0f62c4cf402c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4dde8bb-70a4-48c0-8d74-87724c3f933c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b051fc-866f-43d9-911e-15887967edec",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d516d7-4faf-4d26-a1c3-17d0a3c5d157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48366527-4db1-4916-b16f-09393570412b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114fe365-b254-4fd3-9da5-a1b5501fc699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e35c682d-e905-4a92-b872-96cdf285682c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c78576-8d65-480a-833c-fd2ac097add7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22e7dc0-d240-4429-95f6-5b6ac22acb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5fdbb4-133f-4f94-b55c-a826742a77e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b5f2ab-730d-4061-bbc7-fefe18b142d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c8a9902-026a-46df-8fd5-ee28925ca19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71880d0d-56dd-4c32-b904-777f54d28d95",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2686c9ba-e2fb-486e-ac03-c90a335c2d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142a980c-0a38-42e8-b4d7-e05aed93804e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5e19c2-d1bc-44ab-b2f3-82fbc32982c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a12fca49-5e5e-4e9b-bc6b-047b06b8a649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebad3f7-3f82-43bd-95ee-fe467b75acf6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d2114d-6fee-40d5-bdbe-6dcbafa20e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1790259d-a95a-4778-814a-a371bfbac77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d191ff3d-282f-4c14-928c-cc78f36453d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd9bb357-150f-482c-84df-42760d831660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba764fea-c444-4a5d-96a6-5a75380fcd03",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb460b46-af5c-4bb5-9051-ca210f3fed17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91630f39-a64a-4fc7-862b-a10fd48b35a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704152ba-5d51-48c8-bcbb-dede8aacf507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92ec8f7b-2985-493e-b95e-85192507927d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfb40c5-8f6a-43f1-8fe3-971cf3c971ae",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db9dde0-3a23-4ccc-943c-f9a309a4d4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49c64ca-b971-4a4e-952c-8fc89dbe4383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c37cd1-b172-4c97-bf3c-31947532bdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a932c65-2214-4dff-b528-569bf329da98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e2c129-4ae7-4b9c-abef-d3c0667e645e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd4374c-ca3e-4bb8-a696-4d9f03cc5e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd141709-53c8-4169-8c92-fb7b11e3390e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bebe77-8dd2-4794-9301-6b961976a1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca356c7b-77ab-4000-a707-3f6a5bb33f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65026686-ed83-4cbf-a687-f8741b823b87",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba90124-432c-45f9-a856-55d992c253d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb20a8a-ddc4-4983-b856-69b304bcfcaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb5d6d2-30b5-45fa-8eed-6b1f5e5ba092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22de6b9e-5511-4cb0-a1cc-8d8c396c35ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e02985-6444-4b64-9ea0-7ec73c6f8860",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a64d2f-1ee0-4a0b-93c5-e0742df8fd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83ba4cd-416e-48b6-a8f5-d06d2c4f4100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d4a191-eba4-443b-a9da-0e565a30905b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05118629-3846-4afe-80c8-00a6bc8b3dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0267eb91-949f-4938-a26a-1a9ba3010c1b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5742d913-0e3a-40b5-891e-98dd08dfb0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c8f7d1-3373-4e43-91b0-5d4d15d0d259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab7c1b6-a93e-422a-a759-0b295ea3acbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cf653d9-eb9a-422c-8965-a1f6eb30b4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0606bd63-4b0d-4368-8765-fa6f37d3b950",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe50848-6c3b-468f-a181-1a01d8a1e6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e852367b-01b3-4b16-87e8-8d26830ce7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d468c7-f999-4deb-8456-ca9830618ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "456a42a5-46a5-4370-b7c2-cf6a9a761e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157d90c0-83ba-49a1-a1f6-a4bd0c091bfc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25133234-2dde-42bc-98a7-93e5749fc821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e700aecd-6fe4-4000-a92a-2e0698824073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed704a3-1bce-4768-8d4d-98318ba937fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6b83edd-e698-4a8b-8344-d972b4931254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5394be-48fd-4bfc-a0eb-dc134b6db760",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab5debf-887d-4e6a-b0dc-7f4d863c189b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d860ba-45a1-4acc-a223-e6b13d3f2789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2110cf8-6eee-42e6-abe7-8cfe423592fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4528df0-8c4b-4a3d-9e07-eaaad184774d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d6c20b-ebe8-46e3-9866-bd862bd640a4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6a284c-a919-48df-a993-bbb20fb1651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70f00f2-d502-4bce-ac80-3d500aa6579b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9b4a03-6c0d-4e6f-8447-737e0faf9cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "171cae60-f40c-44f7-b364-00024e708c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f4fffc-f447-4fb4-be1a-e54ee41c6d0e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2320d5e-bbfe-4e36-87ae-b55767e8dab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e1f966-4bc9-421a-bdc6-47b66e193d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc074fc8-b801-4710-b944-d7c278352a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae2986c-9416-4731-b886-963d5c053b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366803f1-f186-4973-ba7a-a70018a32a9d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50465299-9bb7-46e3-b3de-f4ec7d3ec9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e20b685-f6b8-4cdc-a4fc-c9751fea99d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1143f98-0400-4870-9ecd-07515b375b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d528ba1e-9292-4f5b-97bf-38c5286f0cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d79625d-8cba-4404-9cb2-74b9df7344bf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b917cd05-85c5-41cc-bdae-3deff2cd533f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328e5de0-b287-4682-9c29-84e41d333f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4d30da-4e16-4439-95b0-5e659c9a8661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c133a8f-be2f-43c8-b7e0-c340e57b6b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cd03cd-ff8c-4994-9516-1347edd27ce5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e711ce5a-e90f-40c3-82a9-bf9ea8814078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1147cad-e375-4157-8772-737a2f3400a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbc9d07-de3a-4518-9afd-50a78c449421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab61888a-46fa-4383-a7f3-0793d81afdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fad193-5717-47ed-895c-8855d101283d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de715602-6ab9-4171-b83d-b3f1d3e024bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63fa4d61-dc09-4fa7-a11c-94b7ac627e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfd6d66-3f34-495b-995f-bbbf9cae052d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc548a6-4552-429e-a989-17c0a1a04b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c124047-15d6-428b-bed4-8ef674b99d95",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f14aeae-73e9-48e1-ad36-2e37cb1ea5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ac43ed-fb3d-410a-a6a6-f874c60cce1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d76aff-ef82-4f28-b98b-dcc4f8ac55e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a76550d-b4d3-4af6-848c-691697118447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a86a310-bc42-43cd-b2c6-5c898c261667",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b072e184-2f8c-4a8e-9c55-76cfe729df4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71b9544-d3f5-4fd9-9b0e-130b4454e4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e44a0e9-409e-457d-930d-0a550a580fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a0b583-9648-4634-bb5b-af4817a1f773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cc332b-d77d-469b-9c57-1d080c0badd4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0bd32f-79eb-4006-a542-836088bc19b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dada70be-0f97-4f38-bd2b-a441fe8e62ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0206a4e0-f5be-4448-b99d-fce1c77d4fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3daf9ad-1d4f-49ae-a710-10b434c77e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4f18fe-f804-4908-a95b-8535c7d64b16",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30a2b79-6d72-4c7f-87c3-71f4dfe83654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a9a565-8c2e-4cfc-974e-906c9ecb62bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85541500-853f-480c-a7ab-8434b6ab4aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b548c93b-20da-4279-9e45-85632a1477af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9512469a-042c-4014-b26c-9124d98aa90c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7a1e05-41b0-4eb8-9549-f932abcd9727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fe88f3-102c-4f25-bc75-9f50a08961bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b92f6f3-a44f-45fa-bcb3-62a6094aa7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44b53e9f-38d9-427f-97cb-c9138e92478f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62b0c60-9949-49c3-b1be-3d72f9ca2ecd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f9f1b5-ebc6-4c60-a18a-ef0dd5e55445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783b906e-7b3e-4c6c-912f-8c3bf3295e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5e0f10-f425-4ed4-b44f-524db01b8e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cb9fd7-a5ad-4670-a8ea-8de8a45c6c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5ec086-2052-4044-b79d-3defb6fa1db4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c843bcb6-675f-4adf-afd3-bfff7e20b0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee8cd2e-9ea4-4537-afbb-d199682fa7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e463f7f7-2ea4-444a-bb8c-3cb904b6fd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c55a45c0-5748-41aa-8532-620efd56be0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe7f5a4-99f1-408c-85ec-85a17c356c7e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356304d2-34fa-4207-9d2b-e4150f654230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded0b66e-2727-4efe-8f61-936bd8877eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330b559a-cb31-4ffc-87f0-bb3a7f29b70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "371b8d0c-fac5-46e9-9488-399768eb8721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd0ac8b-24c9-44b3-8d4c-6427f55350cb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc0043a-44eb-4bee-aaf7-41af77760928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fa6eb8-7d02-4734-8d3a-5f00dc0de765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc20bdf3-5112-41e5-a8ea-a219ceb1c3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9805d2b8-9b43-4192-8f81-b5cb243f6eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211fa446-0a13-44d0-a903-e164b08e5f59",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371d1762-cfb5-439c-a1fc-4740c62d08dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d26fd9-33fb-4486-8393-1a15c40850d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55138c7-64e7-46a6-97a7-54ae39034e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72cd1c64-3217-4f6d-9b9f-fee1ee757f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b935aafe-ec29-4c43-bb97-f02adc54fb30",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7b2342-4d36-4fde-ac95-99f516b772e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd682e6-2914-4c8a-bf42-50c88ec4ecd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1fb937-faad-4087-8e7b-06a6ada07f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9b328a52-f482-4203-998f-151816d920c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46858f9-cf19-4859-b1c3-65947f236e62",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e78b36-656f-47f3-8abe-d4cc04602990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f22a462-9262-4eab-a31c-4ea10e574157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e26e9f4-2227-4f98-aebe-dcaba1e3901f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15d96c7d-8f9f-422d-814f-dfb3ba895387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d68e06-31f2-4c8a-861f-c8a93b386370",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fd28fc-689a-4dba-8fc9-ab2debbf16a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4f4bdc-5e5d-4f3d-b43f-1909690e6f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee98b2d-ffd0-4c8c-add5-fece17a2b81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d10f02e-d590-4077-868c-36563c7f09bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f228698-d96a-4b13-b2c6-f0e51d537a98",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb328f1a-71ee-4734-94d2-f9b6c0891d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce23717-b117-4ee9-9843-16e314a09228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb665a56-49ea-4c09-8409-eaf86ce760db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d5d0ec-2c5c-4a54-9b02-4419140dd1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0831cf14-8ad0-4690-b2fe-fab7f428d1ad",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4306e91-6fcb-42b7-b6bf-75eca47ba872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f098186-3d6e-4fc2-9757-2a8e2b532b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3237a476-3c3b-4f43-8483-d0e3052d4301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b05949a-99a3-47ac-87f9-d5ff18708726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e58efd-2b13-457a-b1be-666e4855667f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30528ae-354a-4b9f-a489-7424e6e6b5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc817f64-2741-4821-90cb-82c370efa5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32be258-e7d0-45ba-8bee-60998d4d661f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f45be140-8bfa-48df-bcb6-83a32cadb0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc678554-bc58-42ad-bf66-e7169482e1f4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020b93b8-38ce-43b1-a9ef-e457e16573ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fafce6-4713-4859-a32d-238e2d186fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8b7c2d-b9ed-47b0-a04c-02ffe401c981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8670fb74-fb86-464c-b69d-9a7f0ed4c904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5954d54a-8910-498e-ae31-24ab12af5895",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea37843-9ba1-4157-9b8b-71ba3cc200de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c7ef1d-8103-44a4-af26-dd66dadf71dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8cd106-4f57-44fa-af7b-121a15d59ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4679d507-9407-4f69-8538-0bae75e2ba63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178363b7-ad5f-44a7-b45d-3a8250c15c47",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc1415b-f717-4df5-8be3-40f2101d7d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d293583d-13e6-4356-aced-1aa1ef10efa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0453dc-1cb7-41b0-adbf-d49dbf68a77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "07f8ecd1-50a8-4870-8034-78df0a7adb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db36fb9-68b0-4df0-bf10-203d9eec3e36",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf1f079-391c-400e-aa14-639dd6c6bdd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8705e7fa-5728-4ea2-bc11-20295d788ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca749593-79cc-4ebe-933d-109a0c76c51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce2f702-632f-4384-b72b-454c19103cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73a2d9c-1ea0-48e5-9d1d-2b012588ec05",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e052b7-402c-434e-86f2-f8fe525fd311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35c1600-5d30-4515-891d-85df0aebcdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26087b3c-f249-4420-9e73-8c3e927a9e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15400b88-85bc-4a9f-8d3c-e58759394d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa45c232-1f0a-42e6-8500-16eaa2a98a12",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f02345e-3abb-4123-9a49-ee4dc0ec6e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8731afa-ac46-44d5-9640-23be5e34a53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c12e5d-80cd-44a6-aaec-5d52de2f3efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e66b415f-a455-4b9d-9954-7a6268964660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f617ca4d-ad65-4ece-95a2-f365c429cfbd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a927a510-61ce-45cb-a430-40a052bf4d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1718622-21cb-49a8-a37b-6e727664dc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46eaaa0a-b403-4ed4-bd12-7644bc241c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce72b3a5-a893-481f-9cd5-f935c5762931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f1073f-00fb-4b56-a72f-7973d012d39c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd2aaa6-a22c-46e9-af40-dbb82ad709a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2580f4-4e56-4751-930a-6c151db1a9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c311d676-ed23-4975-a2a4-526bf72f83c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1eeeb2-5405-4689-a9e7-d7ac09e2e488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4840e528-1381-4e15-84a4-f5deef6fe1da",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b651c933-1e0f-4bd9-9604-65951a367b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6432fd7f-3107-466b-8368-4521720d6164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4230542a-4a3e-4347-8276-0d4f539cac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63a3bdae-8979-4fbc-8925-b4fe4d2c95f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1de80d-1273-4066-87ab-6f3fc416b648",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db68839-ebaf-486b-8984-d36b6854026c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100a0fca-fb5e-4721-b23a-ffdb0d858fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3222220-0a47-4743-8947-60c06b74e106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b30a8d52-9062-443a-a979-3568f80aed3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcbfcbc-7fb1-4c5e-8780-cb1fa33ca7dc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862c4961-2f01-4de7-a017-12c8bf27e210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b210c8a3-16f8-48ae-abcb-d0ee79b93704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52b95e8-2e10-4ac9-9cbc-8e473ab1061f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34e3735-05a1-4d48-8a7c-2af2504bcb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ab3278-248c-4057-85b3-94ba868eb2c4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dba99e3-4106-458c-9d78-0545bd7c372e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db4375e-74b8-47a9-b53c-c66d0e2f367b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a314c6c4-4def-41c8-8a1d-5cd171f1b3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1706f05-3f65-4e40-bc93-ded9847dbe5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3144a66-34cc-4723-9ecd-fc44cb190a65",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22975df4-deb5-4f62-a247-799e1791c9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d022762-aa6f-4ea4-9821-0ba21e2a7aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac22adf4-be2b-419d-9a01-9c334075919c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bb135f-e86c-40a7-b443-41e3dd0a3f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79eca23-0dc8-416e-bece-aced7c77ceb2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5389c0d3-17d6-4f4d-b1d1-54dea07d7249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d1c415-3528-4ad2-a8d1-9aca9b304ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53aff6c-5e9e-4067-9c91-13d285f0fceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81d6185f-32fe-44fd-82af-f581492a0119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2219fe56-9aef-4b46-906a-8317f8c4990a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f219a052-1b38-4d1e-a9b2-59f96ae9f5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74914f1a-afa9-4ca1-a1b3-87dc2c9146a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0809dd2a-29c1-4a54-b7a2-8fdfa0799bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d217812-d385-4c2b-9883-4132a2aa70d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15de669a-7d7d-4a86-af34-cb19746f973d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c351852e-3877-4668-9a5d-280db3dbed4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9bb8f4-3b81-43aa-ba24-c75ca0b33f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d325e8d5-3743-47f3-b6f1-2a4834b7914b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5050c28f-d277-4282-aeba-82ce41d6dbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0eed134-82c0-4645-ba5d-85493475e1f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591281f3-6108-43f3-9a8f-b1de44ed2f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8584eb-e9cd-4ee7-aefa-cbb8bbb0be1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2765fbc8-b5f8-4c67-8a8f-23ea6cbcca80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67d42380-75a0-4a3e-ad41-bf4b72e73a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db641b4f-cfd2-4914-bb9d-e2030d92117f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677613a9-210c-4e05-935f-1ba0244daff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ec5abb-37f6-4508-b137-cfa299f0228f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5175d50c-3adf-4357-bc3e-68fda7d16a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d246dd4-3b5d-4e1e-93e4-3fc9fdeecdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2cdd10-9616-4ec2-9b94-e2467654114c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72b6404-6234-4c47-83f1-9ec9cbf8a09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee7a91e-b9d1-451a-9e9e-4a1d9bc2bb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1876eb12-81b7-4498-ac98-6bc57e830c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "95098a5a-794e-4f26-a61f-d89150f81c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f082a3-9749-4183-9b02-031333ea46b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1951c8-a2c9-4e6a-8099-7bcd5a22799f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdd6ba7-ea2d-4a9e-9904-ffe8065b6c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953fdc4f-19a7-4666-8467-f9f865e868c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "46393f5b-1bcc-4191-9a7d-f72c71e96f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d3fe56-5d31-452d-bbb9-6976a229830a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b45e43-4e41-40c9-87a3-a3b7ae5dbe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c588a88-cab9-45de-afd1-700d87806758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e6d6f4-84c6-472a-8074-56d33cdbc5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "53572694-400e-48a3-b88d-a6924a4b4a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106dee6c-41bd-457b-95d7-18a87638b141",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63549c3-8415-465c-b05d-f34d3a090d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8113d6d0-d688-414c-a68b-931f2ccae87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0275206-604f-44f7-b5da-7c61b99a8081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f0b8fa-855f-4b1f-8e81-56af31f65a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f6fe0e-d387-4f0e-8c80-b0089b3cbae2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7507e7-6566-46d0-8e54-f5d45916d252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc2c59a-3e05-463b-a3ee-879c2bc0323d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b90e54-b17b-4a7c-a87b-177ea337e048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebd6272-1ff4-4122-a858-9544250ada0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3895ce3-5ff5-4b89-9b2e-b319ae8a4319",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef5b434-04bc-4da3-80ba-2ee447801d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fc4054-2f2e-4944-bf7a-8819ba85b9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb03f9c-e852-488d-94b9-de8ed01ddfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f184a4-0268-4005-8405-a780aa36114a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5a7d1d-dcb4-4097-87bb-7120e1b9c9e7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec9cccd-d321-45da-b336-7532ed7dcb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5988667f-e1e7-4da7-a2da-1386caf34ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620cebf9-88b8-40c0-831c-084fd4950744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d869d52f-d9db-4946-84df-fa98b2b8da4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f5880a-78d7-44e4-aa1d-15cb45b8b77e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b788c777-2f79-4187-8099-096976f01757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c1cbb8-2683-41e0-a376-b1bc36b147d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bde9f1c-d430-4fc4-b950-c33496bbfefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa0de01-319b-4e56-9352-a5602bfbac89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5bc692-5803-4af8-87f9-49fc0471c065",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714d022e-0c69-48f7-9f92-ed3ab99a54fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26d9ed6-a3a0-41e6-bb6a-f0b7948bab40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5774e4-ddbf-4140-8f1b-bb6a7192e5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63c916b1-1d9b-4907-8e83-f8b4f833f6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef93e72c-87e9-4b8a-9821-95e805893b58",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dd65d1-1aef-450c-907d-57b0b69f989b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9505cecc-6386-4b59-b47a-76d2a943fb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fe43a9-e470-428c-9a68-d0c7669b82e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a74020-c99a-480d-bca8-b689978200c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee99a115-5dcc-4376-b57d-572893565a6b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f42d67-cd96-42fc-9f19-f9ca2ebdb501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088ab961-45aa-4a28-aaed-5d222127f77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60214604-8d02-4cdb-af39-e5b3a979febb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67824d5a-fa64-421f-a12e-06341828386e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5aaa6f-dc67-4f8f-bc88-63856f4bdc9a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c32c0af-2973-43e8-98b0-b3c2f990ccb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ca6bf2-918d-409a-9f6a-1daf46eae58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db79ee60-9d16-48df-ab55-05a2cbc82f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3520b8e-dd39-495e-87d3-bd9f3006af3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2bb0ae-89a8-49f3-91dd-760f642a75b5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a598516-39b7-4dc6-a837-ed3431bb10ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a51d00-6428-460b-86b5-9cb72729bcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75815492-5b4b-4a0a-8905-caafc2762c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20ae81c1-9b76-431f-b4ea-5f2cf669c525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606cd601-c13c-41a2-94d4-096652b7e182",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23da9994-5163-4619-972a-fd58439513e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f095bf-03ca-41d2-b35d-b0ef87c2762c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60634a8-7d06-4508-8ee4-039fb4a53f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71b2d819-57e9-42db-82cf-09bacab48361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343a2140-d1ef-4d68-acc2-4631462e284c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59550812-68b7-4258-836d-facb5869a410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d7c952-3385-40af-abfa-55ff2fa9e86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96058a5-3a8e-44bb-9494-5c1c75ab08d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1fb313-f0da-4df9-8811-59e871f27544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ba461f-5d8e-41f8-8e7a-68c4ee4a1896",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd62bdeb-ac57-45c2-8808-193a98833c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd399d8-b2fb-419d-8ab2-db0a505716ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91832b58-de41-4eb3-87c5-4d18fa07bd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7704b7d-f82b-4bb2-a8d4-0f0def6918a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c895bbc0-04c0-4aa3-b950-3d1810f684c1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d002f2b-d890-4d04-9907-48698eec8a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6261ee-5dc4-4631-9cd6-be8db3ff3112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86139a0c-11a7-4e89-b35b-f5ddcb07569b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41693f3e-1989-4e3b-903a-1bacd637d169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fc6743-0828-4d68-80bf-3624ec5f5dcc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4710812-5137-4417-a32e-0699e0184d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b3f738-87b9-4a11-8aca-922b7e468cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc29a0b-839f-432c-bed7-46dd33ec662b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10311979-8ede-43f9-84c1-79cc97f15280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0257fd09-732e-4dc5-be45-be5a4961f533",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0683f423-7f0e-41a5-8891-0ae2ecee600c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2013a1d0-7cdd-4fe9-b74e-d07603184b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac494ffa-d64e-4fb9-84bc-861d2753687f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18a36276-3ff8-479a-af87-aba15d491df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7bd27f-7f04-4969-8325-03186035b39b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3bce8d-f3b3-4b71-bd8c-e98490bfc526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19418af6-9e52-445d-8ef3-7de1f2e22554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6823fd14-9403-4ff6-974d-29375be2a1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbe445a-cc28-4f37-823e-b23f90786398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de06ced-2ccc-49d9-a6fa-3cc24f6b4c4e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e217bf-9570-442d-9fa7-5989d682a20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c105c7-c7c5-442f-8a97-25542d7742e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c778fc-1794-46ae-bccf-054626a4df64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce8732a-0f31-4cbd-86eb-aa2b786a56f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f775284-6d3b-4c47-937b-f0161d044b15",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d101c12-3e35-4cc5-a75a-78661b6a3d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896298df-0909-4193-9c56-1e7001e326f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5877a3f-157e-4924-a7cb-1a2f4e3c2813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a707de1c-0618-49af-b33a-34882c772321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cece9b6f-e205-4fa5-be51-919c479d522b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afb0009-f579-4f22-a11e-be2cb8b2d53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9e7107-dccf-4ba7-a23e-d8a679fc4908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fefa13-681b-4565-a4c5-f5c785cd0eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceff9376-ed46-4646-aa02-fcf3686dd57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7b28d2-c847-4dda-96b5-82d56a33eceb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd4aec8-46e2-41e0-8126-286ee8e04cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28b4b90-0a75-46f1-a933-4af7ce15067e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98aa06ff-7bfc-4f9e-b7b8-9700852934c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d75544da-f2f1-4a21-b741-24b20c9bcdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56477794-c5c6-445c-936c-f285c3aa573f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6e7fd4-3e0d-4059-b65f-f88ac37fb547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee02d815-4919-4e88-a979-ad9e6aa09e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bb0441-b76e-49ad-b695-43c10fee9560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d501b89-f2b1-4bc8-8a5f-95744ed257d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954d41db-e91a-4586-910d-9b002e16a1d2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852e6a4a-cce8-4769-838e-fb1249f2ac29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e554ef52-fe4a-4843-bd75-d0c733775c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12c887a-d8c8-4c94-aa79-edc6597a46be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebb11a4-1c08-4c80-9d49-b5a22ed5b2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb8e887-86fb-4fc5-9ea3-6add81feab58",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a328fc1-9c18-46b4-9918-f73ff9a23ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4373eeb2-155d-4aca-a776-ce74a6ea4081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c842b5de-4814-49a3-9b71-a79fb80ab1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed7fefd-d065-4f68-b3f7-583f53a68b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f368a0d1-32a4-4d13-ba61-2fb32e8df1ed",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0869de0a-dd5e-4bbf-a27b-b2d90666b392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9c3296-1226-4b24-9a55-c66b386078ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ed7d0d-58c2-4d89-a047-cb868946ed3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7640ad0e-8e5e-4a27-aa22-836627c03068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7218f8-c6aa-4e3a-9a2d-7a08ef4cfa8b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3858605-ec49-439e-8a93-c41fa9993d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c0de1e-fb12-4d39-a8dc-d2376de150e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf80be1-a27b-4add-8042-9a7bc9fc16df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d61f833-d1a6-4fc6-ac59-bb8c5449daa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aaed36a-9747-475b-8463-7e4078f39d83",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9587bf7a-f3f5-462d-b114-02636d27111f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3f7a08-eddd-4b87-b3b9-aa25ebe4052c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a6c272-5ac8-45bc-839f-1c4baa027408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "984322ee-23dd-4815-9e19-46de98590a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6211c9c-2af6-4dc3-8357-e088e35a5777",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0be409e-e6a0-484a-b1e4-1d3ce12a08d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e003ba-074c-40fc-bc61-ced8beff6c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4510486f-2974-420d-8715-3333dede2533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11474031-bad2-4d4f-8096-387f246f5af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea672fc0-a789-43f7-9845-74be8fbf53b3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b339a9-c88d-4935-865c-e52e24c1b853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec09d912-a3a0-42d0-a4cd-4e07b3018310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316904ff-b9e1-4231-973d-39a8bb930564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "34f812ea-1e69-4d3a-980d-77b89f3ccc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da14652a-ccf8-4718-99f4-1f378ba8e11b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06bc40d-0e53-4554-b917-cc69e3d222c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e81b20-7f5e-4070-980b-a14f00d1ff1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88608fc8-ace1-443b-b095-98785d414ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6224fb-66b6-4825-aa95-f2151210b156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a199101f-8efd-4275-a63f-c3abb3b38944",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fdd87e-f8cf-4cfb-ae1f-5b320e7638fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ca438826-43b3-4c26-855d-14e4c5d9f14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dca65a5-721b-4509-9735-090a9b2af6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5026d21-9103-4f51-ac6a-373c26a54f48"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc924331-4cb9-451b-a809-77b3cc5e7746",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3eecad59-4c35-4776-8e8c-ced8a90c47ee",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ec447b-3ecd-4527-8284-1103f1f42a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76491447-64f6-4574-9a7d-ff1465ce787b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca27274-0f36-42b1-87d2-2cd926a66aa7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dc4eda8-3a0c-470e-833c-720ecb602edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd412e3-5245-4aae-b01e-86f013f47524",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0547e6-d245-438c-acab-f3c39d3343fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "063937c6-3658-407d-89cc-1dec5a2c0879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bd7b43-9375-4c4c-b7ae-0a21b01cf875",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41fac8ab-093e-42e3-a261-c502705fc5e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6077d36-dff7-45bd-82a2-b2923b52330b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91291b37-257e-48c2-840c-2db16dc20d63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09362f6c-36bd-4e31-8019-f296d60762d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e858cec-56e7-4653-9bdb-31ecc440148e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a500cd7a-2ad6-43f5-8445-32259115dbb4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b3df881-4d68-4b91-8bbd-099cb854ddc9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0654e71c-39d3-435f-8343-266542370d0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "183f0d10-9831-4fc9-91d3-6f198eeec181"
                }
              }
            ]
          },
          {
            "id": "3f9d4085-55e2-43aa-8b79-22f6c9c29575",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae47fccc-3d77-440c-a9a1-81174c5784dd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84f61636-efc4-4b9f-a103-1bc81ab4899d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f07f0f0-1980-4a3c-b085-4bf7ebafe0e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "730f7252-ca0c-4cb2-941e-3e44c98c3da5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f313ef52-e790-4e45-a753-2bc1e0b9eed2"
                    }
                  }
                ]
              },
              {
                "id": "59bc80e7-bf9a-4a6f-887a-706f3b58d537",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8731e32-ebde-4e35-af47-c4b37f3da4d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e359c342-dc79-41b2-b5ce-6f1d143ae23c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ef93d7b-2971-4898-bca1-587b06544736",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb247023-4f30-4cd0-8059-755fc6bdecb9"
                    }
                  }
                ]
              },
              {
                "id": "73a6a2a4-e8b8-4c34-b149-11d595315b02",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc37bcf8-e6e9-4fe6-b140-5d1929019495",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9493f9d-8f0e-4342-bf51-fbad58f62bde"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fef5587d-fe5f-4233-8e96-a7e74f1a4ce2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01f2d54e-a307-451a-bfff-5efa9f21c2f6"
                    }
                  }
                ]
              },
              {
                "id": "221659de-5198-4b70-9eac-adc050921f83",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd61b9c5-121c-4ca4-bf21-5955aaad19d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69d6402d-459d-4b62-a740-083dc30c1214"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "615da26b-7abe-4aef-ae9d-f95e517f25bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fb9ca267-d655-4450-98db-257a7040d90b"
                    }
                  }
                ]
              },
              {
                "id": "52174ebc-2a85-457a-85ca-fad2446db61f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9b13605-a730-4023-a263-e97305dd3706",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4957ad2-e4b6-4fc2-9a97-b84dba7c2f84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce529d8b-9494-4a3c-9ea9-70600c7d4f7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "51dd0f73-469e-488a-ae3c-c169883718df"
                    }
                  }
                ]
              },
              {
                "id": "71a9df70-144c-41f1-bc16-37f06bb17a9d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f26d922c-fc1e-48ae-bdfe-a74d43ce4a39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "663f6a4f-4444-4ed4-822e-2b811bcd999f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d923614-19c6-41ef-bfef-317cbe1d1ec0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "005bcc47-207b-46da-a78f-6f965cfd9b15"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fcc16215-eda1-4de6-8f3c-421e97528124",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2162ab44-da32-4b07-aa74-6223f5829a55"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0c28d1f-9aa3-485c-872b-ae62902c435a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84a2c31b-b687-4c9d-8a7f-2463f8d92c66"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e289f03-aea7-4799-a394-eaa3ffad9923",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0c3911ad-26c3-4cc6-9f28-bc420d9393fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0d2f998-c786-4124-984f-71954ff9669d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8eb9e869-508e-4967-896c-af75cbcb2bba"
            }
          }
        ]
      },
      {
        "id": "4fdbb181-7034-46fe-92e9-4d54f8f909eb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5c4d0ab4-34ea-4069-811c-a221893b662d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ae10ccb-db25-4783-947d-9166b6d9edb4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ca5d994-94fe-4f2f-8b4f-48b27724543a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ae0ff6-1cae-426f-9530-bdc52a53940f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fc7144-55ac-4c3f-99dd-73db03a01010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ff68f7-34cd-4916-933f-2bcd810781f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d653478-319e-4a46-8cd6-1cac50302506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedff404-589c-48b5-a154-18a3691a43a7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbeb088-9875-4f2a-9663-559147e605ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0efe5fb-2788-4514-a365-b097be571248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba85f1d-5aa3-47f4-92e1-d2122ff2e7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4660c110-3b97-49c2-93c7-85afefe23d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2500747c-d01d-476f-9146-2a1d41de6e30",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb498c9-841f-4f0a-bde5-f0efb49ba26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9e77a2-2612-4bd6-829f-d63bf86fb1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6879e985-5b82-4a9a-bb80-b90b8c1ced5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18a2f5d-c60f-4c47-b437-f3d2df2cf7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14091a83-3e9e-45d1-912e-ebc9ea13b253",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9f3fd8-abe5-4072-8151-58adc8513fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c454c736-de60-42e7-8ed2-d5f431990cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61cd355-29aa-4fa0-bc33-aab9e94c618a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94567f7b-fdad-4db8-9964-3fa184a32f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a881ed5e-f487-4b81-9db2-f908dcfa9a9d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdfa37c-b235-4409-8fe6-27dd192bb285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d65530-4789-4e8b-abe3-13b1a356ea63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10be1670-3959-41f2-bf17-3fa9e1a36b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f0ea1d-7d5f-4adf-8f1e-e4a0f7e085e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a625a5e5-8f0c-418f-8c92-34f47513298b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950c1091-f51e-4f51-8121-4b62e92b1421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5108ddd0-6012-41fa-9dbb-18054d4d45eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063bc575-1946-45ab-a953-bda8bed15257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26f0a33b-0d37-46d7-bd96-c1324cde862e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5979f796-b56e-42c6-af4a-a72569342137",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88234e8e-da84-4684-ba61-493b286bfb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2eaedde-c81f-40f9-a8db-8484864d2baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ceee5aa-ae9d-4c0b-acf3-f00b1069863f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc33dcf-23be-4af4-9b44-c64138399d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98b68a0-974a-4607-aa67-6187ae0f5f45",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b9a1b2-d681-41db-9247-42734c7bb099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d6fd25-0471-4b3b-bb9d-296ee2086a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e0bbaa-acbf-41c4-b219-06a45ec63b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f21db3be-b854-4000-847a-b4c32a560db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0800e4-6baf-4bac-a916-188a0a907e2a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bbb844-b636-489c-80c4-e9dd545b98dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16e70b9-bda4-49ab-9942-4cbba66c95ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980455a2-197c-4421-816f-19fd80fd1a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0f2685-b9f0-42e5-add6-5bc99154fb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d08e027-d484-4b15-83f6-b8d5d3e5a25f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1722e7af-f10d-4e13-9ba0-053e52f2808d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa562fa7-f2dc-4e0e-be02-db21562fecbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e480a5e5-3de3-4557-b37f-e67f20261dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bceca5d0-8369-465a-899e-4ae43b566190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752da3fb-3621-461e-b1a0-bb71f612a740",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8092f564-fd81-4b47-bfb5-d4ee29e40647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d45085f-7e09-40e3-abde-f1c251e2277f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d841a0f-ec8e-4d53-8788-e2e5c52130c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2822fdee-1aba-4ea1-b815-e7d50a687095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d13171-bcea-4b85-8ab0-e52767e5affd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f82d38-c315-4397-b92b-c95baacf5985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0661df89-8d47-409a-837c-69abff14590e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a42854-71ee-4582-9fd4-c973f6fb8d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd402cf4-5f27-4aff-87ff-aa944a5ea757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64653d4d-4f6b-4bfa-bad6-f5ba915bd816",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e75f824-347b-4ba9-9e13-844cde0b9e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb970e98-1f00-4d2a-bc35-a6b5f5570c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6eacd3-df89-4610-906d-3ce8756a55c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc130bf-e761-448f-b7aa-dd2524d04e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4984e78-ffc7-4094-8096-37dd2553ea78",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec2d6bc-aaaa-461d-a8c1-0d28945c9fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02a428f-53dd-4750-ae80-f58a51b4177e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4088d9-ea50-4d98-aafe-823ffce49118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3af647ee-8c34-49ed-85ab-ad0085d43b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afcb493-f1a4-479b-8bdf-c2baf7b49f36",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0011e85-0ac5-4515-a0db-a063207c917b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e86f26-d51b-4862-811d-3d5126940b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e5c870-0174-4c29-a275-3e9aca08b111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c995344-b9a9-470b-af52-3d1eac2751c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33711544-f7bb-45ea-9465-030d06e6d441",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d85ceb6-a2f2-4ea2-b2ef-2c1c17f1e618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce893ff2-6484-445e-9d51-9fbf75f9aacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13204f81-1a0c-416a-a7ad-9df05e3a45b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c39ae659-e038-4d94-87be-31ec8323f922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b8cb0d-641b-4aa0-bfe0-9fc1815c56f5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35e00fc-cc91-4d1e-87b2-d4ec2025fddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad390fd-d52b-4fe7-a98a-004eecee218d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef24746-655b-40f9-bbd6-568ede91c7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc1d819-27ab-4d75-a384-1db18e74f3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af61bea8-fe15-40fe-b53c-b517f21086d4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd7ce6f-7764-4c3a-86e0-def9ad70751f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6b3a99-66c9-463f-acc4-3d13740abd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccaf18a-e84a-41c6-8dee-cff9b1aead38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "41f70f67-9a8c-4d7b-9a1a-9718689bd072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840d8079-1e9e-49a8-a4e7-debbfb4d6e85",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db27f372-af35-49ec-88d7-42e883b1b830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8cb1f83-e487-4a87-9667-4553f1729f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c515a15-ebf9-450f-bb86-8316ae9964f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bb7a14-6d33-410e-9f13-9a9a43e01714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7b9fe2-3cc6-48e3-86a6-8dd22114c742",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5049735-4978-4540-9046-6f78ef5bb7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189e5e48-b70a-498a-9ebd-207287ad2ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ec7412-b415-4507-b561-f4dbbe24a52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fadbea50-80b9-41ce-8008-f810ede4d5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a513f6e-9459-45e6-b48e-e6118ab5ed05",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2f819a-f486-4fff-9bc5-cb206879ab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa66e5c-b207-44da-9367-cf7b66416abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb94d5c7-4b6d-4d6c-b3d0-ecf0b3df9283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d99d9c13-118d-4c26-aa74-4c911b89f24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2e76cb-679d-420f-bb06-6efb0ed46504",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88c599a-b731-442e-8e76-ba160cd4893d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292b3515-0c98-40c3-9cae-fd7d814c3e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd8c418-00c5-4740-a2e4-9783d158e441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2825aff-61dc-40c7-84eb-8be8276e5338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46befe29-e93d-47c3-951e-b18a8a67d28c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e859ad9-e435-429e-a1b0-c117c3f3950f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3a2dda-6003-4fe0-8afd-203004f7e553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5696c9-aad8-4374-ba27-0d6376d50813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e1e56e-4fb6-4431-a53d-2c87e5d8b5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3a7d88-0dc9-4dcb-8438-44f0c7d7ef80",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c81997-f2bd-4e91-887d-f97f2e85e852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3537c629-8c5d-4353-bd30-a41c855f6283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da69047-0d56-4d01-ba36-c787d604427e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aff9594-a5b6-4afc-a6bc-2f00f01b023d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6b7403-42b3-480c-83f7-92a0da54b5e0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c426973-e473-4a18-8295-6810a3824ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a08a3e-6382-4bd7-8921-93b2ea46dd3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78002ff2-bf1e-464b-b2aa-ca730ee01a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "882662ba-d389-42f0-be03-b9d6211e3d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400c20cd-07cb-4620-ae18-527764d99458",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a29d8f-3895-41dc-ab18-eb7f1ebb2eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32482a1-4570-424b-bb9f-beb12a9fb047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00478fc-29c9-4a42-a935-9232dcfce454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "217c9127-14c2-43c2-a129-0a59e87ee2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33a42df-09bc-45eb-8d91-54199aacd29c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e476de-44b3-4b68-8dc8-f07236f50636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cd8d03-82a6-4ddd-a48f-a8316093fa19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c596be56-f3ec-4fa8-badc-b0f59d0cd8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b50ec78d-c588-43cd-947a-d142e281e57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206dc1f3-e965-4491-b0e9-8480eb7d095a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca0ec80-a368-4b3d-8c0a-992a34d463b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ccf3fc-3b71-498b-997b-ae7aec7ebf98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220937a1-080e-41eb-a8d3-d39b9035d2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d76397c9-5be1-49cd-9acd-0d808a5f1dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75fe38c-0956-43ea-b4e1-8a98b7bad7f2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd16382-4270-44ac-9c40-a77d2d6385bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db277c7b-da4b-44b0-b84c-36dfd1ca4b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50466d64-2590-44c3-a3a3-e6c200494827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1bc2eb-e88e-4f83-8b2b-526a543214d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675263ae-4b26-4195-a59b-49db49258955",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24973f6c-4631-4274-9baa-2ddba4cf5330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4d031d-b65d-41a6-b701-d47e9be52f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bb40c5-de47-441c-9795-0398ca25d056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8864450d-181b-4e67-923e-e441a63a6d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b17fb11-ad10-4bff-a5dd-3f87d783480c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a8931f-e92d-4108-a4b6-7647e67eb55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd07d41-308c-4324-b5a4-2a6f12bb6e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338d8385-3039-4229-9f18-86d4ff634b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0c405f-c01a-40d8-8b8f-826d3209f1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c88e70-7fa6-4022-a5b7-fed09d6c08db",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25ab05f-bd27-4bfa-9bf8-6ec81a8d56c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a506d3ab-c4ed-462b-9fec-b681956f3eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11ac7e5-378e-4d40-9f65-885b36231a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f94a11-1b28-4903-ba1b-aa4ceca0b72f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b41b517-be5c-48b4-b879-2312c3387806",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "022ba977-3732-40e1-a772-6f4e79fa4c1e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62267182-be19-4089-add8-6a660c855c86",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d065ac45-d74a-4a0c-b41a-ce61294c97a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0716e933-3675-46a1-bbf6-c9bc82fe3f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac99d286-814f-4667-8f90-1e6b1609b075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39e0e71-4790-40fd-b6b3-f4f28e0657cf",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23fb14f-a4ff-4705-a0eb-74308e8f6cce",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be60b6d5-fc82-4931-9d3d-5773dab5e7e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4861bfff-fcbb-49c0-9d11-df337f587eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc0edc63-4485-48dd-b671-06394f2dbf37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b6ae600-f65f-4177-be44-51f56d692422",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d68f3dcf-93c8-47fa-8206-0969ef2d38ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bf8a9a9-6890-412c-85f4-e78fcd7649e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4798a408-6090-4860-a779-7bd006df9bf9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbb4bea4-9706-4b5b-a72a-8b894e8366c6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89870526-abc8-43f9-b78b-db469b979f3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5aa1e56-0b2e-4f90-bf9b-849f2f1a776a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cff4d81-d051-47a6-b27f-879c6b0460b7"
            }
          }
        ]
      },
      {
        "id": "edc97cfa-f305-43d8-a37f-79c8c9fd892c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fad743a8-6a31-43f5-a9de-277cd68f0d71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72a30dde-745f-42c9-889b-717c832ed65b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "437239a3-9c4e-40d2-ad9e-73f415b1b916",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa26867-a73f-42d7-87a2-d8ec5f7e57a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc59295-433b-4234-9bb4-b39574555b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41eba4d-0666-4bec-a3b0-ebb69ca97acd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acdf316-b567-46f3-a28c-117dfa884e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7dc24d-d5da-4d1c-8b38-fd17377ec057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e251490f-f199-478f-8d3a-62fcb4b822f2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf5ffb6-3b23-4a83-9efb-085fbc99fdae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9627c3ca-14f1-4f39-a741-316caa17ed10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d759dd5-3c1f-4d7f-bed8-99761fb7a21c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf46cdc-5531-4c5b-86d5-1a3aa2dfc625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951a5eff-75e4-4506-b237-f36907e1f4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74381393-987f-4dfb-be37-c35136cb1df7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22db139-760c-4e07-bd02-12107a4925ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98358cab-1cac-421e-b79f-5499408f6392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11f58d6-b021-49b7-8fc6-b98988804f03",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454404ce-06cb-463b-a297-9cf68ad6ecaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d709680-a14b-4efc-b7b0-924043dc5eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f633b1c4-0d29-4d99-a0e5-ec0ca48d5d6f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea00e0f8-5fe9-4671-a169-8d036045c74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb202d0d-5611-489a-a85f-cc81dd8d8d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b28ac3a-6b37-437a-8e44-70e8c62ea536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a86b5b7-233d-4995-9c91-7affa974713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b67e6a8-d461-463a-9edd-7f33ea445929",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81a7a01-2d06-4bdf-849b-a19d405d740a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa2e8d8-8961-403a-a9ac-2f5dd5e459c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64195d0d-901b-4665-967f-c5c0781566a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86b02a6-602a-4740-8c5e-ed3e8476791c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c756aa1-4a0e-4858-857b-67c30e6667b6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59598509-ad79-4e06-a631-2d69beb39c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db026cf-ab96-4bf3-98ba-5ac1dd54825a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6c716d-2aa7-4132-a7e9-5e958d8a3a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdffc5d0-f7e8-4edb-a273-de6322ff6ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3135392b-4e81-48d5-b77d-5ccd272c5b95",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b19d15-c040-42c5-94cc-7940d17d1981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d52a564e-d5a9-4ac2-ad72-b38ebd75a5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18290ab4-1f26-4d65-8b01-852d4a9a8888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afa70b3-4fb5-47cc-9f4b-d92adca5a555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f8bb13-460a-41e3-bf69-3b3bf875562c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df16010-71d9-4f80-892d-c9804a3c4e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3336d811-fde7-4f42-9527-4ffec0a09fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c78c60-b016-4387-b51e-0ea436359dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64eb7509-7f82-49d2-92bf-58bdd6dbe1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a55dd4-d2ca-4acd-b226-657d2392b9a8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c2266f-64ec-465d-88bc-5d130a33b5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ecc3563-0908-4c2b-b1fe-d87506ab8fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32bc55c-a788-48a8-8178-4fb7eac58393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aca427f-8d53-442b-8f0f-701edd574bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c7c78b-2d9e-4ab9-af6a-b75b30328de7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c83997-6b50-4513-a41d-10fc177e26e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f81b5ab-30f5-43f8-8dab-58aa5e9c204e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab0577d-2669-49d8-a1f4-0a9b4cb84425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea97848e-0ebd-4a8f-abb8-c4c4f6c4f1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4a8c4a-8116-4e86-8527-c0f8be1b2d0d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acea771b-46f4-4043-9eee-5cbb7e76baa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e321cd98-b1a6-42e0-ba34-d370bc0de1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479657d6-588d-4474-91f7-28602ac5dc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e7d122-e55c-4192-ab6b-7ddcc83bacda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed9ddd1-1a20-43a0-92c4-6606e0c2984a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100474f7-956d-4c65-b719-172540413030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1eea3e8-3028-4642-ba8d-5425d523b57f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4715067a-9b32-4f2a-8fe3-498132b6abd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b6f67a-f64e-44a2-aa68-b3574e6e27bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217171f5-5b5a-4baa-9650-00cd60816ed9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3672f046-3e26-4f98-9a4f-9875c035e949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55862921-813e-4a07-b6f2-2b3a84f8272a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac80b5b-72ce-4ffc-92d0-020befe6acb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b220855-cb28-4ea2-a3b8-7743bc082900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a031e8d-1466-44d3-bd64-0a129a1c7539",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fb98f7-9eaf-40ad-85ee-a699d473fe24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b620471-54aa-407f-a491-47c558c8e052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b17f53-f0c5-41e2-9322-a368e9c52528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ebab00-9492-4899-ba2b-dc36d84b81e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bdb130-dfe1-4e31-8f8f-4c96e2cd5064",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1770475-7493-4b83-8db8-75a09b840f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca7cd6a-f428-492a-a3f3-3c7dbd902de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c46ea2-982a-404d-9507-ddbae13a9a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328ce126-7f62-4dc9-81a1-bcf0fbbc784c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d25774-2477-41db-a30e-bfd5dc1e4a9e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967a54f0-9e27-4993-88b9-765cb4b30968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c9d07a-48d3-435f-bc88-035612d7e176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f227d9a7-fda4-4b91-b053-7b23fad29ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133211e5-04f5-4f34-b359-10c0e684c00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66206669-1ca7-43eb-b522-e2be3ab0fc7f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b412f6-6761-4260-b2b3-113cd10ad94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb46acfb-798e-4f7f-a44a-3b35f85a3643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54754feb-5842-46c9-953c-8dfe11055611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbb2cea-1f88-4ea5-b0a1-ddfcb682b706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528a5a72-6bfa-4244-bee8-340ea11b738b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca5e158-cf69-4a19-bed1-f530b960a05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa73612-21a0-4946-842a-ac1499c29e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01222e52-83c4-4041-97cc-406dec628c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ce7458-02b7-4639-8f78-9dafd543a4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9113d2c3-79ca-48c5-b1dc-3ded7b99d6a8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7200b931-6723-4bc5-9584-bef1972c0a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc66ee20-e981-4e22-a69f-16dce96eb663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223503a6-31d6-4de5-9ccb-4ffcce8c7516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa3c803-6995-4f13-8e33-4e210d543d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3890633e-03b0-4987-a388-79fb75e44a96",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8938250-796d-485e-9576-bd515d28d251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ab5ff6-438b-4a6b-b365-1de3a7ff9121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4db2f4f-3f82-456f-adba-e2add56541fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3bf19e-c92d-43a4-af67-0794752ad208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929eeb69-8f78-4a7f-979c-87beb90a5366",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adea0971-e7d0-4cfa-977c-1b9ab5156b10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ae0b58-4e4f-4245-9dc3-49786a8fa71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "258a2872-6b80-418d-a5e8-81f9bb5ba865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f26d74-2fc2-47d5-b59b-747aa41de70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb0db52-35f5-4862-a11b-85a34624b866",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9d646d-2626-4c24-b448-818fdc3e70eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32386d1e-7d4b-4406-9a45-8954416ba300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd535598-8c14-465c-8de1-81741f369346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1d026c-f00c-4950-a7ad-f7aaf0b5b619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea726fc8-3ae4-4898-822b-e9af7ef556be",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222f9144-4fbf-4b23-8d90-300ca1272d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cefd17e-c3dc-4ef3-ad52-c4f9301b0d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91a8785-fd71-497b-a64e-1dfb4f109723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af38b0d-550c-4240-894a-f2199ef15590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c98a19-b791-4b61-8919-4f65ad07a854",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b215b62c-f764-4b01-b415-13b4ef2475d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab9da66a-bcf5-4901-9ec5-137c441de8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de9df53-2557-424c-92eb-466621ed57fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b94443-2930-476d-858f-b98600c0cb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f9e246-c35c-45b4-9e87-b13a2673e8ab",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332a63cd-c893-4811-bbb3-1cfe1d720ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd677e08-3866-4f1e-bbe5-9051348ccae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ad86ac-8c2a-47bd-a87f-c7ed952e7bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da300f41-f6c7-4b58-9a13-15b2b0a6f3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bfaed2-2b0d-4de4-bf44-c67f563c610b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e94320-cca0-4827-9497-8277a0a9bcdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a2d971-cb2d-4217-aac2-de0e2f79f0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666e21bb-783b-4720-8064-4d5d4bc2c930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93daf5d4-5f98-472b-bf47-f94a71b91773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a57c60-c4dd-4365-b14d-57ea11694ffc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d94c0e0-5a48-4b1c-bf86-6f4e1e7d1094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d070686b-58fd-40b3-b977-c7dd63cd43cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afb4355-0134-45d4-8bfb-76bf39833ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c24a3c-faf8-4c1a-87f2-0a7e24ffc01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28253cf-6c24-49f2-b19d-4ad278ea8435",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2369dfa-cd50-464a-9f78-30e5b3107e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cdf869a-fa96-4c28-aa0c-182233e6cdac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3688b4-e086-471f-b66c-d8b50ab56aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373a4872-c85e-42e3-85b9-26ea10e69c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59e69f8-8fc6-492e-a4c7-1b5976ed714c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4284058-23a9-4e5a-9446-a01874227c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16059d53-341b-421c-96e7-786621800212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e4fc36-b483-48cf-85a7-2423ce66f68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8495c1-1b9d-4c71-8695-39611e8c8a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7373d9db-d902-49a6-93dd-f621773d4294",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f88def5-b9f4-4b24-bd78-63cc189a091e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6aa9bb2-d375-4b92-9ef0-865ee1ff68fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43865af4-e4d1-44ff-95d1-446d5a08c3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9134509a-dd1e-4b44-ae31-4b629d850731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbe5ce4-6a5e-4b03-823d-2605f6429ceb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a5bf2e-a18e-46bc-a079-ecdb87c37ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0e74512-0d7e-48b1-9466-76896ba26069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1fa710-3980-4d1e-9466-88ae269d3bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc12f02a-0c69-47bc-be13-b285deb9eb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9f2912-cc5f-49bc-9556-5cf82f13e209",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3b442b-d7d6-4964-a714-b4b49266984e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db62bb8a-5659-442e-a893-658ca6970b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd003c9-51b3-47bd-919c-a9c9487b9938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b73efbc-24a1-4c18-a4ca-4998a79aa338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91362d3-8be0-40e7-9dd0-13f1319ba38f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e4acfc-5f60-4999-b663-ef443d22e229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4826b171-f72a-4381-8e60-af1dd7455d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952bc601-573e-42cd-b6a8-9a1b3fe7acad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a89995-4e92-4f76-8be6-ec195fc9c6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147ca004-f1e0-4d63-a9fd-526f156b7a1e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dca5952-e9f9-4f01-861a-c11022d637d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21e6af4-82d3-4fd5-9d7f-89719072495a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a50ecc2-cc39-4508-b22c-0193396d8722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49122d15-013c-4d99-99de-b75e6a413d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ba8a1d-d7a7-4932-a7b8-550b07af5654",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3f9994-2c15-4274-8b8d-c969146d8c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c92d91-0fd6-4f59-b45a-de12fbd14bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5063fe7-09f9-40cf-9021-3a0329215899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18db2080-90ef-4bfb-91cb-726d6c4fbada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b2fa92-4b38-46e3-a887-02ac62855b8c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93765fde-bb65-4f4e-b594-dc4223a441c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6730e59e-c2f3-442f-903d-a5d9c64bd22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c7a91c-cafd-4cea-8f34-87aa9db02713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0d0f62-fbda-4281-93f0-e66d1ef0e863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc570f7-5a2c-43f5-b603-ba5806d72faf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5ebcaa-7735-401f-a082-69483b1c00d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121b0878-8015-4171-aae2-4d1a0b1b8f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a94b0b-d1dd-4ccb-b870-16a4bea99339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb05b060-cc47-4b1a-b251-fcdd641b9df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4215b35c-96fa-4960-a7b0-cfaab55f967d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc53791-4bd4-42a1-9fb8-8f7ed8f4d919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8c0df0-60aa-4cce-bd31-9c423071021a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98968131-84d1-454c-93c5-8a2fcc4c8ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71a422f-45cb-4192-a532-9f5656d06b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824e33f7-0121-4f87-bdd9-05548bbf8e72",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c150c8d2-6b27-4bd2-9408-792ee54c1523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb27706-32eb-445c-81ad-ed7477737460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa93172-a45d-45f3-a6ae-98df39160503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6675ecda-e93c-4ca0-b72a-036cb1d4b58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d637731-b943-454e-ba2b-e8fd2da7e557",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b857d768-9922-4128-95a0-098223b6fa70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20e5414-1197-4412-8546-0a9bca4b61a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad73e35d-d53f-4771-bce3-e073b523786e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb4722f-f4dd-4deb-88a0-d44521b332f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92aa28c-93fb-4388-b42d-9fb836c5960c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d566fa-7d93-422f-970e-37872e6f086d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60090336-d926-4e57-aae4-a197dbc1a574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ac4aa5-7aa4-4edb-87b2-268e86c7c18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add1d5b6-4bdd-4e4a-811f-d64e8a2c532f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab61cfb5-015d-48b0-890d-b560b5909b1b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e99cc7-c776-44e2-a910-d99de59af7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366e0854-64d2-4ce2-9e37-51215dff6550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd1c663-7d92-4e40-8c78-e7924a566d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43027025-19e6-4cb5-b281-534f38827c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d96ec2-dcbd-4725-bc93-e9fa1ab84813",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232a6e8d-8ab3-48de-aa52-adb90fbc23f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18191593-9969-4481-a092-5de1403802cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6587204-a7e9-4a03-b5c8-b777dc89cdca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230ad0cd-87c3-4c98-97a7-17f94e59f8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f77989-8087-459d-a538-5583ce02ba0c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d581fa-c5ae-4627-95f8-302ee6d06542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328ecef3-e379-45eb-922c-a391d75158e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab95792-077e-4823-bcde-62a5e7cfe04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b11a7af-906d-4231-9b89-bdc9f3d4a2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d5513a-7fc4-450a-98e8-09481fad6f5d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505a4041-ebde-40c3-b531-8933196259e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242bcaf0-9f20-4992-b989-cc94546e2dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ab7faa-2924-4ab8-a5ff-50860d4b0ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66222dc1-72ca-4ea0-92e2-a0ff1b1d8975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4d2189-b698-446a-bccc-8dc1e38f4596",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647054cb-a166-40c7-8865-8c32b4ccc204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8b6f80-b9ae-497e-a8c0-cd5f3a8428fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c78add-73ad-40ab-87eb-ae812a874d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab6a341-9a64-4796-9582-def1f730c098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae79dcaf-111b-4c3e-9e56-f13d2ae07077",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45876812-9739-49e5-b030-43b55a32f86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7dbc68-6d23-4ea7-accf-7be24977a1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a1c1be-1b80-4f2c-9591-923e539b84fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60415dd2-f1ed-4dbc-ab75-b6e0a89ee442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d0fa7d-ec7e-4132-8fdf-1ab127b574a2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9822c113-0402-4dda-8629-acab2a4863a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d268cd-ac2b-435a-849b-177fe903e15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90cbf47-204f-43f2-8892-c0b004457bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee73eb42-ffef-4120-9a73-3508631795c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d4b508-19a5-46df-9160-457adaf24c42",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda3ead1-761f-4453-a5e8-71766b916406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81efb85-5039-4f59-baec-ed68a8053775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a950b6b4-ddb1-47fe-b863-289a96a0a885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff380876-2443-4791-ac96-99f1e624f747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc948fa-255c-42b1-be90-f42f2444f7c0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45305e1b-7320-4d4b-86a3-03f26c8252cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48251a4d-f9e6-48fa-9bf6-3d529452e646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b4bc10-a39e-47f9-bb78-867ee9e724c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d491533e-f312-4a7c-85a9-333349edb7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b25935-bb72-4c8c-9e79-b20177f36e20",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6b3a7a-65bf-4e8e-aca9-f833a1123aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1370ea9e-c86e-462a-abd4-dbe83a8e8696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae173685-8e9c-4c00-8e54-94fb1fab25ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73070f4f-77a9-4277-b822-4fcb78cfa8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b034fe-3d2a-4cfb-8f70-0f59eaaff83a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b5111e-34f4-4eeb-81f8-09166f011c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05475f48-526d-4c66-b513-07d0adb6248f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a65b5e-1daa-4eb2-a723-98f574c857ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3d0277-6b16-4613-b181-8e6799254136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e655fc5b-6b99-4bb0-8c43-c6d6a0d7098f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4a65ae-518a-4293-a931-207d5643546b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391a7691-5f02-40e0-aca6-ae1f6ec6af06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97acac2c-d064-4eda-8609-05a0d0c7b016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d3e8e1-c2b5-4247-a928-4194de271e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e0a502-5e14-474d-a22d-769c1b502a49",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8240b86-7468-4e8b-bdf8-57d498070580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1251c0d6-9b82-4c53-8a49-96ce9610ea50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2210be6-44bc-4626-a1eb-f3b82664add3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0455ce-e726-42eb-9acc-6e4e7cbc9fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7cfbae-5723-4074-a09a-054e76d93025",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659f989c-95ef-4247-8d02-d4cba0848b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbaf6691-927a-48e0-9b02-846daf8a18cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684cea64-3eeb-4377-ac49-48cf3d4e67f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14c15f2-7434-4a45-afe3-c5c6969e94bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04cf59a-617e-4259-afbc-d0969b8c924a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11b1434-409b-4c7e-b8b6-75dcb5b6783a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67868157-83d8-4445-a1fe-46f9bdd7ddee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e980f545-5a28-4dbf-b19a-a8ac2c2bfa6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f26fd0-864c-47fe-be75-849c411d614c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa9aee6-c3bf-46b8-9cfe-0ab30df03f33",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132ff928-d7a2-4931-8aa7-5f7cebf0a975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cf3323-b001-42b4-9ff0-c5a9676971e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24aacc6-3ef3-4a53-ab99-3ceb25fcf868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561794f9-f2e2-4398-bf3a-036ed9264064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e82a5ce-46d3-4f44-8830-c0c7766a2596",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6f9fb2-db7e-4205-8844-597135ff2ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c73a373-7aae-481d-be23-9954ba48247d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6e4e85-f852-4cf6-a6f0-088646b200c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd0c05c-bdf4-42c8-9d2e-d59775e72909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dc6f02-11eb-4772-a2bf-8aad6c1d1968",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a885a41-e128-452c-8734-56721202332f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fc6228-54e1-45dd-9566-56f2653683bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d226fe3-146e-4553-8d15-da7f602e576c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1baf58a4-d26a-4a03-aab0-1b33e743468e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1ba155-576d-4f5b-9240-fdb0b7f30d1f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61539ba4-a4d9-4bba-bdb2-addf0c44fcc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb54148d-25e2-4d3a-8c3a-a2df5fd134a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c8d2d8-1b33-4380-904d-fa5c1fb46cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf06b454-420e-481f-a177-a0dea3512b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2654dd-c137-4b5d-8223-54d1e06ecbea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fd3bac-f49e-4772-afb3-a371ea226944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c15da7f-e5bb-45f4-8061-6130defc49b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7e9efb-3114-409a-9a86-b0e9d8a3b015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16039347-1bb4-4dd3-8d60-5ea1d6a05975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3078da6d-4730-46e9-966a-be95bd95d5dc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74146a5-b700-482b-a2e9-611489eb2ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3ce7de9-76f6-403d-9297-61a33f836ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22bb49d-4bc3-442a-b12a-7121f3be0122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db25da93-546c-4436-ac86-8cf9861c124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f32956-5892-4cf2-9a05-da50011ea390",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddd3c52-0c67-49ca-9a50-09568ab73b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e8d323-297b-4538-a35a-3649737443a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a49dc0f-d02a-42a3-947d-d28c49cdede0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b967dda-f35b-44b8-ae78-20a880a1ea99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93792f59-5f01-4e2a-80fa-e502aa7794f6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfbcec9-beba-499a-98ce-712677411549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13cb9951-16dc-4177-adb8-ea428686170b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de56026d-aa33-4271-a59a-7850ec893bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f936384b-7e05-4598-9d25-a8357177b625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234f94fb-db22-4dae-9349-fba1467f83e2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4b19f7-dc8c-4dff-80dc-ac6ba88b111b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85155730-7151-4be2-a7d4-6f143a7f0d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31ce7d6-d4ce-4fdb-81d0-e3958bae20a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345ccc25-0802-474d-80d0-b2d81b56c963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924a81dd-f7f7-4a97-aa65-16c1f0ea1300",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1a7442-0f1b-44d9-b979-ef831c8d14ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d148e6d-5075-4f86-bcb5-7cb5af6ccb8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263fdfff-5957-4d63-a7a2-88813646d965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541e034b-5c63-4666-b828-41871b91418b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e98d53-4889-4b14-8464-5ab64e57a9d8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddd8ebb-25b6-45c0-a0cc-e21e78217085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9401da43-345b-460d-8f88-d982d78f8ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5c6d25-2221-43f9-854b-be363fddc7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6956b4-140a-4158-b188-2b42db54ad3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d96ab08-df88-4a73-96fb-13c60a37913a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95331fd0-f197-4080-b771-ab77962b9b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6751d1e-1e1f-4acb-993c-c478385ec66c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c95f6f-95d1-4ea6-844a-b79f922c4e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435b17d9-03c5-4997-a93a-ef4e5a5136da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965604b6-262a-4821-905d-f0c13f540479",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745b568d-26fe-4fda-8426-130d6472a92b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0334687d-402c-4bd6-8bd8-a64878fdc7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da45820-4617-4f5f-a76c-3284e65dae8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0c6645-704a-4919-ba6c-d0041b68e5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041beb32-f0d1-4623-a79f-647f8869b385",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e63ad4d-6194-425c-a976-9480ed8abe80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d8b79a-31c2-4c11-90b6-46b90ec18528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c89021d-899c-40bd-b037-2d47f3305437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694e2c98-3289-4fd0-ac15-c08c2d82a0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ade1686-6630-4865-989e-ec7376b5cc24",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56540b01-0369-40af-a279-7ffcfa71fb1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52240422-fc1c-4888-8d4c-44b150971e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ab5200-1d58-472f-bfeb-4adf4f9956d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecac817-6336-453d-bd99-7d1489ebba8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1bd541-fb3e-47f1-a7ef-42e3c2d369f8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e12e1e-80fa-45cc-8cea-a60311681e41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "107f4368-fd36-439f-ae38-5a6d7b631d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be457fb-4432-44d2-936a-8d8c67537320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6c3f4e-954e-45ab-a3c1-1131d95de702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156cee8a-14cf-4b80-9bea-6343de640827",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582473c6-301e-4701-ab69-01045da4414f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e0bf9cc-d7de-4fed-b1ac-572818c6f0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaf2f09-10f3-462a-ab3b-3b7d03c5636c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587fbbb1-1255-4efd-9009-5454026d094e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61522d04-c5f4-4de6-8d78-060296281789",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79155e3a-4e93-4f4c-938b-a90bb416a44a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec3bb3d-5892-4ca4-bb99-08b4a4768bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf57357-d27f-451e-a714-1fc0347c95f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d27b1f-9209-4edc-9ff3-7afd74069b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1ec874-592a-4674-bea2-6cfb609a5817",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53885b34-ad10-426c-b443-14e337bd8312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be8beb12-8aa6-4c85-880b-71278fd7d038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c78fd5-e1c6-4852-af4b-421efa52b065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008b8687-10ec-479e-b609-10198d344262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9714908d-47ae-4d46-a852-9be32b190cf7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945ddf61-0d7d-491d-9572-2834a8b554bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d10f306-4a40-4a1b-89ad-c05e42d9ecfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6ed7f5-a491-42ac-b1b8-3f4adfc276d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ca6a8a-40ce-4392-9119-e4d999328cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311349aa-ece6-4e27-aea1-9b8c6bb54697",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d02f137-3f68-4e70-a76d-b34f51e8e6ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a10ffc-6f64-4ae9-a426-9438f65a1ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8c05a0-b052-4c52-831f-224024c039b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e329d13-88dd-4b30-b8b2-b27762a6834e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a97c4dc-b5ea-4b4f-b20c-d346a2a5d838",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16289911-3901-4574-810d-bd6c8ebf80a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "595d6aab-0617-4fa8-8d15-ec538f1ab1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32252e4-6aa8-43aa-8c81-1ce85ad133e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39b26b8-7334-4a30-8634-b86d79a6c6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f553cc-4c29-4e6f-bd0e-e52e6dc3fe9a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea34f75-b607-402d-a755-6f90cef717ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95bd6fe3-17af-48f7-bc34-9db27c8bf363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cbf02e-d20a-44b6-94bf-8004a4b1fa10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50960217-beb5-4ad0-89eb-050f7afab99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e77354d-20bf-4d76-b332-f2a91b3bd872",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a951380-5d7d-458d-95ff-471161298b6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b77d84c-c059-40cc-82c5-18c1d96d2560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0079b4-095f-4168-89a0-0f19bf279aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebd5557-6187-40d9-b9c9-0a50ad91e775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c82a266-e728-4a3f-b792-939d3a23811a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7924982a-cc6d-4f0e-acc8-76c8cdde540f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d55e1f0c-b628-4b3b-b13f-0de4ec0d80cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb3bf57-a428-4d70-bd6f-f5c7f735dadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c766407-0c64-4d14-a6ed-0306793a6e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9daedf9-8578-4c58-a5f4-d6eabe3b8bf4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100c5683-c3b6-4ede-91aa-44adc3ccdb49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4075074-c87b-44ba-8fbb-1304f71e08c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6fd66d-c407-47e5-8d5f-76687fe47987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16c7565-f570-4589-a685-433270442e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e343f36b-2591-4aed-90c7-b8ff08aca588",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9183c99f-45e1-4866-8267-efffd5428b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbfb65cd-db4c-4753-b612-56be411ce2ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094289dd-928c-48c3-b147-be9555d71dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30a108a-20f2-4f07-b5f2-14c04b5beed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24cf117-d7b5-4d21-8595-a01471318f48",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95485b0-d5f1-4dea-b5a5-673c2db17ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aacd59b-c758-4a96-93da-9199914fc4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e786282e-14b4-4ac9-87ea-c3241599deef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d2ebff-dcd9-44ba-90e1-9eb574dac354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25c7e3a-7a02-4a74-aaff-ee2f18b675a6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6b3cc3-a231-4fa2-865f-cc1d5ddaaaeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e8f7d9f-460d-41cf-ae29-05ddf0e04ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b9327d-abd7-4a14-bf4b-275587e0c50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78406728-c423-4581-82f1-3402f4d470f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286db96d-06f4-46f1-9879-852e60bc5387",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9e4906-dfab-40ad-91e7-51a26f65383f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04745b69-d0b4-4d0f-9cd6-abbcf63f2a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd72fa4-26a9-4391-ba05-f1d0a670255e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf326c5-fec7-44de-b9aa-78909394e4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40021b1-bcde-4a73-8a6d-836e7617cebb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e6cee6-b23c-42d6-b39d-a9eafb7ffec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b711b4-5dd2-42c3-8f3c-fc363b7931c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3169a9c-f223-4e3a-abb4-7b7a35eb79bc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ed5a18-4521-4137-af7c-538c65e77ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf92cbc-8767-4c7b-91d8-624a9fbc4587",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1163df2-baf7-4c78-bb3d-1f4581685dfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d75715e-e9eb-4c17-8177-f5d34685000d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43349655-21ce-410e-9616-9c81ebd8f7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c33629b-acb1-48cf-88cf-ca553719383c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420b9cdb-4616-45a4-82f9-0ee1a3837c0d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978765a7-09aa-49bd-ac12-fe935b3c61fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "600f32ed-97f3-41ab-8b9c-81d6a352a25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f67406c-f10a-4719-bb5d-fe4090d7b78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89322ed-e72f-4e44-96c0-d83b5e7510b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce9c509-1dd4-443a-a07a-3281906654bf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640e9a85-f258-4eea-9b9b-737ca099c2f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5e0ab1-b355-468d-ab7f-252c8459cb79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab9e299-b1a1-48ea-b1b3-c3be892e1847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b25fcb-8471-4c1b-a0a3-23ab5ea270eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75a78d9-7735-4448-b573-cebfe161aa8b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a3be65-462e-475f-8b84-7cf6b0515999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3595f0c-9e4b-497e-9451-cab6f630bc91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38a3ae7-2398-4fb1-b69e-3ed3b479e560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19b26fc-044b-4aeb-a2bf-e104d5f65e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16237769-2209-4460-8b94-075cbde260fa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f161c778-56a1-49f7-a65a-80e6017cf208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d27171c0-4421-40b8-a334-ad3d5cbef7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6c7057-4be1-41b2-9a28-dc025952d93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca344fd0-6e7a-4059-aa75-1f27fab0cf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527834fe-5d4d-4c75-a6bc-54c3a045920f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27be1075-0eaf-48f7-9101-dbf975e1373a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29dee521-d236-4081-ba98-1d7b9476604b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad6d7c2-8e2a-4e6a-9259-4d84c283a3e2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da11ab28-a48d-4b0a-95ed-08d3d1af26d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660e43b1-a6de-4869-96f7-fb8a8d5136f0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8709fc76-9128-4a76-9cbd-5b21b0f823aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e1ee3d7-afc6-4392-9956-4a60e643a749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd10952-b779-441a-ac90-44a5d73c5b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be95eca5-c4ab-4702-9afe-74bceef50d4e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b3f3817-78dc-4ed1-b3ea-b027c58c2057",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b65e3cd2-bc5a-4913-95f3-88e16f62dc1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e307692b-2c02-4a28-8dbc-fe8f119a312d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c2243aa-e1da-407c-a9d4-f403527f72ba"
                    }
                  }
                ]
              },
              {
                "id": "ea104549-9266-4de6-bb5f-92b42f2ae3ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cdd99ca-d7c1-4f5c-9fc6-fced1f743adc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e885406-3b50-4f70-97eb-5efb05b61a3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4cce0783-490b-43a4-a07b-5352382302bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31f3d6e-65ca-48fe-acb9-784dba40175c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3ce27f2-e18c-429b-97cb-3b670b30a820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecd903e-016b-48ad-9758-2a3b23256bd0",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180c4e4a-42c3-4e5d-91c0-8713c23f7d20",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "622c793d-f25d-4925-8338-3602557fa688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9046e39-7981-43f8-b2f6-15a2eb833108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23b24153-9ff0-4edc-9250-9e50d12df449"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20ca47bb-e169-4c86-bb99-5d091b3b3f86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aeb1da08-c29a-40fb-85cb-0dd318d98adc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e201480-9891-4937-98aa-3044a19a3cd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "825d1fe0-ed8d-4a92-9e1c-948f470a7e0f"
                    }
                  }
                ]
              },
              {
                "id": "835dd0db-a8ee-486a-a7aa-dd591c4d4516",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "886ff377-b9d5-4ec7-b33e-ddc1c4ab1d4b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf8fb14-5d8d-4404-80e8-60be53bd12dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6442ca66-9756-4a6e-abf0-091d11d967f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a785e9e-fedb-42c0-8e2c-2e68ee1a9b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27314b04-4bb1-4c21-a8ec-0e0cc7c755b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a3fda930-45db-46ca-bb6c-6dd9057fc4cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ec61801-9d36-47a0-9fa1-e42141195b05",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bea0b512-310e-4d22-a3b1-07e1f000527c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5ebaa8ed-9215-4a07-8d54-3b09e14bd1b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8112de9a-24cd-47b7-97a1-5507eec758bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00836a98-dd38-4969-9589-95882aa58f9a"
                    }
                  }
                ]
              },
              {
                "id": "9198d382-a1a2-4879-a98a-fca71f058802",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcb1c8cd-234b-466c-998e-e1c8c0d649dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c485ef32-f237-407c-8aa1-a11ebb616984"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94e5e041-a1c4-49ee-9bf8-0aa97bf1eb7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de887db8-bdac-4b2e-87c2-5d2aa2b26b0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "882798a0-5cfd-495c-ab78-e11a6a71d173",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6406529c-4b50-4048-8eba-c8a195b4020c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29b3ad4e-a4b4-4a0b-a2ed-0e4bfb825363",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ebac249-0135-4d49-b0ae-2820758d439f"
            }
          }
        ]
      },
      {
        "id": "8af3026a-773c-4e3f-b5a7-146ec9bb12e8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "817dad63-6ac1-4790-9491-5574ecd3f11a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "354cc170-1143-4d73-accc-ff536a15b2d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "837b395d-6f49-4822-a232-2faa826f3734",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55059d9e-2daf-4039-b68c-746ceeb4575e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7b05e04e-543d-45f7-82e9-9fac2f72f6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9c685f-961c-4b44-b09b-8095c0eaafc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "301f113c-3300-49fd-a306-f693c29c3d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b75861-98fa-4d6f-b5ec-53eec4d43e7c",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c003cf5-971f-49db-95d5-1be3a6b3f7e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "63267722-b5a9-4e3c-9998-7c21936cfa3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476f0d2e-9193-4668-a1d0-f6381a0e2d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99bd865e-48c0-4ded-bf48-f02d3ecb2973"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd859349-d67c-4c8d-94ba-dda2d6d5e6b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5602bbb2-ebfb-4d25-b0ee-0e073a458bba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cec2e19-0503-4e09-9b6b-c43122887a54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f267a93-a1b4-4057-a0f1-d62689a65732"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1531d8d3-fd29-4b4b-b2aa-3f5b1d4944db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bb76fb2f-fa92-4217-9d60-8e404876a1db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c18cf48-f5b8-483d-a594-8035d698fcec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a16c609c-5422-4d68-b23a-9ec7618d2cc6"
            }
          }
        ]
      },
      {
        "id": "c49f8436-07c8-4807-9a56-4550e741bf5f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9899498a-6864-4ef2-ae9e-552d16a277f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "787db5b9-f0cc-492e-9218-2e53a57066bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c1f0e7a-bac1-4ce9-b483-fbe248145d62",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed6ab03-5454-4cc1-a226-eb35cae1d26f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e9bd509-b64d-41c1-9ebe-cb8e7351b972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f278b1-f679-410e-878d-7e93204bada7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8173e683-219c-4436-b327-37ad7d39ed26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a0b28d-6d12-47f5-a6b6-968bb9e05ce8",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b30382-6d1e-4d7f-bc33-d389c6a5a174",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e3bfc6f0-2dda-4f8f-a73f-e516f4ee04a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bcf0cd-bc42-411e-b400-3c9f4b901ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da3a8c1f-e422-46c3-9db1-a4cd213a6e0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40f44c01-3dc2-4d60-a92d-0f392701ea8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c926e00-75b5-4d2d-a6a7-1a8e84b57f0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c2eba7e-5ec0-43c4-abb5-a886279b25f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4bd9c7e-5ab1-4ef0-b923-1c1169b4add8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b209558-79e0-4057-8bae-b62100ee5972",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8839731-07be-416f-9638-fa3cceb73010"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb2097a3-a757-4fdb-b6b0-0f603d42ea83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "def89a20-7b5a-4d5c-9df8-c4be650dfeeb"
            }
          }
        ]
      },
      {
        "id": "16a17a1d-5852-47e8-8e86-d53f38562122",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a1d09a67-de01-4d3d-bba2-ea83ee817c94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d8b87d2-b64d-43a8-8f1c-44b71bde42e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba7f63b9-e1ff-4c5e-9b9d-fafc1710fe64",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e91117-c60e-4c62-bbdf-8df1ee4a8a23",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65d7e927-e16c-4629-89ed-a9cc88b433e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7fd1c9-2e43-48cf-b449-04f7a50d0995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2cc9636-fa68-4432-b20d-0d26178a94cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ed9041-bd07-436e-a59a-4f8112dc980a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042b30a6-8d18-4937-a4d1-0a15cd9962a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "167d77ff-b11c-420d-9886-0d256d1f63ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930853da-dfff-4055-8ad7-5302f7829fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec40e999-b9a0-4019-82a3-f095e0ee22d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dc14613-e2b9-4790-9172-a47df7e764a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a525f20-7623-4e3f-830b-e34e902aae4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "651812b0-f330-4299-9517-6087fc7dcf75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15594d7b-c1a4-4e34-b557-85c706079730"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1771fe38-a87b-4d91-b3b5-fc2e19b3ad7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fade7872-7934-409e-8f8f-0c13f2b679f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ba1bf36-9e75-44d8-91dd-b0b9e429c690",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1917e36d-97b1-41af-a61c-0d47d0c47ad6"
            }
          }
        ]
      },
      {
        "id": "d2620da3-4b34-4d25-bdf7-d37e58b0b430",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b13e0fb-c48c-4134-92e9-bdc13affc7a4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b9d7283-72ae-40dd-85de-7eddbfeb440c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "44be7ac4-b190-47f3-84e2-a1fb426b2438",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a649560-bce9-4fca-84e7-a3af679afb8e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a96d7d6c-81c3-4ef0-b525-52951858cbcc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 72.64230769230767,
      "responseMin": 9,
      "responseMax": 321,
      "responseSd": 35.812209704307946,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685234446009,
      "completed": 1685234477335
    },
    "executions": [
      {
        "id": "4ab250a5-2a7a-402d-8fa8-08f4412f03e5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "63523bcf-9953-4f47-97ab-7bdd83fbca37",
          "httpRequestId": "0cb3abbc-0d9b-41f1-8e80-f0dcee548649"
        },
        "item": {
          "id": "4ab250a5-2a7a-402d-8fa8-08f4412f03e5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2e73abfd-f40f-402f-9696-4d0d3d9217fc",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "4cf090cc-ac0f-4cae-a438-dd4783dddac8",
        "cursor": {
          "ref": "05550124-869e-4650-8d10-26ee39a84a86",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "76637ad7-377e-44f6-a922-b88c5b4f6575"
        },
        "item": {
          "id": "4cf090cc-ac0f-4cae-a438-dd4783dddac8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "97e5456c-2316-4ff1-9a4c-34ac0d62f16f",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "7a23bb84-3434-4957-a544-978236766f3e",
        "cursor": {
          "ref": "467cb1c9-21d1-47a2-838d-e9242dec5070",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "077c83c6-7c03-4098-adcd-042436ab7377"
        },
        "item": {
          "id": "7a23bb84-3434-4957-a544-978236766f3e",
          "name": "did_json"
        },
        "response": {
          "id": "510b84cd-06f9-42ef-b775-8dfeca381958",
          "status": "OK",
          "code": 200,
          "responseTime": 316,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88729a9-3607-4d0c-ab25-b94010e226b1",
        "cursor": {
          "ref": "c24f7dc7-c3bc-4f4c-aeaf-eb39b8b4eb6d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0c7e7c8c-3ca9-48ff-b1a4-5f29618ce2b6"
        },
        "item": {
          "id": "c88729a9-3607-4d0c-ab25-b94010e226b1",
          "name": "did:invalid"
        },
        "response": {
          "id": "b22eb15b-f84e-434e-b236-43548888b01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88729a9-3607-4d0c-ab25-b94010e226b1",
        "cursor": {
          "ref": "c24f7dc7-c3bc-4f4c-aeaf-eb39b8b4eb6d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0c7e7c8c-3ca9-48ff-b1a4-5f29618ce2b6"
        },
        "item": {
          "id": "c88729a9-3607-4d0c-ab25-b94010e226b1",
          "name": "did:invalid"
        },
        "response": {
          "id": "b22eb15b-f84e-434e-b236-43548888b01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f7865f-d32c-4045-a397-a715f29309de",
        "cursor": {
          "ref": "c7f9a4e5-1d4b-4fc1-9930-3fb31320d250",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2380e640-60cd-43e0-aadd-feb10eeb1972"
        },
        "item": {
          "id": "27f7865f-d32c-4045-a397-a715f29309de",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c751a328-3475-4358-a65a-2f9f0510a27f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def8f1cd-1738-48ad-b8ab-88aa80ec232d",
        "cursor": {
          "ref": "355ef166-468c-470b-b954-ce98bc7240bf",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3225606d-ae0d-4c7f-93ca-23c3263454b3"
        },
        "item": {
          "id": "def8f1cd-1738-48ad-b8ab-88aa80ec232d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9242eb2d-2161-4bd8-b67f-bb56176902e3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7bad65-0227-4627-92dd-ffd020183e31",
        "cursor": {
          "ref": "9d1c7d8c-6442-45a2-b1d0-9eb10b298ae2",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ee56701f-fc99-4393-938a-dd1aaeec89ee"
        },
        "item": {
          "id": "ed7bad65-0227-4627-92dd-ffd020183e31",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f63d1607-f509-43ac-a2fe-67fd7ea1ddff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d07831e-ea52-4aef-869c-eedadac1404e",
        "cursor": {
          "ref": "a2e4f4b5-dd82-42a4-8cd1-404f00d88973",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76c01373-0252-4ab3-a265-99b655d77a1e"
        },
        "item": {
          "id": "8d07831e-ea52-4aef-869c-eedadac1404e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c96bb682-ec5b-4fbb-85e4-30fed0ab3b6f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d07831e-ea52-4aef-869c-eedadac1404e",
        "cursor": {
          "ref": "a2e4f4b5-dd82-42a4-8cd1-404f00d88973",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76c01373-0252-4ab3-a265-99b655d77a1e"
        },
        "item": {
          "id": "8d07831e-ea52-4aef-869c-eedadac1404e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c96bb682-ec5b-4fbb-85e4-30fed0ab3b6f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bd06b0-fe4c-4117-8c17-56d19f57dce1",
        "cursor": {
          "ref": "ac5fe309-bfc3-4e5a-a987-d2f167d094b9",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fb9b67f1-8b79-4bd9-abf8-2419fe7f228c"
        },
        "item": {
          "id": "70bd06b0-fe4c-4117-8c17-56d19f57dce1",
          "name": "identifiers"
        },
        "response": {
          "id": "dfc4ddcd-4b27-4653-a3d1-dbe5ba122b47",
          "status": "OK",
          "code": 200,
          "responseTime": 129,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30082c3-347a-4e81-9871-976398146584",
        "cursor": {
          "ref": "6b5411b0-1994-4e40-9915-ecb43cd10fc3",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2fc9ddc3-2a39-481d-88a7-33932bad6722"
        },
        "item": {
          "id": "c30082c3-347a-4e81-9871-976398146584",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0f1e3d67-6bc1-44c0-b772-3b1e84031e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30082c3-347a-4e81-9871-976398146584",
        "cursor": {
          "ref": "6b5411b0-1994-4e40-9915-ecb43cd10fc3",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2fc9ddc3-2a39-481d-88a7-33932bad6722"
        },
        "item": {
          "id": "c30082c3-347a-4e81-9871-976398146584",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0f1e3d67-6bc1-44c0-b772-3b1e84031e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35741a6-6134-4599-80ca-591bd5191c7b",
        "cursor": {
          "ref": "2ac80c32-ed85-4353-a4f2-d03fdc39d030",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "51859286-3c94-4354-9b0f-171fb75908b7"
        },
        "item": {
          "id": "d35741a6-6134-4599-80ca-591bd5191c7b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8cff6e51-b741-435c-9139-2c875e74fd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfa9ee9-9d4e-4431-8230-dbda23388226",
        "cursor": {
          "ref": "6223d9b1-b1a7-4122-961d-92dda1e79802",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "47fefe84-75fe-48ba-a259-60ef0af117ad"
        },
        "item": {
          "id": "edfa9ee9-9d4e-4431-8230-dbda23388226",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3f709b3e-4d28-4df0-a259-482aa715bf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3795a49-a9c0-4e20-a39c-99e978086aba",
        "cursor": {
          "ref": "a375797e-af1a-4ac0-b679-1623b7868b56",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e98b94e2-ac5b-4289-a9ee-9cb3c1359279"
        },
        "item": {
          "id": "f3795a49-a9c0-4e20-a39c-99e978086aba",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cc27de0c-f53d-499a-80de-e1faa8a52090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0673bd54-b16a-45b8-89f3-ff975f4645ba",
        "cursor": {
          "ref": "acc60554-6680-4892-8831-8ee5b2769f59",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7d28096c-e8a0-4db1-aec5-c6fae2e0d60a"
        },
        "item": {
          "id": "0673bd54-b16a-45b8-89f3-ff975f4645ba",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ed190ac2-f9f6-495d-884a-c6abdd671876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b051fc-866f-43d9-911e-15887967edec",
        "cursor": {
          "ref": "0aab3aeb-280e-4aa6-af0e-d8f99617e8d5",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0820ae1a-c873-4c7c-a48b-aa980835b4a4"
        },
        "item": {
          "id": "74b051fc-866f-43d9-911e-15887967edec",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f6687baf-e15e-4e2b-adab-3ef53d30bff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c78576-8d65-480a-833c-fd2ac097add7",
        "cursor": {
          "ref": "0b1ca44c-0fd9-4f75-884f-81c9b6df9881",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d304145a-0991-426d-928c-021dfb86376a"
        },
        "item": {
          "id": "74c78576-8d65-480a-833c-fd2ac097add7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "215ba91a-6246-4351-a5e5-11714883b6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71880d0d-56dd-4c32-b904-777f54d28d95",
        "cursor": {
          "ref": "50231322-d135-40d6-a53b-f1e2ea933327",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0d2374c1-6322-416b-82d0-ce115295e56f"
        },
        "item": {
          "id": "71880d0d-56dd-4c32-b904-777f54d28d95",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6de55d9a-a162-41f8-97bb-95baaa845c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebad3f7-3f82-43bd-95ee-fe467b75acf6",
        "cursor": {
          "ref": "bfd8c1f0-29c2-4b94-abad-edcbc26de1e7",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "db8da1f3-20df-470f-96fe-7d6c494cc378"
        },
        "item": {
          "id": "aebad3f7-3f82-43bd-95ee-fe467b75acf6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4129d52f-d560-428d-8f1b-e3b13fe96888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba764fea-c444-4a5d-96a6-5a75380fcd03",
        "cursor": {
          "ref": "62ac0c90-7754-4a09-a8ed-7f4db04bd78c",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "01153bb0-43a0-4496-a3d3-7e58a2f03132"
        },
        "item": {
          "id": "ba764fea-c444-4a5d-96a6-5a75380fcd03",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6e51d1ad-3d88-4271-a12a-c87ced1653f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfb40c5-8f6a-43f1-8fe3-971cf3c971ae",
        "cursor": {
          "ref": "5961b84f-3a2c-4c9d-bb54-74e55a527ef9",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9eb14a8b-fac3-4569-a874-8d9ad8eb021e"
        },
        "item": {
          "id": "bdfb40c5-8f6a-43f1-8fe3-971cf3c971ae",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fe11a468-037d-426f-8a07-214e8b5aeecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e2c129-4ae7-4b9c-abef-d3c0667e645e",
        "cursor": {
          "ref": "c6e913ec-4a81-4c0f-8a45-4fc4fed31450",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6e10cb48-4a20-40a0-bfb5-b049906daa31"
        },
        "item": {
          "id": "11e2c129-4ae7-4b9c-abef-d3c0667e645e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "866dcf5a-032b-4c16-9761-052e2cc009f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65026686-ed83-4cbf-a687-f8741b823b87",
        "cursor": {
          "ref": "614ca419-a1c2-4289-8e10-6249402c68aa",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "971f47c4-82cc-47ba-85d9-f871cb0652ca"
        },
        "item": {
          "id": "65026686-ed83-4cbf-a687-f8741b823b87",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "38698502-ad4e-49fe-ab53-8cbb64f5d569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e02985-6444-4b64-9ea0-7ec73c6f8860",
        "cursor": {
          "ref": "25f1f998-cb23-4e39-aa5a-100dceed0080",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0bba22ca-36ef-4fea-b667-65ba6c0321bf"
        },
        "item": {
          "id": "d4e02985-6444-4b64-9ea0-7ec73c6f8860",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0fc4bae3-31a9-4565-bc1d-af318e0abd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0267eb91-949f-4938-a26a-1a9ba3010c1b",
        "cursor": {
          "ref": "7d274fb9-8adb-4995-b3ad-8ff7b2c6d607",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4725c5e6-8b76-4462-b153-c0e381e54640"
        },
        "item": {
          "id": "0267eb91-949f-4938-a26a-1a9ba3010c1b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "966baa87-22e7-4542-a0f6-69c573fa522a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0606bd63-4b0d-4368-8765-fa6f37d3b950",
        "cursor": {
          "ref": "ffb875ae-2b0e-4da9-8e75-dad1c6c44bcb",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "938ecf80-3f09-445c-912e-5025a4e9cc9f"
        },
        "item": {
          "id": "0606bd63-4b0d-4368-8765-fa6f37d3b950",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8b470e77-ebf9-40e5-bcb6-9e2905da07d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157d90c0-83ba-49a1-a1f6-a4bd0c091bfc",
        "cursor": {
          "ref": "9ed7f355-5cec-42e9-8bc6-603a696d8678",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5227becc-3f18-4e9c-b3c0-bf987c39aa5e"
        },
        "item": {
          "id": "157d90c0-83ba-49a1-a1f6-a4bd0c091bfc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8f44ba35-b275-49d3-96b0-d1a702eae334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5394be-48fd-4bfc-a0eb-dc134b6db760",
        "cursor": {
          "ref": "11f8f578-4b0e-4b4a-958c-b40a7d220855",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "78f45ed0-8408-46bf-8f82-2cad5693c141"
        },
        "item": {
          "id": "ba5394be-48fd-4bfc-a0eb-dc134b6db760",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "39d70dbf-f12a-4143-b1a7-8bb197cfd428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d6c20b-ebe8-46e3-9866-bd862bd640a4",
        "cursor": {
          "ref": "8b5925a9-5830-45dd-b240-2b70b10a9fd2",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "035283a7-bf18-46e8-9ea9-41bcabe0cf41"
        },
        "item": {
          "id": "e0d6c20b-ebe8-46e3-9866-bd862bd640a4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1d73c3e0-ee4c-46a9-833b-cc760883ef39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f4fffc-f447-4fb4-be1a-e54ee41c6d0e",
        "cursor": {
          "ref": "cb8138c9-aa91-4e82-8c42-ecc0b384fea5",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "95e75a05-c233-435c-92ac-2daece68b25b"
        },
        "item": {
          "id": "13f4fffc-f447-4fb4-be1a-e54ee41c6d0e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d7b0a29b-ae67-4329-b626-170a36618d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366803f1-f186-4973-ba7a-a70018a32a9d",
        "cursor": {
          "ref": "946eef9b-3c81-43f9-8065-2f760de274b9",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f753c533-39ec-459e-ba13-6ebf4418e46c"
        },
        "item": {
          "id": "366803f1-f186-4973-ba7a-a70018a32a9d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2731e882-58da-452f-a956-8bbf1ac43cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d79625d-8cba-4404-9cb2-74b9df7344bf",
        "cursor": {
          "ref": "a3fd630d-cc5b-4794-b1b1-2ce18d4bc25d",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8855c22a-4c17-4b2c-9d94-5c5962d89c04"
        },
        "item": {
          "id": "9d79625d-8cba-4404-9cb2-74b9df7344bf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3949ea7c-5ebd-4245-ab58-b518424540f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cd03cd-ff8c-4994-9516-1347edd27ce5",
        "cursor": {
          "ref": "2e1e9a01-759e-4640-a1b2-3d3b1b501697",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2feaa1d9-2e17-4606-9004-a37318ee031e"
        },
        "item": {
          "id": "60cd03cd-ff8c-4994-9516-1347edd27ce5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f98d6086-6b24-4924-b18f-63842f97fdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fad193-5717-47ed-895c-8855d101283d",
        "cursor": {
          "ref": "4dc6b2cb-3db9-49c8-9408-d9eac40ef5af",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6cff35b4-4726-4966-b8e1-f072e035df8c"
        },
        "item": {
          "id": "89fad193-5717-47ed-895c-8855d101283d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "28f2e592-020a-46e2-b2fe-f554f9fcd16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c124047-15d6-428b-bed4-8ef674b99d95",
        "cursor": {
          "ref": "03a8a12f-3789-457d-8a9a-95ad2288ce90",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d300aaa1-b1bd-4a6b-bc3f-9fbd2df916b2"
        },
        "item": {
          "id": "2c124047-15d6-428b-bed4-8ef674b99d95",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f8722ca5-5fbe-4dca-b492-613faa4345a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a86a310-bc42-43cd-b2c6-5c898c261667",
        "cursor": {
          "ref": "0896979a-0767-43a8-869c-42a0584ba407",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dd307f02-76cd-41d5-99c3-ebb31d079168"
        },
        "item": {
          "id": "3a86a310-bc42-43cd-b2c6-5c898c261667",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5b0b2068-6396-4c1a-a038-e8f508ab941b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cc332b-d77d-469b-9c57-1d080c0badd4",
        "cursor": {
          "ref": "4f2b0d71-2633-49bf-9333-a9b39049f9ac",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d1c4d386-3cf5-40b1-a72a-255b4873e946"
        },
        "item": {
          "id": "92cc332b-d77d-469b-9c57-1d080c0badd4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fb54bd06-489a-48d4-a8df-0c569325a6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4f18fe-f804-4908-a95b-8535c7d64b16",
        "cursor": {
          "ref": "418f012a-574e-4938-9349-1b412c4584cc",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4f993a39-7505-459b-bacc-aeac835a3f60"
        },
        "item": {
          "id": "4b4f18fe-f804-4908-a95b-8535c7d64b16",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8bd7dd9c-501d-4122-b807-1f7cd5a2b3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9512469a-042c-4014-b26c-9124d98aa90c",
        "cursor": {
          "ref": "af0200c3-fa23-4702-bc32-fe80f0430baf",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "501fb08b-3145-4f01-8899-9d85286bd8f8"
        },
        "item": {
          "id": "9512469a-042c-4014-b26c-9124d98aa90c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1abe4eb8-d4f9-47b9-a5cb-726f168a4f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62b0c60-9949-49c3-b1be-3d72f9ca2ecd",
        "cursor": {
          "ref": "188401b8-0008-47b6-8cc2-70983c4cff68",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0dbb07fc-5cc3-4910-9b6e-7fff004f65e1"
        },
        "item": {
          "id": "c62b0c60-9949-49c3-b1be-3d72f9ca2ecd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8c810dc0-b2a2-4f65-9886-28b3dc01193d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5ec086-2052-4044-b79d-3defb6fa1db4",
        "cursor": {
          "ref": "6ef13e08-55e0-4c94-9dc7-d1c502b5c1a9",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7d811a91-dcfb-4247-bc84-aa41f7d443a7"
        },
        "item": {
          "id": "4e5ec086-2052-4044-b79d-3defb6fa1db4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7c250ce9-35b0-4496-9154-84023de40943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe7f5a4-99f1-408c-85ec-85a17c356c7e",
        "cursor": {
          "ref": "6b203924-4a57-47a7-b67a-94bcdc6820f0",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "473c52b1-1083-4e22-ac78-a0d90957783f"
        },
        "item": {
          "id": "3fe7f5a4-99f1-408c-85ec-85a17c356c7e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "97ca6a02-5c8d-4288-99bc-45bca8cf9eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd0ac8b-24c9-44b3-8d4c-6427f55350cb",
        "cursor": {
          "ref": "c96100fc-551c-4141-8662-0e64880e1724",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ddc6dac8-8279-4fc1-b1fe-fa92e6cf3c55"
        },
        "item": {
          "id": "8bd0ac8b-24c9-44b3-8d4c-6427f55350cb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "645f2a72-7345-42de-a332-30f953124eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211fa446-0a13-44d0-a903-e164b08e5f59",
        "cursor": {
          "ref": "ec2e439e-4890-45b8-80e6-f036fc24af2a",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "de14fa35-6680-4e50-b708-8d29baa6b933"
        },
        "item": {
          "id": "211fa446-0a13-44d0-a903-e164b08e5f59",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "72ccfd0a-6b42-4bde-8587-0e953087b58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b935aafe-ec29-4c43-bb97-f02adc54fb30",
        "cursor": {
          "ref": "a74e709a-9c21-4557-ae18-730513ca867d",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bff0df20-9287-4d17-b6c6-934a910eb15b"
        },
        "item": {
          "id": "b935aafe-ec29-4c43-bb97-f02adc54fb30",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c179b6ee-f55b-4f74-87ec-fa03629b3e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46858f9-cf19-4859-b1c3-65947f236e62",
        "cursor": {
          "ref": "9c7179ff-dccb-4a4d-bcc3-0528263c7899",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bb88c147-79e2-4290-97d8-ebfaead33387"
        },
        "item": {
          "id": "a46858f9-cf19-4859-b1c3-65947f236e62",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "03ba47f0-be34-4b01-a442-ff28b1035a22",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d68e06-31f2-4c8a-861f-c8a93b386370",
        "cursor": {
          "ref": "6939b4bf-1fa0-44ae-82a0-3772882d7765",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6c8b024e-cbea-426f-93df-b41acc53d09e"
        },
        "item": {
          "id": "d4d68e06-31f2-4c8a-861f-c8a93b386370",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "60c241a6-11bf-460a-a51c-59ddf1f1eb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f228698-d96a-4b13-b2c6-f0e51d537a98",
        "cursor": {
          "ref": "98b492a1-a92b-49ca-b253-8786fbfde528",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4a26af5f-debc-4eb8-bf38-cb601df54f60"
        },
        "item": {
          "id": "3f228698-d96a-4b13-b2c6-f0e51d537a98",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "df9c46b1-5d3d-46fc-b626-a576c9f336c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0831cf14-8ad0-4690-b2fe-fab7f428d1ad",
        "cursor": {
          "ref": "73d00981-a32c-4c75-9def-cbb9251f846f",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "237f1a31-5ce6-4bad-86f2-2b39370bc95c"
        },
        "item": {
          "id": "0831cf14-8ad0-4690-b2fe-fab7f428d1ad",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e0b3b5c3-149b-4f17-a1b3-1e6085f145ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e58efd-2b13-457a-b1be-666e4855667f",
        "cursor": {
          "ref": "066bdd3d-a9ac-4ae5-b1d1-87c146e2e238",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "34151a23-c52d-4883-9619-b2dd1c8d94a7"
        },
        "item": {
          "id": "26e58efd-2b13-457a-b1be-666e4855667f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "375632b6-36ae-4c38-b2d7-12c973b0c255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc678554-bc58-42ad-bf66-e7169482e1f4",
        "cursor": {
          "ref": "2afe5875-03e3-4042-8480-eac03a637030",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b67d9174-fc14-4046-b2e9-3addbfe590b8"
        },
        "item": {
          "id": "cc678554-bc58-42ad-bf66-e7169482e1f4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d9472d77-08c5-4cb0-85d6-85110b89bec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5954d54a-8910-498e-ae31-24ab12af5895",
        "cursor": {
          "ref": "fa219993-5960-460e-b744-223681334aa6",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "95b2b4cd-46ec-495c-a6ca-818b1fa190c9"
        },
        "item": {
          "id": "5954d54a-8910-498e-ae31-24ab12af5895",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0fc8dea8-ad68-48b1-ae6e-851bd6496b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178363b7-ad5f-44a7-b45d-3a8250c15c47",
        "cursor": {
          "ref": "d773b41e-0bb8-4cff-9c36-4685c82ffe55",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e21d2a33-ed74-4834-b99a-d646f873bba9"
        },
        "item": {
          "id": "178363b7-ad5f-44a7-b45d-3a8250c15c47",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "da000f6a-dc3c-4aef-b0d9-a0aec6f9c775",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db36fb9-68b0-4df0-bf10-203d9eec3e36",
        "cursor": {
          "ref": "c2a11483-0735-4c7d-8d9c-e272465f98e0",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7a423e30-ceb2-45ab-a9c2-b2bac17bf79c"
        },
        "item": {
          "id": "8db36fb9-68b0-4df0-bf10-203d9eec3e36",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "17275fe5-1f9e-4d5b-9edc-8f6ba7669e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73a2d9c-1ea0-48e5-9d1d-2b012588ec05",
        "cursor": {
          "ref": "355e77b0-5d88-4f93-93a4-5164afd5e75d",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "adf960e7-d55d-4323-8de8-22527f4f9d3a"
        },
        "item": {
          "id": "b73a2d9c-1ea0-48e5-9d1d-2b012588ec05",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a67de322-f283-4c29-8fb0-ad08518bdb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa45c232-1f0a-42e6-8500-16eaa2a98a12",
        "cursor": {
          "ref": "35523c93-63ff-42dc-946b-f9b99ef93b39",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "82075777-a6ed-4088-a993-57e1f7d859fc"
        },
        "item": {
          "id": "fa45c232-1f0a-42e6-8500-16eaa2a98a12",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "307b7960-74f7-4154-aa9e-cceb583d9a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f617ca4d-ad65-4ece-95a2-f365c429cfbd",
        "cursor": {
          "ref": "803a9877-31f9-4b7b-82fb-8238f4fcb9ac",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "43470f34-5875-47f6-b6bb-7fa88052a8f7"
        },
        "item": {
          "id": "f617ca4d-ad65-4ece-95a2-f365c429cfbd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d88f51fc-4ba9-4a23-8af7-eecdc99f1b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f1073f-00fb-4b56-a72f-7973d012d39c",
        "cursor": {
          "ref": "620e30c6-50a7-49f4-b8fe-ed00b59117d1",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "50a99978-7776-4135-abf1-021e5b43a732"
        },
        "item": {
          "id": "b3f1073f-00fb-4b56-a72f-7973d012d39c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "627f5e53-c206-4351-bbbf-10fa5c7aa6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4840e528-1381-4e15-84a4-f5deef6fe1da",
        "cursor": {
          "ref": "76e42020-adb3-4a98-8e72-7c40d4f31656",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "694c42ca-daa8-44c9-b364-8b9958bb8eea"
        },
        "item": {
          "id": "4840e528-1381-4e15-84a4-f5deef6fe1da",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "450e6a18-a7dd-4f5c-acb9-817d2fba9836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1de80d-1273-4066-87ab-6f3fc416b648",
        "cursor": {
          "ref": "b9b67fbf-8252-4349-8ab9-8bfc71f765c0",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6fb1f7c4-1ad8-4b03-8647-8dc428c9f2ad"
        },
        "item": {
          "id": "3d1de80d-1273-4066-87ab-6f3fc416b648",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "80d28436-829e-40cc-9b26-fee024890457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcbfcbc-7fb1-4c5e-8780-cb1fa33ca7dc",
        "cursor": {
          "ref": "ccd3b926-62fc-4c75-a15a-ff9d29e8e09e",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e428ffb2-60f5-440f-9abb-58cebaafeeda"
        },
        "item": {
          "id": "8bcbfcbc-7fb1-4c5e-8780-cb1fa33ca7dc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "44c7b81b-caf4-4a62-9e5c-48ed4df05d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ab3278-248c-4057-85b3-94ba868eb2c4",
        "cursor": {
          "ref": "46b33ebc-e6e8-4dae-828e-9c553d8fb507",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fc7923d6-0bf6-4214-a60c-e1029c90d9f3"
        },
        "item": {
          "id": "91ab3278-248c-4057-85b3-94ba868eb2c4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d225f722-eb80-4a6f-80c5-cbccfd3e7ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3144a66-34cc-4723-9ecd-fc44cb190a65",
        "cursor": {
          "ref": "cc89660b-6111-470e-aaa2-48c284597b5d",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7517c30a-afa4-49e8-ba45-0d851d20e8fa"
        },
        "item": {
          "id": "c3144a66-34cc-4723-9ecd-fc44cb190a65",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "af95bffb-b8b6-4c2f-ae40-3a97b11f27a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79eca23-0dc8-416e-bece-aced7c77ceb2",
        "cursor": {
          "ref": "cb46548a-9407-4094-8333-5f6dfddde3c6",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f69cbe4b-8560-4dd6-91c4-57aae8fd2df2"
        },
        "item": {
          "id": "f79eca23-0dc8-416e-bece-aced7c77ceb2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b4dc268b-c2e5-436a-9c10-b030ced43e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2219fe56-9aef-4b46-906a-8317f8c4990a",
        "cursor": {
          "ref": "5ac513be-8fa1-46e6-9f1d-a69b29b68afe",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "51a5c4d4-60c0-49e4-9299-5491c436cf44"
        },
        "item": {
          "id": "2219fe56-9aef-4b46-906a-8317f8c4990a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9be5405a-1fce-492b-85b1-0d8794bfe6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15de669a-7d7d-4a86-af34-cb19746f973d",
        "cursor": {
          "ref": "cde8b9e8-ac6e-42eb-8c67-46104d25de53",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c7a91e1c-6136-4f05-bce3-0bb0537bfa7b"
        },
        "item": {
          "id": "15de669a-7d7d-4a86-af34-cb19746f973d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "72d9a64b-9fd5-4df8-b3d9-2e5b8fab2e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0eed134-82c0-4645-ba5d-85493475e1f2",
        "cursor": {
          "ref": "d4331413-c10a-4403-9455-62266bcfee5a",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "38a6f7af-d4a2-49a4-bea5-cb6a3085f96c"
        },
        "item": {
          "id": "e0eed134-82c0-4645-ba5d-85493475e1f2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f9c16345-70e7-4668-a078-c8c96b7a8ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db641b4f-cfd2-4914-bb9d-e2030d92117f",
        "cursor": {
          "ref": "65e493d6-3351-4a82-a53d-c49f530c2f69",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c5d369f8-887b-47b9-9c0b-88636ea40090"
        },
        "item": {
          "id": "db641b4f-cfd2-4914-bb9d-e2030d92117f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "07013a78-e452-4fa6-a3df-8916b79a56a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2cdd10-9616-4ec2-9b94-e2467654114c",
        "cursor": {
          "ref": "3b143180-6f71-4754-a172-c32ae1b38ada",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bf0ad275-9d86-40ee-83a5-78da629e0a78"
        },
        "item": {
          "id": "7e2cdd10-9616-4ec2-9b94-e2467654114c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ec660778-a764-4d0d-b525-7c789ee29c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f082a3-9749-4183-9b02-031333ea46b4",
        "cursor": {
          "ref": "be48002f-a35d-41c4-ba4e-b456151609d8",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "18f35100-ab62-4143-ade9-8da2e6e5350f"
        },
        "item": {
          "id": "d8f082a3-9749-4183-9b02-031333ea46b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c2ff6ab7-91f4-4a30-b006-e5070f185e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d3fe56-5d31-452d-bbb9-6976a229830a",
        "cursor": {
          "ref": "63f126f4-97ce-457f-a62a-07cdb6d0c679",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6bf86628-de40-4193-9725-60ca962dae97"
        },
        "item": {
          "id": "e5d3fe56-5d31-452d-bbb9-6976a229830a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "54bb1ab9-7ddb-46ba-a60f-9feadebbada4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106dee6c-41bd-457b-95d7-18a87638b141",
        "cursor": {
          "ref": "ce9ed114-d664-47a3-a0d9-4ac420576972",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4ab398a7-5cda-40f9-88e6-ec9bebb00ef8"
        },
        "item": {
          "id": "106dee6c-41bd-457b-95d7-18a87638b141",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1baa259c-6a6f-4152-8d82-2b2497822189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f6fe0e-d387-4f0e-8c80-b0089b3cbae2",
        "cursor": {
          "ref": "15a7e172-7202-4dbe-a604-41e440fb1b60",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "26d06c96-ad7c-48ec-bac5-8bdb74332637"
        },
        "item": {
          "id": "65f6fe0e-d387-4f0e-8c80-b0089b3cbae2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b9fb1042-ee25-462d-96cb-85e32ae02307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3895ce3-5ff5-4b89-9b2e-b319ae8a4319",
        "cursor": {
          "ref": "4f3e15c0-79bf-488b-821e-7da46073c4aa",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "549538fd-39c3-4ab5-bf75-5d85b016e7ca"
        },
        "item": {
          "id": "a3895ce3-5ff5-4b89-9b2e-b319ae8a4319",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "89c2eb29-ee61-4575-8d09-cca889bc7203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5a7d1d-dcb4-4097-87bb-7120e1b9c9e7",
        "cursor": {
          "ref": "a6bffc5d-c71b-409f-bf1e-b12ad0233ed3",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3e906b2a-f435-4e35-a2d8-8bf83f001b3f"
        },
        "item": {
          "id": "5a5a7d1d-dcb4-4097-87bb-7120e1b9c9e7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fdee09ec-c13f-4182-81e4-d3aa53ce3cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f5880a-78d7-44e4-aa1d-15cb45b8b77e",
        "cursor": {
          "ref": "cfcde3c9-1a8f-48c0-ad22-73444c194e84",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "16e7b96e-85bc-49b6-b06d-4788717dc584"
        },
        "item": {
          "id": "99f5880a-78d7-44e4-aa1d-15cb45b8b77e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c42366ad-6421-4926-ac0d-f0977777c91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5bc692-5803-4af8-87f9-49fc0471c065",
        "cursor": {
          "ref": "1f56534d-a910-4047-a6ed-a2ab686206f6",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3b7ab88d-c6ed-44a1-8f2f-212dd00dc7f6"
        },
        "item": {
          "id": "da5bc692-5803-4af8-87f9-49fc0471c065",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4b1e907b-2496-49ea-a624-575385a83f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef93e72c-87e9-4b8a-9821-95e805893b58",
        "cursor": {
          "ref": "d44d59e8-9409-48a0-a738-bb0b63e51399",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ed24cca8-62dd-4004-82ec-25b6825be266"
        },
        "item": {
          "id": "ef93e72c-87e9-4b8a-9821-95e805893b58",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "621be12f-ff76-41b3-84fb-cfac87458e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee99a115-5dcc-4376-b57d-572893565a6b",
        "cursor": {
          "ref": "d7e62989-80ba-4679-b193-4db36d8fdf9f",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "674fbef0-935d-4880-9433-2ce2ef4aec24"
        },
        "item": {
          "id": "ee99a115-5dcc-4376-b57d-572893565a6b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c4341021-76f1-4e0e-b268-f18bd6ab0b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5aaa6f-dc67-4f8f-bc88-63856f4bdc9a",
        "cursor": {
          "ref": "2c8bbdac-68f9-4c75-be46-70fdeeaf8935",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ace45fd3-9c7a-4db4-9bde-19b71d282162"
        },
        "item": {
          "id": "3f5aaa6f-dc67-4f8f-bc88-63856f4bdc9a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6978e321-ae05-4a2b-bab8-f199793948e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2bb0ae-89a8-49f3-91dd-760f642a75b5",
        "cursor": {
          "ref": "30acd8a5-1960-4eec-bd94-ed7a0e6dfe7d",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0db06cd5-a10a-4833-a7c8-451a827cc4ec"
        },
        "item": {
          "id": "ae2bb0ae-89a8-49f3-91dd-760f642a75b5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "389d8433-f855-498c-af87-51e1b8a143d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606cd601-c13c-41a2-94d4-096652b7e182",
        "cursor": {
          "ref": "0acd77e6-07ab-482e-9a81-ffb328f4a540",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "548402df-3e35-4ceb-8d2d-9e615d429b2a"
        },
        "item": {
          "id": "606cd601-c13c-41a2-94d4-096652b7e182",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "80bd8c62-4a2f-411c-a4fd-f85056040f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343a2140-d1ef-4d68-acc2-4631462e284c",
        "cursor": {
          "ref": "1317fafe-be17-44cb-ba63-264bcb1d3286",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f928b9e1-2365-469f-985c-b6405167aac4"
        },
        "item": {
          "id": "343a2140-d1ef-4d68-acc2-4631462e284c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5789da0d-ca13-43cf-825f-89decbbbb1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ba461f-5d8e-41f8-8e7a-68c4ee4a1896",
        "cursor": {
          "ref": "55cb2b9e-0656-4d8f-ac55-31bf92f60a28",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d3f71f07-76ff-409f-b51e-b7ed7cc68399"
        },
        "item": {
          "id": "54ba461f-5d8e-41f8-8e7a-68c4ee4a1896",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fe8e5026-1ba8-4c2d-9dae-42667399bfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c895bbc0-04c0-4aa3-b950-3d1810f684c1",
        "cursor": {
          "ref": "12884c7d-263e-452e-b670-6e1551fc3de9",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "69653b88-7054-48d3-bf30-ee98e2243692"
        },
        "item": {
          "id": "c895bbc0-04c0-4aa3-b950-3d1810f684c1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c59467d0-98b7-4d7d-acef-4dc551d64663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fc6743-0828-4d68-80bf-3624ec5f5dcc",
        "cursor": {
          "ref": "0d705ad9-fa96-480b-af8e-954c172f6563",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "83187313-417c-4eac-84e9-18988dde995f"
        },
        "item": {
          "id": "90fc6743-0828-4d68-80bf-3624ec5f5dcc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e2e80ff6-9e0c-4fed-ad1b-4add75bf9f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0257fd09-732e-4dc5-be45-be5a4961f533",
        "cursor": {
          "ref": "d48ceb20-4420-4c7e-8dcb-123862d0e1e5",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "163ecccc-593e-4802-abbf-c213417fb891"
        },
        "item": {
          "id": "0257fd09-732e-4dc5-be45-be5a4961f533",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0813c638-8df7-40e6-8e61-8d5b00f6c87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7bd27f-7f04-4969-8325-03186035b39b",
        "cursor": {
          "ref": "4928f6ef-339c-48dc-ad4a-b7ef2dd45882",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dd7ae4a6-b372-4ede-8ab9-bfaa8579e173"
        },
        "item": {
          "id": "bd7bd27f-7f04-4969-8325-03186035b39b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "93d29f4f-ee5f-4e97-a4ef-b1a7cabe7270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de06ced-2ccc-49d9-a6fa-3cc24f6b4c4e",
        "cursor": {
          "ref": "d3ea2fc0-7dd4-4a30-ba9f-be34a46564a1",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1ae0f629-0ab5-4ac2-b5d2-13ea815471b6"
        },
        "item": {
          "id": "0de06ced-2ccc-49d9-a6fa-3cc24f6b4c4e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bc5e8a40-cba8-423c-ab73-040869862e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f775284-6d3b-4c47-937b-f0161d044b15",
        "cursor": {
          "ref": "46c83c30-8fa7-45e9-a389-b228daf02eb6",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cd4b2e1c-a93e-4331-92fd-9a4406ae5855"
        },
        "item": {
          "id": "0f775284-6d3b-4c47-937b-f0161d044b15",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8cbe5b19-6b76-43dc-b887-4648a360ec2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cece9b6f-e205-4fa5-be51-919c479d522b",
        "cursor": {
          "ref": "4c00b1cb-f325-4a6f-b053-0d8022fe6518",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "856f9720-5e6a-4376-bf4b-eeacaf60fb78"
        },
        "item": {
          "id": "cece9b6f-e205-4fa5-be51-919c479d522b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "46c7a221-6b02-4c4e-886b-93da11b4191a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7b28d2-c847-4dda-96b5-82d56a33eceb",
        "cursor": {
          "ref": "c3e446a1-78c8-4a26-8b5b-015f92b5dad6",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b67defce-b2fe-4ceb-a38c-04eadcdb1810"
        },
        "item": {
          "id": "5f7b28d2-c847-4dda-96b5-82d56a33eceb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e8410b26-3a2c-4a50-a4c2-3e33e7115b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56477794-c5c6-445c-936c-f285c3aa573f",
        "cursor": {
          "ref": "d018557d-4af1-4662-b9cc-cb176a7d13e9",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "25298185-8889-4eba-be71-a8ea4f360d62"
        },
        "item": {
          "id": "56477794-c5c6-445c-936c-f285c3aa573f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "570bc81c-6de2-4113-8301-22c0ab757c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954d41db-e91a-4586-910d-9b002e16a1d2",
        "cursor": {
          "ref": "3c1fecc7-62d6-4ed2-8946-4ae31ed9b202",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ce7d7ba6-2534-4b55-9ae2-47711d4060a4"
        },
        "item": {
          "id": "954d41db-e91a-4586-910d-9b002e16a1d2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a32df147-c0fd-45e3-a3b0-cdca3f1ac0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb8e887-86fb-4fc5-9ea3-6add81feab58",
        "cursor": {
          "ref": "69972295-7d6c-42ea-a4c9-5a7909541fed",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c9a5e9d1-dede-44f5-b5ab-b159ae5b265b"
        },
        "item": {
          "id": "7cb8e887-86fb-4fc5-9ea3-6add81feab58",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4c0826d6-2680-4960-ac9e-82e7396d32d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f368a0d1-32a4-4d13-ba61-2fb32e8df1ed",
        "cursor": {
          "ref": "f6a31a92-c0a7-405a-8b5d-99d6378ad8e3",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7a0823f5-2335-4b28-840e-d2d53d6d3d0c"
        },
        "item": {
          "id": "f368a0d1-32a4-4d13-ba61-2fb32e8df1ed",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "27ec96ce-e75f-4659-a9eb-6c70531ccc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7218f8-c6aa-4e3a-9a2d-7a08ef4cfa8b",
        "cursor": {
          "ref": "f0642547-8c6d-4294-a3c0-a209a0626919",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d8732064-defb-40e1-ba3e-3d168461aa4c"
        },
        "item": {
          "id": "9c7218f8-c6aa-4e3a-9a2d-7a08ef4cfa8b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "66666232-6968-4f03-a761-ee71606db8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaed36a-9747-475b-8463-7e4078f39d83",
        "cursor": {
          "ref": "fe17933d-3586-4fbc-b5b2-a5ea8341dfe7",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "efbbd848-c01e-4772-ba54-c8f2425dcbc2"
        },
        "item": {
          "id": "9aaed36a-9747-475b-8463-7e4078f39d83",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "988aeded-83a5-4afc-a2c1-cb2283697f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6211c9c-2af6-4dc3-8357-e088e35a5777",
        "cursor": {
          "ref": "93d09c89-914c-4812-b355-4c9f08273eba",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "04659724-7965-433a-9c3c-e363f36a4a92"
        },
        "item": {
          "id": "d6211c9c-2af6-4dc3-8357-e088e35a5777",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5b1cf716-cac9-4524-9477-8d330209ac07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea672fc0-a789-43f7-9845-74be8fbf53b3",
        "cursor": {
          "ref": "a5dc5b5a-e097-40e9-866a-79af15efcf00",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b7097088-0b43-44c3-ae5f-ed40e63d799f"
        },
        "item": {
          "id": "ea672fc0-a789-43f7-9845-74be8fbf53b3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4a771c7c-509c-4205-9752-347ccf601807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da14652a-ccf8-4718-99f4-1f378ba8e11b",
        "cursor": {
          "ref": "9debcbd4-86a4-4771-9a0b-63a22785da07",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "59d0224a-35fa-4d62-bc3e-64cce300a247"
        },
        "item": {
          "id": "da14652a-ccf8-4718-99f4-1f378ba8e11b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "21548e31-2efd-4694-8c01-4fe73167568a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a199101f-8efd-4275-a63f-c3abb3b38944",
        "cursor": {
          "ref": "c6416d15-cadf-4933-a97e-f6cae471be2b",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e8b2e70a-6d65-4424-99b9-914cd619b36a"
        },
        "item": {
          "id": "a199101f-8efd-4275-a63f-c3abb3b38944",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dfc2dcd5-3646-444b-8efc-10b1c22f86bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eecad59-4c35-4776-8e8c-ced8a90c47ee",
        "cursor": {
          "ref": "d641e097-0222-4241-821f-097b22ad1905",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "698c9cbb-af38-4b20-a303-e801194514db"
        },
        "item": {
          "id": "3eecad59-4c35-4776-8e8c-ced8a90c47ee",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9badfa56-e5d9-4af9-99f5-616209e3adb7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd412e3-5245-4aae-b01e-86f013f47524",
        "cursor": {
          "ref": "a156b1b5-f4d5-4455-ad62-bf12c325231f",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f2048ac9-b059-4836-a7d2-1933814680ab"
        },
        "item": {
          "id": "8bd412e3-5245-4aae-b01e-86f013f47524",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "bdc22f6c-c0af-4151-89f1-ec0eb2dfc6bf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 212,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae47fccc-3d77-440c-a9a1-81174c5784dd",
        "cursor": {
          "ref": "d22e778b-e850-450b-a172-07234d1cc74e",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9d5a4285-247f-4a75-8766-1d717455346e"
        },
        "item": {
          "id": "ae47fccc-3d77-440c-a9a1-81174c5784dd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d508c74b-cab9-4d51-aa92-aaeee3c7557f",
          "status": "Created",
          "code": 201,
          "responseTime": 138,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bc80e7-bf9a-4a6f-887a-706f3b58d537",
        "cursor": {
          "ref": "f60a74b0-ac86-4d35-9cbe-28369ed03a38",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "13f6aec3-2630-404c-b1d7-cc35228f2742"
        },
        "item": {
          "id": "59bc80e7-bf9a-4a6f-887a-706f3b58d537",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ecc00b35-4409-44dd-9929-cae2a04f174d",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a6a2a4-e8b8-4c34-b149-11d595315b02",
        "cursor": {
          "ref": "43e2c893-a233-48a9-8dca-b79e5c57f9fd",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "74c93405-bce4-43e0-a1aa-e34b75b75413"
        },
        "item": {
          "id": "73a6a2a4-e8b8-4c34-b149-11d595315b02",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a5e59376-24eb-4fdc-9a26-6d84212628cb",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "221659de-5198-4b70-9eac-adc050921f83",
        "cursor": {
          "ref": "74b01981-8f92-4825-8536-29fc141657a3",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "49326c18-422f-4588-b054-0c8621a201cb"
        },
        "item": {
          "id": "221659de-5198-4b70-9eac-adc050921f83",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "def16a34-dfdc-444c-9a9e-927671be35f2",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "52174ebc-2a85-457a-85ca-fad2446db61f",
        "cursor": {
          "ref": "134ad5e4-e954-4b80-a880-1c52abadfbea",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b2976462-d9ae-4d18-947a-7c1dca8a143a"
        },
        "item": {
          "id": "52174ebc-2a85-457a-85ca-fad2446db61f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d967effe-4000-4b70-bf7f-98c4738e7b45",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a9df70-144c-41f1-bc16-37f06bb17a9d",
        "cursor": {
          "ref": "36f6e566-478e-4fb7-aacc-707ced508159",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ed30e1c5-ab82-495f-923d-6d470ae36fc1"
        },
        "item": {
          "id": "71a9df70-144c-41f1-bc16-37f06bb17a9d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a362654d-793a-4faa-9ecb-52cfe55b01ab",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca5d994-94fe-4f2f-8b4f-48b27724543a",
        "cursor": {
          "ref": "0f058b56-fa9c-4e16-9601-03970fac5d10",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e504b776-9e12-4dbb-8cde-a64bf89b4e29"
        },
        "item": {
          "id": "9ca5d994-94fe-4f2f-8b4f-48b27724543a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7de06bc3-4192-4b7e-9211-4a76e4daac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca5d994-94fe-4f2f-8b4f-48b27724543a",
        "cursor": {
          "ref": "0f058b56-fa9c-4e16-9601-03970fac5d10",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e504b776-9e12-4dbb-8cde-a64bf89b4e29"
        },
        "item": {
          "id": "9ca5d994-94fe-4f2f-8b4f-48b27724543a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7de06bc3-4192-4b7e-9211-4a76e4daac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedff404-589c-48b5-a154-18a3691a43a7",
        "cursor": {
          "ref": "686b174c-4d56-4734-af46-cbb634a6fa4b",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dfcb4e02-5069-4e59-b92c-c3c1cb716d69"
        },
        "item": {
          "id": "eedff404-589c-48b5-a154-18a3691a43a7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "adb473fb-9184-4d83-b59c-ec1182bf2e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2500747c-d01d-476f-9146-2a1d41de6e30",
        "cursor": {
          "ref": "31d101e7-f65a-4c78-93b3-ca34976e5f22",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3c510251-d0cc-4697-994c-3378f4f6c0c1"
        },
        "item": {
          "id": "2500747c-d01d-476f-9146-2a1d41de6e30",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "537682f6-82db-462c-9998-7309b80662ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14091a83-3e9e-45d1-912e-ebc9ea13b253",
        "cursor": {
          "ref": "e2770fcf-50ea-4550-af8c-59e669195ee5",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d547aab1-f0e4-4d02-89da-c2af976d9351"
        },
        "item": {
          "id": "14091a83-3e9e-45d1-912e-ebc9ea13b253",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ec903459-2c13-4090-b0c5-42d32e6f04f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a881ed5e-f487-4b81-9db2-f908dcfa9a9d",
        "cursor": {
          "ref": "f1b93a28-05ac-4a63-9bb1-b050c6d2df41",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "861f24bd-b6ec-4773-b452-2e4c7057a824"
        },
        "item": {
          "id": "a881ed5e-f487-4b81-9db2-f908dcfa9a9d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e337b1df-a22a-450f-9701-ec9c20dafbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a625a5e5-8f0c-418f-8c92-34f47513298b",
        "cursor": {
          "ref": "6282d862-75f0-4b5a-877a-cf55970dfd1f",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "52db542f-dd1c-4f78-b819-291daac7916e"
        },
        "item": {
          "id": "a625a5e5-8f0c-418f-8c92-34f47513298b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b9dee86e-1e18-41b8-880c-a77ed4ad26c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5979f796-b56e-42c6-af4a-a72569342137",
        "cursor": {
          "ref": "742d998d-93f1-41f9-845c-ddda3b04bef6",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "eb9501be-0d4b-4d03-97b4-d54578b0b752"
        },
        "item": {
          "id": "5979f796-b56e-42c6-af4a-a72569342137",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "871cc177-9741-403d-85be-0a16b7917175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98b68a0-974a-4607-aa67-6187ae0f5f45",
        "cursor": {
          "ref": "29295638-8f78-43bd-a778-139d723bdcd5",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "af9243d8-8a75-4243-bb8c-205708dfe62f"
        },
        "item": {
          "id": "b98b68a0-974a-4607-aa67-6187ae0f5f45",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c35658b-97eb-4f31-85a6-48d9ab98344b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0800e4-6baf-4bac-a916-188a0a907e2a",
        "cursor": {
          "ref": "192ea5e3-cd34-4cbb-8ffa-d987f8295e11",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "86cc5140-2b34-4de4-9847-8cfc22029083"
        },
        "item": {
          "id": "ef0800e4-6baf-4bac-a916-188a0a907e2a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "46878d0a-8a98-46e4-9c08-917e44e991bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d08e027-d484-4b15-83f6-b8d5d3e5a25f",
        "cursor": {
          "ref": "ff3f229a-1fef-479a-bd86-feda78a18096",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e611e53a-bf4d-4173-a2fb-d6315d81c859"
        },
        "item": {
          "id": "3d08e027-d484-4b15-83f6-b8d5d3e5a25f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a758dd6b-f1f5-448d-a58a-a8472636b784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752da3fb-3621-461e-b1a0-bb71f612a740",
        "cursor": {
          "ref": "5be090dd-2b5a-4147-8cdd-fd57e10bbce3",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "51beb285-a4f6-4d3d-9b5e-9c7ad42f6a04"
        },
        "item": {
          "id": "752da3fb-3621-461e-b1a0-bb71f612a740",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "69ef3949-601c-4a8d-8adc-2b6b2dac294d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d13171-bcea-4b85-8ab0-e52767e5affd",
        "cursor": {
          "ref": "0910b63c-5c5b-4d76-840a-70ba2458b6df",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e99aa373-03ad-40a7-970f-129527d96aee"
        },
        "item": {
          "id": "01d13171-bcea-4b85-8ab0-e52767e5affd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "22dc5dc8-6ebc-4270-85ba-519599b8005f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64653d4d-4f6b-4bfa-bad6-f5ba915bd816",
        "cursor": {
          "ref": "0934e293-327c-4271-9e43-c8af5d9b73de",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b5228128-f22a-4dfd-9073-09ab2ea40c4b"
        },
        "item": {
          "id": "64653d4d-4f6b-4bfa-bad6-f5ba915bd816",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7d292c5f-4c9a-4c93-a292-0e9647e71b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4984e78-ffc7-4094-8096-37dd2553ea78",
        "cursor": {
          "ref": "73380a75-d1d5-403d-978c-81c06cd0a792",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "265a7428-afda-4e25-bf77-0ae48986eb52"
        },
        "item": {
          "id": "b4984e78-ffc7-4094-8096-37dd2553ea78",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "466eb20d-e521-4906-a888-506d7c9d0f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afcb493-f1a4-479b-8bdf-c2baf7b49f36",
        "cursor": {
          "ref": "07e3e873-1b81-4026-b51a-5423bd743df4",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "08f3bb6a-3a67-479a-acaa-98644c2e1807"
        },
        "item": {
          "id": "0afcb493-f1a4-479b-8bdf-c2baf7b49f36",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "55c27691-3208-407f-9641-9bba9c056494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33711544-f7bb-45ea-9465-030d06e6d441",
        "cursor": {
          "ref": "69d3d6a1-4186-47f5-8ba9-1c738e43914f",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "769d5ae4-c27f-47a7-bb2d-b95d243ead85"
        },
        "item": {
          "id": "33711544-f7bb-45ea-9465-030d06e6d441",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b706ca86-7d12-42d2-b35f-de79a1fffbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b8cb0d-641b-4aa0-bfe0-9fc1815c56f5",
        "cursor": {
          "ref": "ab26ea0a-f345-4c74-b71a-a53b16e89af3",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6c407a41-cbcd-4cfb-b291-b99fd7122ba9"
        },
        "item": {
          "id": "05b8cb0d-641b-4aa0-bfe0-9fc1815c56f5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "65c69e12-2a1b-414c-a0c0-5ef9235318bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af61bea8-fe15-40fe-b53c-b517f21086d4",
        "cursor": {
          "ref": "ff50a3da-e28c-43ad-adcc-abd52364caa9",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bfee387a-e3af-4665-9dc9-88043291971e"
        },
        "item": {
          "id": "af61bea8-fe15-40fe-b53c-b517f21086d4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "070bf8a0-9a48-429a-824c-056296298c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840d8079-1e9e-49a8-a4e7-debbfb4d6e85",
        "cursor": {
          "ref": "76310939-4774-4680-99a7-971d0abd4d2a",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "01110301-d1cd-45f4-814b-71d4e844d8b8"
        },
        "item": {
          "id": "840d8079-1e9e-49a8-a4e7-debbfb4d6e85",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9b1dc34c-ba15-4354-b55e-af648158432c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7b9fe2-3cc6-48e3-86a6-8dd22114c742",
        "cursor": {
          "ref": "34a23da4-026b-4079-9672-346096c5e015",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ad859b4d-4ff6-4474-af1c-2d3fa7411097"
        },
        "item": {
          "id": "7a7b9fe2-3cc6-48e3-86a6-8dd22114c742",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "65733236-3926-440d-b3ba-a26194c3c1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a513f6e-9459-45e6-b48e-e6118ab5ed05",
        "cursor": {
          "ref": "fd7431d4-65d5-44cc-8b58-a868395268ad",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f13d5ab8-3a21-4cea-9a24-9b59eea538cb"
        },
        "item": {
          "id": "3a513f6e-9459-45e6-b48e-e6118ab5ed05",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0aaeed8d-6a20-4d59-a943-dd72affcf3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2e76cb-679d-420f-bb06-6efb0ed46504",
        "cursor": {
          "ref": "750ca6fa-8cca-46c0-a247-7e48378cb718",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6d74df36-45de-4763-ac15-aa7f44c26144"
        },
        "item": {
          "id": "be2e76cb-679d-420f-bb06-6efb0ed46504",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "14ded3e1-8722-4e67-8ee8-f5ac5b1845e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46befe29-e93d-47c3-951e-b18a8a67d28c",
        "cursor": {
          "ref": "6d3ac100-7b59-4072-bab5-c1825b62a646",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0a2aa3bf-5835-4563-aa17-b1bb3f64726b"
        },
        "item": {
          "id": "46befe29-e93d-47c3-951e-b18a8a67d28c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2f93979d-00d3-4967-b735-87c6bdcbd9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3a7d88-0dc9-4dcb-8438-44f0c7d7ef80",
        "cursor": {
          "ref": "e093d501-ea42-46e8-b0d5-ea085cb4e06d",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "51fa62ec-c488-40a3-9b01-f57dd68ac866"
        },
        "item": {
          "id": "fe3a7d88-0dc9-4dcb-8438-44f0c7d7ef80",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d890b9a6-b7e1-4bbb-8d4e-732d182fc911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6b7403-42b3-480c-83f7-92a0da54b5e0",
        "cursor": {
          "ref": "48f0569c-b9e1-473b-9b35-1a155979bc3f",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ba875201-4c6c-4d8b-bac0-1cab84af65b1"
        },
        "item": {
          "id": "aa6b7403-42b3-480c-83f7-92a0da54b5e0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "021d60ff-43af-4241-bc4d-ed72988be403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400c20cd-07cb-4620-ae18-527764d99458",
        "cursor": {
          "ref": "67e6e63e-1a9a-4870-a71e-14419bf7b4e0",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "91bf1e34-dcfd-4626-9805-ff12da9a440c"
        },
        "item": {
          "id": "400c20cd-07cb-4620-ae18-527764d99458",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6b5befda-a2f6-41a6-a887-dd3b1facf5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33a42df-09bc-45eb-8d91-54199aacd29c",
        "cursor": {
          "ref": "9722b3d5-d6a5-4b06-b42f-cde0ef7f9ae0",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d2dfef8b-2d19-4710-8f42-4258c05f5fe1"
        },
        "item": {
          "id": "a33a42df-09bc-45eb-8d91-54199aacd29c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "65753fd9-4448-44f0-a4b7-ef1a61a7dc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206dc1f3-e965-4491-b0e9-8480eb7d095a",
        "cursor": {
          "ref": "11c632a9-2f17-426b-83f7-c31b8e50c99c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ef08247e-3eca-4a39-92d1-9033b81f91bb"
        },
        "item": {
          "id": "206dc1f3-e965-4491-b0e9-8480eb7d095a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "98e96d67-b655-480a-be28-8683e45e0b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75fe38c-0956-43ea-b4e1-8a98b7bad7f2",
        "cursor": {
          "ref": "a8ca5a81-c197-46ce-be02-babad6873b63",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c064c30b-739b-4175-98d1-edd89647781b"
        },
        "item": {
          "id": "f75fe38c-0956-43ea-b4e1-8a98b7bad7f2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b76ee012-e8b0-4a22-9f30-944145b78551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675263ae-4b26-4195-a59b-49db49258955",
        "cursor": {
          "ref": "cfe6d929-7963-46e8-806a-0aad12acba0c",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a7ffe5dd-11b7-4854-8778-cc1e6d485035"
        },
        "item": {
          "id": "675263ae-4b26-4195-a59b-49db49258955",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "68680bdc-8660-41e3-930a-613e8c389d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b17fb11-ad10-4bff-a5dd-3f87d783480c",
        "cursor": {
          "ref": "8811b096-1537-4223-b994-acf2dcb37502",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2a29bcf2-2ed8-45bb-a8a6-8f0dd4cd8c44"
        },
        "item": {
          "id": "9b17fb11-ad10-4bff-a5dd-3f87d783480c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8a01ed85-2fc8-42cd-a82a-5ae446ef7fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c88e70-7fa6-4022-a5b7-fed09d6c08db",
        "cursor": {
          "ref": "e0bbd663-d735-49bd-8128-46a0552286e5",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ff55eb31-5311-4236-bea5-375b1ce65e65"
        },
        "item": {
          "id": "27c88e70-7fa6-4022-a5b7-fed09d6c08db",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "917ebbcc-d803-467f-9107-f84b2b505cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022ba977-3732-40e1-a772-6f4e79fa4c1e",
        "cursor": {
          "ref": "4dec9077-5972-4b1f-8687-a2a0755dbf62",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3462f9aa-db4e-4efc-a398-23265a3ea18c"
        },
        "item": {
          "id": "022ba977-3732-40e1-a772-6f4e79fa4c1e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e675f1b7-6966-41c6-9ca6-2d8ec8802319",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39e0e71-4790-40fd-b6b3-f4f28e0657cf",
        "cursor": {
          "ref": "4aa94c59-32df-4fe1-8dc9-8aa4bab74e8e",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3af2b245-09fa-49ba-8d09-1c1b47bf8f3b"
        },
        "item": {
          "id": "c39e0e71-4790-40fd-b6b3-f4f28e0657cf",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "fd719731-ab16-4640-bb14-b1397713cab5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437239a3-9c4e-40d2-ad9e-73f415b1b916",
        "cursor": {
          "ref": "bbe143c0-6fa7-41fc-8eda-251d0d9f9ca6",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "26f5df75-b64d-4888-adf2-301e6697f683"
        },
        "item": {
          "id": "437239a3-9c4e-40d2-ad9e-73f415b1b916",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5a955ff7-689c-4464-a75a-466c941311e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437239a3-9c4e-40d2-ad9e-73f415b1b916",
        "cursor": {
          "ref": "bbe143c0-6fa7-41fc-8eda-251d0d9f9ca6",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "26f5df75-b64d-4888-adf2-301e6697f683"
        },
        "item": {
          "id": "437239a3-9c4e-40d2-ad9e-73f415b1b916",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5a955ff7-689c-4464-a75a-466c941311e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41eba4d-0666-4bec-a3b0-ebb69ca97acd",
        "cursor": {
          "ref": "6d758a25-94cd-4cda-91cd-ee9342176036",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a98c620c-17c9-4589-8781-aa2a644fcf0d"
        },
        "item": {
          "id": "f41eba4d-0666-4bec-a3b0-ebb69ca97acd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "12110d21-b1e8-4991-b0dd-135f7411a6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e251490f-f199-478f-8d3a-62fcb4b822f2",
        "cursor": {
          "ref": "cd69945e-46ff-4687-9789-9f9d933f1abb",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8925ba5c-9626-463e-bdff-0615d89eba83"
        },
        "item": {
          "id": "e251490f-f199-478f-8d3a-62fcb4b822f2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f1a65990-c7b5-4d76-8065-231cb1a0e8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d759dd5-3c1f-4d7f-bed8-99761fb7a21c",
        "cursor": {
          "ref": "f9ac5a08-fb4d-4356-99d2-b278213a5b03",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ce1b4d17-0d14-4a4f-8e20-2b27a3c07255"
        },
        "item": {
          "id": "8d759dd5-3c1f-4d7f-bed8-99761fb7a21c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0f717b41-bf9a-4aa0-97cf-3c400d507853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74381393-987f-4dfb-be37-c35136cb1df7",
        "cursor": {
          "ref": "d7a64eac-888b-410e-87bd-001db3980b31",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e81a4156-8879-4e52-8d9f-45ce78297c62"
        },
        "item": {
          "id": "74381393-987f-4dfb-be37-c35136cb1df7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9c6c74ed-9820-4645-b743-6d90dd75da3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11f58d6-b021-49b7-8fc6-b98988804f03",
        "cursor": {
          "ref": "952e5c55-ad99-484b-914a-0f93cdea5e6a",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0addb741-8777-4435-9e9f-8f669bd24d96"
        },
        "item": {
          "id": "c11f58d6-b021-49b7-8fc6-b98988804f03",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "40a92790-2877-4ba4-815c-baab509f8c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f633b1c4-0d29-4d99-a0e5-ec0ca48d5d6f",
        "cursor": {
          "ref": "04e2b4f5-7dcf-4940-9e1d-c7a9eaa6e4b6",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6e02bbeb-292f-4e5a-98d2-728f0daf4b1f"
        },
        "item": {
          "id": "f633b1c4-0d29-4d99-a0e5-ec0ca48d5d6f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3bd6430a-4e04-4484-bd07-bd857540eeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b67e6a8-d461-463a-9edd-7f33ea445929",
        "cursor": {
          "ref": "082512de-6c97-4f28-b490-b2c275cf84c4",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "35d4153b-ea57-4d87-ac6d-84421b253313"
        },
        "item": {
          "id": "5b67e6a8-d461-463a-9edd-7f33ea445929",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "144e2cd4-fc83-49c2-b980-74ba24309059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c756aa1-4a0e-4858-857b-67c30e6667b6",
        "cursor": {
          "ref": "89f4c704-3fc4-415d-904e-71088a0172dc",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5ac1cd52-3b1e-4bef-91d5-b465db9917fd"
        },
        "item": {
          "id": "3c756aa1-4a0e-4858-857b-67c30e6667b6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "698b428a-1ec6-41db-9a0b-ec23fb1d25c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3135392b-4e81-48d5-b77d-5ccd272c5b95",
        "cursor": {
          "ref": "3b6017ea-070a-469d-92b2-4bafd46e6f2c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ab4167f8-1d31-4601-a7fc-ce35e74e3d05"
        },
        "item": {
          "id": "3135392b-4e81-48d5-b77d-5ccd272c5b95",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d0317f8e-5460-4e23-8256-7e412df94db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f8bb13-460a-41e3-bf69-3b3bf875562c",
        "cursor": {
          "ref": "de46af90-241e-43de-9468-2db7583ed437",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "56631e38-969a-43f4-a248-c7b5578913f7"
        },
        "item": {
          "id": "95f8bb13-460a-41e3-bf69-3b3bf875562c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5006feb3-0240-44be-857f-2e40ca3f838d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a55dd4-d2ca-4acd-b226-657d2392b9a8",
        "cursor": {
          "ref": "7c71c0d6-2bae-49b0-b251-3f9ce77a1832",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "defaaec5-9d3f-46e2-9398-dd5d8718d402"
        },
        "item": {
          "id": "69a55dd4-d2ca-4acd-b226-657d2392b9a8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2eb2cdae-b7ea-4e6b-baa6-a07d3a98d8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c7c78b-2d9e-4ab9-af6a-b75b30328de7",
        "cursor": {
          "ref": "c21e1584-cfff-4ddc-87d4-56d02badc125",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fbb03ce1-c94a-4688-b904-28133f812fe6"
        },
        "item": {
          "id": "51c7c78b-2d9e-4ab9-af6a-b75b30328de7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bca60724-842f-471f-a5cf-7bfa7f9d1d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4a8c4a-8116-4e86-8527-c0f8be1b2d0d",
        "cursor": {
          "ref": "3484db4b-20ed-48bd-ae95-564a8774d0d1",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b6f2d434-f351-4382-874c-f8ff407850fb"
        },
        "item": {
          "id": "7f4a8c4a-8116-4e86-8527-c0f8be1b2d0d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "aea669b9-13f5-4228-90d2-fcb72ac81070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed9ddd1-1a20-43a0-92c4-6606e0c2984a",
        "cursor": {
          "ref": "ce3b1106-21cc-4346-a755-71559202e3f9",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fe91e05e-c3a8-4da9-9db3-344af7a6bcd9"
        },
        "item": {
          "id": "bed9ddd1-1a20-43a0-92c4-6606e0c2984a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c7a982ba-d0eb-4d46-87d5-98d5dfe0d39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217171f5-5b5a-4baa-9650-00cd60816ed9",
        "cursor": {
          "ref": "54fc9e62-3c65-4509-b476-9e83d507b5f6",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c0285ab2-d6e0-43ae-8daf-1e1fd9599f70"
        },
        "item": {
          "id": "217171f5-5b5a-4baa-9650-00cd60816ed9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5a2c4117-83b2-47d2-9406-26d444e70291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a031e8d-1466-44d3-bd64-0a129a1c7539",
        "cursor": {
          "ref": "232beed1-1153-4ceb-9cf9-dd2a65b81ba6",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b95f517b-8561-47a1-8aa3-e941e936c7b7"
        },
        "item": {
          "id": "8a031e8d-1466-44d3-bd64-0a129a1c7539",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2b324682-fd27-4fb9-85d8-b166dd4862b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bdb130-dfe1-4e31-8f8f-4c96e2cd5064",
        "cursor": {
          "ref": "776e81e3-250f-4b6a-bbe7-a7bddd342534",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dae597a1-2a5f-4fb9-9a8d-033ba5b7841d"
        },
        "item": {
          "id": "69bdb130-dfe1-4e31-8f8f-4c96e2cd5064",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b28ddf5f-5429-4739-ad4f-7985de8f9d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d25774-2477-41db-a30e-bfd5dc1e4a9e",
        "cursor": {
          "ref": "dd779e6a-092d-4e47-97d9-f5e475e558f4",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "310527d6-5716-4b99-8287-9bf0c1616dae"
        },
        "item": {
          "id": "98d25774-2477-41db-a30e-bfd5dc1e4a9e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "df7cff72-d3e5-4114-ae9a-a0d1795a2a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66206669-1ca7-43eb-b522-e2be3ab0fc7f",
        "cursor": {
          "ref": "fcf90a0e-5405-4ece-888a-f8bf76464c33",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5a61abfb-e2ff-4f92-9024-ff0d54a0a5de"
        },
        "item": {
          "id": "66206669-1ca7-43eb-b522-e2be3ab0fc7f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "49de77e2-2449-4263-9670-5b657f6945ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528a5a72-6bfa-4244-bee8-340ea11b738b",
        "cursor": {
          "ref": "b331730c-303a-4535-8906-452bfc983a3c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f4221bd0-9749-4dba-9126-42cf8d32aa07"
        },
        "item": {
          "id": "528a5a72-6bfa-4244-bee8-340ea11b738b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4dd29a97-e1b5-41b6-9f7a-6a159a61ac77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9113d2c3-79ca-48c5-b1dc-3ded7b99d6a8",
        "cursor": {
          "ref": "db6d5e07-da6b-41ec-9d54-00b47b1a9f92",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "89e2136f-b1d9-4527-bf76-ff07cc330641"
        },
        "item": {
          "id": "9113d2c3-79ca-48c5-b1dc-3ded7b99d6a8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d45ff9ef-346d-474f-a1ac-3a26ef8981ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3890633e-03b0-4987-a388-79fb75e44a96",
        "cursor": {
          "ref": "a7ea0bef-1cde-4304-bb14-2c7fec2a1dba",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "306d28d5-a3e3-44a8-a9b8-aeb6271c0f6e"
        },
        "item": {
          "id": "3890633e-03b0-4987-a388-79fb75e44a96",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "888f02fd-22f3-483b-a43e-08b50466fcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929eeb69-8f78-4a7f-979c-87beb90a5366",
        "cursor": {
          "ref": "58c01fb6-c75e-4b34-9b2c-ccda06b580e7",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2589eaf4-e824-4263-bdf8-320cbdc716c6"
        },
        "item": {
          "id": "929eeb69-8f78-4a7f-979c-87beb90a5366",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "47cc8f39-97be-42db-a74a-549a7b9afc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb0db52-35f5-4862-a11b-85a34624b866",
        "cursor": {
          "ref": "828c91ba-3516-4fa4-9df2-2b36a8cbcd8d",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ab200f0d-6ed5-415b-b79d-aa2f2fb701e5"
        },
        "item": {
          "id": "efb0db52-35f5-4862-a11b-85a34624b866",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d71e96a4-ea26-4edc-81f1-9504c66bc06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea726fc8-3ae4-4898-822b-e9af7ef556be",
        "cursor": {
          "ref": "79276579-17ae-4bac-9fc3-703182b2f2dc",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "807aef58-bec4-49c4-98ac-3d5a7789978b"
        },
        "item": {
          "id": "ea726fc8-3ae4-4898-822b-e9af7ef556be",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f389dd9f-6e15-44bd-9733-ed80de1f960d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c98a19-b791-4b61-8919-4f65ad07a854",
        "cursor": {
          "ref": "19c3ae1e-29f3-423a-836a-3bc2f05acd00",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fda757e0-97a1-4858-b6d6-b0e39662d60c"
        },
        "item": {
          "id": "86c98a19-b791-4b61-8919-4f65ad07a854",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9d049bd4-92d8-4fcf-9deb-deb8e970d1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f9e246-c35c-45b4-9e87-b13a2673e8ab",
        "cursor": {
          "ref": "6a9aa2dd-a6a2-46b8-a447-02f196ac92e3",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2814ceb9-30a7-4697-9846-5634953d425f"
        },
        "item": {
          "id": "23f9e246-c35c-45b4-9e87-b13a2673e8ab",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e24106ed-9206-426d-a68e-0c9715cbd26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bfaed2-2b0d-4de4-bf44-c67f563c610b",
        "cursor": {
          "ref": "ccae97e4-0cdb-4308-8b80-a8a3e690981b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fb3f75e2-7b97-4e80-9e8e-5e80992f421b"
        },
        "item": {
          "id": "29bfaed2-2b0d-4de4-bf44-c67f563c610b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "846776a7-bba2-4f2a-a96b-d3ccec526899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a57c60-c4dd-4365-b14d-57ea11694ffc",
        "cursor": {
          "ref": "7b722730-dff1-4d01-bdab-310f84a3f1ac",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "78cc67b0-f9f4-4025-9aa8-88d0db8eb901"
        },
        "item": {
          "id": "06a57c60-c4dd-4365-b14d-57ea11694ffc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8a6d067c-26d3-43da-9935-feec5e6d9dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28253cf-6c24-49f2-b19d-4ad278ea8435",
        "cursor": {
          "ref": "704d6f79-ac11-4ab2-b2ca-847adadc0f8e",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9d3c7797-2504-4392-8d3a-c2f94578e43c"
        },
        "item": {
          "id": "c28253cf-6c24-49f2-b19d-4ad278ea8435",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "772f19c9-a209-4dac-b882-75247de97c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59e69f8-8fc6-492e-a4c7-1b5976ed714c",
        "cursor": {
          "ref": "fff4ae19-08b6-4341-99aa-d7842e70ac07",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7e0abc13-c394-4c3b-b1f4-78441d6923ef"
        },
        "item": {
          "id": "a59e69f8-8fc6-492e-a4c7-1b5976ed714c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "94e75077-adfe-4f86-9f95-49e0ef357caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7373d9db-d902-49a6-93dd-f621773d4294",
        "cursor": {
          "ref": "b3b9db35-6a78-4b5d-9e8b-1b2f57afecc5",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3a0dfce9-d381-4980-8785-bd3c3e32658c"
        },
        "item": {
          "id": "7373d9db-d902-49a6-93dd-f621773d4294",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e69138de-edb6-460f-9aca-418fda3c57ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbe5ce4-6a5e-4b03-823d-2605f6429ceb",
        "cursor": {
          "ref": "542d4d5f-facf-4f82-8cdc-a0d6c194e4e6",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0f3c499b-1f57-4b5d-8138-1b4f92b247bb"
        },
        "item": {
          "id": "dcbe5ce4-6a5e-4b03-823d-2605f6429ceb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3dcd93db-6474-44ee-846d-d21edbf41de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9f2912-cc5f-49bc-9556-5cf82f13e209",
        "cursor": {
          "ref": "cb28ef79-046d-475b-a54d-656a66cb4a6a",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6218c359-ae34-4c92-93c9-b6a06ca38cca"
        },
        "item": {
          "id": "3a9f2912-cc5f-49bc-9556-5cf82f13e209",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4159d155-4da8-42c5-9b57-70c90e448b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91362d3-8be0-40e7-9dd0-13f1319ba38f",
        "cursor": {
          "ref": "cc42669c-f018-4fc5-b011-bd3700445537",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e73898a7-d118-4a4a-9755-6d7f5f40795a"
        },
        "item": {
          "id": "b91362d3-8be0-40e7-9dd0-13f1319ba38f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "52047168-453f-41cf-a77a-f9b2345f22b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147ca004-f1e0-4d63-a9fd-526f156b7a1e",
        "cursor": {
          "ref": "aa883a4f-fcbb-4068-8988-1881e235952d",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3862d10a-43d5-4596-9a23-0506ab7e7db5"
        },
        "item": {
          "id": "147ca004-f1e0-4d63-a9fd-526f156b7a1e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5d08a698-8192-4785-b7a3-17382faa8a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ba8a1d-d7a7-4932-a7b8-550b07af5654",
        "cursor": {
          "ref": "5740e729-b323-4b62-9558-e0814995afd7",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f2965066-b027-4b08-83fa-4f2cbe5aa50c"
        },
        "item": {
          "id": "f5ba8a1d-d7a7-4932-a7b8-550b07af5654",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dbbc34d9-cbc1-4ccc-922b-d91fb492a3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b2fa92-4b38-46e3-a887-02ac62855b8c",
        "cursor": {
          "ref": "821802f9-c3bc-4a65-af47-a77b2e78f452",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "928e0ac9-a903-4fd8-ba51-a1f81dd12cbd"
        },
        "item": {
          "id": "62b2fa92-4b38-46e3-a887-02ac62855b8c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fcafdbdd-da3e-4873-9b5f-53652951ff94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc570f7-5a2c-43f5-b603-ba5806d72faf",
        "cursor": {
          "ref": "57eacabe-4758-424e-ba07-de163e30d05a",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8a635a3a-83db-4c55-ac17-796bc4f1c101"
        },
        "item": {
          "id": "1dc570f7-5a2c-43f5-b603-ba5806d72faf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "18113e62-28c0-45d3-afb4-6d423cb028a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4215b35c-96fa-4960-a7b0-cfaab55f967d",
        "cursor": {
          "ref": "6004f078-432d-4730-af9a-60869d6adeeb",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c1b413e5-8fea-4d81-9929-e2cc658ac87a"
        },
        "item": {
          "id": "4215b35c-96fa-4960-a7b0-cfaab55f967d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b942046a-f2f8-413c-a3af-4840df24447b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824e33f7-0121-4f87-bdd9-05548bbf8e72",
        "cursor": {
          "ref": "1b32c334-7eb5-4fa6-a105-22df586c7fc8",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "babe4a73-148f-4b9d-8d41-8e25df0e0b91"
        },
        "item": {
          "id": "824e33f7-0121-4f87-bdd9-05548bbf8e72",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3848f52d-7fbf-4bce-a0cc-753dad6cc3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d637731-b943-454e-ba2b-e8fd2da7e557",
        "cursor": {
          "ref": "89cf61da-6b6a-4a40-866f-13166e7859c0",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1daa947b-bf58-4722-8ad2-a940039bb3f3"
        },
        "item": {
          "id": "9d637731-b943-454e-ba2b-e8fd2da7e557",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "151cfa9e-efef-4840-b4a6-3af677dafafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92aa28c-93fb-4388-b42d-9fb836c5960c",
        "cursor": {
          "ref": "00d6be57-7a94-4201-ba07-ca1b2a1d8a11",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "26116a26-9ceb-4fba-a090-83a5a6e9bbe3"
        },
        "item": {
          "id": "e92aa28c-93fb-4388-b42d-9fb836c5960c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8e183b0c-757a-436c-8bab-5300e810b0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab61cfb5-015d-48b0-890d-b560b5909b1b",
        "cursor": {
          "ref": "32bdd0ff-d3d3-4352-be5f-e4554988b32f",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "97fcc11b-88ae-4a49-95d7-ebb888066129"
        },
        "item": {
          "id": "ab61cfb5-015d-48b0-890d-b560b5909b1b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "73532c42-6097-4a6c-8b6d-bedf1ac7d4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d96ec2-dcbd-4725-bc93-e9fa1ab84813",
        "cursor": {
          "ref": "04809c72-fb2c-47cc-81e5-d94e083e3ef6",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d44f4797-6cd1-44b1-970d-33523d3ee24c"
        },
        "item": {
          "id": "51d96ec2-dcbd-4725-bc93-e9fa1ab84813",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e7c16531-9f55-4281-8ed8-d67b90031c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f77989-8087-459d-a538-5583ce02ba0c",
        "cursor": {
          "ref": "82f004a9-ce0c-4dc2-bd4c-1489ddaf11b1",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8ec36c79-5bef-4b44-9589-fcce81ec2c13"
        },
        "item": {
          "id": "21f77989-8087-459d-a538-5583ce02ba0c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "79ad28d6-f336-4b4b-bbb8-73d3956b3cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d5513a-7fc4-450a-98e8-09481fad6f5d",
        "cursor": {
          "ref": "542085ff-dfc8-4cd6-a63b-4f7492db0ebd",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a811aa14-f72a-4ddb-a992-eb53977cdee4"
        },
        "item": {
          "id": "d9d5513a-7fc4-450a-98e8-09481fad6f5d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "616cb509-2a60-46ad-92ea-b5189f4ad497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4d2189-b698-446a-bccc-8dc1e38f4596",
        "cursor": {
          "ref": "b8acd724-db9e-4306-a902-acfd76dee140",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0c2003fd-54a8-4768-aca6-020a8d624797"
        },
        "item": {
          "id": "0a4d2189-b698-446a-bccc-8dc1e38f4596",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1bb4e9ad-ff5b-4fa8-8950-d44f24556ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae79dcaf-111b-4c3e-9e56-f13d2ae07077",
        "cursor": {
          "ref": "a69dd4e3-3293-4a74-a03d-314fd95719f1",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d5c8069d-9267-43df-8d95-0195070aa5a7"
        },
        "item": {
          "id": "ae79dcaf-111b-4c3e-9e56-f13d2ae07077",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dc3f9b0c-3edc-4086-80b8-ac7ea03da353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d0fa7d-ec7e-4132-8fdf-1ab127b574a2",
        "cursor": {
          "ref": "a968406f-6a0e-4b44-9db1-1f2354367ed4",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "77d50d5e-6b67-4abd-a01c-20a6baa89061"
        },
        "item": {
          "id": "a9d0fa7d-ec7e-4132-8fdf-1ab127b574a2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b38cf6d7-5775-4b1e-9d4d-6575a5df0773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d4b508-19a5-46df-9160-457adaf24c42",
        "cursor": {
          "ref": "05618155-8b70-42bd-80e3-edab5ab637d1",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fd7c45f5-cbca-47e0-be9b-77c847e4d660"
        },
        "item": {
          "id": "14d4b508-19a5-46df-9160-457adaf24c42",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "90b1630c-8db9-4bb9-be30-e45dcf527659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc948fa-255c-42b1-be90-f42f2444f7c0",
        "cursor": {
          "ref": "6c1fa245-1ee0-4a35-869b-616e037e3e82",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a689d5e2-f54f-4c21-902f-6d57f5281253"
        },
        "item": {
          "id": "1bc948fa-255c-42b1-be90-f42f2444f7c0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1859e2f6-f753-400c-b093-fcfa64b7b9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b25935-bb72-4c8c-9e79-b20177f36e20",
        "cursor": {
          "ref": "8e27cba0-83fd-4467-904e-1c8215bcd5f0",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5ab59a75-5231-4f0c-94a3-26611dcdd943"
        },
        "item": {
          "id": "91b25935-bb72-4c8c-9e79-b20177f36e20",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0338f836-fef1-494b-b634-7cc6cb7a1ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b034fe-3d2a-4cfb-8f70-0f59eaaff83a",
        "cursor": {
          "ref": "87d57bbb-40b9-4fa4-a4a3-1a2e1e7a0449",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c3ccba08-d012-4bb0-b5b0-0ef79106cf94"
        },
        "item": {
          "id": "56b034fe-3d2a-4cfb-8f70-0f59eaaff83a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e572ee26-bec1-444e-a92c-233a6582654b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e655fc5b-6b99-4bb0-8c43-c6d6a0d7098f",
        "cursor": {
          "ref": "5850b49b-8e83-427c-8d1f-d3ceb1b2deec",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9ca71172-1abd-4bf2-a69f-ecfa801652a0"
        },
        "item": {
          "id": "e655fc5b-6b99-4bb0-8c43-c6d6a0d7098f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "75a05c95-03a8-472c-a25f-0eed67fe06b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e0a502-5e14-474d-a22d-769c1b502a49",
        "cursor": {
          "ref": "19be7b7e-a6f4-49ac-b2da-678fe88347c6",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6a70d511-37a5-4fd7-ae2a-49bd3671290d"
        },
        "item": {
          "id": "18e0a502-5e14-474d-a22d-769c1b502a49",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c681be57-5430-4535-8b13-6d60ecff4d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7cfbae-5723-4074-a09a-054e76d93025",
        "cursor": {
          "ref": "ff3d3019-0b49-4385-aaf9-7c5e02979660",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2412b756-266b-49ec-a64c-103776d350f0"
        },
        "item": {
          "id": "0f7cfbae-5723-4074-a09a-054e76d93025",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cbd9280f-9c47-410a-aeb1-c6b79485707d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04cf59a-617e-4259-afbc-d0969b8c924a",
        "cursor": {
          "ref": "71f03aa1-62c3-4107-ae94-edbd4912825c",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e4cf938d-d117-4ab7-961b-5b064698aa73"
        },
        "item": {
          "id": "b04cf59a-617e-4259-afbc-d0969b8c924a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "01e0aeb3-cb8b-4530-9d54-62688e8511da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa9aee6-c3bf-46b8-9cfe-0ab30df03f33",
        "cursor": {
          "ref": "ac55673a-ff8b-413e-b91f-b2dea0422f38",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1e72b0b2-9abf-4c6a-b9a5-fa827f76dd11"
        },
        "item": {
          "id": "0fa9aee6-c3bf-46b8-9cfe-0ab30df03f33",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "50ecd7c4-5a72-473f-bdc8-869fb5acacbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e82a5ce-46d3-4f44-8830-c0c7766a2596",
        "cursor": {
          "ref": "48b93507-a85e-464c-9501-931b422dde98",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "178d63cf-69e2-4273-9606-34c8bf34403e"
        },
        "item": {
          "id": "1e82a5ce-46d3-4f44-8830-c0c7766a2596",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c2a363b9-0cb8-4e2e-9456-9a3275a5f95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dc6f02-11eb-4772-a2bf-8aad6c1d1968",
        "cursor": {
          "ref": "6d7920ba-d62b-49a1-a691-a610e21dd748",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e16ed715-5da8-48e4-9695-b819278f5157"
        },
        "item": {
          "id": "46dc6f02-11eb-4772-a2bf-8aad6c1d1968",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "351fa398-0f52-48a2-9380-1a3248787f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1ba155-576d-4f5b-9240-fdb0b7f30d1f",
        "cursor": {
          "ref": "9955e152-8d29-4abb-a854-db50cd29827a",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "34be14a0-9dea-4d04-aecc-0d24ad0ba3dd"
        },
        "item": {
          "id": "7b1ba155-576d-4f5b-9240-fdb0b7f30d1f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9a691c46-28a7-4e20-a4eb-9a4efbe4ea43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2654dd-c137-4b5d-8223-54d1e06ecbea",
        "cursor": {
          "ref": "a69e6aa5-cbc9-42b0-a87d-f161ccf278cd",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "99bc3100-17ec-41ce-8220-95b37d01d1ed"
        },
        "item": {
          "id": "9c2654dd-c137-4b5d-8223-54d1e06ecbea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8f80f130-cef1-4f65-9dc9-8f61d854d1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3078da6d-4730-46e9-966a-be95bd95d5dc",
        "cursor": {
          "ref": "1f4ab44e-439b-4fb6-b5db-d2cc9c0e3f25",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2325a365-b0f5-4163-90ff-ba447a801077"
        },
        "item": {
          "id": "3078da6d-4730-46e9-966a-be95bd95d5dc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f2985fd9-22a9-4445-bf44-ce79a724d242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f32956-5892-4cf2-9a05-da50011ea390",
        "cursor": {
          "ref": "c553dac3-297b-4162-bba1-17e729be2707",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2f43768e-c9cf-43c2-b1a3-29011cc881bc"
        },
        "item": {
          "id": "f2f32956-5892-4cf2-9a05-da50011ea390",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "51a282fb-832d-4824-b193-d38881f0e9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93792f59-5f01-4e2a-80fa-e502aa7794f6",
        "cursor": {
          "ref": "7b5fe45f-695b-4c31-be7d-7dea00ff0d87",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0a136044-9d45-468c-8bed-6937b919062a"
        },
        "item": {
          "id": "93792f59-5f01-4e2a-80fa-e502aa7794f6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0f8c00a1-3fa6-4b2c-99fc-b392cf2a2ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234f94fb-db22-4dae-9349-fba1467f83e2",
        "cursor": {
          "ref": "d8e668d4-88ed-4fa9-a63b-1da4e8396866",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "35df530f-b6b0-48aa-88b9-d66b82e910b9"
        },
        "item": {
          "id": "234f94fb-db22-4dae-9349-fba1467f83e2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6bbf7741-0ffb-4658-833e-f7bf65bcbe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924a81dd-f7f7-4a97-aa65-16c1f0ea1300",
        "cursor": {
          "ref": "894def39-2262-4be6-a900-a6a5599d62d8",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0faa6edf-4216-4c04-9dfd-d881fb8ce07d"
        },
        "item": {
          "id": "924a81dd-f7f7-4a97-aa65-16c1f0ea1300",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "590275fd-cc69-42d3-ac52-50b70f7b1eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e98d53-4889-4b14-8464-5ab64e57a9d8",
        "cursor": {
          "ref": "426e0cd5-42c1-4ffe-bbb5-a1e0deaab611",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6e516d48-cb8e-40e0-be71-048f88470388"
        },
        "item": {
          "id": "45e98d53-4889-4b14-8464-5ab64e57a9d8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "84e3e9ee-d686-4f9c-8181-1f7b1d8271e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d96ab08-df88-4a73-96fb-13c60a37913a",
        "cursor": {
          "ref": "450e7bc1-f47f-47eb-9710-c62f509b38b3",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1334f4b7-a7e2-4129-86f4-8b79d862f5fb"
        },
        "item": {
          "id": "2d96ab08-df88-4a73-96fb-13c60a37913a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f755d005-8894-46d5-addb-3b36c7a4cf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965604b6-262a-4821-905d-f0c13f540479",
        "cursor": {
          "ref": "2cfa4104-57b5-4cd4-9fbd-4c5ffdbeca92",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7a0d2431-c0e1-4507-9c99-302d6010ac21"
        },
        "item": {
          "id": "965604b6-262a-4821-905d-f0c13f540479",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a7d76606-7288-4f5d-ae16-aef0a1494c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041beb32-f0d1-4623-a79f-647f8869b385",
        "cursor": {
          "ref": "e3dfa353-e712-4d47-9e3f-d4d96c959e78",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0e4fe24c-7c61-42e8-8177-3bbdb2f24719"
        },
        "item": {
          "id": "041beb32-f0d1-4623-a79f-647f8869b385",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ad068b00-c802-4fc5-80a3-0b893bc42517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ade1686-6630-4865-989e-ec7376b5cc24",
        "cursor": {
          "ref": "db99285b-40ee-4154-8951-2619e0a8b9bd",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0a7d30a2-6214-4686-abdf-bffbedf9986d"
        },
        "item": {
          "id": "1ade1686-6630-4865-989e-ec7376b5cc24",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b134728f-6645-4747-97a0-4c7d340a67f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1bd541-fb3e-47f1-a7ef-42e3c2d369f8",
        "cursor": {
          "ref": "c0f745ca-2b4a-4626-92b4-262036949406",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d97118d8-411a-4fea-b6d7-8e09594702e3"
        },
        "item": {
          "id": "ff1bd541-fb3e-47f1-a7ef-42e3c2d369f8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "38e4b4d4-cae4-42d6-9beb-bd2da5595ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156cee8a-14cf-4b80-9bea-6343de640827",
        "cursor": {
          "ref": "b84bd73d-87ef-4866-bc2d-b5933afb2ed1",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "db28dbef-9215-473d-88e4-7b42c41a641e"
        },
        "item": {
          "id": "156cee8a-14cf-4b80-9bea-6343de640827",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fc68c17a-5f57-4a4d-8d29-4b9bd5dad58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61522d04-c5f4-4de6-8d78-060296281789",
        "cursor": {
          "ref": "6fd14f93-97ab-4ef6-a266-0a54611204c2",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9d3e4707-007f-42f6-9446-66e2d570263c"
        },
        "item": {
          "id": "61522d04-c5f4-4de6-8d78-060296281789",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3739e22c-adab-4e48-a018-a42534c813b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1ec874-592a-4674-bea2-6cfb609a5817",
        "cursor": {
          "ref": "3cda3f74-ffa2-47a8-8fbc-fe0e4218e31c",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e3c63a68-2efc-4d2d-8756-9a6c508abf7e"
        },
        "item": {
          "id": "4e1ec874-592a-4674-bea2-6cfb609a5817",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8b0a76c1-0768-41ac-b685-43067baf8eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9714908d-47ae-4d46-a852-9be32b190cf7",
        "cursor": {
          "ref": "d046413e-2a84-431d-9c0c-d1bb50ccd215",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f0d65f14-caa0-44d5-b656-f6a822fad1ae"
        },
        "item": {
          "id": "9714908d-47ae-4d46-a852-9be32b190cf7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "38b0d986-47db-4dce-a324-487dd5b4e68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311349aa-ece6-4e27-aea1-9b8c6bb54697",
        "cursor": {
          "ref": "9bf8052b-0d6a-4e53-a83f-2d82b313b470",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4e2e5e4c-4493-4dde-827a-8cbfe5bb6239"
        },
        "item": {
          "id": "311349aa-ece6-4e27-aea1-9b8c6bb54697",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e56fd8a2-eced-47bd-90b1-cd8779b9359e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a97c4dc-b5ea-4b4f-b20c-d346a2a5d838",
        "cursor": {
          "ref": "ca39ad23-9949-4096-b055-6e71b8df963a",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fe12010d-539e-4244-8bf7-0fa66ebe1710"
        },
        "item": {
          "id": "8a97c4dc-b5ea-4b4f-b20c-d346a2a5d838",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fbbfd7a2-971b-43ab-9a0e-1897548c1d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f553cc-4c29-4e6f-bd0e-e52e6dc3fe9a",
        "cursor": {
          "ref": "4d1a6419-cf93-4a50-956b-1f64cf20b48e",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c6e70d51-e702-4957-9bcd-8c30ed1fb5fb"
        },
        "item": {
          "id": "e8f553cc-4c29-4e6f-bd0e-e52e6dc3fe9a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b9550585-839e-493a-b4b9-e26efd217470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e77354d-20bf-4d76-b332-f2a91b3bd872",
        "cursor": {
          "ref": "d84174bf-39a4-453f-b5f6-4c121fb284f6",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "843062b2-a079-44f3-8335-b17a1abef5ac"
        },
        "item": {
          "id": "6e77354d-20bf-4d76-b332-f2a91b3bd872",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "97e3d844-67cb-43e6-98d7-b1a125306041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c82a266-e728-4a3f-b792-939d3a23811a",
        "cursor": {
          "ref": "29bd41e8-370f-4129-b350-5806f3d45941",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9be9958a-6859-4ca5-b4f4-36c58ae7a93b"
        },
        "item": {
          "id": "2c82a266-e728-4a3f-b792-939d3a23811a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "67cdbf11-bf53-440c-94f3-586669d1bb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9daedf9-8578-4c58-a5f4-d6eabe3b8bf4",
        "cursor": {
          "ref": "0c39a07d-82b7-41ee-9a33-124de27eee42",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "355db9fd-c8d9-4a91-90d4-9d1019ddb760"
        },
        "item": {
          "id": "a9daedf9-8578-4c58-a5f4-d6eabe3b8bf4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9e050b25-da83-4b4e-a03a-50178dcb675f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e343f36b-2591-4aed-90c7-b8ff08aca588",
        "cursor": {
          "ref": "bd721a57-b5aa-43f2-b461-680f503900f2",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f7e913d6-f0d5-4ef3-99c5-aa3e59725475"
        },
        "item": {
          "id": "e343f36b-2591-4aed-90c7-b8ff08aca588",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "594532e4-e175-4437-9af1-ccf3031fdd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24cf117-d7b5-4d21-8595-a01471318f48",
        "cursor": {
          "ref": "27179ec1-2186-414e-96b7-0c90b4a08e95",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6dc5e40d-7c4c-4f32-bd87-e8174a24e12a"
        },
        "item": {
          "id": "e24cf117-d7b5-4d21-8595-a01471318f48",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c5b9e6f4-3d67-4d2e-9e2b-4b1d670127cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25c7e3a-7a02-4a74-aaff-ee2f18b675a6",
        "cursor": {
          "ref": "12f93ba0-857b-4164-9788-6b1ec1cd54eb",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cf1b7dc6-0f81-4df0-86fb-27d3dc8da060"
        },
        "item": {
          "id": "b25c7e3a-7a02-4a74-aaff-ee2f18b675a6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ef26ec67-7591-46dc-9764-b56dfd37ce69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286db96d-06f4-46f1-9879-852e60bc5387",
        "cursor": {
          "ref": "5c58e12f-9fae-42f8-879f-af33cab93e56",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dd05e4f0-a756-4756-aaee-3a166a247dd6"
        },
        "item": {
          "id": "286db96d-06f4-46f1-9879-852e60bc5387",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0cb7b4e7-cead-4a91-b194-137e2d05a8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40021b1-bcde-4a73-8a6d-836e7617cebb",
        "cursor": {
          "ref": "8d3852b9-321d-41ea-8164-8588f22b2250",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "20676121-9432-4d79-a98a-5ab295194f74"
        },
        "item": {
          "id": "c40021b1-bcde-4a73-8a6d-836e7617cebb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ff3c58a7-d106-44a1-8819-339bbfb3042d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf92cbc-8767-4c7b-91d8-624a9fbc4587",
        "cursor": {
          "ref": "2d1068ee-aced-4f85-b8f3-8aab7a0b39fb",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fdf150bc-bf12-48eb-ab9a-d5e5268c1453"
        },
        "item": {
          "id": "0cf92cbc-8767-4c7b-91d8-624a9fbc4587",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6cb3af1a-8274-4fc2-a604-a80275714785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420b9cdb-4616-45a4-82f9-0ee1a3837c0d",
        "cursor": {
          "ref": "ed385415-6395-4138-b04f-4482a29d1f0f",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e67184f9-7557-435f-9f24-a92e586fabcb"
        },
        "item": {
          "id": "420b9cdb-4616-45a4-82f9-0ee1a3837c0d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fca0aa5e-f753-4393-883b-498a8f8a9227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce9c509-1dd4-443a-a07a-3281906654bf",
        "cursor": {
          "ref": "dc92c936-cf75-4a57-82bd-59116068ab9f",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e672916b-4174-4fa6-9184-dda97c3416f0"
        },
        "item": {
          "id": "2ce9c509-1dd4-443a-a07a-3281906654bf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4358b2d2-c558-4252-9ef3-4db82821f043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75a78d9-7735-4448-b573-cebfe161aa8b",
        "cursor": {
          "ref": "b0819ef4-41b2-4299-8254-4bd324764095",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fe952733-d51c-4473-8c0b-5b9242f8bd61"
        },
        "item": {
          "id": "a75a78d9-7735-4448-b573-cebfe161aa8b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "da6b612a-2a38-493d-99e7-0c6fadf74084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16237769-2209-4460-8b94-075cbde260fa",
        "cursor": {
          "ref": "6cecb8e3-84ca-4187-bf44-02fd1fff1513",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fa7caade-71d7-4171-818d-4d975d1debb2"
        },
        "item": {
          "id": "16237769-2209-4460-8b94-075cbde260fa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5914cf07-7299-44ce-8a0c-324b71769f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527834fe-5d4d-4c75-a6bc-54c3a045920f",
        "cursor": {
          "ref": "8597c7fe-50b6-4a02-8c8b-4e9c05b03cac",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6c2376cc-b127-462e-83d6-020374c914c0"
        },
        "item": {
          "id": "527834fe-5d4d-4c75-a6bc-54c3a045920f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ccc9f8e1-053d-402a-b178-ba1ac43331f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660e43b1-a6de-4869-96f7-fb8a8d5136f0",
        "cursor": {
          "ref": "e6538331-9b5f-498f-8f1d-9f4516b30958",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6dba9ee7-1066-49f9-9773-f7f5ac71dc43"
        },
        "item": {
          "id": "660e43b1-a6de-4869-96f7-fb8a8d5136f0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cef3e5ef-78ff-44fd-81b6-d5b911594e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdd99ca-d7c1-4f5c-9fc6-fced1f743adc",
        "cursor": {
          "ref": "23bd2d13-ba8a-43e7-b8ed-a96005caf63c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "99cc16d9-0ee2-4e33-9481-369f3a37a9f3"
        },
        "item": {
          "id": "2cdd99ca-d7c1-4f5c-9fc6-fced1f743adc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6dc12901-110c-4de6-bef8-410797c663db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecd903e-016b-48ad-9758-2a3b23256bd0",
        "cursor": {
          "ref": "02cf3ce0-704d-4f48-91c3-f633e80846eb",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ed1b1aa1-aba8-464e-8da8-774ea9229f28"
        },
        "item": {
          "id": "eecd903e-016b-48ad-9758-2a3b23256bd0",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bfba0759-85b9-4ea2-b7a2-ba2df0816f5a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886ff377-b9d5-4ec7-b33e-ddc1c4ab1d4b",
        "cursor": {
          "ref": "fea58773-8546-4571-9e1e-9860b3b1b8e0",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dd1d3264-cfb6-464f-8f11-2e5dc6da1a01"
        },
        "item": {
          "id": "886ff377-b9d5-4ec7-b33e-ddc1c4ab1d4b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8b11d8fb-78f0-4136-a5f0-ec5334f1bf7c",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec61801-9d36-47a0-9fa1-e42141195b05",
        "cursor": {
          "ref": "d6443ee0-575d-48e7-a5d0-29bd1de12ca7",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "699a26c7-6d5a-4a10-a4d5-b7effcfc21e3"
        },
        "item": {
          "id": "2ec61801-9d36-47a0-9fa1-e42141195b05",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f5e2e908-464c-4077-8a5f-87c9008fae40",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9198d382-a1a2-4879-a98a-fca71f058802",
        "cursor": {
          "ref": "19d602e0-1aba-4406-8e36-37f36c3cc045",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "99401352-38a2-4fdb-933c-c756924d857f"
        },
        "item": {
          "id": "9198d382-a1a2-4879-a98a-fca71f058802",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ba25ab18-8db0-4c74-82e0-9882f8a60eab",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "837b395d-6f49-4822-a232-2faa826f3734",
        "cursor": {
          "ref": "5fd07810-ac61-47b6-b731-784fe990e212",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "42c40969-a8c3-49e3-aa9c-e6cda405cc7d"
        },
        "item": {
          "id": "837b395d-6f49-4822-a232-2faa826f3734",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a8de5c0a-2bd1-4f77-afcd-f21fa9b8123d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837b395d-6f49-4822-a232-2faa826f3734",
        "cursor": {
          "ref": "5fd07810-ac61-47b6-b731-784fe990e212",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "42c40969-a8c3-49e3-aa9c-e6cda405cc7d"
        },
        "item": {
          "id": "837b395d-6f49-4822-a232-2faa826f3734",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a8de5c0a-2bd1-4f77-afcd-f21fa9b8123d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837b395d-6f49-4822-a232-2faa826f3734",
        "cursor": {
          "ref": "5fd07810-ac61-47b6-b731-784fe990e212",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "42c40969-a8c3-49e3-aa9c-e6cda405cc7d"
        },
        "item": {
          "id": "837b395d-6f49-4822-a232-2faa826f3734",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a8de5c0a-2bd1-4f77-afcd-f21fa9b8123d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b75861-98fa-4d6f-b5ec-53eec4d43e7c",
        "cursor": {
          "ref": "e43e1c56-d28a-456a-aaf4-8f8ea44a62bd",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "42cd36ed-a5e2-4918-bed7-8409020b641b"
        },
        "item": {
          "id": "f8b75861-98fa-4d6f-b5ec-53eec4d43e7c",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "0a6ad699-7389-4cc9-9d61-3b930defe661",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1f0e7a-bac1-4ce9-b483-fbe248145d62",
        "cursor": {
          "ref": "ae43ef94-4bed-47a8-863a-aa2e4d08c36d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24fb4c9f-78c0-4c11-a28c-606c9b6d82a0"
        },
        "item": {
          "id": "2c1f0e7a-bac1-4ce9-b483-fbe248145d62",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fed316e3-0c55-401b-8289-c62536f66c80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1f0e7a-bac1-4ce9-b483-fbe248145d62",
        "cursor": {
          "ref": "ae43ef94-4bed-47a8-863a-aa2e4d08c36d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24fb4c9f-78c0-4c11-a28c-606c9b6d82a0"
        },
        "item": {
          "id": "2c1f0e7a-bac1-4ce9-b483-fbe248145d62",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fed316e3-0c55-401b-8289-c62536f66c80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a0b28d-6d12-47f5-a6b6-968bb9e05ce8",
        "cursor": {
          "ref": "e354bacf-c65c-4a7a-b216-ef52ce43d207",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d836d3ad-5668-471c-b7e2-7149255bd4dc"
        },
        "item": {
          "id": "30a0b28d-6d12-47f5-a6b6-968bb9e05ce8",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "4fa13c5e-8d62-413c-88e8-f0b774f12432",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7f63b9-e1ff-4c5e-9b9d-fafc1710fe64",
        "cursor": {
          "ref": "f7da4488-c3d0-4bdd-b9de-5e05b6703432",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3be5716f-610b-4dfe-bd11-dc96d3d11f4c"
        },
        "item": {
          "id": "ba7f63b9-e1ff-4c5e-9b9d-fafc1710fe64",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3aa14cc0-9865-400d-8368-dacaf611ce9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7f63b9-e1ff-4c5e-9b9d-fafc1710fe64",
        "cursor": {
          "ref": "f7da4488-c3d0-4bdd-b9de-5e05b6703432",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3be5716f-610b-4dfe-bd11-dc96d3d11f4c"
        },
        "item": {
          "id": "ba7f63b9-e1ff-4c5e-9b9d-fafc1710fe64",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3aa14cc0-9865-400d-8368-dacaf611ce9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ed9041-bd07-436e-a59a-4f8112dc980a",
        "cursor": {
          "ref": "f15c5811-eb0f-4e7d-8939-8ae7480f3b75",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "28b816c4-46c7-4f85-a2be-bff14924cddb"
        },
        "item": {
          "id": "b7ed9041-bd07-436e-a59a-4f8112dc980a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "5cd9b67c-8538-465f-b3e9-b52cc92231a1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}