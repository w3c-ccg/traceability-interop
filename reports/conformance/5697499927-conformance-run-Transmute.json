{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "67fd83bf-aede-4014-aab9-7b0e4fd83fce",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f006de09-fda6-4352-b87a-b8c60d2134da",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c9d8c6a-9ca0-447c-89c5-8acdd19a7b87",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6b2a3fb9-7820-46c1-8602-a1753c7e3332"
                }
              }
            ]
          },
          {
            "id": "26d87fe6-1a3d-494b-8e8f-05071be84c63",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2031a468-f4e7-400a-b1ac-cdad15c7cfcc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5fe26496-e02d-40f0-ace4-cd8453c6257b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fdcc806f-7028-4684-ac86-79d5592ef958",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "93541c4e-65ce-4eb3-a080-778d2fde76e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7660ea3-abdd-475f-99fb-ec4643ff29b1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49a5ccf1-01ba-4357-b1e3-808b5e4af227",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a72848dc-e53a-40f7-a985-34b05493dd2b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a8b48ba-140a-421e-b7f4-681ed066c32b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dca5623d-810a-4621-8fda-33d7ac360e79"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f26d64fc-261f-4abe-a403-6b8cf5d75893",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7446b901-29e8-4ebd-a8e4-a8929bea4129"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46079c17-e1eb-4e32-9ba8-57a2e14755a0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "62ef9401-f461-4039-8718-4002be6145b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a117cf99-ae8a-4b2e-b333-f052ab545462",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06dba572-797f-4c5c-af15-8d0af23949b5"
            }
          }
        ]
      },
      {
        "id": "9a9f57df-cca4-4908-9d8b-1e85a13ec75f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f9c4be7b-fdbe-411c-98ae-9d7b2c605f94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2929cb5-3923-4335-adef-82bedabc3a7c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6e94b47-d9d2-4e15-9be4-e50a6688e2d8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533d1c42-009c-42bc-9178-29cc73d4b971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b59b77a-30a1-40ec-ba3d-38b048ccb30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f637814e-5e74-4ef8-8a8c-1594441422f5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54ba7cb-10c3-4ad7-becb-115cd8b66ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d174d654-b50d-4fce-b8b9-abab8ca0bbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dcf5b1-6e67-40c5-90a1-6e5554e84e06",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae2b2ae-b931-4b23-abec-8bfef52168d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25ebdf07-1b88-4237-9f25-d9402fc7c5ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01c396d1-5d51-411e-8303-9931ac50177b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "462fce20-4a2d-4d22-9768-c8dbfe91b6b7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bed029a-5294-47a7-8e3b-9b5afe0e8cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1b92bde-895c-41b0-9ed1-0cf1cd0f5a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b872e18-c8a6-480e-83f2-cef4c1c58737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc608e4-a8c9-47c0-a688-54ce042a564b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0c6d949b-0ee4-4782-9aea-b6d33cda46aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "54f9e05c-e488-48f4-9690-2938cba254c8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad04a962-3675-4fd4-9398-54f7b898760e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7362e0bf-8613-46b0-a623-45da032e0e5d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b132bcf2-158f-430d-a376-f32048dcf18a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e78ea80e-11bc-4b7d-9972-d9a73d4bdc9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d1e5bef-be70-4cba-9879-1c67d7d32a0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0021ec34-75d7-4ff3-a3d6-4000bda036e2"
            }
          }
        ]
      },
      {
        "id": "04915cb2-9211-4a8e-bf4c-6cf7d9f09bd0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0067bb18-f76f-44d0-b074-49799b7ac3f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d64c6193-52f5-43bb-b76a-f111048a538a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5f533555-5125-4e70-9455-3cf10db5bfb4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5532db55-4751-4c98-841a-a389b68d244a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2b704a-68c2-4399-8b2d-7e6aecfcf6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990f8250-7199-49f2-83da-91c46782db6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb0415fb-751f-46df-a2ac-84cdae038340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184eb3a9-2cb8-43ec-840a-a476aca77c90",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0db88a-1706-4fda-8fee-f1b566996953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a63f4e-e2b3-4c6e-9b23-3d89884ed598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7953a006-86af-4a6f-a32c-c496270ee0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a373ea6-caf5-4874-a31c-3ea34eba65d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60113aa8-627e-4c22-88fb-4ea33a42a862",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fe4cba-6efd-4262-9608-7b7c1558f0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d192710-5f6b-446a-bb3b-e0ee564dd49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de6e8c9-8a27-46eb-9c7b-0205f5f33e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "499f8e1f-e20d-41d8-8e67-59188efd7cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3894e50d-527d-4ca5-8742-6109202c5434",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e522b0d5-0bcb-4eea-b0bb-b89c15bf447f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f2bf10-f187-46f2-af60-0c7bdbabd02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5691d5-2d6b-4b1a-a22f-731e38b66621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a473c033-e0b1-4a0d-b1f3-877188f9ccd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984cd4e9-a588-40d4-8f15-d15ef4484aca",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c3a399-b5c0-4466-9246-82ec830362df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4059cdf-7e7d-4a06-a1b0-53b6f2fdf07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2f666b-6097-4814-90f8-2d9fd534354f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31d21ae9-53e3-4ddf-b03b-92e7d4533419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacf13b9-0533-4880-bc2c-5d763d77036f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001cb66f-3847-4ab0-8de8-fc673acddd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989ae4a7-b049-4c38-9e85-33bfea67978e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5fafbc-a4e7-4672-8daa-798f0187f9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dcff709-5c4f-40ab-9015-c4e13f8897a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cafe414-5ca1-4bb3-8ed1-520d9e5a7303",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e99cd5-c769-4c80-8725-f8705d7ef12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91666e6c-0afd-4dae-b30b-42e6ff93b940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6738d73-9313-4f16-8987-4fa64191e29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "927e2474-2caa-4dfa-95c3-1c670c6009be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09701530-c1fe-44cc-b544-646e2b6dfeff",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c82c89b-e42f-4a89-b84a-b14b8e7cba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe247403-5f01-4ca2-a7da-52ab232783fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878ae9f2-d69a-4cc6-b1a0-3ad1e716408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e648ee67-c350-4150-a7ff-0b613b4c4711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d585dc7b-b33a-40f9-9fdd-23a4b2ae4c17",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c8c417-a468-4a00-95d4-924f42f8f341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4885748e-dc3f-410a-896e-dc3e0574069e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a8e646-2851-4890-83ff-60a7843acb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39e9f7d9-4a9c-4218-a646-b2e2d6a84aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930176d4-b214-4050-8595-297bda0e4bc6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a96ceb0-cb88-4147-b9f0-a0b4935ea14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed075ac-a69f-4959-9227-31728bb54d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831d036c-2b25-4f2b-ab5f-19cc21dd15e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d32899c-28b2-442f-a7a4-e3b61ef1f18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab9750c-9a52-48f0-a3d7-6c84f4c2c02c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a2e026-fcb2-429d-8f80-68a490e09467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f4c466-72dd-40a9-bee5-3d1f65ba3643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd01854-61ae-418f-b324-9fb17f27e0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed11ba5d-03e4-4f03-88e4-f8410027e3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97045f5b-c28a-49bd-afa4-5e64435f270c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de353f8d-fac9-4bcb-b74b-3ef8562ff271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181a0f45-cf60-4aed-8718-158e13089c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c85b78e-b68e-4cd7-b6ee-b1e2f92c001f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeb7af25-69ed-47f9-aa46-6f2f9bd1b8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36d111d-32d4-46db-97d3-d6d6c865f76a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd2e7d8-3635-46cd-923a-b0d6ec3514dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e32da80-cad5-4418-a596-5e47136a8afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7142f162-7b5f-4e0f-92e9-0a2521bad685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c1d576e-9464-4d3f-9f67-67b55fa80de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ecfbf2-7562-4938-a462-92297383ad82",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3546fc84-f001-4462-9f10-35786385fff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c710110b-86b5-4077-9252-4e4eaace7eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacdc802-8980-42f1-afb5-a6760c06f7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84e37da2-c89d-468a-a7fb-d98d1745aa51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7ffd40-1e95-41dd-9572-5515af55014b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3c4302-68b4-47a5-be14-85fb4a6ef0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52b7904-afb5-4c5e-90b4-6501b1ccb9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d283b2f-dcc9-41e2-b20b-30a7dbb34d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9628161c-09c6-49c3-9fc4-f56ead9c4237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce70a37-484b-46d2-a5bd-4a5767899c88",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93b07de-bccd-40ce-82b9-d1d357a2728b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601c9c7c-9d7d-47a7-9bb3-ed23de17aebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929400de-172e-4b4e-9ea7-840338ceee3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f57a9090-5214-4b3d-8e20-d27a766fb418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8543985c-b3e6-405f-b8f9-46595300d577",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b24586-123b-4c10-8d20-a413bd038618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ce75de-6ddf-461a-8a7b-5a3a3125a8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9078126-510a-4f47-b22d-08da0cd651cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a70830-c0ad-4cf3-ae09-6bc64ffde302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db95fa42-9200-43a9-9ca1-7e66659e6402",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd337be2-8c7a-498d-ad5a-ca5f18a23243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493965d4-f0f2-49ff-bf4e-71414f1c1783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddb4297-168e-4cff-94b8-d3fdadcacbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "da290f40-e782-4fe1-a36d-5b70e1172164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44233a31-093b-424a-afd5-d0bab663064f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bf40f0-75c8-4f86-8dea-3dea6520344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0360325-27b6-4d1b-818a-0164698c3abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac7f816-cf62-4130-8766-157f26948849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7539ddee-217a-4666-8e9f-20df736c65e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1deabcbb-d59c-4d69-88e6-24e779c71277",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e135eaac-c646-473b-9df8-265d7c5fb5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59edfc52-6284-4856-839b-237c088f0174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164172b8-78dc-4e89-924d-8bcba4b27c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef6e435-1844-43e1-a914-3c99497f48eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691ab862-0932-4aeb-983c-7e3a547a24fc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c45d952-609b-4433-8099-0cb2b983cbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79917326-0532-4f49-aee2-9e11e255510f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42885204-7d5f-431e-96df-792735e349c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7027ebd0-73f6-45ae-8c7b-8fd73bda838a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fb1fb7-d84b-4d9e-96d2-22982137507c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e117610-07d6-4d81-95d0-280c5d00bce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4881ced3-37b7-4b4c-90ba-c3ae5c981d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69135c3-af74-46eb-8fbc-92229b08dadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d60fc18f-3195-46eb-954a-38b528ba45c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103585cc-5e83-4359-a3f7-b81e1ac8e3ec",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca2d945-7d49-4bdc-8423-368ba4df5031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4c9ee5-9d0e-46af-a71a-3929e21c4797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e76e3db-a770-4e2c-a162-ebfeddcae7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6349954-5dba-4faf-bcf1-6ccf3d7db54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ef26a7-7f09-4446-a0c0-8c4305fa903e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b423c0a-ca6e-4af4-942c-4e70bf628ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba13694-c236-4cda-af66-6ec9d89432e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c752f64-8981-4e5e-aa41-4211adcac496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "78399094-99c7-4a9b-8a3c-9e41298be9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e0a2e2-9c23-4ae6-b556-ca352ceef130",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086f2f1d-7663-45a5-bd66-b5a26d6d54c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f96e3b-c37a-433c-9fc1-8d79d314553f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddaf909-7319-41a9-a521-a1e23d056f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3885594-4531-4553-9d24-100be10b6938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933c6167-b85d-45ef-8317-dc918ce4166c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440061c8-c3e7-4994-b343-1410732b35c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4016179e-ac1b-4ca8-896b-3ef6f255ef15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9721455-3209-4f65-a835-632a35d6fada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fce1a35-90d1-44df-b9c8-58c6d538ffe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e914c739-555d-4c0c-91d3-16ffc59237db",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe9c6fe-b52f-4cbd-b313-ffc22efb4d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d32c04-de94-4489-b3d9-5e4ecd5e0fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a564ff-ae35-4a23-84fa-abc3ec2f9105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a393b2b3-ce81-4b03-8a35-644b63575f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3d987d-3a14-418a-bc2f-d03c8553219c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f630bc75-4967-4a49-9632-4926e4839c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e264a0-c23d-4d23-862c-b30144ae0870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31304a12-40e5-4f07-87b7-ff3aec738686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6a4fc4-7cd8-4899-a8f2-2dd7be70c628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a362d51b-b9b7-4675-a190-c6d6696cdbd1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b31ea30-5045-4ad0-b3e1-2983de19cb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30366041-1c49-40f6-b24e-634e1db024a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c988e58-e9a1-4eff-8fc6-49255823a454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5107ab5-c6e3-4fbe-b850-c95ce809f322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06103401-b347-40e5-9a90-eb936e108db2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72b7bf3-b8ae-4185-bc6a-5d2ce1d2e537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf7641e-2fb6-4695-b48a-1b09315b6288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0945a50c-7154-44f7-88f2-0c1b87d481a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b8bae4-8c59-44c8-af7c-196d252e6c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890fce76-2e7e-4116-a842-479ac76e0779",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7a38aa-0ed0-48f4-bbef-ac7b724ccea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fe3863-591f-46f8-b221-71f1de04643d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77421ff8-f71d-47cb-be83-fb344c3c937c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "795e4fed-d8ec-4d69-89e8-b0f3453361d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a976e2-2eaa-4648-a9b1-af89087d34b2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffae51f-50af-416a-bd3c-f296ebff9528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58aea6c-a86a-4b7e-9e83-b3ef1f61b2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd63abd-52d2-4be7-bf67-c95dfedececc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e76b2c4-a412-43e3-b194-41701a2d5c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12484019-9b4e-43fb-80e4-a6a0f2a814d1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9f9c8e-9381-4e38-beed-5a5037110923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bab1e22-8a40-427a-8a33-2c9e69ec0bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b42685-89bd-479b-ab6d-e4cfbdfe79b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e70f595c-252b-4f05-9a8e-5fb1e3d9c4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26083cc6-2bac-4171-b867-977d19f93e91",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5b0c2e-f89e-4bc7-bf05-672ddfb070e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b40141-fbd0-4ac0-bd3d-56cbeda71426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c599df3-2c82-4f77-86d8-94e059ad5420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77616a0c-fa1c-4d17-b7f5-5c7da0fe4de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3860e709-9911-4581-ac30-13f8c9655983",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956edd96-1a2f-4caf-be32-7bc55dc4b85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b18cb6-305a-4989-8878-9ae305fc3b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126f24e8-ec53-4372-a786-20cbd18a7e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5e403b88-83d8-4940-8c80-96644d77c3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7961efbd-b8a8-4f23-9d7d-576f15d4cb21",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0075c45-bc5a-4772-b0fe-ad52ee64a470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34960119-32bd-4837-8c20-143065770af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d8b31d-f41f-455e-9e13-caa437e8ea3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2e2ea1-ecbd-45a0-b180-3c341d2a7ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb77d88-cc1d-4ae7-adc9-cc813a84e063",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33197908-45e3-4c8a-89fe-98c5b963f32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f6ca74-db76-4a5e-9dd2-6aaa14e3abf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fc06f6-72ff-463a-8349-5be7cef51679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f265cb-663e-4fa1-b9ef-c49168173d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2c2df7-02b3-4783-831f-c86b8af2ab71",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f28bd2-9676-4f6a-aae9-95288937e039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09527c5-9138-490e-af22-3e2873b53b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb4db2e-cad4-4674-81df-bdd600e71ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3569875-50ce-4df6-af8d-2fe235e1bb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82cbc8d-9c4e-4370-a948-2e4f666933e4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53df31f-3465-4bb7-9a42-dc69f235b8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da6475d-3184-46fb-99fe-1a8f20d68cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b445856-1b0d-4f2f-b98e-a6cdb3c60f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0db51dc9-94c1-4aea-b345-3c9479ed42fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4879e76-708b-49db-9a7b-a14da2fe7bce",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1123a681-c2b9-4ece-aefc-f8fb05f97f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e511f5-6eaa-4dcf-81d6-84c6ae9b8a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba594fd8-3cdc-4a53-8901-db4aa62febcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfefe859-bc85-4ce3-9c5b-5fb8cc96bbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e46a030-f055-42c3-ab15-ac66823248ba",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5548e3b-b134-4177-ab6f-c61e72e7bcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba81dfe-7780-4f44-8f69-f82eeb6db5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178489cc-e77e-4e83-9af9-a2a87e3885da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eded3cc0-91c3-4855-b176-0ce34af625b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfa4b1e-735c-4dd3-b40c-673523e7fa48",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5ae41c-4e8a-48b3-91d4-5b4cb50f20bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191780ca-590b-4cb9-967b-9741d4387032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9fc3cd-71de-42ef-9eaa-872ef8bae91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7c100df1-6a81-4141-be9b-593048f06e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5cce9f-bd53-4379-b26f-a24e30be96c8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f9c32f-f1fc-4633-9d54-b767bf538056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d07e66-108f-47d3-a9b9-bcc705b076f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec3717f-4c5a-4c05-a7ad-9ac1572c3ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a844b77-7a34-4221-9884-95f1ca6d1648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c491f2-048f-4e2d-a374-a2966cdcb975",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bbace8-fb48-4563-9d82-66072d047566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67f3964-bd05-4e95-9bde-3b99bbcbddb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5611b3b-3304-45e5-a829-0bfec27bf7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d24ad8-5be8-4045-9665-707b0d57a2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e10a2bd-d7b8-4605-8b8d-54b59ae2949c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1559ee8d-9cf9-442f-889b-d165190d0d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b98c96-a3de-4390-a442-170183d99901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e8310d-7672-43e9-af5a-aa3bf05ef055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e44dd54-e4cf-4f9c-890c-e6522f318c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c54ce5-9d57-4745-a473-f17a19e81dc5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eb5189-abaa-47d7-a5ab-de3bf9d76117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848e41b7-3938-4772-abce-83235ed2081e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd9e037-fa3b-4477-9e1f-177262d63ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fd4935-70b2-4552-8149-8edd9c0161f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d61575-a532-4f72-8b35-40ab9142cce9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8506fc1f-3b6c-4239-a992-4fe11284ae09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab73316f-4b48-4bdb-a3c3-f7adfc83f54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6698a06-8f61-4c2e-a3b8-96dfaf14fef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "288e789d-8177-4e5d-9577-6e473163872d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f801afbd-877c-4e26-a430-584a7dae442d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd31a879-92fc-4de5-8c4b-016974f019a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508d4226-07a9-467f-a5a4-fe7e0282d707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c03ee8-fc26-4777-9eff-1baa9d429b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d260fd6a-b77b-4e27-8fc3-83fdb316b13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51f1cc6-e84c-470e-b01c-eb2202c75c20",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7dec3f-5b01-41ff-910c-f7204f18955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82083c26-fb75-44b6-ad3a-6042ab5965d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42123dcf-a9cf-4d83-b163-2063296c6cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1d04c1-7ec9-4193-8c7f-5da6708de014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bc1ad9-6ec8-45b5-aac6-c3bab5dec1d9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83e09c2-cb47-48f3-8f82-6c97126f3715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbcf263-4644-48e7-9d96-8d530af36669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c066bc2-cf5d-4ef4-b979-5b7a39acc440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70b99ed7-c254-411c-8220-984a9a24e082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ff863c-0b7b-4c69-a193-bb0f5af4d722",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631753ea-7a0f-41b3-88ef-17f39063a2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dcde90-cc8a-4dc0-92a1-1936ae2b21f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1347e28d-021f-4272-bef3-eaeb25b8c869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa2b328-7780-4e74-a21e-80a333db129a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a9a743-9792-46f9-ad36-a2cacfd06e5d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8919a3cb-0bd2-42f6-aff9-e7431ade91c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364c7e5e-f52e-4193-89fd-f1ec3fc40987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0212579a-5b70-432c-b44a-110a42d4a0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f566372-41a0-4337-888d-7fda2234b417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f55ab71-7642-43dd-b7c1-12fa24700a2b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c64c87-e43d-43fa-8620-800b021a1bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997df1d4-f244-47bb-9e25-11aa53a5f03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf48da01-98c3-48aa-9d5c-eede0dcf994e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0215663-a60f-499e-a9be-9872240171e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8fc4f6-2a95-4f99-b30d-97c0310db4f2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26373a70-05b0-4c0b-bbe4-660b0fa09f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b75cffa-e02f-4518-aa2d-cefb43e97254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f945c423-3499-46af-b010-8d49c594ebad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0088c2bc-99d8-46f1-8809-6d47779e71b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d73d0b-3951-4f52-929f-72945c3df651",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaa6ca0-5e5d-4827-a2f7-bbfc1a48d0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b11037-5477-409d-98a0-fa84b7a875fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae85204f-bc4b-417e-9fcc-0492dbdae730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "939ce882-e752-46e2-bab0-4d0085b7d37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71999fcc-3612-42e0-acb9-1f1d2dbd1f42",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2aaf83-dc99-4c09-b915-c7a3c903c351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b055091a-e0af-4b38-9198-2914b53c52f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab4ff48-8fda-4fe5-a8a6-a330767e3644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdeb6c9-edff-48d6-8057-d0a5ad259d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028b0f38-dbd0-47d1-af24-b0951930d1cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8eaa21a-dd23-42dd-95f7-c2a84cbfc867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4132934f-7f75-4e54-b015-e5ab07c314e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f37902b-8af4-466b-87d8-621d0c4654c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "869acb8b-0b39-4e1f-bb0f-d90d27b28b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0cf860-c671-40a0-9cba-e5851c8aa782",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7d34af-cb98-4997-9c64-102afbdf0874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736e1839-ec64-49f0-8e00-07b6aaafe994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3565395-98cc-48f9-bd27-28f2f4193d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "68db264b-26a0-4a34-b38e-c2165a83461e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6039004-f384-4180-b56b-647d72706987",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55232936-d40c-42fc-9380-e2b4e1d8bb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171f10fe-7a00-4cd6-9b5f-ba05b203275d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8634582f-1734-4967-aed8-f347603408a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55f2ae83-ce21-4b0d-b8fe-a391da4e56c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb8defa-cbce-4350-a633-695131ffb7ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03680ea6-b32f-4de7-aacb-33516092ce9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a32cdb-355c-4d25-aae3-3f99e7c17682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de972ed4-d5d8-442f-92e6-671b7fd32758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6360d71-016b-45c2-9a39-e2fdff679101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36941f7a-4bc6-4fe1-a2b2-2d1965586d0e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415b16ec-016d-4b5b-84ba-17945774c382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b84213-9806-4652-9331-0c00a5585f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769602ac-d41b-4243-9f52-058e9789bfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "90087765-185b-45e2-a302-f203a1873451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f280ba-6f36-41e9-b3eb-83f7f67bd8c5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ef06e8-7acf-444a-81f1-bf87712f6ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e208326-86d9-4779-92e9-01377afbf514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cf0d0d-ac25-4be5-8c42-bab1eb5b79f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "619563cd-06ea-473e-89a7-b2b8c1f706cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762cf4aa-e160-4385-9e6e-657ecafa7a56",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b603d0-7d4c-4430-b272-b28746506cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d62a89-ef9a-46d4-9dc2-b66c4ca6169d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb58d988-b503-4187-b8a5-161f474ee243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff35e05-8e34-4643-8527-589afce20eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d275585c-c0e6-41d5-9e0b-4b1b9701492c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a76af2f-7b1b-427e-a4fb-92e2379e2faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8c2ded-71d5-4a43-9321-ba49c592920d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb139dc-1179-4566-8e19-114d69d5b76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ff5488-e473-4439-b796-1750a3af35f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcf3f17-3317-49e5-8b95-7f01b026f2d7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb85003-14eb-458f-923e-c8601bf9ec64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562e5f9f-9d04-4c87-be72-7d53eb79fbc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6ea098-2e5f-4e62-8323-48614cd6c43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abbf35bb-e12a-4c04-88d6-74d8ca0e9b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2a5d8d-d620-4d61-b45e-3c7d0c84a9ad",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4adb74-6b03-4607-a96e-ffbabca75372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9316f304-4eed-481c-8198-a256a25de12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2311e40f-d6f4-4412-9665-71b09e4ee8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32b19cba-be00-4b44-aaa8-0e6f74abdb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90865108-9682-42f9-a02c-7af4f753585c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189ce9ed-18a4-4b36-b694-ffc02ac7befc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b557a15c-bf0c-48e3-ad49-85fb18dd9158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e783b992-078f-4a02-a2a1-7e273815146a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "870d6436-ff13-4b29-a62c-3d9878fd13bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58305ea7-cf18-4c1c-9837-2e9ba34cfa07",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0ae069-ba93-440b-b895-8648abd54dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db73f735-7355-4839-9be8-59333cfea96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3306fe4c-0fa0-48bb-bf30-f33e2b7ecccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "11506eb7-21df-442e-8a76-6d57b6795f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a37cbf3-f0d2-4682-a350-689bc7425ab2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2db2b64-595f-44c3-bf7b-32d0af83e031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7f7c2f-0f04-4a8c-8d65-a5d0793612c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e98b7f-0b10-470f-a016-0e488722bcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9841e0-232e-44be-911a-bca261911b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db390761-f3f2-47be-87a6-743b73f7ba7f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275e0172-4225-4bf5-977a-a67b559f8c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac19529-ab02-4cb9-be1c-9222f44b5dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185a31b6-64a0-4408-a792-050e12647992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f49b37b8-3b8e-4e18-a467-ca1a7a22534f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21228c7e-c41d-4c1a-a58d-07f0ee94ea1b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5661b208-0ceb-4c3e-a89c-f69c78b75650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251a1631-1f25-4576-8e45-90f5453fdb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4962359-abef-4d66-9bcb-37c4c223a7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2ca50b-19d3-4ca1-bcf4-f4ccd5612244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d329000d-7542-490e-8da4-7f65703935eb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22759f0-8b28-4bd7-869d-f5dd68cc63c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16fc194a-bec9-43da-b9d4-e096aba2cb5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f28566-339c-4be1-87a5-21f92230430c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d70ced6e-449f-4b65-ae39-8c0dbdf1b6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee0adca-e773-4741-a1e1-84d74a93e1fb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb324139-fd6d-415a-8702-9b84f6720f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f3dae9-5a80-4cae-a7af-74e598fed192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d76823d-d711-4cd2-ae20-7c2eac8ca223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d4de5a-4283-4e54-b1e0-8439184340f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc98727-3ee0-4bfa-9f59-9f9996f284b4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2f6a28-fa07-4a88-a557-1eedbf6ecb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2272bd-b26c-46b9-813e-11da6555ea37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd723c1-aef1-4360-b773-0fc796fc7884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1feab21a-d89a-4508-a313-264e1c671d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a662ccc0-e2d1-45b2-a6ac-46ac008d2252",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25080e3-ed44-42cd-bf24-9caa1abb5521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b958dc-7fb2-46e3-abb6-94d7d266e213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360b3e08-0448-41b1-8fc6-ee273169c8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ec9b72-4b74-43e7-8633-24f7cf79c11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d46241d-29d1-42da-b926-adfc439ac427",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218b67f8-6a19-46ae-bc14-249430d54ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc4e0da-8106-4838-bf7a-6e714cd8fae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3633d269-6fb2-4349-a692-9fd154fe4b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7bca32-d83f-4da1-902a-11a7cdd23c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e990337a-d69f-4087-9531-66d1db1b1f04",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2647bded-dff5-4094-8379-e43048f86827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4cf0f6-5fd7-4732-913c-4869b9bdc22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f07421d-dbe8-42dd-83aa-cfb2a81ac1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c66209-0c10-4c76-a987-eaf5b69e16a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d120b56-9fec-48b4-91e2-5c94f5afa679",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a24cc6-b2b5-403c-b74b-b9b28519ab28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7281bb-f88e-457e-9f80-48ead6802adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1141c7a9-266b-4014-8abd-27f3d075b3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07dad00e-f778-4438-bce6-6bcc06c0c8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f415f73-6737-42f3-b456-748ec6808734",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4809730a-d54b-4f7b-b0ca-a27976ce62ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c22f82-9fa8-49e2-bf93-957bbc4c4ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323a239f-1e23-43b3-8263-530c3ec22755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa439fa1-3660-4dc3-830e-b1db0be1ea87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341e104c-a3ac-44d0-9531-eac9c5a18de1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf70b79-c165-48d5-8459-4a9634d9f6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ead02c-28c0-47b3-b776-3f2f54627034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861b6607-b511-48a6-a818-92506565bed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc75583-f392-4c0c-9564-61aeea9dd195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e941ca2e-bdd9-4f46-b54b-07cadfc50b51",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80be3194-af90-4ef4-be2b-ede30affd791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da57d0a1-a0be-4c5c-a22d-890e724ad204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7742d71c-0564-411d-8e4e-da40e8345a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68c71d74-74b2-4f96-b2bc-dd5213ac24ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d471d7e3-bf7b-412c-8d99-125ae87550cb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121f9ce1-d822-4408-abb7-02693abded8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a176c2ef-fed4-4cd8-84a9-c1269e3ac170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f4a920-e493-4cba-949c-e07cddce1a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5facad0-e009-41d8-b69a-47b5bae46209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f60e9fb-ea29-4d06-9ee3-a181c565bfd5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8841b0-337c-4365-bb9d-52999ea7d8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f791fe07-1dd1-4702-87fb-7f95d17e0de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3d4432-c1c4-49a9-bbc0-bef4e2c2bbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3479a541-0f5c-404c-8466-ad6dffdacf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88c9f72-795f-4ece-bbe4-62d090cff48a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49b4bd2-3c7c-4f95-9fd1-a1853ac8a562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a652347-7715-4c5e-844e-0ff35945c382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba20445-1c68-4875-87e9-23109a5d11a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f0eaf1-c9c0-44a8-b70d-460c6d31521c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282626a6-4ef2-4270-8500-41515762debd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cf4d9d-e335-41a6-9741-bcafbbe6321b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2839a0-7a7e-493f-b40f-d4a08e3ec82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cd79fd-57f4-44ad-bcfe-556f699dadce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce29948-b9ed-4684-a566-00dc4de73603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fe2e6c-e4a1-48b3-940c-00a3ef8041ac",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a1a0f3-57aa-4919-8bcb-ce764fd05128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136f3e39-4296-4474-a679-d8b56253398f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6eea2f-b682-4e5d-ae01-00fe76d226a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aaacf96-c564-40f2-8821-10abf84dc97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e949dd-edbb-4370-b96d-68d3becfa008",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd3a43e-2915-4ceb-9313-a74789764284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fc01ce-a6ba-4cac-bf94-ac98df2c10b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228f6083-3a4b-45e4-a1d0-0b0396b369f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdddf9ba-a54b-42b2-a32c-e7d3c0adfd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006381ee-b786-4634-8efe-5b32bd4cd358",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37025b4c-cbb9-48f4-8e00-4d041f0e8a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef74705e-0d95-434e-aaf4-22636f481385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03c7558-b25e-4a84-aabb-ac092e5b4f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d572f2f5-bf95-49e3-a63d-a0b0805055c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a172af-9169-43ac-8cfe-e3b2063e8fc9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33abe30b-5e0a-45a4-a37e-8b1eb3ebd86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cd4dae-6bc5-4735-bb6a-4fd1d0c407b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cfd60e-13ae-49f4-98bf-acda03df9133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e034ee9a-fba1-4c42-a626-912bf95f50fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82caf8b6-03f0-466a-8268-d4a27be92d59",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9108327c-c64c-4078-8208-0f8b5f48cbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a222eaef-f130-48e0-abdc-94c384cc4398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca5adca-16f1-4a67-b4ae-eb873cdacad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a76f619-4c22-45cb-b4cf-93a00a7614e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10c594b-a312-4e54-805d-97864d07f04c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58f70b7-c88d-4926-9243-766450952606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e383b0-f321-4490-80ba-2b40ce4369a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45368773-0645-4641-a007-1b2c679f9a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "352117dd-6f42-4309-bf40-696cd00dd334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e32a59e-323a-4fd7-9e10-b20746de485d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8880e76-5978-4e12-baeb-17982a194c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ff9a087b-4060-423e-9038-6076e67089a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925569e4-56f3-4556-b626-5e9acd654f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf4b414-203e-49e7-886e-198988cff8b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "375071f4-df29-4591-8821-46243d7e8141",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02227019-8169-4d25-a65f-45a93f6505f7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95d99e0-8f7d-4515-967b-320e08a7a38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "969fffbb-5601-4565-b176-f7fd65a11695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65246861-2e4c-4a3b-a5a9-c60311c02bcd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "129182d9-7cc9-433a-9a4f-b9f16addc55a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ec6aef0-0f64-47ad-9396-6f082689f390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50ff2107-25f2-4311-9812-6fa8663d01fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a796e1f6-7ed3-4013-8b93-5ef66345b129",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1494faec-aa7e-4869-99b1-47c9ca9f228b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d14ec424-2c59-44bc-b03a-66939a49b38b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d5f5677-a957-44e9-96e1-46cc69888e67"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "11751da6-ff4f-4347-9379-435e7e1995c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92d04409-bbe9-4ab1-b319-fab7c9b58a30"
                }
              }
            ]
          },
          {
            "id": "e81e5fc3-8a4d-4d1d-a4dc-b2d7e2099649",
            "name": "Positive Testing",
            "item": [
              {
                "id": "71ee02e5-62aa-40dc-b8f8-859875c6ed3e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "810d5438-6414-448e-a8aa-86ab26ddc9ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "faf7d9b0-f0af-419a-9f65-a309eee73944"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d1e1e93-43a4-4e08-9fe4-4fb0ca8330b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "113e9add-75e6-43bb-adf0-92e7d96e3f67"
                    }
                  }
                ]
              },
              {
                "id": "6325a6b2-b4a1-4d5f-8df4-ccde792933c5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9609f2e0-2263-4df9-8ace-2524dd877800",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d8c563a-57b9-4786-841f-dd37612025f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfaacd45-4683-4138-8a26-5122a657c85a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3021ad7a-c915-4611-897c-842f4134e948"
                    }
                  }
                ]
              },
              {
                "id": "788b0936-39e6-4882-978f-e02eee595d80",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8938cabd-c24f-4ac2-810a-703f4e718bc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3529b4e-1924-4b8f-953a-1319e9502b87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acba6a1d-ab2d-42bf-b5e1-b01f27f61ae6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20043ab3-6fba-4aec-bd61-420a54a03191"
                    }
                  }
                ]
              },
              {
                "id": "f3659dd3-7177-429c-a55b-7eb3381c6291",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "287cd6d0-0dc6-4d69-9fc9-6cb86c13c694",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cf0ce16-131e-447b-b47d-7a9cbe9b7e19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c783e83e-010f-451f-a3cd-c8d6d36688ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d1ca3b74-2f51-4660-9fac-8a9d235e5a50"
                    }
                  }
                ]
              },
              {
                "id": "c6fcfecd-bd0f-4df3-a598-dcec73754b28",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffab42a3-5714-42dc-8535-3debeb2d274b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6384a73-3c87-47ee-9186-7153f035587a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42f9cbd8-6d45-4182-a649-fc49b7414247",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d272106a-8870-4779-86ba-ed0897a8ea08"
                    }
                  }
                ]
              },
              {
                "id": "2b3ec6bf-d795-42f2-84f2-d10f737fc7eb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cb5e50a-0570-440f-b327-330619512835",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11654b9c-4aa4-4034-9624-7c23194fb889"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e99ad496-187a-43a8-b11d-d4c3c7c83592",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "368b1a0e-4088-45bf-9d63-500ea607e891"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81b44a0a-1b3e-4800-94e8-18566208eafb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1d8506f-c51a-4a22-b7da-c55a9ebf7101"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "966fcff7-f419-42f2-936b-2676a32d4df4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18832879-6c93-41b3-84f1-cdee0ad48fb3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54dc4a69-24d7-44e0-8826-5593dc7a0aa3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f75a5534-8a6b-4ab1-b30a-2a97aa039bf1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96b8e0ef-442f-4896-b1c8-b618cd2c1aa5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "006ab23c-cb7e-45bc-9525-58d6d92b85f5"
            }
          }
        ]
      },
      {
        "id": "34e042bc-e7d0-48ac-905c-aa9dc906d190",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5b246505-3967-4b87-9da8-e315f944d250",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54e2c7f5-73ee-47e1-b21c-7e435a257ddf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b5574e54-e38c-491a-b5ed-ffbf5606ed9e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1f40b2-644e-4766-9e12-6e71121be9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8400d8-8ab5-4932-8a65-4164f1a0015d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b68097-abf4-43f8-ae89-04c2c4146a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5827c3-b4e0-4e95-a5c7-b59526b8dc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7894f51a-81b6-45c4-8eaa-72e51cca040f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6315f6d0-daef-4228-bee2-f171a31f3578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f439ee07-ec6c-4898-bcdd-1d6aef37d679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c5aa53-ba6b-4f58-9a48-7ff4bdfab9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ad6801-300b-4381-9460-a70244f736fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4648341f-1983-44b9-8248-f492b40adb36",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3920ebfd-e1f0-4170-8074-59c22010a579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804b63f2-ed72-4cea-ad18-e095fdf6c8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20593c8-9e2f-43d4-bbc9-f45b52b02d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5417036d-c9da-4b4b-b075-a4dc78aaeb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcbcd75-e917-4ed1-a02f-e99ec61a5800",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975f5d53-e319-4a06-9e66-0c3390f47929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c788010-1edd-4251-81db-e5f10ea4ade7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61a1759-cd0b-4228-a54e-183dca1eec50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecee7224-e086-4f8e-b7bf-c4781025b643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574599db-b715-4e45-93db-e691fbed4cb0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4eb7d64-cd98-4299-93cb-b01e77d1b54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b14b52d-5483-4e20-ae81-e4b24fe2c141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d44ba30-39c7-4342-898f-ad053dd7b2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff36f2c-cf13-43d0-9030-f24a36ddf2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e55625-a6d1-4f10-be39-9f8e43989a17",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377c2ef0-6dfb-4b28-b8e7-6d0e727a36ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04604246-81e8-4c80-bce0-0fbd282483f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ad9648-e119-4ad6-9920-ee60368b87bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db1caa00-014a-478b-95a3-d7e80be06041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be282584-6eed-4708-8ddf-604dd7c85224",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2755915-c56a-459b-831b-18a46edd4e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8d7b27-43fc-46bb-8d93-3f07b7de3497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fdcba1-8e12-458b-add1-e45012aac47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f283d3e-746b-4907-8928-a40701c63346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fac86f-d87f-48b6-8915-60886724fe01",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ecbfcb-1309-4156-be17-c1a79b515349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9af2c7-da76-4568-8636-eb4913c356af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b06c87-35c3-4ccd-9211-e30bd87ab2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff475e8b-98c2-4269-aed0-b86514cd97e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f59483-e3e4-477c-9248-a8ad7894a865",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa78ce57-b06c-449e-8ebb-fd230c6e44ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ba9cbe-fe64-4c26-bbb3-2a40d2ea11f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76b649b-2720-4a44-a5be-a426b578293c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8059212-17b3-43ec-b2c0-da2f7e683e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa80ed2-97e2-4722-b2f5-3b71ca61aebd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e49d21-97df-4984-8a6e-b8cc75313b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503847fb-2c09-46b4-8794-c53634d50d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9bfef1-3687-4ba1-8fc6-372f9e35540b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd17c916-bf5b-4c58-9abe-31e4d5116bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1757329-bd14-483c-a5e5-33bb9ece4b1c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6760ee-31b5-4e29-b885-c4b7765ce082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9ac50a-a16a-4b5e-a178-80398ed6fbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad0cc3e-fec5-44be-b3e5-2d4825e3fd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d885ffdc-f701-4e79-aa42-494efbe9efa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fa8149-b330-4e82-9eff-5085b405a6fa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f54a4db-f736-45c7-bd96-383f9842c539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debe56ff-8549-4711-8dff-ea631c5dbb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31704299-6203-4d6b-8079-d44c87f8f4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "890a96df-36f5-42de-a3fa-eea9f757bb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c24796f-0810-4757-b908-a6df5fe8a228",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8755cc76-c3e6-4f56-97c2-cfb9be6afaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23aa21f3-db84-43e1-b5b4-4a5d1f8695f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99da7c1b-7700-47bd-afc2-20ab682dd47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a627ceb-763f-4777-8c68-6e195bb27daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f3c8c0-0325-46a7-8ca7-8e1001947f53",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61271a54-4a70-473e-bb04-6015b095608d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2212ef5a-8277-4063-8597-53a3561fe3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7048817-fc2a-4801-a06b-3da602e4540d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "245afd0f-a170-4904-8e25-72099d76ee4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab0729c-ad50-487a-96d1-2f8278dda89e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa35121-ac7b-4624-a539-0d89d2994c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83bda9c-67fc-4ddd-8792-efd53136ed4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac7c42b-c557-47fb-a169-a5c1af62eabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "19de6edb-ac57-48d0-bc60-1f3a141423a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c30e479-8414-4378-84df-5177d56ff976",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beed9f6-9f42-427c-ac30-a85d394adff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd14f8a-35b2-46c7-956f-d079031162c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7ec5d5-2c1d-4a5e-8c15-206b30c94b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e94209-6edb-4a7e-9e7e-dae77ddc7938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e5baa6-184c-43d7-81fc-428e9cf1b11d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53e3a43-8797-4044-91b7-9ed85c5642fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d9d84c-b974-4942-9d25-e42553351c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8bd149-3229-48da-8a52-b9972c1e1055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "020a8ffe-b8eb-4c41-a5ad-642ba2199c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600988ca-cae8-4807-8195-80805a7dd765",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d11a1b-9aac-464b-b8bb-4eb21d6b6763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b786a4f-61b3-458c-8996-08466006aeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc03895c-ba10-4ecb-a574-d81d3d1b5bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4527201-3ac5-48f3-a729-67ffef30d82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9967f9-d77e-4ebe-ac8a-70cb61729d04",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117fccd3-873a-44af-80d9-451e708b202b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9081dc4f-7ec8-453a-82da-3a34735f8d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28ff84f-5455-4f48-aea5-a359cd29c462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf25761-089f-44d0-a9ec-5baaf7cb8d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441cd68d-be62-43d7-bd46-d75d5096dc71",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60d1374-2aff-4e99-ba0d-d0b269f6cfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea40d0b-91a0-428a-8bc6-ccdc8f9e3e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5cb1df-a32b-4b77-abc7-ccbae122dfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17757edc-b6fc-4c9d-921c-0d5c02a76543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f77373-8aa2-46b9-bd6e-03b12f930007",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e9ec07-309a-4f54-8e70-c8e66bb9ebc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcd371d-f486-4080-abb6-f0fd5caea9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ca7a3d-e2a3-4c5a-b769-9f89a483714e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be754864-0926-43c9-b39d-992a392444da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b6d2cf-b2ae-4396-bfe9-4a410a32ccf2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90626e5e-dc51-460a-87c8-12703bfe903c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1be947-f6a7-4f34-921c-1173a1ddda61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23f2786-5d09-4edb-a229-b60ccb04c70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc459886-1aaa-4d55-8fab-8f4e58de0607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84e47f3-fedd-4af0-be67-77e317cb6d39",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc16565-e0b5-4d33-a2e1-2b42dc039495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0db07d7-0cd3-4bcb-80eb-060dd1d376f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a026408-43cd-4e25-9c82-f326ff432dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3c4a96-f7ab-4456-9d42-88d3107147fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d64df5-4d22-4c91-8128-e5725c8b205f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca84abb5-1d31-4cd6-b0bd-159e88d5f175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0678f84-0946-4423-97fc-a4cac5b2fb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d4316a-75c5-4ade-ac47-69d4bb5f7d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9334776e-72a2-4baa-9890-5f1b1121a89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7f118b-8c75-4f9d-b132-0dfb0dbb926b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95553ac6-9d03-4d2b-9210-2dca37a5b412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe6026e-6b22-4d1c-a6b9-1a8ae5dd8b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a016b0-066d-4fe3-9aef-e5030f4c4582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bed7f80-a585-4265-b9d5-6a7a3d273f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8225b94-b1da-4265-a9b0-2279a9421cfd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eabd0f8-2e7a-41a0-ae3b-8e0056044dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0520cc49-d384-4207-a08a-455f082a9aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a648ec1c-fa4c-4c7c-a7a4-7989668512f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2a290d-1c85-439b-a94d-ac23b9aad77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05690c9f-6088-401c-beff-b54d878f87f1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84978df4-7031-41c4-85e7-14aa0ddbd8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b3fde4-6927-4e85-91d9-aca7d8ef58cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1953b055-bf3e-4887-9f9c-489bc31a515c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc63aab7-b7da-4e14-8b4c-7a54bf9e98d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86130a68-b61b-4cb5-9fe4-a3ff185971a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ab4957-06c8-46bf-a93f-7959d805795d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8a41b0-6421-4df8-96c9-221f821f2b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad31f697-0a5f-456c-9908-8fe7b0a7cf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d64047-e08e-4504-a934-524023201d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa71a84c-abe6-46f7-9b31-24477eecb6a4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6404b6e0-8b7a-4897-bb9c-84ba9417c99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf9ce82-a89a-4331-bc7e-a527770f1273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885fa759-e4ac-4510-b2f7-ee779fa059cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "609ee44c-0590-484a-9c27-5315103c86d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fdcff7-757f-4a40-beff-26529e0baa12",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a059e26-03ad-421c-b9fe-0bbf0a310be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b6a45f-809a-4f27-8ea0-34ab33337b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab42d97-fa36-4a12-8a79-56c1071ef46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0893c235-d181-4b9d-889d-7b40443c4537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d019e78-4c2f-451d-81ab-87cbacc311fb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d26c57-1a35-4841-8073-33bd2dad1f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea15406-55ad-4b22-89c3-e4100e00d0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25a4676-08fa-4620-9bff-0dc07789a2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b94c63-4ddb-462e-b1c1-aebb2deb834b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8eac3d1-0aae-42cc-a1ca-91e8787839d9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5755d76-ada5-46ed-9f2b-62309da86c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760486d5-85f2-44da-b95f-0c5bc1e41da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07a00de-6b25-42b4-af71-8bfe315a0e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79446fd9-8cfb-442a-849a-b3f8a2abb2be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08286fcd-8b3b-4938-a4ff-00b491d712c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "918f6110-2bb4-4a88-9ff7-835e93722c65",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02361866-61df-42f9-bff6-bdb0d1557fb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f098fc40-b514-45d9-b4bc-792d192a2d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ea862b-0743-4a30-b7eb-c22f53907e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3401291-8681-47d8-8c52-f3498d0a2de1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4488bf31-49df-4c0e-ad9a-52588252ac88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85c97438-7df7-4fca-a542-776dcc51e1e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b20a6b7-1424-4143-8f30-f8bd9b3cbbea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2848111e-60de-436f-99da-9d408d498c91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c17de33-a077-4fe6-b73c-da7250a66191",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82564339-594f-47ba-84f7-7e0ed626d564"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "130e0499-1204-4c18-981b-cf03738fc008",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6172201-2be9-44d1-8620-6ee9150b2d6d"
            }
          }
        ]
      },
      {
        "id": "0ac0902a-0b1c-4aa4-96e7-9912ddf1e6a9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f604dce3-7109-4d9d-b6d2-d0f7287dd8bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93103f2d-bc03-4d81-8bec-b06648fd5c91",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4da84745-e905-47a1-8dee-b6278bdd7463",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e273b6a1-f8a4-4ebe-a056-9f7bcf346c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3e39f7-bc3a-472e-aa5c-2eba8954d449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d52b6e0-54ff-4c66-a7c3-49407e3fe89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cedd4d1b-21e3-4d96-87be-c562bdde8a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4d195c-4276-4fd9-81c4-494eb42c0cf6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61d2265-044e-4378-9ead-23eb5085b54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760969ec-5616-4baf-b817-184c4736b3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d9568d-8f45-4e54-81ec-e777e2aa5479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46d0369a-e65e-4906-a831-813c4fc491e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4d50f6-b071-4ffd-b01b-200f3f11773c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d432e5b3-7dbb-465b-a6b7-28e1c521e512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06097e08-1975-41fa-88c8-3616e9dfac0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aafc91f-9872-48d9-ab63-8e8a6e0f233c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "868aa2c3-b225-456d-a030-932f1be65b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c67b9a6-4345-49d1-b214-ac4bf48d2550",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd75d4a-a5ac-402f-bd7b-62afd29ed620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7bf87a-9cbe-416a-b3f4-e4b4d93559ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a398a11-e462-4449-8824-fc91db3fe626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f374cff-871b-456b-a3fc-1033cc8c8e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32b9c2d-c7b1-4f1c-93ce-c8b8b5bfe5b0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f44a6e6-6277-4ec4-a160-9ef92e4f41fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b836b9-de23-4b9b-9a30-d26f51847871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7633d48-e6dd-410f-a976-7cfb43ab13bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bac1fd71-4620-4b68-b350-8fac6da9ad02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c61755-de0a-47e7-8a32-f23be6549365",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980c158b-b337-4dc4-9992-4136a789dad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb20d461-b806-4b10-a2a2-85de30fb54ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9f2176-4242-4132-861c-16d2b9cbd6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b79610cc-9352-49b9-a52e-147cf0ff0b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fde032-70e6-427a-ae1e-83a0a0e0e0fe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b791d1-21e3-4b27-a254-16af6aba2876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5cea77-a586-40a9-8eda-4c6a974d0536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566a218a-2165-4abd-82dc-82dd59226da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c57cbda-d026-4b66-a1c1-b5135cb88bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e443c438-818a-4f7e-86b8-2fd39c60f1a9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393f63a3-52c4-4bb1-9945-e4f7e2818acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ebd615-8d80-4c83-b1f4-28fc5b4cec85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3697cc19-e299-4dd0-ab57-1cb089b1c786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "911d43b3-4e8c-48e7-939c-9c515cd63169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e81bbf-08ff-477c-ac56-0754cdfcb925",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e8f86a-1e16-4c2d-a529-b4a543b3fea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3227b9-21b6-4234-ad9c-9938278f5c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be1efe6-a480-496a-81e8-f2e14a22ff1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59a73796-73d6-408f-ae8d-5c9074a688c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613e60bd-9876-4a0a-92cb-8de3f9127ca0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b505f3-ffb3-44cb-81df-b26f724a39d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad880e6e-4c26-4d31-ab7f-dde5b8825ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e47ec0-3b91-4618-8ad2-e39115eb7d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fee61ba-f7aa-43ff-a45c-1e9c791caec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0a1963-a5bd-49e4-89c4-0e754f5c57a7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a214faeb-9b42-4813-8bea-3dd18f037617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f62b46f-2a20-431d-b7e2-cf673befb7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582963cf-bd4a-4219-b4d4-d230d72ff6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4df34f71-903d-425c-9eab-086198e0cfe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e7c43a-30d6-4850-abb7-4cd472f6e7e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8cdb4b-f4c7-4299-a6b8-5f6bd232d71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6e8ae5-8593-4e13-b202-9cffff1a462c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bdbddb-7a92-4124-bad2-9c2b56ec3337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41ff44ca-8324-4cc4-9089-c4bc0c2a1788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3c0bab-fafc-4218-9bea-082901318a00",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715bfe16-d515-438e-828f-923d3e71f3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c8ae19-2fae-48f8-8909-5c3dc6aa48e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8404f198-1e27-49f7-ac5e-dc904c1216a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df7d7474-f40a-4284-8c52-4f4f0bbcb9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c529be8b-01cf-4bfc-b22a-4cc79b052eca",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8b3878-8610-4c57-891c-d63843429b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b61b98b-b3ac-45c5-93be-effca5dc73b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a135a8-1255-4dce-9fce-8c8aad87e66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3776ce-2ad9-4fe4-8070-b388a9d8ae47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27cd1cb-cd25-4320-bfca-9e199afe38cd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bf0c4b-b102-4b90-b64c-f25f6e061bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ffb674-3c96-41d3-bb8a-6f9b44e8063e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be32f7dd-132b-4b26-9978-8f7b6045c2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f40ac5-2541-42bd-b954-ebee5ff06efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecbf819-665e-45c5-a950-9ed2480e6f14",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944dab12-46b6-4076-9221-baf345e47e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b995c9-84b1-4a5f-8bd5-b671406bc41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394c6a90-1822-4ee3-971d-31db615b8e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3fdcb6a-c9d7-4faf-9a75-1fc7ac8f58b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86003577-35ba-4bf9-a1fc-6ff740220296",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd72b5a-d269-4e61-bf74-a1eec883535c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0745d4b0-84c3-44bc-b475-c456e51ae158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d96459-ec8c-4724-acaa-1a22bebab2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9eca1d-60e7-4c57-8fcf-63d4607186c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fe7a40-5d74-4ec0-aad2-5ae18f737d7f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28fb04b-063a-496a-83e3-abb184da052f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839db912-0933-48ef-94ec-4432fdd586bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757ee4f8-5196-4c47-8145-3298e3e8cd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4476846-1d61-4353-8b20-c88de49ec728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad46490b-0bf8-4d3e-9ca7-56453788a40b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4875a6-89f8-4733-b519-5296567f877d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50c7202-5146-49e8-9bf8-c7b32928dc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5ac910-b03e-49ac-8d5b-77923ff8f4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0276db5e-da1b-4aa0-93ce-81f65e0b3a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acc76df-b2fa-40ef-bf82-1f54786be6fb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf63b873-c098-4252-a6dc-18fe58410f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476687ab-587b-473a-b007-fb9d3c4f7653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27c364-77a2-41fd-b7ab-a39abb0e32ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f32a6399-38ca-4812-b145-5e41ebd1565e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568af211-b588-46f8-bf88-0c3693dcb434",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec51581-ad4d-465a-bcba-3b6ace0b8e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce85bc88-5fec-413e-9142-73a9625785e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2608ed35-a34c-480a-a152-c85a4998a126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da35e3a6-ac4e-45cb-8dd4-05d78e6ea6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce278a3-eea5-4135-8287-2167ac1cf494",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e8b6ba-5477-4c7f-8f8c-dc71191b9bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfe39f3-e381-4475-9a16-820336f6dcde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1501d8-9566-4cb7-a6e8-fba452f93973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c367bd36-289d-4a0d-9b62-65a776cd956b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88bb0ed-044a-4772-8ac2-29f98b4607cf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1eb696-6bba-4e48-9b1a-0e9107d46362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f4cb7a-69de-4bf6-b519-4bd8cd7fcdd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4d11de-f713-4825-82d0-97c6b448a511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd725c1f-d65c-40c7-95e5-fac6c16f77b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ec4e9e-fb0b-41f3-a446-25a5f3f0aa82",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e88213-8b92-48be-86b2-d846b89619f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0e0f48-a283-499d-9870-cdcc4f5963a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf821cbf-36d7-4885-8b2c-e86c6d1a4948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cff4467-fbf7-40d7-bc7b-5d2f5b775947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f4d50c-359c-40f6-8f16-4b764722d708",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b47ee08-16fa-47ae-9ff2-368a78913da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da900ac4-cb78-407e-bf2e-4dccc93a8203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bad40d7-4404-4b23-9aba-f4820a03bc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b32a75-651b-4071-abba-bcb0450559ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c6a6d0-9eeb-4ad6-8b56-0ebdb7b7e759",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02e75cb-404d-4f62-b866-a463a821b01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923a62e4-6d15-471b-9955-85f5aa6abeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141429e4-bc57-493e-903c-1c2507b59ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa0f14c-a30e-4305-ad6b-91f988f90281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf408fe-8ea0-48d9-af85-c670846252bf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67050fe-0ecf-43ea-94ab-ae57ac9a51a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2246ddeb-bf6b-48d0-bfbe-185bd92a346e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f9d1b0-c92a-461f-9603-26c5fad48a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1823b110-af2e-4f30-b3cb-147d2425c15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42e763d-1e61-4399-990b-17e4f382773c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4477612-3ed1-4efb-873f-d75b3131a4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c0b7f7-cbfc-4b6c-b052-64cd5c6d6381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7dba52-6fe5-40f8-9546-63b4ac0974a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24efbde7-00a6-404d-8097-56a99e1d434a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8ba06f-2cb7-4e4f-aab1-033a99272591",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba72022e-997c-4aed-8f62-ad0c01ad87d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35bb036-d40e-4c8f-8511-6763c1da54d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3ce03f-33e7-415a-9c94-8a872ed2450f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2b73cc-6718-41d2-b21e-6730d6d36c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b23b73-8ab3-468e-b66c-e3cd26770a80",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fc521e-45a0-4b95-ac62-e67ff3ebc09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56e9c8f-4567-4f69-ab1c-94b002776dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8175f63e-db2d-489f-a38c-f990649d6161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af546fe6-1138-4fc8-93d7-720c635bd909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38cee28-391a-4336-ae00-4788959f4109",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ee5b08-3196-4eb5-baef-a30d06613406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992b7011-9d65-45ea-baf8-3dbefb602bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b2c555-b218-42bb-92a0-14bdc1c47403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "342187e4-8f43-4440-b015-f16318c0d2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31260d55-55cb-4dca-ba1c-03cc78db24b7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bb0b2a-767c-4555-bbc5-f7bedf272476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4cba6b-10ed-4d66-8271-003aec3c1b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b7bd15-3df9-483e-b565-bcae5be9dc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8ae411-273c-4161-9abd-b2f3bb54d4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdeb0431-d1bf-472f-8fc5-16e92bd203d2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f78653-4537-47c9-82c8-8386992b8109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b483b6d-0bd8-4a11-a42f-2f2d526f3233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d28003c-5a3a-4d0d-bae5-e8d0a686a196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9e9bcd-9036-452a-ba9a-c54707f46255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc0076f-cb49-4344-acf7-c4129d3d8324",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e294400-e241-4b3f-8084-9e9919901b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5b6ec7-596e-4657-b0eb-b8dea0321f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776490b1-456f-4c6d-bcc4-6c3e05fe340d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30e37ee9-c67e-4ca0-a059-670c129cc5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d599de0-b3c0-48f3-b571-0fb0f7ec63c0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df59d593-7272-416f-acb4-3b477fd610bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f458bd3-c66e-40ee-b32f-9dffb66efd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23655d7c-3fea-4217-bdd5-214d3eda3cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "853efa13-dff0-402e-b037-739f0b5a5b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ffd31f-b354-4ab5-b04a-21f6868c8fca",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8802eed2-0d67-457a-99f3-80a82f548014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66176168-ccd2-483c-b0bc-beb4538a3e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d19e84-3d30-4860-8138-204b4bb1ba6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3aefaf0-a2d0-4245-8a05-4debdd85e123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1b176b-3ab2-4a9d-8669-02353a2f3053",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecaa9e6-00ff-4234-95ec-b0609f8b936b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548b2a38-1edb-453c-aae1-c4ba328c6c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ad15ed-c453-443b-b82f-f5b02bc97896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e591b2-f5d7-4d83-a34c-6818560b968c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b987c84-8c90-4800-8c21-09ab0f66c732",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8448b8c7-ad6d-4bcc-aee1-6829fae8a3aa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da54f42-4273-496a-95fd-4b7a69e62469",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fb618eab-c74c-4639-b275-094c40169480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19eae3e7-fa70-47fd-8bab-2bdf2f402de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "721470c1-33d3-490a-981c-ce885516a3a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3020a301-4b58-44cf-ac73-3487a845368d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9728c30a-11e2-43e9-81b1-c446e1c749f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7373f8a0-2cd1-4acb-8c0b-3be52440080c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c1e1b79-2704-454b-954b-21491dcad0b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52d708c8-307b-4aba-8fe8-3c948213bb72",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a0b96df-f64b-4965-ba44-2338d31fe015"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a88850b1-5f79-4730-9b7d-42385d54ff05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfd7b39a-95ea-4541-bfde-26ca65441de9"
            }
          }
        ]
      },
      {
        "id": "a3442d58-fa5f-46ee-af2f-96de8c983042",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3bdd59ad-f9a0-488a-a7f8-67b6a5b3e72b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3c1573d-a722-4a89-9251-994d2b3d942b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "899eb2dc-a8d8-4fb0-8a1b-3433f384ef03",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7141313-a231-4e74-b8aa-a50c0a19baf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016204d1-3f80-47e1-910a-f37b2f45bad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebca2159-25bf-4b20-84cb-380253125143",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd35c1d6-fa8f-408f-ab91-aac409ad167f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d8ea40-e869-4325-8e07-ec8f23231b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b0b839-cb2c-4d43-9314-2de4a3ab1930",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eed2a4-ae9d-4031-a8f9-cb6ccb5e1929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bc768e-6ece-4fa1-8526-434509b1bc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d57a4d8-cb7a-4d0c-bd23-2f56b8566179",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c078208f-611d-4601-9174-d615da07b647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706a9b36-d59c-447f-b12d-8f6b285b6c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675b9fde-17bd-455b-9ff7-46e5e3001ab3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61b58f5-02a5-427e-8a53-096a7c231218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7589b524-d88e-47a6-b3fd-62e5c2d5f7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4265ae-5050-4a1d-af7b-5b27ada6fd8f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7625fc09-a568-4602-ac94-3411b1c32a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e14ad90-a0b0-4397-b316-a0c13c0c6a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4268502a-2900-494c-ae8f-98e805730690",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3874b387-a2b9-4213-9236-d7b6ed16bb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ad05df-c878-47ec-8e62-37ae3b3c9433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef66558-1734-4f53-af4c-6fadd53cda5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831db754-95ad-45c3-8c21-d5ccb064b905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6f706d-1216-4ec1-b5ad-9a25a65c30fc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551ce938-16ce-4d68-a94b-1b6b958eb2e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccf159b3-14b3-4001-9eb3-4e18e7dd750c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a858622-573c-4ca9-baa3-78c92290e7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c71c34-9dde-40f4-b18a-7b76cde4e912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636622cd-7218-4716-9c5f-67b85d5223f9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2121e771-3f42-4b09-90d9-625425289f50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a812cc3c-487a-4421-b99c-d628b0efecfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed07849-be38-48ab-b841-e855e3ed643d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0424bbf-4e18-482c-a0b1-5c7db64e1a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35ad300-df10-4941-b47d-ea46563e0c7f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2816321b-b749-4824-959f-bd34165a1f90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "affef486-5eef-4d26-bb47-1ba44f02e5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8402482-02c3-43c8-954c-1b245ad3adee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e982191e-cf3f-4557-a381-62a8a874c5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bf131f-b2c9-4f3e-a978-671fcbfb73e1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db1d28d-b490-4f65-ad31-7ab938f84903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc92ed73-f409-4b61-871d-1aa72550dfa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1badaad9-a71f-46e5-806b-975d243ca917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd17aa5d-3a4a-4c67-8e9b-a0e582cee6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20abf8fa-3fdf-49aa-b5d1-630f633e1bce",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223fd267-463c-44f3-8e8c-17331a4ba64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdbf855-6108-4c46-85a0-6cc44aeb170e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b941a3-007f-4695-8dc9-738d2fc5479c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cad17b-7e6d-40eb-be28-014f2e3a48ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275447af-e27e-428c-963c-7f9012bbb9af",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52c0d3b-323b-4a47-8ee8-91cd8897b8c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "383f1b6f-3f07-4bfe-befa-3a0d1ed0505f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5c2694-f6fa-4fa8-ab1a-818183e3d054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be2c4a8-ad7b-47f4-81d6-aa24bfee123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b877462b-7f36-4a68-a8dc-9878ef49adf8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1413dac9-a453-4589-b8d4-09e2ba5ecace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24f8b93-1937-495d-aa21-e363abe5c68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2407b3-fb2f-400b-a14e-1bf36340ee60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa705674-ba77-43cb-b4c3-6f1f97ea8cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b534182a-873f-45c5-8ac0-f2eab04df1f5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d59fbc4-693a-42a5-9e8a-952921f49827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98b45ed2-572c-421d-b8e9-ee10db819302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e280ecfe-91b6-4c5a-898d-2e5037a3742d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6926862-3877-42a4-9704-279d70af1a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a027222-a3e7-4664-9874-59fe1b87191a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5035b3-7cd4-4909-835a-cadc92a8df07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "683749bb-eb04-4d3c-b5b1-3dbb54e1e8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fcd79e-0bce-4aef-b0ba-b3b83d0b018d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b7aeb3-8952-44d2-be81-f929b7e7cc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a239f001-1884-4c8f-a3c2-2e2edbd07483",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4229ac-34c2-4283-aff2-15db024f0830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656265eb-8c7c-4707-90d2-d397e9a003b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09ff343-06cd-4cf7-ad98-5c66c28775c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448e2125-0dca-4faa-a7be-93dfb39398b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335ad182-5020-4286-b904-a127f7a8b7c7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5c27ce-8236-43b6-94fb-54457cbfd2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88f45f6-e032-46e1-84e7-08433c36a817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37a5292-2665-4756-95a0-e232d539df14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b99bd89-bd2f-4dfe-8a78-ff1080b21ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1794b7-6333-4364-ac7a-71c5e34644ff",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336bffa3-476c-4952-a24d-cbf46d468091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed28065d-3d90-438a-9b6d-c6c96b5e0ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90bf5cf-ef2e-4fb2-b62e-0a90b02f59a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc522484-83e3-4fcb-ae44-d439a6e5bb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1dd71d-6653-47ab-be01-8d040deb0d10",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac121599-42f9-4a86-9171-137a83328f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859c0b08-be26-46f7-b5ea-334b96078cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1279a03b-e507-4e56-8555-0c830d65bfdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b7b477-bbbd-4e01-a632-d3e1251492f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6d591f-0ff4-4164-8b11-08b397f431bd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4a41d7-04eb-4315-adff-76fe05bcb8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04df34d6-bd56-4d07-99e5-4bfd1a5695b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e3f2f5-eac9-44ae-9bd2-de251085a617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6971b63-f0f2-47b6-96d2-ad74849e3d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13048fd-ada8-4f65-abbe-9929189e461a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3b506c-6d7e-4e7d-ad0b-67eb2e7d44dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3104df7e-3673-4717-92ff-9b0b7f4c81a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96461931-7110-4fe7-bde0-817e594d1ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480cd301-8f15-4bed-a9f8-32140dd26d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba80f30-4960-4d83-b930-c0dd01a14279",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b37d76-2d70-485a-8434-ad87d47bd670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d3dc9b-c54d-4095-a601-61c2f45b638c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84f0610-2298-4901-b4b8-a4086d7b7cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce6d0a8-d78f-42f5-a1cb-db5f15eb627e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9688e9-5f74-46d3-96e3-ba12090d04a4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946741e1-909d-4a38-b47e-013ba0952d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25510d22-e5dc-4f63-9fb2-84434d952de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b41e7e0-be8d-478b-bf67-614e04d815e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e4fff9-92b2-4abf-9233-6e8accd057a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b091ba6b-26a5-42e7-b1d9-5b023913c234",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7215b164-4cb0-4311-930d-31f5b8097134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd758cb2-95d5-4a4e-b009-c2081f8cdf5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1079cb8-7ea1-49c5-93d5-9083f44f2771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e543dc-59ef-4697-aea5-b2789d75408e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af85446-0be7-4e20-a569-d21953e718c9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354ae559-eebe-4b02-a1d0-c858b552909f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66044c87-db29-4f78-a945-5266b2f870fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eb5151-157d-406a-b7fa-6f0af1099701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc4ddf8-ff3c-48e9-87d5-52b3af04dbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96a27eb-53e9-4420-940d-755076e19bf4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b138266b-1553-4bca-911c-cf4ff8dbeb24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a65ef1bf-2fe9-412c-8628-4765bdf0ad93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a3d800-9838-445d-946d-13ad3b007244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ce44a6-382e-4407-b84c-a49c5bafda07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026d5345-98d0-4f23-97c9-e7cae180d60c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7926d1e7-8d10-4a1d-ac96-b330328a7721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae5d08e-7c4c-4791-909d-e52733bf98fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7c281e-35f2-4a60-aa2e-a4e8d278ee1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82338ca-c56d-4949-a571-7accfdcadac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d36b78a-2661-491d-8714-5bbe09dd4957",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162e8c8f-71a0-40b9-ab6c-e682a61276ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae641ce-ebf0-46db-8449-2c7bb7d012e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9622560-cd43-4e5b-85e4-10d0baff6c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacf783d-1062-4dd3-b5f2-fb886f0e7456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0447c074-6bea-4b52-be04-7929e7a7a629",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c7da61-5783-4bdf-a4a6-9c1e5236ad66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98492528-52f1-4d73-9ba0-f6bac169c2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd689962-f43f-42bc-b237-80514f828ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59068cd8-c1a5-47a2-a2fa-5ded447cc719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d50d94-0a46-42b0-a015-061a789a80f9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f005b93a-1846-49e2-b6ec-7e4b41b4876a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c182ed62-2656-4d4e-b55d-e2f1b7cfd3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e2b4d4-84f5-43f3-a0a1-092429672f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb49481-de78-45fd-b602-d1698e159f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f1f75c-f57d-4870-ac40-e8711be85648",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbe05ae-4dec-447c-8eb2-f68a70dbf0a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e57ab58-c1ae-4516-b3a6-6e8cdb1459ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8f82c5-1913-43ae-af8a-62c26fc92db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a96e1d1-3637-4844-957e-4f925e96acec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b6e06e-a56d-421d-b35e-05853fb331d9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6201dee-7b3e-4f01-ac33-15ebcdc23fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4342e7f-ec52-413a-a731-e12952c426c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f12ac8-04d9-4879-b46c-4975a96c8730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f8d669-0c4e-4270-a2e7-df242387cf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d32dc9-ed1c-4281-9040-4b1dd284b41a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28571dbc-b95d-491e-b2c3-64013c2a9245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a60515d9-ba1b-407c-a7f9-30889a8ab79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c64a5b-311c-4767-9bb4-98ffa3fa1163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e951648-aeee-48f4-b36e-7afbea2bf69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5965fbf8-215e-44d1-94aa-fdbf589c5fe6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db259c7f-6ca8-4696-8884-d218dddf4102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed31b06-dd29-496d-bf35-166a5c6d0648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8d78a1-8023-4416-bf50-27f4b0b0f4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a0f678-dc31-408f-9703-3dc5d6ca7cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aa60c4-118f-4c2a-b4a6-9a665c3ca78d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e18030-fa24-4580-952c-f0f4b6725755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dd1ce3-47df-409b-9391-88ab8ca63f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27feb774-d6c0-4328-9d56-ed3f92b8d6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da1597c-1e12-4830-9ed5-fe397a23a5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365aa150-0287-4f61-bef3-c26cf80c30d8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7620a7ea-1f84-4a11-a05f-8cd9a1e4b3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0659bbca-e4e2-4d68-a4f6-787c42ef7a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428bc1c8-1d22-47f7-aa30-276556b79391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6154edd2-5761-49c3-8f9d-73e7ae6e7d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb64355f-a08c-4310-a20a-8be4d94739f7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f121f12-8f90-4120-80be-f97814091227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ff8d62-b23e-47c5-afa7-110ff24e95e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbcc9ae-f9ff-4a8d-892f-3f4778f0ff2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7327899-217f-4e83-961f-29f0604567aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654df329-931f-4237-b982-c52c814a5372",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ea8c9c-1828-4332-87a8-61710114f06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f871122-9187-4508-8687-001835b015a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4e344b-da44-4968-92f0-9fbbc8d2b968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d3b5ea-f6ad-4be0-a04c-2d2364af6d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188d070b-db9f-4f09-bbf0-a44a76c4dacd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27450ae-d7de-482d-9873-cbd2bbccc587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b989f0-8c3b-437c-b0d4-1f7bdfa81481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd73225e-deb9-4540-b634-6034f459acb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad15fa3-bb93-4edb-9235-ef3cf7c3e316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd07fbe-a762-4737-abb5-0f9d7f7c232f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879678ef-dcec-4c95-b0f7-b69354364bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8c5806-30de-49bb-b949-241ca3c68e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ec8ee4-725b-41a7-bc3c-95787b8c6ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0494a1a-0dc7-4a53-8714-888fe8f59ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb05d93-21a2-479d-a68e-f3ca6199173c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92914148-d998-4507-bf2e-0b395aa252f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e61a50-f118-4a38-af08-cd36d779645c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b077ec79-6856-4709-93b6-4e56f008dd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8892e490-3195-4653-b29a-87a25252959a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68cffcf-a4b7-4fc8-8699-3eba6ed89c15",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f22b35a-b0ad-47ab-80bb-a34457aad124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b26aefd-b95b-42ca-b55b-48f6b96a3fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae4c181-72f0-482e-b627-6a0d33c86e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0442044-2e1d-4599-ad58-ec0689675d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b646588a-720c-4a2d-8951-228722766785",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd374d65-6f49-44c9-bbe3-43d387ff44d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0bc621-383b-4068-8fe4-84a0a71fa915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c68059b-77fd-4afc-8812-6e7ab7e56164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1028b615-f521-440a-9ea5-6163f908402d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221edd3d-e889-4fa2-8d33-13e8bc2b09b7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d3992f-ce6f-4300-87b9-ec26b221343c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316bbdd8-a677-4f5c-b9c0-7c125958a758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5d0448-1660-489e-a627-24b73263132c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b693bd-7acd-448f-942a-976b398f95cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03c46ce-0c56-4cd3-88be-b87778de741a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f84f02-d424-4848-8302-67f90b6ea9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6b7217-32e1-429d-91bf-78e8e3fbd26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f966b1-f388-4fa4-bc06-bc5de0cd5ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a4b3a0-6c06-4d4d-bc22-647d3baa2005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a14a4e3-dd74-488a-baeb-377b2c3bcf14",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f176531-499e-46fe-8ed8-917bdce74d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7849a82-225a-47c8-bd91-4564c9e23d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19bdacd-3aae-46e9-812d-32553c15b389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc8b041-3336-45f2-a783-26e73a48be7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4cf35d-264e-4705-b7fb-21063cb27890",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c9e776-bc86-420f-9b81-6cc663bfa04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac91b0c-b4a0-48fc-a528-a44aa45054a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5c0741-58a8-4b8e-adc6-134668575f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbe216a-f663-4e17-8d93-c44b640b4860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fd3a29-ec12-4a14-9908-cd593a3345db",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f933dd-9ed2-4f23-9cc0-1843bf464364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedf9dc3-8a3c-4f57-90e7-57940f1b183e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "889f8cb6-8d7c-4799-8b87-fc7c13d33d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76093337-0560-4010-b334-d8e8e0b5de41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1de9df-40a0-4840-99ea-7e76cb9eebda",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7692807-a680-494a-b1f5-3747598a0853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8435212-9649-4530-89e8-7f0940b9c1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68341f9f-d1ee-40a0-9aa8-656d7c032b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21dd2735-77fe-4ace-ab79-5ca0f7907929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10edfc14-fe55-4ddd-97d7-c31d7d1515a5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980a8228-7806-45e3-bc99-47aad14644b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acad783-791b-42d0-b3be-39c8c4ad7c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769c6aa3-1fd0-4df1-a26a-d91a4dfeb196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9099afd2-0a61-4412-8a17-9ff0ec24e773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2370ef-25a0-4dc4-a643-487d1cb20e73",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38255142-19b3-4140-8d45-3db2462aad39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50925797-c8b3-4e81-ae49-ac027517d115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef54672-3db4-408e-8a6d-ac164592b27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d94aa3-d748-4300-a593-918c607bb5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6f4013-192f-4335-822e-d1f7a39deb76",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d86a9c-2c0f-4c49-8e07-8b2dd409be25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567f02f6-4c9a-4acc-babf-3f516d7de45e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0446a791-92e1-4fad-a25b-6c51d9ff168f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5569d5c5-99d7-4384-85c9-9a3b6055542e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfaad34-1271-4793-b6e1-174241bd129f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4082b4e4-bf65-4baf-a4e3-3b8a61546e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0a12ad-c105-4587-9d6b-bf42904e037b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14d6661-3d5c-42ea-b52d-d7ef2520c593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5708e45-6681-40dc-9101-8432fd331bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe255ab-e9f4-462f-89cf-5d97484b2004",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c35f0c-304f-48d6-aa76-dbe7004b7249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c80bde8-cdb7-4570-9cfb-8936ccc0882f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fc3f81-283e-47e1-8d83-5c7131a9bbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b697589-315a-4210-af67-5604bd43626b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4fc6a2-3946-4c51-bbc8-fe7e36bbd827",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca5832e-c3bc-458a-9420-a5b114201dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a11fc61-43e8-4264-9cf5-2106c38ba300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c96ac8f-0b78-4931-9ace-5c2872694383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915da9a0-da5f-45b6-a6b1-6f84128eccf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b655d07-ecf2-4e6c-93e5-85cefa2f00ac",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbfc09b-17f1-4196-bdd6-04f65f0ec73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76558fa7-8056-4f70-9726-ea9bc4648202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea6bd06-1a26-47e0-955d-b0fcc62ed393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afe2bd1-cb29-444d-a736-7e492fb5596d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53302f28-9eb6-4bb5-8629-fe61d3db97f8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66dfd2e-9866-4156-96a6-f97b23a33504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40130d05-f421-4106-9a04-2741523d0171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082cc665-f061-4566-b067-57ba302e69e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a87765-6b27-4e21-8afa-e709201a1f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63808bc6-78b1-40f9-b91b-c1365906e0b5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39513118-7d84-4e00-b6e9-0ef72b2e7a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7572d18c-2a3e-4d22-a0ce-351f79ff3078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d500e7-73f1-4feb-9ed7-96eeced78790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec7180c-0d8d-407c-b2b8-88888b089f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf5cd76-1aa5-4e52-a5c9-f4662a2cf8c8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d89e6f2-2e64-45e1-90b9-8ccf4b627405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f211758-767a-4b72-a494-bd65da545096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3b3687-bd73-4d87-895a-5ebfbbdd6806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de14dbc-49f8-454d-8c2c-a276eb01633f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3641085-89e5-4457-87c5-b73b1006a22f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b5f5e2-967b-4760-b8e3-ff54ec03e308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca26ef86-bbde-49b7-8ec8-884bc3832823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4225f9cf-7815-4394-896f-b3c24bc94e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d3648f-a078-4c89-a5fa-889684dbfa6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ff68f0-3d93-4fa1-ad53-cd50a9d23bd5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e1e436-f581-4ef4-a1f3-c977c1af361f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccc662d-05b6-446b-becc-fa1919692f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12b13ab-1442-425b-9c67-d99a511ee602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41b6f68-24a6-4f97-812e-a2df68306f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4290a37c-ae51-4fdc-8f1d-288425c8f083",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d5f824-d730-4747-85c6-d188277827f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7560ceda-b9fa-4194-b3c2-c88c0f896db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75325b2b-fdba-4e87-94b9-76128447702e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4ea9f6-c548-4d65-8e14-36a12cd909b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a83c581-edb0-4053-9710-fe480edf8b41",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e646934a-9665-4ee9-86b1-86ab691111b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3c48a86-6647-45eb-8fbd-09c1ec766b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0d78e9-75ed-4e73-b268-2f5ae95ddf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08486f05-7da6-40be-a5cf-056aca80cd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c50155a-5913-4044-8e36-458a0cc36204",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0949535e-0629-4411-86c3-9b2737b35276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9fb43bd-4b03-42e6-b6fa-27a4c821d8fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5668bed-054b-41de-81c4-107e47aefd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230be10c-d1ff-40f7-b876-396e7bed7978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b845b6-fa19-45d4-9b4c-d87ab3df21f2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbfe3b1-e7dc-4b1b-b967-2472aa72a1a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d850c0-3374-4a22-8d4b-0983a9e66080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44b6ad5-290d-4fe8-8456-f809acf65a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d335d08c-7a16-4814-9723-518bce26332b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aed779-e774-4a74-b773-2816f701385f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269ff61e-fafe-4eed-a3f2-60927a1230e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0792575-e0db-4393-b8d9-9bfef809ae32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fee0c6b-91a4-448a-b929-70fbc79c0ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41eb0fbc-e4cf-4010-8379-2ee23547339f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6074319c-c366-4a9d-bc5c-f606d90c5aa2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864abb5f-8cd1-4b89-a05b-983eaa0b1e01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf8e62a-e398-4600-b958-26b5f7244aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac7e983-cf75-432d-ad1e-a32b95e2b551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104530ce-5597-4df2-8bb0-dd4ef379efe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5b0c6f-f60c-4e26-9158-8643b66bf902",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a264bf3-b0d2-45d6-8dee-70acd232e1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fbee444-aa9e-4aef-869a-043e6c6672d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce8aa28-2ce6-4653-87ee-d608f659c028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b687af01-7f9b-4ea8-b0fa-41fe8645388a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391c15c9-c0ac-4640-894a-a7d47599e6df",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3157846-5d3f-49ce-a5fc-36a8ffe937b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dee12a3b-74e3-4e53-a399-3c7ae1028b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66694ae5-a462-45c8-ae2c-77f8f240fb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3424b928-c1f1-47ad-8453-d1efcd235d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666af72c-f366-42b4-b780-9921cf3d73cc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873386bb-a552-492f-9fbc-1cad24b563a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b58206cf-c906-456b-8807-434194f93d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f02fdc-2c2d-4a18-9681-cea269aea5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb6143e-ea2b-43d2-9d73-11df2a95ee23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4ae373-f42c-48ed-84d4-44d7327d4e62",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1073a79d-cfc5-49ee-9fdd-0256841c8e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ee036c9-7288-4983-965e-e3a7f77f1d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13572918-6540-45b8-ae7e-ee4fd3dc6644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c02595-37ce-4ee7-99b7-5dac9b640242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bec2ed-cb14-4d99-b4ed-5cf0a37fdace",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698f188d-79fa-4de6-a348-0c875da52d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d628eff-01b9-4014-b341-2e185a9da837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9124300e-e6a4-46a4-9faa-2e2cf1caaff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f139db-ccc9-481b-a200-939842bd8005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbae2f6-76da-4f8f-a701-3d9efedc14d4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22919fea-bb97-4a04-ad45-6126c824f794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d818aa8-afbe-4867-ac5e-39b4ebbb6ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dc5361-9a31-4357-aa9a-d1a6f376bf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a573a16b-a988-451b-a825-684487c078df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e363f9e-caf2-414a-b22f-cbe280802233",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4f614a-c681-448d-b9a8-5f5d571384c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7510e8fd-e8d5-4670-9100-409785df96ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d3c94e-3925-40be-a283-a307b1cb68c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aea1e48-997e-4a3c-b435-5acb50738fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078a87ef-644b-4ac8-8d0f-e0ac901a5b9f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dba1826-cbf0-4657-a624-5786caa65fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29654b6-7fce-411b-8212-8a26cf7eb169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ba387d-7b05-4262-a800-c2c0d7081886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e96e78c-781b-42a7-b9bf-af95e52dfb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52428d3-54e2-4822-9e5a-adb1f9478028",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ac5648-1998-4254-83ce-899aacdaff2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6bd9f34-5a86-470e-a678-8317e3f1561a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d8bd8b-8d6e-451f-b819-2f158ca914a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49eac745-0b33-4c0d-b220-477680166a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd0db22-fd95-4ec7-b70d-d35e29e95232",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51839ea4-e9cb-406f-ad51-92cd06ff4530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a574d8df-dd81-4d49-9574-b69a3ab27623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e478040-296a-4348-a1bb-4623e5247a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b425f48f-aa39-406b-a2f9-d63e5c4eb451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c810aca-c1da-4adc-bf1e-8741e4ec35d0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1962ed8d-93f1-42b3-9e4f-6f9d6771da98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f68f4c-86bf-4307-a54e-3b44bfbe2f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeebbefe-06f5-4edf-8ab8-72cb8a700e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ef4d6f-26be-40a4-8a21-79f8fe7e4241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b2b909-965f-4a8a-92f1-ce4503902126",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37c5e08-cee6-473e-b64c-42cad1e5d456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25047ead-bcb3-41a1-b156-3dd8d0ed4b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c10a471-d7ff-4257-b27b-1a23ddfa6840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f40032-570e-49b4-bca4-267974c73376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b8b49c-f58d-4a42-9deb-9445a3caea4b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cdfc65-ad23-4f8e-8d23-ef95b6700afd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e0f787a-26ab-4f12-b2ad-973dd6b17724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7874a87-26fb-4972-9f9b-4713a956d755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58910d7-aabc-493a-9957-bcf657c516e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c847996-0b8a-42cd-9ded-a41d589e7492",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1591ff-3d10-4d7e-9d3e-077ab9e30cbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75bc500-bd5c-4c48-96d3-32e16d324d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc9dab3-57f3-42c5-819d-cda129ae19b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a851067-558d-419a-81ad-047fb24618d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b096dba-148d-414a-943f-40c5165ebfb1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141f3fa2-4e78-4309-872d-c2ae01d62992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebce9a31-d877-4b18-a32c-8e13473a2af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d183dc-4050-4577-b826-bccc074f762b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb921abd-79f6-4bda-93be-e11d06f2079f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ce5e09-4121-4178-8627-7641f7c92f94",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9eefb7-f11a-4f1f-9216-77210ef002c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51909be5-9724-42f2-b4ea-5b6c798c74c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff72e8e0-5285-4b72-aa0d-56dc0ed9e963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef9f931-8e3f-4f64-a597-09391ddd6591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd493e49-9e71-4c9f-800e-e7af78e70f8b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade4a9da-7a4d-4d85-b468-fc9f20d5e5e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad32d038-ea79-4db0-9010-5b6a934d9628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f3d05e-2fdf-442f-af1b-bff4ec748be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcac3e1-a7a3-484e-a91d-1277d5aa75a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47d85e8-00ca-4369-933d-4ff149bb699d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf78873-9a40-4d0d-af7d-d5e3344f5f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0da68eef-8ae4-43c9-877c-fa1e79286411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa79b85-7f42-4190-ba18-dfd4472230bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ff41a5-74a6-4a45-a9b7-78438de49cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361b8abe-0fa4-4f15-9dc3-685c8f38a8fc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70677411-52ef-4059-8d6b-bf80e726417f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d01f96-36c3-4f79-865e-7db5f8abef55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d916a844-30d5-4337-b41c-7fd0a3568237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319d1005-0953-4af4-b6a6-e32fdbb0251d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb95103-75d2-424b-874d-239910329078",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8a44cb-3978-48f8-ab43-14bcf48f4824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b19205f6-d092-453b-a169-7bcd844934b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc411ef0-b7e3-48aa-ab59-73f349891f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb80a52-3ed6-4f07-ad33-e832203d6fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ea9610-b58a-46da-8727-11d1d178f4e4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c6b75e-0f89-4114-bcde-316f98554a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e20a318-0f16-4c94-9fcd-498368f38126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1acf2b-1bb0-44ff-aec0-d54500252d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b161d2-9878-41ad-b157-6cae9ce25225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f413ca-5c73-43a0-b4c0-13f20d1325f5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c17093-81a7-41db-8bce-1cfdc6678621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dbcc849-e75c-465d-be17-0a4b862ee1b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9114bfe-f4be-437a-b90f-197df451ad13",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da4db72-05c9-47b8-b460-c609e80ebb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3492a53-545f-463d-8c53-bdccb9e53247",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c71282-dd98-4695-8c38-452c066d6c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37379a9e-02d5-41be-8706-707d6c8cdb06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3c0365-0ef5-4dee-ae3c-ea19be6e8a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef53ab38-98e7-46ba-aeac-660f09ed5eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16d7dc7-3aef-44db-ae67-5ef016734453",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502c1cb6-eddb-4164-9240-601fd3dcc658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "207b11d9-b4a3-4779-b56b-8b86913c889d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d57834-09e7-4c16-87e8-7107abb5418e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9414093-c78b-47fe-9cbe-e82b7ca03051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e74049e-ca76-484f-90af-e4378e69c1b0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db9219b-7880-4ae1-92fb-880641ff7a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eeffe8f-bbb2-4e66-af4e-17478447bc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e74ec4-f437-41ad-853a-c988d1fbec52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3edcdc-1080-4113-91cb-1cdedc7579d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23b5c91-edac-4460-8c79-5489de5d9b4a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d50cfc-9d76-453e-b4f0-c6c027d1d271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e45e328-7677-4af7-a2bb-4e92d032776f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d26418-e543-43bd-a37c-8f40b575acb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6293a04-0f84-4c85-8bd2-46a0f0aecc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f0fc92-729e-4c5b-9a80-4e9267b0f35c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0318385-3712-4d5c-8536-4070ec622de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0984893-7dc3-4b6b-95ea-062e0f6ec90b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0accc819-c49f-4313-a0c7-e43d72f063e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b895306-5227-4aad-b4b9-05479246dbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71404388-0a64-4d6b-9a76-8c521eba1dfe",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfcb1d8-ccd5-4988-aa1e-873a7241d8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "459e4c9c-57d0-49b7-88e9-5327e8a414d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9555c829-7090-4021-b6ae-a077c67f3f10",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e449ee6-5df5-48e7-8c90-71c9ef822b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea6d923-18ad-44c8-8a6d-d669d7ea8734",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2541a348-4137-4f71-a7bb-178ed36b9c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31260923-6a7b-4fef-8526-b41a26b7c5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8ddaa6-5452-4033-aa40-42bb73e16f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d4a906-4f90-47f4-bceb-964056848171"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5a58188-9fe7-479f-bcdb-3e65306fb558",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "389bee4d-9ff5-41e7-9810-27981a4ecc57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54bdb4b2-29bd-49ae-90a0-fc8945547fa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20df3aba-f911-4ef1-8099-4728b0f999d9"
                    }
                  }
                ]
              },
              {
                "id": "aab45027-a01e-4fbb-aeb0-1b628ce2b4c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a106b560-74bd-4e37-8d57-261374d6af24",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061c4d35-a1c0-4708-8240-b1330675767a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7177ff6f-e8d6-44eb-884c-978f496c7c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceadc999-5a3e-4522-b9a3-397640fe28a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db042f27-5d64-4b0f-aba6-7350622e40ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5389f596-38f6-4caf-9b80-04681fc7de67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d4ca245-c2b0-4c66-9c7f-eada61d171ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e23b75c3-f54a-4bcc-9a24-252dcfa7606d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f6ed7ea-0cf9-4355-8119-e4c0f207e467"
                    }
                  }
                ]
              },
              {
                "id": "d6573b7c-3b43-40f2-89e8-93a789076cac",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f2df5a84-00d7-4dbb-aead-151719c4c6c6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50772e7d-1f6b-4a21-a798-57617e480a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5e0ce766-5619-47e6-b344-7c9a7350c24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b05a2b-73ce-48f6-91b6-4472d221d317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94b9f76-3a22-4c7b-86c9-dfeb03593f4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7a20448-d7c9-46fe-af99-9107ff2b8312",
            "name": "Positive Testing",
            "item": [
              {
                "id": "807b66d6-4244-4e4a-a6c3-28e4b3a64fc0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b4c6f2f-6419-462a-a79d-200803132574",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f0d98022-b7bf-4e12-ac27-67fc162373ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d809e9ae-3ccf-43fb-a58d-449db0a6ba41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc0165ed-ac5c-4c4c-b917-730bd1c1cb3f"
                    }
                  }
                ]
              },
              {
                "id": "5445647a-86f3-462a-89b8-fb0094ca11ac",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3be87160-6ed9-4a99-8329-30b4aa2842a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c597ee10-4a69-4a13-aca5-731d34ff9542"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52cd3971-a6aa-430f-88db-b0f56eb45d13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a08da6af-cd31-439f-bad1-cd307ea8f6bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1874f9f5-57a0-4b8e-be41-7b63f7f3eadf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6ea4c148-37ba-4c6a-8f63-2de9e6590b80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf9c22d6-caa4-4874-ad32-ace3cef24e05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63d57558-d9b2-4ec6-b507-5f14cdc2392a"
            }
          }
        ]
      },
      {
        "id": "b7ac25d1-b335-4704-aec8-a566af8fe051",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "edd424ab-ab1b-4955-90c7-7b895c2bfcc9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c266652-3c22-4e65-8e9d-784cfd89ff34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89810bea-82f5-4bd1-b0cd-647074734d2c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dfebb0-7744-475d-b895-c1f340a60d7f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d1dd55f1-66a8-4d2e-bcd9-bf54d62cb242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61578d6b-969e-4430-b431-66711f33766a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddba2149-eeca-41f2-b9db-6e320aaaa78f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "902e9719-1fb7-45df-9920-896dffab0aed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0f3230a-98a8-4861-918a-43f09d26f1d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3efd213-35e6-47e1-8477-7779c715a45e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "344849fb-50f6-4b9a-90c7-818bb56dad05"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "235e8ad1-1aef-4f5c-814b-1d626679a714",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d9efc524-8994-4ada-acfa-3a7bfe87f009"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "304cc9a8-c75b-4d5d-89a5-556bbec7baa1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01a39dcc-9745-4709-a468-f16cd75490f2"
            }
          }
        ]
      },
      {
        "id": "b2d94e54-423d-46eb-936c-65a0609b9385",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a089a047-025f-4353-b983-371c463ca8a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56c9de5e-143c-4c1d-949e-4082a87374b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d0d490e-0523-404d-8ed2-bdc827cb8666",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9bdc9f-6430-4512-baff-e9a0669041a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b5b8f2d-027c-4832-b76d-e3ca1aff3c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabf9b93-7bb1-4bb2-9c97-126dc9f55c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7087ad21-8cc2-4d96-b157-4f537be60d97"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ace7f42b-fb02-4f98-8485-1024cfd7e638",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0e4be82-5470-4fa8-8045-c3dc67868c77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6bd1609-c27b-4dc3-8f37-cdac11841a75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c52a611-0a4a-4ad1-8e40-d760623ba42a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66b055ee-1fe1-41ad-9f44-f1accb5abf0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "028cf3f7-7b4e-4a58-8840-43275c7a67c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11026d60-6057-4a07-8c04-de15490dafb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67dd2f58-999b-47ce-816c-40b78dffd3a7"
            }
          }
        ]
      },
      {
        "id": "79ab63a9-05a3-4fdd-a793-6a9c013cb46a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c04060c4-5280-4e75-8ca1-521122ddc16d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1f9312a-8ad3-4f4b-afba-1b49b2d10ff6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5b74250-d30f-4cbb-be9b-af33e7548093",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be794312-06ac-458c-a920-4b129ddee1e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a7156a0-2f42-4b04-91cf-6b96abfb4857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51417d80-f0b6-40ac-81b0-79cc8356b575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "833d61b5-ea06-4241-9c6e-eddc2baa208d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca67fdef-6ac6-4382-9de8-f26767d3c9ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "971b0b3a-94c0-433f-ba18-485981407203"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "949a1ba0-5e50-4b71-8c42-c84eff8b1e3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5c55448-f031-4406-a59a-e084b89fe8e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "929b842a-12db-4ec8-b76e-29b33d97c337",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "224ed7a6-e0ef-4a06-8c61-749066460bc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd2ef909-933e-4fea-8aa5-137bb93d6287",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b414f1af-b60f-4780-9efc-d915b88a70bd"
            }
          }
        ]
      },
      {
        "id": "9ffb36e2-d66a-4526-a61c-d4e1d7161378",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1f6171d-4565-4339-9bb7-5647d6895d80",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e84cb695-57c7-4bf3-96b6-8d4b8fba7295",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2fdbaa64-f5b9-4c8d-a609-d2261dad086d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d03cce53-263e-405b-9853-858b3545416c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c3016e3-ae52-4e0f-a396-100a0c3bc845",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 247.22887323943667,
      "responseMin": 9,
      "responseMax": 6889,
      "responseSd": 437.16086301526514,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690591103509,
      "completed": 1690591187229
    },
    "executions": [
      {
        "id": "f006de09-fda6-4352-b87a-b8c60d2134da",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "04907e15-9005-48cd-a4ec-3d45b7f8e57e",
          "httpRequestId": "45028738-ef36-4c7e-98ac-add643e380fd"
        },
        "item": {
          "id": "f006de09-fda6-4352-b87a-b8c60d2134da",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9503695f-720a-4ed3-b0c5-6d511a63edb1",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "26d87fe6-1a3d-494b-8e8f-05071be84c63",
        "cursor": {
          "ref": "2f612240-1e5b-4a51-b84d-f15e5695705a",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "10acc363-9112-4f47-85ad-3a73c5ab87f3"
        },
        "item": {
          "id": "26d87fe6-1a3d-494b-8e8f-05071be84c63",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "50a6b432-0852-45aa-b824-251b5d1238c3",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "f7660ea3-abdd-475f-99fb-ec4643ff29b1",
        "cursor": {
          "ref": "15431030-15ad-462a-bb44-74a4aaed87c3",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "85c2edc4-bc52-4634-8c18-f16bcc0c9142"
        },
        "item": {
          "id": "f7660ea3-abdd-475f-99fb-ec4643ff29b1",
          "name": "did_json"
        },
        "response": {
          "id": "14d2bec9-b18b-4805-8088-bed8e861cc57",
          "status": "OK",
          "code": 200,
          "responseTime": 1493,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e94b47-d9d2-4e15-9be4-e50a6688e2d8",
        "cursor": {
          "ref": "c9820c6c-7416-45d5-9360-bc9239fc651b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "259d8c8c-b799-427c-84c1-6b0df0f0e678"
        },
        "item": {
          "id": "d6e94b47-d9d2-4e15-9be4-e50a6688e2d8",
          "name": "did:invalid"
        },
        "response": {
          "id": "f92c755a-cf41-479e-b2a0-ffc3aaca9af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e94b47-d9d2-4e15-9be4-e50a6688e2d8",
        "cursor": {
          "ref": "c9820c6c-7416-45d5-9360-bc9239fc651b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "259d8c8c-b799-427c-84c1-6b0df0f0e678"
        },
        "item": {
          "id": "d6e94b47-d9d2-4e15-9be4-e50a6688e2d8",
          "name": "did:invalid"
        },
        "response": {
          "id": "f92c755a-cf41-479e-b2a0-ffc3aaca9af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f637814e-5e74-4ef8-8a8c-1594441422f5",
        "cursor": {
          "ref": "03ef0b81-4812-4338-a673-7692335f58dd",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6059ff1d-110a-476a-8bcd-eed40a78c40b"
        },
        "item": {
          "id": "f637814e-5e74-4ef8-8a8c-1594441422f5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "215000e5-08a8-4dff-a491-c7919ff00f33",
          "status": "Not Found",
          "code": 404,
          "responseTime": 406,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dcf5b1-6e67-40c5-90a1-6e5554e84e06",
        "cursor": {
          "ref": "b0a6d3df-7564-4f7a-84f0-f10f1f5c6e2b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ab59e1ec-5ed6-4578-9c3c-bce4ec711257"
        },
        "item": {
          "id": "27dcf5b1-6e67-40c5-90a1-6e5554e84e06",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "de342f49-0d4f-42fa-bada-cc5ba07616f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 288,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462fce20-4a2d-4d22-9768-c8dbfe91b6b7",
        "cursor": {
          "ref": "6a626738-616d-40b6-aa07-9e6137422247",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bfa2df4e-9ab8-4cf2-aa4d-cea8becc4563"
        },
        "item": {
          "id": "462fce20-4a2d-4d22-9768-c8dbfe91b6b7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "941791d3-e1d6-4882-be66-ecb1e85aa699",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f9e05c-e488-48f4-9690-2938cba254c8",
        "cursor": {
          "ref": "19f9ff72-bfdd-43b9-88fe-55abf067e842",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3ae002eb-5efe-4d1b-9f1b-11e0c0e14685"
        },
        "item": {
          "id": "54f9e05c-e488-48f4-9690-2938cba254c8",
          "name": "identifiers"
        },
        "response": {
          "id": "eb5635d2-a673-4ef3-8a0c-e1a9047e5296",
          "status": "OK",
          "code": 200,
          "responseTime": 1311,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f533555-5125-4e70-9455-3cf10db5bfb4",
        "cursor": {
          "ref": "b6b50438-6693-4719-b12a-c97975780d08",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a890c74a-d2bc-4869-a5f0-471c4151145d"
        },
        "item": {
          "id": "5f533555-5125-4e70-9455-3cf10db5bfb4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0e645ae9-5e30-488e-bff2-0a6ae2ee30ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184eb3a9-2cb8-43ec-840a-a476aca77c90",
        "cursor": {
          "ref": "3f27f2b8-fcbe-44f7-9323-f4396948ef86",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f31a4933-d4ac-4bec-8323-a8990a9641d1"
        },
        "item": {
          "id": "184eb3a9-2cb8-43ec-840a-a476aca77c90",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b012aa5b-28e2-4b63-b274-0838bd836105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60113aa8-627e-4c22-88fb-4ea33a42a862",
        "cursor": {
          "ref": "199d95d4-9243-4354-a3e6-eccfc8fc2d77",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0fece6bc-50ab-4ed2-8714-e5e42bd687f1"
        },
        "item": {
          "id": "60113aa8-627e-4c22-88fb-4ea33a42a862",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2bbe1434-5ae3-4522-9c31-dee01128d4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3894e50d-527d-4ca5-8742-6109202c5434",
        "cursor": {
          "ref": "259f874e-b73b-4fda-bfa7-bd776c1ba569",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8ab95f38-5eeb-4f22-84fa-be0f07dacbd0"
        },
        "item": {
          "id": "3894e50d-527d-4ca5-8742-6109202c5434",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "37480645-e407-49db-8961-9ed6b59ccfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984cd4e9-a588-40d4-8f15-d15ef4484aca",
        "cursor": {
          "ref": "a77905ce-d94f-4a13-96ab-b22e874fa50e",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6af623ae-e83d-44fa-9377-3ce0af33e88a"
        },
        "item": {
          "id": "984cd4e9-a588-40d4-8f15-d15ef4484aca",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3007305d-0283-45b2-bea1-9a0f18bdc144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacf13b9-0533-4880-bc2c-5d763d77036f",
        "cursor": {
          "ref": "2788eefc-58a2-47e9-ada8-03602820a5c4",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d4912d88-fb1b-4c7f-b982-3d370af5c2a9"
        },
        "item": {
          "id": "dacf13b9-0533-4880-bc2c-5d763d77036f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "018e0b83-e304-4d5b-8e2d-3854c83ca1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cafe414-5ca1-4bb3-8ed1-520d9e5a7303",
        "cursor": {
          "ref": "a7138fa8-7258-474d-bc7d-49a006d6025c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b4709bbf-24ba-44c6-96bf-e4b3cccaae96"
        },
        "item": {
          "id": "5cafe414-5ca1-4bb3-8ed1-520d9e5a7303",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f2659938-fa45-4d16-a174-8cd056f62bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09701530-c1fe-44cc-b544-646e2b6dfeff",
        "cursor": {
          "ref": "10b5ffe3-1eb9-45bf-b2c6-124ff2f343ca",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "02c3367d-c3e8-4c1e-a245-bf805fdb875a"
        },
        "item": {
          "id": "09701530-c1fe-44cc-b544-646e2b6dfeff",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7e785e2b-0c3b-4f13-89e5-bd84aa3f5b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d585dc7b-b33a-40f9-9fdd-23a4b2ae4c17",
        "cursor": {
          "ref": "5b7b3390-2f65-420e-894e-6e5077ecc023",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2d46ffa7-150d-489b-a031-eab1664cb99c"
        },
        "item": {
          "id": "d585dc7b-b33a-40f9-9fdd-23a4b2ae4c17",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4d180eb4-53a3-46cd-9a17-3fa78fbf71ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930176d4-b214-4050-8595-297bda0e4bc6",
        "cursor": {
          "ref": "d84c90a5-0abf-4da1-b60d-0250e15f6db8",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "593cd80b-3617-45ba-a00a-112681c95af6"
        },
        "item": {
          "id": "930176d4-b214-4050-8595-297bda0e4bc6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d5384696-a7da-4c2a-8f88-ee590cd5f97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab9750c-9a52-48f0-a3d7-6c84f4c2c02c",
        "cursor": {
          "ref": "505f2025-c182-4e21-a4c9-cb970c7294e4",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "264cc937-a94f-4db9-a1d1-f34f0ebda836"
        },
        "item": {
          "id": "bab9750c-9a52-48f0-a3d7-6c84f4c2c02c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4ce0a69e-d87c-4cfb-a62c-80c18f51fd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97045f5b-c28a-49bd-afa4-5e64435f270c",
        "cursor": {
          "ref": "74d12894-79b8-4825-a304-5dd70fe3351b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "29ca70f0-922a-4ce3-a9c3-81ebb4098979"
        },
        "item": {
          "id": "97045f5b-c28a-49bd-afa4-5e64435f270c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1f1298d7-ec97-4601-bdd4-2309ff10ac37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36d111d-32d4-46db-97d3-d6d6c865f76a",
        "cursor": {
          "ref": "38695d46-ab8d-418f-8ee7-5b8d3e99c1a9",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8d35657c-2677-4bee-9af0-982eb2bbd249"
        },
        "item": {
          "id": "a36d111d-32d4-46db-97d3-d6d6c865f76a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "714ac454-a304-4143-90ab-8e0e85828b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ecfbf2-7562-4938-a462-92297383ad82",
        "cursor": {
          "ref": "0cddad25-df24-4fe0-951f-c4f302d6c8b2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "689458f1-3d4a-425b-9190-fd6f7df8702e"
        },
        "item": {
          "id": "16ecfbf2-7562-4938-a462-92297383ad82",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "39feb1f8-ff3f-434f-8b8c-b839f68b8c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7ffd40-1e95-41dd-9572-5515af55014b",
        "cursor": {
          "ref": "abc96239-6edc-4c08-8069-29c7eed3070d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4476695c-a95e-4501-8c8b-2612c6199b45"
        },
        "item": {
          "id": "7c7ffd40-1e95-41dd-9572-5515af55014b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7b48027a-de4c-49f3-aaf1-442ead692b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce70a37-484b-46d2-a5bd-4a5767899c88",
        "cursor": {
          "ref": "85ffb351-d091-4966-949e-c6ae2ca0e6fd",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a7dded8f-3ba0-4b10-8311-7297e2c40f4d"
        },
        "item": {
          "id": "3ce70a37-484b-46d2-a5bd-4a5767899c88",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "71e46d77-888b-4271-b47c-e1ec2c7c7d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8543985c-b3e6-405f-b8f9-46595300d577",
        "cursor": {
          "ref": "29336312-bf43-41f8-857b-c6fad22b1655",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d6165428-b1fa-4544-91e3-2f0b5577c2c5"
        },
        "item": {
          "id": "8543985c-b3e6-405f-b8f9-46595300d577",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6fd2eb20-6ae9-4f4d-899c-f598149be223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db95fa42-9200-43a9-9ca1-7e66659e6402",
        "cursor": {
          "ref": "3825689f-22b1-4579-ad6f-00234884a546",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "51ea3159-6d77-4012-b837-f308e9ed886e"
        },
        "item": {
          "id": "db95fa42-9200-43a9-9ca1-7e66659e6402",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5d6c66a1-a24d-47b0-940a-a0c588a504de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44233a31-093b-424a-afd5-d0bab663064f",
        "cursor": {
          "ref": "99e73d56-380f-4c26-b61e-86b475ce8b8d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "51a16a6e-db63-4187-bd64-1b3709ca33fa"
        },
        "item": {
          "id": "44233a31-093b-424a-afd5-d0bab663064f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5a9a6cda-8797-4fb0-aebe-c679aadd13d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1deabcbb-d59c-4d69-88e6-24e779c71277",
        "cursor": {
          "ref": "ae4e753e-6c5a-4513-a5cd-37eb1ad8b2a2",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "844c0a4d-ccaa-43ce-b19b-39ae5acf8e63"
        },
        "item": {
          "id": "1deabcbb-d59c-4d69-88e6-24e779c71277",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "105a0793-ad82-434a-b49b-c9460d33d900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691ab862-0932-4aeb-983c-7e3a547a24fc",
        "cursor": {
          "ref": "cad1e1ea-5177-4fcc-ae7a-c3f59c0329de",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7a979003-9c02-4ca9-affc-16df8c71f0ea"
        },
        "item": {
          "id": "691ab862-0932-4aeb-983c-7e3a547a24fc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0d24693a-13ab-4c25-8bb6-b9a8ac555a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fb1fb7-d84b-4d9e-96d2-22982137507c",
        "cursor": {
          "ref": "0c191e21-1aa3-43c5-81de-1d7ea2f10209",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e59e5d3c-8bdc-4082-84e6-604a26197f51"
        },
        "item": {
          "id": "59fb1fb7-d84b-4d9e-96d2-22982137507c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8d8fd193-6180-49b2-a5d8-fcb737e76c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103585cc-5e83-4359-a3f7-b81e1ac8e3ec",
        "cursor": {
          "ref": "2c41ecf5-7a2d-44e8-94bc-db1981879bd2",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "388b79f1-7409-42a6-ae74-52e8d04ec671"
        },
        "item": {
          "id": "103585cc-5e83-4359-a3f7-b81e1ac8e3ec",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9013b4b5-2f60-44bc-828c-6704db85da25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ef26a7-7f09-4446-a0c0-8c4305fa903e",
        "cursor": {
          "ref": "db5acd6c-9186-4d95-ad47-f57a354582d3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3707f8f4-32c8-41db-93b5-fea808b0c596"
        },
        "item": {
          "id": "20ef26a7-7f09-4446-a0c0-8c4305fa903e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "97362008-65da-4587-a137-8218196c4744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e0a2e2-9c23-4ae6-b556-ca352ceef130",
        "cursor": {
          "ref": "c379d6b0-f78f-4aa7-b3e4-ace5739bcc42",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7b3645c0-0d50-47f2-b5bb-c5be89135f06"
        },
        "item": {
          "id": "00e0a2e2-9c23-4ae6-b556-ca352ceef130",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e4f43a20-0a30-4a41-b9c2-52d72d4f156a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933c6167-b85d-45ef-8317-dc918ce4166c",
        "cursor": {
          "ref": "5d86515f-af21-42a5-9534-b0c0e3bbab82",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e97de063-cb42-407c-8dd2-bc3dc0c0bbde"
        },
        "item": {
          "id": "933c6167-b85d-45ef-8317-dc918ce4166c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bf985c53-6ff2-4ece-94c0-ab4729e7622f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e914c739-555d-4c0c-91d3-16ffc59237db",
        "cursor": {
          "ref": "6e07fef6-cef3-48f1-b125-1349154f5e52",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "db35d6dd-f760-4cdf-8655-1c75e5d37d6a"
        },
        "item": {
          "id": "e914c739-555d-4c0c-91d3-16ffc59237db",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "769fd122-bdee-4293-a18f-4c977ae597a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3d987d-3a14-418a-bc2f-d03c8553219c",
        "cursor": {
          "ref": "a9bdb054-3cc6-49b1-bfe3-c484f9314b30",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e4fd0264-28ee-4dcb-94f1-aec3be6e3de8"
        },
        "item": {
          "id": "da3d987d-3a14-418a-bc2f-d03c8553219c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "155bf86e-1590-458b-a008-a5dffe7be2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a362d51b-b9b7-4675-a190-c6d6696cdbd1",
        "cursor": {
          "ref": "e778e9bf-3e6d-48d2-8e4d-c1c84775519e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d119e68e-702d-426a-a0ea-fbb233abcc51"
        },
        "item": {
          "id": "a362d51b-b9b7-4675-a190-c6d6696cdbd1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "688a474a-e7ae-4324-b5ba-dbdbc284055d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06103401-b347-40e5-9a90-eb936e108db2",
        "cursor": {
          "ref": "fae17425-bff4-4949-9cd7-8336dfd7cf77",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "166e57d8-59b7-4f7d-a867-989e5e32b3c1"
        },
        "item": {
          "id": "06103401-b347-40e5-9a90-eb936e108db2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dc8f0dca-f7fb-4272-a5a5-11ada26709d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890fce76-2e7e-4116-a842-479ac76e0779",
        "cursor": {
          "ref": "cff3ffeb-6e3b-4285-92bc-39e0a663669d",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6df307e7-da92-44c8-b4d7-8c1f0c59865a"
        },
        "item": {
          "id": "890fce76-2e7e-4116-a842-479ac76e0779",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "396966a2-0d65-495b-9277-609337b8d54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a976e2-2eaa-4648-a9b1-af89087d34b2",
        "cursor": {
          "ref": "b1c17467-ad83-4751-902c-320dcaf2be50",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d3a6667d-c448-40ce-a6fe-466192ed83d4"
        },
        "item": {
          "id": "92a976e2-2eaa-4648-a9b1-af89087d34b2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1157d683-3bfa-4417-a4c2-d1f4796a2674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12484019-9b4e-43fb-80e4-a6a0f2a814d1",
        "cursor": {
          "ref": "f6ac725e-5b53-4f77-8b74-3363d4ee5e6c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e3547495-9fac-4eb9-a9fa-c023178a7e05"
        },
        "item": {
          "id": "12484019-9b4e-43fb-80e4-a6a0f2a814d1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "716c645e-0bb2-40b8-bedd-bc9382beab59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26083cc6-2bac-4171-b867-977d19f93e91",
        "cursor": {
          "ref": "33383c32-2044-43e3-82bd-9a823c5f37cc",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "18785fd3-2615-47c2-b55a-f5dd6cd6a99b"
        },
        "item": {
          "id": "26083cc6-2bac-4171-b867-977d19f93e91",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b4a466c8-e229-44cb-9d50-e74ece088e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3860e709-9911-4581-ac30-13f8c9655983",
        "cursor": {
          "ref": "5753d0ca-fec7-4c60-a43e-d8dc9950e167",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f7859eb1-2cbd-478d-9e19-9b0e8f143527"
        },
        "item": {
          "id": "3860e709-9911-4581-ac30-13f8c9655983",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2f9bd939-ac61-41b7-be28-2d7dbd30a9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7961efbd-b8a8-4f23-9d7d-576f15d4cb21",
        "cursor": {
          "ref": "52f21a69-5927-479c-97ca-bbd819ecfda6",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1b85e8ee-7e35-43ca-8043-5f72980f519d"
        },
        "item": {
          "id": "7961efbd-b8a8-4f23-9d7d-576f15d4cb21",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5a7e9091-220c-4788-ab76-658de4c3c6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb77d88-cc1d-4ae7-adc9-cc813a84e063",
        "cursor": {
          "ref": "a455014d-8ab8-4abe-a41d-8016383f76d3",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "52ce4923-5e38-4e00-809d-75a8b1cb06c5"
        },
        "item": {
          "id": "ffb77d88-cc1d-4ae7-adc9-cc813a84e063",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "63d612f1-54e1-43ba-88df-1cf358710839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2c2df7-02b3-4783-831f-c86b8af2ab71",
        "cursor": {
          "ref": "5fdb123a-f0ec-4e67-848e-4e6de316f3dd",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "07246412-4588-4bd2-991f-c4aa2841ca2b"
        },
        "item": {
          "id": "eb2c2df7-02b3-4783-831f-c86b8af2ab71",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8fab3cb6-c074-4725-ab0d-d9ac69aa4cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82cbc8d-9c4e-4370-a948-2e4f666933e4",
        "cursor": {
          "ref": "e380cbc8-321a-4f9f-92b6-866414e6afde",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a5fb6e68-c4b6-43dd-96f1-93638cae29dc"
        },
        "item": {
          "id": "a82cbc8d-9c4e-4370-a948-2e4f666933e4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f74a1d8f-fa45-483c-9b07-267a50ab6c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4879e76-708b-49db-9a7b-a14da2fe7bce",
        "cursor": {
          "ref": "a7452a16-c476-474a-8a16-fe659de00514",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f8c2891b-274b-42ac-8c85-ba638e568634"
        },
        "item": {
          "id": "e4879e76-708b-49db-9a7b-a14da2fe7bce",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "98a46063-0937-46d4-8370-cabc0e4e319d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e46a030-f055-42c3-ab15-ac66823248ba",
        "cursor": {
          "ref": "45963465-39c4-4784-b350-ea946790d680",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d4856d5c-98e8-4b78-aa7d-327f0edd048b"
        },
        "item": {
          "id": "1e46a030-f055-42c3-ab15-ac66823248ba",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5f6162a9-9aea-4742-9841-f5391472763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfa4b1e-735c-4dd3-b40c-673523e7fa48",
        "cursor": {
          "ref": "3bbec76c-fdc7-4ea1-a879-46e496f04880",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "57f9188e-1470-466c-a831-07edb61ff8ca"
        },
        "item": {
          "id": "9cfa4b1e-735c-4dd3-b40c-673523e7fa48",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "261b6e1c-ed4d-4ac1-bd12-f52b6f488fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5cce9f-bd53-4379-b26f-a24e30be96c8",
        "cursor": {
          "ref": "16659c58-fc38-43f4-8b2b-08a065d09899",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d005d6cb-6a72-4cce-8509-c41a3898421f"
        },
        "item": {
          "id": "2d5cce9f-bd53-4379-b26f-a24e30be96c8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2d1189c6-75fc-4979-9279-19d325e1ee04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c491f2-048f-4e2d-a374-a2966cdcb975",
        "cursor": {
          "ref": "5e704794-f142-4a93-8ce3-420cf40921d2",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b0b63ba9-fdd5-42c8-b17d-e88a4760f188"
        },
        "item": {
          "id": "71c491f2-048f-4e2d-a374-a2966cdcb975",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "df484a17-3f34-46ae-b92d-c0779ee03a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e10a2bd-d7b8-4605-8b8d-54b59ae2949c",
        "cursor": {
          "ref": "5a6f0355-eea9-4046-9ba3-e5fe007f10ce",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "00dd47c8-aeca-488e-8b32-93bad1f40f22"
        },
        "item": {
          "id": "3e10a2bd-d7b8-4605-8b8d-54b59ae2949c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "83e1fe2e-686b-4c24-a57d-cf55a2338a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c54ce5-9d57-4745-a473-f17a19e81dc5",
        "cursor": {
          "ref": "fc3fd7ce-1d25-42d9-989f-3d121e572489",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ba09abb3-7537-4e71-85ca-7ffce310d02f"
        },
        "item": {
          "id": "04c54ce5-9d57-4745-a473-f17a19e81dc5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5474cf6a-8b56-46b8-87d7-f781014ec9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d61575-a532-4f72-8b35-40ab9142cce9",
        "cursor": {
          "ref": "dacb7777-8ca4-4693-bcd9-36dd562ec5a8",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4ce8f2af-8ecd-4c5e-8ef3-24e6778f8ab0"
        },
        "item": {
          "id": "31d61575-a532-4f72-8b35-40ab9142cce9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "29cb22cf-3dce-41d1-b57b-5cbb7d360e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f801afbd-877c-4e26-a430-584a7dae442d",
        "cursor": {
          "ref": "341fec01-e79f-448d-b203-274b525cb136",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "097c9b65-99e9-489e-99ce-e1b8cc8d9c48"
        },
        "item": {
          "id": "f801afbd-877c-4e26-a430-584a7dae442d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3fae8ed7-d889-431d-8ff0-8aa7a44c727f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51f1cc6-e84c-470e-b01c-eb2202c75c20",
        "cursor": {
          "ref": "b7e0ce2d-63fd-4007-a21b-9a8ddb95cdbb",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "acfd805e-662b-4778-baa5-f189015ca748"
        },
        "item": {
          "id": "c51f1cc6-e84c-470e-b01c-eb2202c75c20",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "aeb6b81c-abc7-4fce-a355-517666854ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bc1ad9-6ec8-45b5-aac6-c3bab5dec1d9",
        "cursor": {
          "ref": "d8da1213-172a-46ea-86bf-ae20a6ab3c52",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e59afe93-e022-414b-b277-ee8966e32786"
        },
        "item": {
          "id": "39bc1ad9-6ec8-45b5-aac6-c3bab5dec1d9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "929fb6e0-602b-4ed9-8c97-6f51d4853607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ff863c-0b7b-4c69-a193-bb0f5af4d722",
        "cursor": {
          "ref": "24612998-157c-4289-8632-1e4207dafd87",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1a381074-5cb6-42a7-ad19-2fb92342b8d9"
        },
        "item": {
          "id": "a2ff863c-0b7b-4c69-a193-bb0f5af4d722",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f729e6f0-7e4f-4361-9591-094d4833ddc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a9a743-9792-46f9-ad36-a2cacfd06e5d",
        "cursor": {
          "ref": "002f6031-69fb-42ee-a3f5-600a21ff7316",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "223d091e-445c-4c0a-a45d-f439ec16ad32"
        },
        "item": {
          "id": "96a9a743-9792-46f9-ad36-a2cacfd06e5d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "608b38b0-7b33-4b07-a89e-03c0fb630e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f55ab71-7642-43dd-b7c1-12fa24700a2b",
        "cursor": {
          "ref": "451c59df-f7a0-4468-a683-b595d42e0cc1",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "65d82624-2a73-4a26-9e82-e2b47d4ef7e7"
        },
        "item": {
          "id": "7f55ab71-7642-43dd-b7c1-12fa24700a2b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e104cedb-49cf-47f3-9ad8-70ab75167d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8fc4f6-2a95-4f99-b30d-97c0310db4f2",
        "cursor": {
          "ref": "12985a50-1679-47b8-b122-18b492e31491",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "19d057ba-d6e8-44a1-b7b8-b55b0fe8441a"
        },
        "item": {
          "id": "ab8fc4f6-2a95-4f99-b30d-97c0310db4f2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5ae014e0-087a-4047-9519-26a1bff7aadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d73d0b-3951-4f52-929f-72945c3df651",
        "cursor": {
          "ref": "e8497948-a467-4ec0-950c-d3ff796d27bd",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0d041bef-1391-474d-83be-0a6484302624"
        },
        "item": {
          "id": "54d73d0b-3951-4f52-929f-72945c3df651",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fa56d8a5-64d2-463f-a915-38233a6ed8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71999fcc-3612-42e0-acb9-1f1d2dbd1f42",
        "cursor": {
          "ref": "a9424bd0-dc77-47d1-b3b1-c12e36b921a4",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ac106692-8e0d-47cf-b89c-aa6cfd6aad23"
        },
        "item": {
          "id": "71999fcc-3612-42e0-acb9-1f1d2dbd1f42",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6e0a8d13-b702-4420-bde4-8d221cd387a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028b0f38-dbd0-47d1-af24-b0951930d1cd",
        "cursor": {
          "ref": "49801e2d-754c-4e4e-a6d5-226a62539438",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8242dc84-5563-43e7-b722-42c777f19e89"
        },
        "item": {
          "id": "028b0f38-dbd0-47d1-af24-b0951930d1cd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "39ab23e5-10af-4f6d-aca9-c12df3285295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0cf860-c671-40a0-9cba-e5851c8aa782",
        "cursor": {
          "ref": "f57d5c60-5ba5-40a2-80e5-136594cf652e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b522684c-0b8d-4241-b24e-42ddcfcce39c"
        },
        "item": {
          "id": "ef0cf860-c671-40a0-9cba-e5851c8aa782",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ab7e8efa-666a-43cc-a3e1-598167cad97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6039004-f384-4180-b56b-647d72706987",
        "cursor": {
          "ref": "71b0d259-a362-4f45-9137-a36db47c1cd7",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1509431d-b387-4dbb-8464-c99e3c46ae3f"
        },
        "item": {
          "id": "c6039004-f384-4180-b56b-647d72706987",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "019773e7-62b3-4866-96d8-a8c39cf7fc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb8defa-cbce-4350-a633-695131ffb7ec",
        "cursor": {
          "ref": "c08af27d-b7db-44a8-8020-87ab13d746a2",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6db1ac40-e209-4549-aa45-7b6096c099ec"
        },
        "item": {
          "id": "4fb8defa-cbce-4350-a633-695131ffb7ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9499daeb-0f02-4d6d-a7dd-59e04fbe873b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36941f7a-4bc6-4fe1-a2b2-2d1965586d0e",
        "cursor": {
          "ref": "81dbed2b-e97e-4cc7-b111-cd34f7603579",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "971bd69e-dd58-4484-8059-38bbc52ea2ff"
        },
        "item": {
          "id": "36941f7a-4bc6-4fe1-a2b2-2d1965586d0e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3a124b55-feaa-4527-a5b5-cc379bc8166d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f280ba-6f36-41e9-b3eb-83f7f67bd8c5",
        "cursor": {
          "ref": "b4330475-c4ae-4988-ae43-26aa269d2050",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "07cf3594-ab54-436e-b27e-394430332e26"
        },
        "item": {
          "id": "50f280ba-6f36-41e9-b3eb-83f7f67bd8c5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d672b427-5802-4a17-9ed5-237378b794a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762cf4aa-e160-4385-9e6e-657ecafa7a56",
        "cursor": {
          "ref": "8cda73e0-b34f-4d45-ab65-27d8d1a8065b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c52b1c7b-5b9c-43a7-bf65-48599cb8c61d"
        },
        "item": {
          "id": "762cf4aa-e160-4385-9e6e-657ecafa7a56",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "83ff2f3e-f32a-46bb-a566-3a4e34f7e55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d275585c-c0e6-41d5-9e0b-4b1b9701492c",
        "cursor": {
          "ref": "78d5c813-3489-4bcf-84fd-775d21537d81",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "39d11b45-b8ce-42e2-b9f9-5cf936870f7b"
        },
        "item": {
          "id": "d275585c-c0e6-41d5-9e0b-4b1b9701492c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e27bf60a-9d94-46f5-99fd-89cef5b04dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcf3f17-3317-49e5-8b95-7f01b026f2d7",
        "cursor": {
          "ref": "0724be64-963d-4909-b542-e9b2ffafd044",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ca4e5c2e-0cf5-4b8d-be14-928ebdb86937"
        },
        "item": {
          "id": "dfcf3f17-3317-49e5-8b95-7f01b026f2d7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2f7bc730-4763-4c2d-a236-c02efd45ce7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2a5d8d-d620-4d61-b45e-3c7d0c84a9ad",
        "cursor": {
          "ref": "9c62e27a-65d9-4e7d-b98b-f8fb32692c9a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dae4abe3-8795-431b-97aa-f4060aed7375"
        },
        "item": {
          "id": "3d2a5d8d-d620-4d61-b45e-3c7d0c84a9ad",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bd2160c3-37f6-4329-9143-4a4f0ba79a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90865108-9682-42f9-a02c-7af4f753585c",
        "cursor": {
          "ref": "459ee192-f518-4b0a-bda7-a0dee9961a6b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "58507147-3fb1-4012-9422-33554cafdeba"
        },
        "item": {
          "id": "90865108-9682-42f9-a02c-7af4f753585c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7a570242-1a07-4395-bd0f-3f2ce615bcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58305ea7-cf18-4c1c-9837-2e9ba34cfa07",
        "cursor": {
          "ref": "7e265a9f-956e-4571-b372-916b5532e1b0",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4e23e2ca-b8b7-4dd0-a2cc-c25be2c1ccc7"
        },
        "item": {
          "id": "58305ea7-cf18-4c1c-9837-2e9ba34cfa07",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4ffbbb6f-8e60-4e56-9e3b-02447555a68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a37cbf3-f0d2-4682-a350-689bc7425ab2",
        "cursor": {
          "ref": "f7d60545-c803-4a2b-b505-4a06f4ce4544",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1147f293-1f10-43e2-a938-acb9aa83bf4e"
        },
        "item": {
          "id": "2a37cbf3-f0d2-4682-a350-689bc7425ab2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "85c72e7d-9543-40bf-bacb-d5df2cd52c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db390761-f3f2-47be-87a6-743b73f7ba7f",
        "cursor": {
          "ref": "d4c30401-b7e0-4ab3-b2d4-c4d4eddfaccf",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f4a8f014-5505-40ca-961d-4ca78e0bd8dd"
        },
        "item": {
          "id": "db390761-f3f2-47be-87a6-743b73f7ba7f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7abd2152-f9b7-4ea5-bf1d-7113c6b1d1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21228c7e-c41d-4c1a-a58d-07f0ee94ea1b",
        "cursor": {
          "ref": "c1a8fc6d-b2b7-4558-b3f2-a57898c18188",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "39a4c295-2002-476f-bdac-864444ecccf1"
        },
        "item": {
          "id": "21228c7e-c41d-4c1a-a58d-07f0ee94ea1b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "979e76a8-d3f6-4304-818d-05652f88eb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d329000d-7542-490e-8da4-7f65703935eb",
        "cursor": {
          "ref": "0c95b9b4-1b76-441d-a42e-a5e6392342f3",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "41ae9c10-5c5a-4a26-aa11-1eeff95466f4"
        },
        "item": {
          "id": "d329000d-7542-490e-8da4-7f65703935eb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a11dc347-10ca-43ab-8dbe-1653fc4959e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee0adca-e773-4741-a1e1-84d74a93e1fb",
        "cursor": {
          "ref": "b7cb749f-cba3-4a7c-ab01-ac10b91a141d",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "70079770-9108-4b28-8e5c-243fb95cb784"
        },
        "item": {
          "id": "dee0adca-e773-4741-a1e1-84d74a93e1fb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "17acc589-4882-4555-a5d1-908b3e274cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc98727-3ee0-4bfa-9f59-9f9996f284b4",
        "cursor": {
          "ref": "a0f70bd3-11ce-48ab-a69c-a608a0a3a2fd",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "967c2f67-662a-4467-854f-8e12b73afe87"
        },
        "item": {
          "id": "2dc98727-3ee0-4bfa-9f59-9f9996f284b4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "444f7149-ffe3-4380-b5dc-5c59adc4acd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a662ccc0-e2d1-45b2-a6ac-46ac008d2252",
        "cursor": {
          "ref": "a0f92555-2e66-4bd3-8cb1-7db90ee8a284",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "03fda704-a18e-4954-8cd7-a630c4f9ced1"
        },
        "item": {
          "id": "a662ccc0-e2d1-45b2-a6ac-46ac008d2252",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "625e6902-aa0c-419b-8ecb-7706667c2aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d46241d-29d1-42da-b926-adfc439ac427",
        "cursor": {
          "ref": "96bcf32e-6c41-43e2-bd4a-67be0695aa55",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0f3d6726-f2ff-41a7-9e55-691879bb4cc8"
        },
        "item": {
          "id": "8d46241d-29d1-42da-b926-adfc439ac427",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bea66655-d39b-4fa3-a9c9-6f3f83c18f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e990337a-d69f-4087-9531-66d1db1b1f04",
        "cursor": {
          "ref": "cb539219-894c-4c7f-afd3-5ae4aa0180ed",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "65c0eaf8-2789-4937-be33-395f3effedd3"
        },
        "item": {
          "id": "e990337a-d69f-4087-9531-66d1db1b1f04",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e60d9226-1fa0-405f-90f5-7c54b7da5a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d120b56-9fec-48b4-91e2-5c94f5afa679",
        "cursor": {
          "ref": "dd08508b-0985-4d95-a1d0-f126f2adb0a4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d5644f96-eb4b-425c-868f-78d55dabc275"
        },
        "item": {
          "id": "1d120b56-9fec-48b4-91e2-5c94f5afa679",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ae94b319-0df2-4f17-94f4-f303f51a93f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f415f73-6737-42f3-b456-748ec6808734",
        "cursor": {
          "ref": "d416df41-6768-4233-b119-fd794598bbd9",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2fb14c01-dfa8-4aa7-9944-38b6d17897cb"
        },
        "item": {
          "id": "0f415f73-6737-42f3-b456-748ec6808734",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "88fde480-bfe0-4d15-805a-aa315279c248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341e104c-a3ac-44d0-9531-eac9c5a18de1",
        "cursor": {
          "ref": "e9f0add4-e796-45e2-92b1-763c71d9212e",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b278c37a-91ee-4465-ad0a-d5f12abc88da"
        },
        "item": {
          "id": "341e104c-a3ac-44d0-9531-eac9c5a18de1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "31d07e54-a79f-4d33-affa-475886df69cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e941ca2e-bdd9-4f46-b54b-07cadfc50b51",
        "cursor": {
          "ref": "a9843892-72fe-459c-a36b-be4ebf482405",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "08882191-fcde-4502-9a83-7675a393ba1f"
        },
        "item": {
          "id": "e941ca2e-bdd9-4f46-b54b-07cadfc50b51",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "98bf1c7b-71f2-4c0f-ab48-d7442037722b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d471d7e3-bf7b-412c-8d99-125ae87550cb",
        "cursor": {
          "ref": "c928673f-9795-4d27-bd7a-cddb30f68fd6",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a09ac24b-0a9b-4e0f-8a60-f3be6d3dad59"
        },
        "item": {
          "id": "d471d7e3-bf7b-412c-8d99-125ae87550cb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "075298de-849f-44fa-94ba-d4e16489a457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f60e9fb-ea29-4d06-9ee3-a181c565bfd5",
        "cursor": {
          "ref": "b5d14c7b-614d-4975-bf37-04d71f218c10",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8ee91c4d-4392-433a-83bc-d858931999d3"
        },
        "item": {
          "id": "6f60e9fb-ea29-4d06-9ee3-a181c565bfd5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3bcf6335-777c-4e97-9019-4c4b62f3468d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88c9f72-795f-4ece-bbe4-62d090cff48a",
        "cursor": {
          "ref": "044c2a8c-b90c-4705-bd0f-61df91c613a5",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dfe39a4c-d86f-4761-a019-bf76383c27b2"
        },
        "item": {
          "id": "b88c9f72-795f-4ece-bbe4-62d090cff48a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6685281f-8e66-4210-b64a-92cdcefb6ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282626a6-4ef2-4270-8500-41515762debd",
        "cursor": {
          "ref": "e17181ec-cde5-40dd-a33b-8ebc6ea6935b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a78c2ac6-726c-4f8a-bdf3-7f9e7fa6b898"
        },
        "item": {
          "id": "282626a6-4ef2-4270-8500-41515762debd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "075a020e-9bd9-4f98-85f5-104ca7140142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fe2e6c-e4a1-48b3-940c-00a3ef8041ac",
        "cursor": {
          "ref": "932dfd0c-a510-4dd3-9c3d-59177db2345f",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dca3de5f-21e0-49e4-acb0-b951cd18702e"
        },
        "item": {
          "id": "b3fe2e6c-e4a1-48b3-940c-00a3ef8041ac",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "39d92389-d9a5-4bb5-a0c2-3e11715aac6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e949dd-edbb-4370-b96d-68d3becfa008",
        "cursor": {
          "ref": "cd0ea517-fd1c-4615-82e5-9132f9d9e137",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "674dab99-311a-4d9b-b39c-fa8b4e907c16"
        },
        "item": {
          "id": "d4e949dd-edbb-4370-b96d-68d3becfa008",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b0697047-41bb-45fe-aa23-943bd89adee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006381ee-b786-4634-8efe-5b32bd4cd358",
        "cursor": {
          "ref": "77f14869-3aaa-4540-abff-1dfa95f9d696",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9be7193e-0975-491f-b4c7-496c56cd2654"
        },
        "item": {
          "id": "006381ee-b786-4634-8efe-5b32bd4cd358",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fab7054a-c6a4-4f6e-8a0e-237d28536769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a172af-9169-43ac-8cfe-e3b2063e8fc9",
        "cursor": {
          "ref": "5db04c81-2e8c-4f1c-b7cc-158b2152be76",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b95d26d2-54fe-4d9a-b642-bcd2c6ddeee2"
        },
        "item": {
          "id": "37a172af-9169-43ac-8cfe-e3b2063e8fc9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "59389261-7a47-4cf2-9dd6-ef1337562e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82caf8b6-03f0-466a-8268-d4a27be92d59",
        "cursor": {
          "ref": "97c935b3-8c12-44aa-9b19-2d6a00d9874c",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "93b603d9-980c-4cea-b49f-52257724291a"
        },
        "item": {
          "id": "82caf8b6-03f0-466a-8268-d4a27be92d59",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ce939e0e-251a-4cb2-abe3-9162066a369b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10c594b-a312-4e54-805d-97864d07f04c",
        "cursor": {
          "ref": "1b252872-4590-424e-9cd3-7926166b5bad",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "935ab0e7-b819-42fd-84aa-808d7b793a52"
        },
        "item": {
          "id": "a10c594b-a312-4e54-805d-97864d07f04c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d17efa64-ce22-49d3-9fec-532693b8938b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e32a59e-323a-4fd7-9e10-b20746de485d",
        "cursor": {
          "ref": "ce31cf26-dced-4bf9-b8dd-d936f94cf02b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "77363c34-9e12-4d0d-b32b-d9a009bad053"
        },
        "item": {
          "id": "9e32a59e-323a-4fd7-9e10-b20746de485d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e931f56a-0fe7-41c3-aa0a-cc0a4931f99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02227019-8169-4d25-a65f-45a93f6505f7",
        "cursor": {
          "ref": "6b1d451c-0d52-464f-a1b1-7bb16a8f696e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "94a276ae-6999-4cd1-a2c7-53d3e0949512"
        },
        "item": {
          "id": "02227019-8169-4d25-a65f-45a93f6505f7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "75d27015-3232-4bf1-b449-6b9083ab702c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ee02e5-62aa-40dc-b8f8-859875c6ed3e",
        "cursor": {
          "ref": "5859c74f-013b-4d6d-b5d0-4a67b48019b6",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "97c0f4de-9a91-4c09-b7ac-fe03a94529f0"
        },
        "item": {
          "id": "71ee02e5-62aa-40dc-b8f8-859875c6ed3e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a2dede0a-7fe7-4020-a900-fc4ccae477c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "6325a6b2-b4a1-4d5f-8df4-ccde792933c5",
        "cursor": {
          "ref": "85b57780-ac79-427d-b8c2-1666730a2e90",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "419bad61-b944-4cba-ae38-ad927d96d526"
        },
        "item": {
          "id": "6325a6b2-b4a1-4d5f-8df4-ccde792933c5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a29b0111-8789-4a97-bb7e-516c6854b804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "788b0936-39e6-4882-978f-e02eee595d80",
        "cursor": {
          "ref": "e2b1136f-f661-482b-b2f9-5badc1179ea0",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f1c48b68-20f3-45ff-868a-454b33ea4d60"
        },
        "item": {
          "id": "788b0936-39e6-4882-978f-e02eee595d80",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "15f35f9c-ed7f-4933-ac5d-1b1039820c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f3659dd3-7177-429c-a55b-7eb3381c6291",
        "cursor": {
          "ref": "70860fec-a21a-4d2d-949d-63c6f7625bab",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d462d770-0304-4a5d-8e72-67e779aa8434"
        },
        "item": {
          "id": "f3659dd3-7177-429c-a55b-7eb3381c6291",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "53b6f2ae-a89d-4a01-ac01-6c842ac63964",
          "status": "Created",
          "code": 201,
          "responseTime": 6889,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fcfecd-bd0f-4df3-a598-dcec73754b28",
        "cursor": {
          "ref": "db0c2387-7f44-40ef-b466-3bebdaadf2de",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "06d1ca15-2009-4d46-92d2-ae5ffc9cb38e"
        },
        "item": {
          "id": "c6fcfecd-bd0f-4df3-a598-dcec73754b28",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "29eed391-c1b8-49d6-98da-b93a555b731f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "2b3ec6bf-d795-42f2-84f2-d10f737fc7eb",
        "cursor": {
          "ref": "75bd6022-bfbc-4f4c-9e4b-bb1425aeeed6",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "27a8a5c8-532c-4108-86d8-0174dfaa809a"
        },
        "item": {
          "id": "2b3ec6bf-d795-42f2-84f2-d10f737fc7eb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bd5d1ed7-7960-4f7c-ab52-25a972c8f807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "b5574e54-e38c-491a-b5ed-ffbf5606ed9e",
        "cursor": {
          "ref": "473e1d62-e60f-4eb7-8188-d6c703fb4398",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0dd2d36a-d87b-48aa-b8df-333f7c062362"
        },
        "item": {
          "id": "b5574e54-e38c-491a-b5ed-ffbf5606ed9e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7e92f2e5-c8eb-4a4b-b799-cfbfc80e163a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7894f51a-81b6-45c4-8eaa-72e51cca040f",
        "cursor": {
          "ref": "9490f673-d22c-49af-8702-f5568dfd5bd3",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dcd88739-f972-44dd-9758-7d944f8d24d0"
        },
        "item": {
          "id": "7894f51a-81b6-45c4-8eaa-72e51cca040f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b457707d-ea10-4a01-829d-11f81d22546f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4648341f-1983-44b9-8248-f492b40adb36",
        "cursor": {
          "ref": "74b0976e-4f64-488d-88d4-bda7f5621d75",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7ce94a03-6242-49af-b15c-22329e4c9de9"
        },
        "item": {
          "id": "4648341f-1983-44b9-8248-f492b40adb36",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7bda7b0a-17c4-4f02-aeb3-63cdef341985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcbcd75-e917-4ed1-a02f-e99ec61a5800",
        "cursor": {
          "ref": "8ad85266-9705-4328-808b-55a53ebb5eba",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8246d6f3-bd7f-4fe2-9eb0-cc33a4b7bcf4"
        },
        "item": {
          "id": "efcbcd75-e917-4ed1-a02f-e99ec61a5800",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8460659f-12a0-47d4-bb9d-f55c9a90966a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574599db-b715-4e45-93db-e691fbed4cb0",
        "cursor": {
          "ref": "da5d89ef-64b8-46fa-903f-5668e734cc8d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9d5194a2-78d9-4f86-bf1c-de22a5bf0d91"
        },
        "item": {
          "id": "574599db-b715-4e45-93db-e691fbed4cb0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "19e88d67-179f-4cef-a43d-28b6b128a9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e55625-a6d1-4f10-be39-9f8e43989a17",
        "cursor": {
          "ref": "8fb642cb-5dbc-4a57-abf1-74ade4c0f05c",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d0da7aba-2e0d-4771-8fdb-a8a342ad920a"
        },
        "item": {
          "id": "e4e55625-a6d1-4f10-be39-9f8e43989a17",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c011ebbb-f9c6-494d-8c0b-fe8fdc1ee237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be282584-6eed-4708-8ddf-604dd7c85224",
        "cursor": {
          "ref": "306e974f-efb4-48aa-b2c5-bd94527b000f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e5610d4a-e0bd-416f-835e-1ffa6f2e6d7b"
        },
        "item": {
          "id": "be282584-6eed-4708-8ddf-604dd7c85224",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "24c710a5-a82c-4197-b5cc-e5faac3f9d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fac86f-d87f-48b6-8915-60886724fe01",
        "cursor": {
          "ref": "53b85847-1e9d-4375-a7d5-3609664371af",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "123bf392-06d6-4662-9af8-35bee6c50b5e"
        },
        "item": {
          "id": "c9fac86f-d87f-48b6-8915-60886724fe01",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "879e8989-2ee5-4f5d-9066-71ceb238c421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f59483-e3e4-477c-9248-a8ad7894a865",
        "cursor": {
          "ref": "a8c8ac24-6a88-4a13-9474-3ffbeae42491",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "04e5015b-c052-4140-8b5f-aa2451246431"
        },
        "item": {
          "id": "14f59483-e3e4-477c-9248-a8ad7894a865",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "161dc1f0-72b5-4d57-958b-2003ddb6baf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa80ed2-97e2-4722-b2f5-3b71ca61aebd",
        "cursor": {
          "ref": "e4a51cfe-51dd-4537-899c-78ae8f6643f5",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e1d32291-c75f-46f7-9c55-0012e7d9faa7"
        },
        "item": {
          "id": "6aa80ed2-97e2-4722-b2f5-3b71ca61aebd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "56e1396c-4cb9-4211-ab60-6dc755fae10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1757329-bd14-483c-a5e5-33bb9ece4b1c",
        "cursor": {
          "ref": "767ec8f6-b312-41bd-8e4d-c7c9a273fa67",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7b6fd87a-c0bd-4da0-a41e-cfd86aee092e"
        },
        "item": {
          "id": "d1757329-bd14-483c-a5e5-33bb9ece4b1c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eafa1436-0950-48d1-b4c3-614391fce1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fa8149-b330-4e82-9eff-5085b405a6fa",
        "cursor": {
          "ref": "789f29c9-4b7b-45f5-ab21-5945ef1e12c6",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fe3fec8d-4d66-4d0c-b130-f70ed3c5fb5f"
        },
        "item": {
          "id": "d2fa8149-b330-4e82-9eff-5085b405a6fa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "001a8432-321c-4efc-8a31-18f0647ed78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c24796f-0810-4757-b908-a6df5fe8a228",
        "cursor": {
          "ref": "29c2491d-3ad6-41fc-94eb-0aee4add03d3",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "41327e36-becb-428a-b244-7bc2a5876d4c"
        },
        "item": {
          "id": "6c24796f-0810-4757-b908-a6df5fe8a228",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2ab78edb-ecd7-436f-a5b3-c635b2059578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f3c8c0-0325-46a7-8ca7-8e1001947f53",
        "cursor": {
          "ref": "5c5af6c1-a197-49a4-9211-e263c12274e9",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "26ff065b-7cea-4a11-b793-a4f99d4fcac5"
        },
        "item": {
          "id": "f0f3c8c0-0325-46a7-8ca7-8e1001947f53",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2aa92cfd-06c5-4a77-8776-9e652caf028c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab0729c-ad50-487a-96d1-2f8278dda89e",
        "cursor": {
          "ref": "8cbce197-5b2c-43b9-b8a6-e50744623294",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5bdd1ea0-19d3-4053-9b4d-9b329a7b23bb"
        },
        "item": {
          "id": "3ab0729c-ad50-487a-96d1-2f8278dda89e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "84e79c35-543e-4c77-82c0-fb2d6c2f6302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c30e479-8414-4378-84df-5177d56ff976",
        "cursor": {
          "ref": "a3f9210e-52c3-4a61-8bb7-7d4960781a9e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5b0574a9-6e05-4f65-b92e-5d4aaf9910dd"
        },
        "item": {
          "id": "5c30e479-8414-4378-84df-5177d56ff976",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b910caa4-bb6d-4b3e-bf65-06b05847eb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e5baa6-184c-43d7-81fc-428e9cf1b11d",
        "cursor": {
          "ref": "312662a3-4c75-41e2-9249-edac04491655",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "af793d4e-21da-4862-bbbe-7a5da75fdec0"
        },
        "item": {
          "id": "83e5baa6-184c-43d7-81fc-428e9cf1b11d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bf782006-d048-4ca1-a6d0-b557db644394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600988ca-cae8-4807-8195-80805a7dd765",
        "cursor": {
          "ref": "e64a70c8-fb3f-4b5e-bbfc-6e60ea84c31d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4da3cbcc-242a-45c7-85b8-b5d27bb012c0"
        },
        "item": {
          "id": "600988ca-cae8-4807-8195-80805a7dd765",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "450a3aa4-5915-4ec6-8b7b-5958f18cd16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9967f9-d77e-4ebe-ac8a-70cb61729d04",
        "cursor": {
          "ref": "63c73060-9c11-4488-82cd-ab2c15c7e0a5",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "215673d0-68df-4026-a432-fb2abcb05526"
        },
        "item": {
          "id": "5f9967f9-d77e-4ebe-ac8a-70cb61729d04",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a0dfbcf8-025f-49e0-8a7f-9ee22b4ca0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441cd68d-be62-43d7-bd46-d75d5096dc71",
        "cursor": {
          "ref": "1d2f331c-9f1f-4f2a-8967-ac87e7c1b0e5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cb4211a6-6907-4cde-8a73-3ca851b07ce8"
        },
        "item": {
          "id": "441cd68d-be62-43d7-bd46-d75d5096dc71",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "effa0e17-63eb-4c1e-a62a-6419d957d20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f77373-8aa2-46b9-bd6e-03b12f930007",
        "cursor": {
          "ref": "2762548c-adbd-4872-bde2-3dfd5144b452",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4842283e-ed1e-4988-8f78-f5a60666aba8"
        },
        "item": {
          "id": "b2f77373-8aa2-46b9-bd6e-03b12f930007",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b7e68fd5-bcdf-4c6f-8df5-630ad26e5fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b6d2cf-b2ae-4396-bfe9-4a410a32ccf2",
        "cursor": {
          "ref": "5a9ec5f8-ea62-484b-9930-f947e72d228e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2bfbc291-bfd9-4b31-afb7-a65017e26744"
        },
        "item": {
          "id": "22b6d2cf-b2ae-4396-bfe9-4a410a32ccf2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "faba9c30-975f-4b1d-afe0-b418542f3766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84e47f3-fedd-4af0-be67-77e317cb6d39",
        "cursor": {
          "ref": "21b0ae82-0063-43ad-9d6b-6e5b88919e7d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "95807ba5-4798-4136-8ab8-4f906acdb0d0"
        },
        "item": {
          "id": "e84e47f3-fedd-4af0-be67-77e317cb6d39",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c94353a4-d700-4a7a-989d-f2283a3e7955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d64df5-4d22-4c91-8128-e5725c8b205f",
        "cursor": {
          "ref": "6073dbd2-e7bc-4e29-b596-8c408170934b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3376f359-465f-4e45-b938-ecff08c60a30"
        },
        "item": {
          "id": "24d64df5-4d22-4c91-8128-e5725c8b205f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "30270896-d555-4840-8266-3b00c146adf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7f118b-8c75-4f9d-b132-0dfb0dbb926b",
        "cursor": {
          "ref": "9e37bcf1-3226-45f5-887a-c22382d695d3",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d9a3748e-b6a1-457d-8848-eb73532373c9"
        },
        "item": {
          "id": "1f7f118b-8c75-4f9d-b132-0dfb0dbb926b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5b419d48-9df8-4082-bf3f-be4c963000b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8225b94-b1da-4265-a9b0-2279a9421cfd",
        "cursor": {
          "ref": "63635615-18a4-4e6d-94ff-5c14812462a3",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d2bd669a-485f-41e2-b88e-76458414e051"
        },
        "item": {
          "id": "c8225b94-b1da-4265-a9b0-2279a9421cfd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "500d6d08-15ea-4bdc-9875-652de45a3451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05690c9f-6088-401c-beff-b54d878f87f1",
        "cursor": {
          "ref": "1c2ce7eb-fa7e-4f2b-831b-de3cd41c6c15",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "894b7cfa-c937-44d5-9655-d773347ad52c"
        },
        "item": {
          "id": "05690c9f-6088-401c-beff-b54d878f87f1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dbd0af56-e1fd-439d-ba7f-f49a741eec9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86130a68-b61b-4cb5-9fe4-a3ff185971a8",
        "cursor": {
          "ref": "6b015ff8-5b8a-4ffd-814b-a2b68a458265",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "65f51cbd-a617-4d1f-ae78-c8994a2b131b"
        },
        "item": {
          "id": "86130a68-b61b-4cb5-9fe4-a3ff185971a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "46ee62c9-9ab1-4c61-bd34-20a658a8082a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa71a84c-abe6-46f7-9b31-24477eecb6a4",
        "cursor": {
          "ref": "f38861fd-1672-43e6-96a6-8d874ffd6fcf",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2067c533-4128-4e5e-9a4a-7feddac0ba61"
        },
        "item": {
          "id": "fa71a84c-abe6-46f7-9b31-24477eecb6a4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e6f937c5-c478-4c2b-8c10-8531e35aeeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fdcff7-757f-4a40-beff-26529e0baa12",
        "cursor": {
          "ref": "efe24dbf-8b16-479d-87cf-74a175d9f830",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7f561cb8-53bf-4c04-8619-d880284d9b6e"
        },
        "item": {
          "id": "d7fdcff7-757f-4a40-beff-26529e0baa12",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a19b802a-10d3-4e8a-89e4-17070224095b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d019e78-4c2f-451d-81ab-87cbacc311fb",
        "cursor": {
          "ref": "4d7f4a5c-60e2-47a4-928b-9798b7981e44",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "36d79e5a-7300-4435-9d18-13abc319b317"
        },
        "item": {
          "id": "7d019e78-4c2f-451d-81ab-87cbacc311fb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "001edae7-14b7-4804-b038-f81c2c2f6280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eac3d1-0aae-42cc-a1ca-91e8787839d9",
        "cursor": {
          "ref": "ca85abdb-61b9-471e-8f31-1035fa9e25a3",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e11ef4aa-7574-4ffe-9718-d7c169e85e53"
        },
        "item": {
          "id": "f8eac3d1-0aae-42cc-a1ca-91e8787839d9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "73c9b695-830d-45dd-8dbd-9adf73cd3e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918f6110-2bb4-4a88-9ff7-835e93722c65",
        "cursor": {
          "ref": "9dd7e150-d96f-4045-a24e-ff1346447e0b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c31dbe85-b299-4ce4-8aa0-78a1f24b209f"
        },
        "item": {
          "id": "918f6110-2bb4-4a88-9ff7-835e93722c65",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "83170880-e06c-44ef-9da2-dd6b9c5b3e08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da84745-e905-47a1-8dee-b6278bdd7463",
        "cursor": {
          "ref": "9fdb901b-95a6-43ad-a3ef-163268b192c2",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f53fe21d-a9b7-45db-8006-150bf168cfd8"
        },
        "item": {
          "id": "4da84745-e905-47a1-8dee-b6278bdd7463",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c828523e-e332-4076-8a15-550e84878e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4d195c-4276-4fd9-81c4-494eb42c0cf6",
        "cursor": {
          "ref": "62e2c0da-dbe4-4a3d-9ded-848217e54ba9",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "505e6183-7ac5-4ec5-8852-f19dafce86dd"
        },
        "item": {
          "id": "5a4d195c-4276-4fd9-81c4-494eb42c0cf6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c3b74d65-1a6d-4305-b7f1-62f4ff389560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4d50f6-b071-4ffd-b01b-200f3f11773c",
        "cursor": {
          "ref": "a449a625-fc10-474c-a8ee-8a51c2b6f108",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "01c49c3e-c5f7-410e-8904-874150023fc5"
        },
        "item": {
          "id": "ff4d50f6-b071-4ffd-b01b-200f3f11773c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1a5f7f36-3e4f-483f-b64a-5db032e9f450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c67b9a6-4345-49d1-b214-ac4bf48d2550",
        "cursor": {
          "ref": "6abb0898-6140-4466-93ee-46bf7d1ae2c5",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2964425d-e842-49ac-ae59-795bc7d0f1b9"
        },
        "item": {
          "id": "4c67b9a6-4345-49d1-b214-ac4bf48d2550",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e0edf7f5-d89e-46a4-9a8c-1cba01286682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32b9c2d-c7b1-4f1c-93ce-c8b8b5bfe5b0",
        "cursor": {
          "ref": "50aab95b-035a-4920-934c-575f35167857",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c6c8107e-5857-4903-9eee-e63dbb681060"
        },
        "item": {
          "id": "e32b9c2d-c7b1-4f1c-93ce-c8b8b5bfe5b0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "23b982b0-d4ab-40ec-b14c-7713ca43e576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c61755-de0a-47e7-8a32-f23be6549365",
        "cursor": {
          "ref": "a15ef375-0b97-407c-b25a-9b00a82cf647",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e5422c16-024a-4e6a-a49a-1d6677219e4f"
        },
        "item": {
          "id": "d1c61755-de0a-47e7-8a32-f23be6549365",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1a3f309f-469a-4295-a95b-5ed237219544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fde032-70e6-427a-ae1e-83a0a0e0e0fe",
        "cursor": {
          "ref": "15f24424-aef1-4706-813a-b6ad33c1502a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "19c4b446-dde1-4976-a4c2-0ff14d446382"
        },
        "item": {
          "id": "64fde032-70e6-427a-ae1e-83a0a0e0e0fe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c10667c6-dd6b-419b-b36c-6e128a59b54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e443c438-818a-4f7e-86b8-2fd39c60f1a9",
        "cursor": {
          "ref": "48564ae6-18a4-4c34-8a14-bfa3c769f778",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a1018f4d-194c-4c83-ac30-d36d05df579f"
        },
        "item": {
          "id": "e443c438-818a-4f7e-86b8-2fd39c60f1a9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "32b2efd1-81fd-4065-900b-abc638f7d5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e81bbf-08ff-477c-ac56-0754cdfcb925",
        "cursor": {
          "ref": "b0908b78-517d-40ae-b991-779a3a2e36fa",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b6a6ffd3-027c-4918-9487-a28ba3c0f8e5"
        },
        "item": {
          "id": "67e81bbf-08ff-477c-ac56-0754cdfcb925",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0ca52e59-9f55-4f0f-9796-e1e16ddc719c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613e60bd-9876-4a0a-92cb-8de3f9127ca0",
        "cursor": {
          "ref": "60d53a94-3e1a-4c70-970c-74e6e0cc9dfe",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b51f8ffc-0139-4c89-a6cf-743e94776a8c"
        },
        "item": {
          "id": "613e60bd-9876-4a0a-92cb-8de3f9127ca0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "46c2a5bf-e50d-4b91-9b7e-3a43424ff129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0a1963-a5bd-49e4-89c4-0e754f5c57a7",
        "cursor": {
          "ref": "9e09f819-6c46-470e-841b-5a094b74de91",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9b5140f7-ce25-43fb-97ce-3ceef700a537"
        },
        "item": {
          "id": "9b0a1963-a5bd-49e4-89c4-0e754f5c57a7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "89541628-81f1-4b4d-be43-51477d78684f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e7c43a-30d6-4850-abb7-4cd472f6e7e7",
        "cursor": {
          "ref": "24ef2ece-2502-4240-8035-2c3d0a1f9072",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d7f42c7a-38fd-4c80-a807-c587360d1ce3"
        },
        "item": {
          "id": "91e7c43a-30d6-4850-abb7-4cd472f6e7e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "53269a25-94f1-4cec-bb7f-a6be5084b439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3c0bab-fafc-4218-9bea-082901318a00",
        "cursor": {
          "ref": "a1227c4a-71ae-4230-98f0-9a458f043899",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f2d4a004-09fe-4546-bbbf-e7a3ec377366"
        },
        "item": {
          "id": "9b3c0bab-fafc-4218-9bea-082901318a00",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "767aaaa3-a599-42cb-b843-209b1daaf62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c529be8b-01cf-4bfc-b22a-4cc79b052eca",
        "cursor": {
          "ref": "0c6679f5-f74e-44b4-86e7-a9e049b94944",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "644f1787-af7c-4534-87b5-e71d83187a02"
        },
        "item": {
          "id": "c529be8b-01cf-4bfc-b22a-4cc79b052eca",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5e289f46-1840-413c-a6ef-75fe494e1f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27cd1cb-cd25-4320-bfca-9e199afe38cd",
        "cursor": {
          "ref": "33786d7a-4a54-4ea8-9197-8f33a012e0d4",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "18e420e0-61f0-40bd-98b4-e32aabbc6b8a"
        },
        "item": {
          "id": "c27cd1cb-cd25-4320-bfca-9e199afe38cd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "efb2500b-e9d3-41fb-bd7c-9826f4b0a9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecbf819-665e-45c5-a950-9ed2480e6f14",
        "cursor": {
          "ref": "55118722-9145-4ab2-b3cb-80ed8fb6de51",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "44ef802d-5d9e-4678-9656-2d7d88522098"
        },
        "item": {
          "id": "fecbf819-665e-45c5-a950-9ed2480e6f14",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c438826b-767f-4c8c-aa47-d50aa03db519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86003577-35ba-4bf9-a1fc-6ff740220296",
        "cursor": {
          "ref": "032436b0-161a-4c7d-8b08-5cb47c7123ed",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e85635b3-06cc-44de-a69d-1c5a4431058f"
        },
        "item": {
          "id": "86003577-35ba-4bf9-a1fc-6ff740220296",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e2416056-7525-4053-bfae-104f5f20da3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fe7a40-5d74-4ec0-aad2-5ae18f737d7f",
        "cursor": {
          "ref": "13b9f2a6-317a-486a-9f2d-29974eddc455",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4a7428ef-2971-4a5f-b350-47d8fe75b60c"
        },
        "item": {
          "id": "01fe7a40-5d74-4ec0-aad2-5ae18f737d7f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ffafef36-c710-4131-86fb-20c509c9b490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad46490b-0bf8-4d3e-9ca7-56453788a40b",
        "cursor": {
          "ref": "a4e7e00e-9c5e-4be8-b70c-c63bcd7881ba",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ce6d054e-bf1e-4d2f-bc92-087f6a8d8716"
        },
        "item": {
          "id": "ad46490b-0bf8-4d3e-9ca7-56453788a40b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a40ad7a2-71e6-4130-bfcc-fde8d593f473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acc76df-b2fa-40ef-bf82-1f54786be6fb",
        "cursor": {
          "ref": "dbfeed7e-f036-4b32-b4a0-581d202fb495",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "057d0f19-8e23-4048-ae4f-f6a57883e1e5"
        },
        "item": {
          "id": "7acc76df-b2fa-40ef-bf82-1f54786be6fb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "381ecf7c-5b92-4fd8-87d4-75e7e9bc0aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568af211-b588-46f8-bf88-0c3693dcb434",
        "cursor": {
          "ref": "d66177d5-cb17-4eca-98c6-5a16095cb80b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "13dce6ba-9e00-494c-8e76-f728938eb3f3"
        },
        "item": {
          "id": "568af211-b588-46f8-bf88-0c3693dcb434",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "83d0bc87-519d-4c80-831c-42af0fb70a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce278a3-eea5-4135-8287-2167ac1cf494",
        "cursor": {
          "ref": "e2b1ca75-1953-4577-b92e-fb8ceb8828b2",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "51f88b06-05e3-45a4-8a77-54e26a41b09e"
        },
        "item": {
          "id": "6ce278a3-eea5-4135-8287-2167ac1cf494",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "52e2e6cb-c905-4f61-97e9-1dbf2f0e49b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88bb0ed-044a-4772-8ac2-29f98b4607cf",
        "cursor": {
          "ref": "f3910e6a-6b38-43e2-ac62-000a1094179d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "58cbd3e9-aa40-424f-81a1-f938aff84f79"
        },
        "item": {
          "id": "e88bb0ed-044a-4772-8ac2-29f98b4607cf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "40a22f03-0696-4768-b28e-66402b85c36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ec4e9e-fb0b-41f3-a446-25a5f3f0aa82",
        "cursor": {
          "ref": "6c0d2da2-e458-4636-a686-cbb7dfe84847",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7a8a535d-242e-40a5-b830-435948728d0a"
        },
        "item": {
          "id": "37ec4e9e-fb0b-41f3-a446-25a5f3f0aa82",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e620dc4f-ea8b-4e40-954a-cddfa871161c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f4d50c-359c-40f6-8f16-4b764722d708",
        "cursor": {
          "ref": "453fa92c-3ef9-4c0b-853a-6793a70fbb27",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f771bf8a-93e7-420d-91c7-13b74b7593b7"
        },
        "item": {
          "id": "20f4d50c-359c-40f6-8f16-4b764722d708",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "98538e77-faf1-4b99-a104-8bd04d0e32e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c6a6d0-9eeb-4ad6-8b56-0ebdb7b7e759",
        "cursor": {
          "ref": "6188bc6f-4d5e-46f6-9c3f-2b870fa78734",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a032c232-66d2-4eea-991f-acbefba581aa"
        },
        "item": {
          "id": "50c6a6d0-9eeb-4ad6-8b56-0ebdb7b7e759",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "aaf80667-a074-43f6-9776-333956cca3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf408fe-8ea0-48d9-af85-c670846252bf",
        "cursor": {
          "ref": "b7eb747c-034d-459d-b77c-7618d7636acc",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "479a900e-29a8-41bb-b628-be2596156649"
        },
        "item": {
          "id": "caf408fe-8ea0-48d9-af85-c670846252bf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7e296feb-2318-412d-a6b3-762bd88b2f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42e763d-1e61-4399-990b-17e4f382773c",
        "cursor": {
          "ref": "faa07b67-d7c7-4c84-8fd0-e73e32c5daba",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ff8e4b81-da70-4977-8a9f-6769204cde27"
        },
        "item": {
          "id": "b42e763d-1e61-4399-990b-17e4f382773c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c8110cca-e64f-4efd-bc52-5b4777068781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8ba06f-2cb7-4e4f-aab1-033a99272591",
        "cursor": {
          "ref": "af8d089e-b362-4dcd-9492-97903c21ea08",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "425472bb-8006-49d8-84a1-c89122994ae2"
        },
        "item": {
          "id": "8a8ba06f-2cb7-4e4f-aab1-033a99272591",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "166b3721-2265-4074-9c62-75a122623084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b23b73-8ab3-468e-b66c-e3cd26770a80",
        "cursor": {
          "ref": "0003a7f3-862e-48e4-9a66-071235f494ce",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d1f832e7-cdc6-4d9a-9f46-8e41c3dc013a"
        },
        "item": {
          "id": "b4b23b73-8ab3-468e-b66c-e3cd26770a80",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "87879ebb-f0d8-4364-a8d3-636b90689e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38cee28-391a-4336-ae00-4788959f4109",
        "cursor": {
          "ref": "3bdbea5a-9d90-4e6a-a9c9-adfb84ca3e0a",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "404eafd4-eaf2-4124-a2f8-ba9d66ca201b"
        },
        "item": {
          "id": "e38cee28-391a-4336-ae00-4788959f4109",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a43b3b76-189e-44ea-8ad8-64dc1fa72aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31260d55-55cb-4dca-ba1c-03cc78db24b7",
        "cursor": {
          "ref": "5667cffc-cf29-4a07-9d0b-9cff8046dc12",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8d0caad1-bbee-4457-92d0-99b0bd7d79cf"
        },
        "item": {
          "id": "31260d55-55cb-4dca-ba1c-03cc78db24b7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "784e24c0-0e50-4f85-ba00-3344f065b80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdeb0431-d1bf-472f-8fc5-16e92bd203d2",
        "cursor": {
          "ref": "0c0f8cc7-db76-4c46-bee2-fc031c0e90b7",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "39d052e9-c6fb-4ae4-8d1c-8cf92b6234cd"
        },
        "item": {
          "id": "fdeb0431-d1bf-472f-8fc5-16e92bd203d2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f90bc466-0425-42e8-9bc8-cc41c8f22fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc0076f-cb49-4344-acf7-c4129d3d8324",
        "cursor": {
          "ref": "b4008ab4-5809-4b8f-a431-7642c1fa8586",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e6ef3425-f336-41cf-a52e-b57292d53f9c"
        },
        "item": {
          "id": "7dc0076f-cb49-4344-acf7-c4129d3d8324",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "059a304b-a28e-496a-8592-60906f4a78f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d599de0-b3c0-48f3-b571-0fb0f7ec63c0",
        "cursor": {
          "ref": "3a710a0c-93fa-4258-8c36-0e75701ec5b6",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "58edd430-ab39-4f4a-9890-93581b002fbf"
        },
        "item": {
          "id": "3d599de0-b3c0-48f3-b571-0fb0f7ec63c0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d2842aa6-6941-427c-bbad-6fecfb7bf589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ffd31f-b354-4ab5-b04a-21f6868c8fca",
        "cursor": {
          "ref": "ab181089-cc5e-4c63-836c-b4343094e6fe",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "81989bc3-9ea4-4d0d-8c79-5827e59dd88f"
        },
        "item": {
          "id": "55ffd31f-b354-4ab5-b04a-21f6868c8fca",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ae688c80-af69-471a-930f-7fa171b70841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1b176b-3ab2-4a9d-8669-02353a2f3053",
        "cursor": {
          "ref": "19f47b77-d370-47c5-ad5a-6a82d33a2b1d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5a227520-d6f2-4fb4-b814-6e35c6a7f414"
        },
        "item": {
          "id": "ef1b176b-3ab2-4a9d-8669-02353a2f3053",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "160047c4-ca33-4518-a51a-bfca7a219853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8448b8c7-ad6d-4bcc-aee1-6829fae8a3aa",
        "cursor": {
          "ref": "89443cc1-dcdc-43f5-876b-08f2f3fc0fda",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "817618c2-cf79-400f-ba66-893ee1eaf9d2"
        },
        "item": {
          "id": "8448b8c7-ad6d-4bcc-aee1-6829fae8a3aa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cbacb763-3495-4311-9190-2d541a9ab518",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899eb2dc-a8d8-4fb0-8a1b-3433f384ef03",
        "cursor": {
          "ref": "21d256c6-abb2-46d3-acb8-d09837538b33",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "43fe920f-cdcd-40ff-a092-b16008ed2e4e"
        },
        "item": {
          "id": "899eb2dc-a8d8-4fb0-8a1b-3433f384ef03",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cb0fcea0-38cd-485d-a816-8b47c1f51374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebca2159-25bf-4b20-84cb-380253125143",
        "cursor": {
          "ref": "fc451087-fe81-438b-ab14-50093579d878",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "93c42400-395b-4050-9ca3-11041905767a"
        },
        "item": {
          "id": "ebca2159-25bf-4b20-84cb-380253125143",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fbebe8ad-7e1f-46e7-8646-7b2fa57282ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b0b839-cb2c-4d43-9314-2de4a3ab1930",
        "cursor": {
          "ref": "4fc15f11-4436-45bd-80de-8d59f0202319",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e8b073c9-cc27-4adb-a0e5-1179911444f2"
        },
        "item": {
          "id": "d5b0b839-cb2c-4d43-9314-2de4a3ab1930",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a4abc71d-0d87-4b59-a59f-d51133494dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d57a4d8-cb7a-4d0c-bd23-2f56b8566179",
        "cursor": {
          "ref": "f5069b8b-5fcb-49f9-a56f-2aa1cc97da69",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3c227d94-15f3-425c-aa50-d76fcb8ba087"
        },
        "item": {
          "id": "0d57a4d8-cb7a-4d0c-bd23-2f56b8566179",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "50377d85-77ea-45f3-8b83-0a3e60ffad8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675b9fde-17bd-455b-9ff7-46e5e3001ab3",
        "cursor": {
          "ref": "c7be238f-e20b-461c-abc4-5ae2f37680f6",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b5d167e5-2d6b-4347-b2d1-a8489f845d8c"
        },
        "item": {
          "id": "675b9fde-17bd-455b-9ff7-46e5e3001ab3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c397b00b-282f-43ca-a113-8447feb8a5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4265ae-5050-4a1d-af7b-5b27ada6fd8f",
        "cursor": {
          "ref": "baf775e2-e4ea-40fc-bead-db6bb5bc8761",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "274441a0-b8e6-4033-a4a6-1b68417da21a"
        },
        "item": {
          "id": "4f4265ae-5050-4a1d-af7b-5b27ada6fd8f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "34c9b7fd-4b7a-462a-8cda-610c8ad68ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4268502a-2900-494c-ae8f-98e805730690",
        "cursor": {
          "ref": "8ca81cbc-2e32-4590-b48d-48ec63c31e4c",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "48a5bc72-b687-4cc9-8ed5-86506c787b8c"
        },
        "item": {
          "id": "4268502a-2900-494c-ae8f-98e805730690",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "56cd29b4-3164-45b1-bd9c-8050900cb559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6f706d-1216-4ec1-b5ad-9a25a65c30fc",
        "cursor": {
          "ref": "4139000e-9438-458a-a789-7361e57742b0",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5756c120-1913-43d5-bcd7-60478ecb59cd"
        },
        "item": {
          "id": "2f6f706d-1216-4ec1-b5ad-9a25a65c30fc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3e8e45b7-e88f-4bea-9fa4-89b9db1e6e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636622cd-7218-4716-9c5f-67b85d5223f9",
        "cursor": {
          "ref": "3bc3f3a1-190e-4bf7-9a1d-a131388c0fb3",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a335d3d5-4f3a-4dd3-95b5-9d79fcf4f083"
        },
        "item": {
          "id": "636622cd-7218-4716-9c5f-67b85d5223f9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b94c4907-921b-4e6b-8dca-b922cf7effec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35ad300-df10-4941-b47d-ea46563e0c7f",
        "cursor": {
          "ref": "aa138823-0873-479a-b493-0f2f8e00257c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4b2035e5-2903-4414-802a-50e586a64879"
        },
        "item": {
          "id": "b35ad300-df10-4941-b47d-ea46563e0c7f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d0ec78a5-b934-444b-a747-f8c23266d513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bf131f-b2c9-4f3e-a978-671fcbfb73e1",
        "cursor": {
          "ref": "e5600073-928d-4ba1-a4af-5c3db86e3f2b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2fef9c27-a304-4c43-99ac-4dacb79fb994"
        },
        "item": {
          "id": "a7bf131f-b2c9-4f3e-a978-671fcbfb73e1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "43ef7bcc-b8c9-46ff-8e8d-8137196fbc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20abf8fa-3fdf-49aa-b5d1-630f633e1bce",
        "cursor": {
          "ref": "ca3b9be9-5d88-4e46-8712-ab76ff977e9a",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "710a8d71-76b2-4f8b-9e0d-117d1cbb6210"
        },
        "item": {
          "id": "20abf8fa-3fdf-49aa-b5d1-630f633e1bce",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d28fda86-0890-4def-ae3b-8be1829a5246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275447af-e27e-428c-963c-7f9012bbb9af",
        "cursor": {
          "ref": "1139a6b8-84ed-4334-8a74-2b5ed6163666",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c8dc1dab-6362-4eda-9584-4c1a8ab1ed75"
        },
        "item": {
          "id": "275447af-e27e-428c-963c-7f9012bbb9af",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2345ba72-0535-441c-8b2e-5e5e03873712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b877462b-7f36-4a68-a8dc-9878ef49adf8",
        "cursor": {
          "ref": "5762bca5-d833-4fae-8b49-5fdfcdf21433",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "31a7f47d-d79e-44b7-88a5-01dc192b5e20"
        },
        "item": {
          "id": "b877462b-7f36-4a68-a8dc-9878ef49adf8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fb254d64-71f2-4c9a-a92d-3e952af9de02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b534182a-873f-45c5-8ac0-f2eab04df1f5",
        "cursor": {
          "ref": "74e62874-d393-4551-a09c-88b4cb999800",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a1399540-fc6d-41d0-a10e-6fcbb33f7cc5"
        },
        "item": {
          "id": "b534182a-873f-45c5-8ac0-f2eab04df1f5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "13b8914d-5a0b-4a1f-9b5a-06c27f2fa0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a027222-a3e7-4664-9874-59fe1b87191a",
        "cursor": {
          "ref": "7ee056d7-43d5-424c-be28-590a3a6fbd74",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b0c1e5ce-6e59-453c-8e88-4a72cb3a9da1"
        },
        "item": {
          "id": "9a027222-a3e7-4664-9874-59fe1b87191a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "798b6322-a4ef-4dfb-b85d-32133f084651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a239f001-1884-4c8f-a3c2-2e2edbd07483",
        "cursor": {
          "ref": "b399e8a8-5c13-4a83-9a27-ed6f9651c78a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c8dd7060-19da-45db-82c7-7e7df7c77c08"
        },
        "item": {
          "id": "a239f001-1884-4c8f-a3c2-2e2edbd07483",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "88783654-4033-483e-b5fd-a0292e857818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335ad182-5020-4286-b904-a127f7a8b7c7",
        "cursor": {
          "ref": "71f282fd-c72e-45ca-ae6f-3933776ded8e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7bf2bd07-233a-47f3-8839-9b5e34bbe907"
        },
        "item": {
          "id": "335ad182-5020-4286-b904-a127f7a8b7c7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4f5157e0-aa4c-4a3e-ac3c-e097891f4965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1794b7-6333-4364-ac7a-71c5e34644ff",
        "cursor": {
          "ref": "9dc9a872-97c8-4095-97cf-1547c96b6971",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "490fe7ec-2a03-4843-9db1-48ad62c6ae9f"
        },
        "item": {
          "id": "8c1794b7-6333-4364-ac7a-71c5e34644ff",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7cac88cd-d47a-4c2a-a5df-7f2ead717d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1dd71d-6653-47ab-be01-8d040deb0d10",
        "cursor": {
          "ref": "6ce96399-445d-4369-a828-fa0e4e9647ad",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9855a668-be27-42f7-8fce-2d4764051802"
        },
        "item": {
          "id": "0a1dd71d-6653-47ab-be01-8d040deb0d10",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "56e928c0-4039-4e6d-a3cb-e18248cf19e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6d591f-0ff4-4164-8b11-08b397f431bd",
        "cursor": {
          "ref": "0f814c8a-374c-47de-ad61-fd5461296718",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fe3bdc47-9340-4024-84c8-7333ab8fd934"
        },
        "item": {
          "id": "fe6d591f-0ff4-4164-8b11-08b397f431bd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d9d7b528-9c2d-463c-a14c-a6798a8e75f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13048fd-ada8-4f65-abbe-9929189e461a",
        "cursor": {
          "ref": "1f2bed3a-8701-450a-a18e-7842b4fc23e5",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "74e6d4ab-b800-4762-bbb9-09158619e638"
        },
        "item": {
          "id": "e13048fd-ada8-4f65-abbe-9929189e461a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "da5a5b2b-5744-4fa3-8d10-354747045d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba80f30-4960-4d83-b930-c0dd01a14279",
        "cursor": {
          "ref": "7a208675-1edd-4bae-9baa-994cdb7e0150",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3f3e79bc-e51a-47c4-af2d-41d1125d30e5"
        },
        "item": {
          "id": "eba80f30-4960-4d83-b930-c0dd01a14279",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0b6cb15b-7d82-4235-a224-baabd44bf110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9688e9-5f74-46d3-96e3-ba12090d04a4",
        "cursor": {
          "ref": "28ca6cd7-45e0-4e1e-8eca-57d216a6e2aa",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f2f2a2e5-98fc-4f1e-8ef8-beffb22d6fac"
        },
        "item": {
          "id": "fd9688e9-5f74-46d3-96e3-ba12090d04a4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "03160c5d-39c1-4702-89c1-b5963dd3e066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b091ba6b-26a5-42e7-b1d9-5b023913c234",
        "cursor": {
          "ref": "1512986b-ccb5-4f67-ac2e-838668eb52e0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5c8cc125-857f-4d11-b6f4-2257170a1732"
        },
        "item": {
          "id": "b091ba6b-26a5-42e7-b1d9-5b023913c234",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c2d6db9b-1dad-4cee-9625-77cdf6c4be1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af85446-0be7-4e20-a569-d21953e718c9",
        "cursor": {
          "ref": "e1b085df-98f8-46b7-961f-549a893418e7",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d2e61d74-82b8-4cc4-9fb8-75cf08e6a120"
        },
        "item": {
          "id": "2af85446-0be7-4e20-a569-d21953e718c9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cc6aa79d-086f-4c65-9425-80e40d958a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96a27eb-53e9-4420-940d-755076e19bf4",
        "cursor": {
          "ref": "aa884af4-0cfb-4851-8b57-7fcb88916715",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "906dd465-66c6-4a6e-84f7-e0273262f6c5"
        },
        "item": {
          "id": "b96a27eb-53e9-4420-940d-755076e19bf4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2ddf7f41-dea1-4971-902e-07af7d0e87f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026d5345-98d0-4f23-97c9-e7cae180d60c",
        "cursor": {
          "ref": "8069583c-d2af-433d-bf7e-d147d61c2f13",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5379277f-09b1-4f7d-9969-b81c2349a390"
        },
        "item": {
          "id": "026d5345-98d0-4f23-97c9-e7cae180d60c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3daf93da-8a1d-498a-9626-d0f2b7dc4c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d36b78a-2661-491d-8714-5bbe09dd4957",
        "cursor": {
          "ref": "c27bd78c-bd46-4a08-a04e-01d68ff3bb92",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "52716eca-e64f-4549-9538-6890810c577e"
        },
        "item": {
          "id": "3d36b78a-2661-491d-8714-5bbe09dd4957",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b5a365f9-c888-471f-85a4-622a48fd8271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0447c074-6bea-4b52-be04-7929e7a7a629",
        "cursor": {
          "ref": "9ed90d06-a7f1-4864-8f7d-1af1f451d9b3",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7216b0d5-456a-4785-9779-f3ab7db7a345"
        },
        "item": {
          "id": "0447c074-6bea-4b52-be04-7929e7a7a629",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3f90dcd5-bcc0-4eb5-b1b5-09605ac86554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d50d94-0a46-42b0-a015-061a789a80f9",
        "cursor": {
          "ref": "5b91ec07-4d6c-47c1-92bc-1c371640cc74",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "637663df-95d5-4155-bd3e-bd2ddd6a0a45"
        },
        "item": {
          "id": "82d50d94-0a46-42b0-a015-061a789a80f9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "93c107a7-1306-4a60-a053-00217f2e5829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f1f75c-f57d-4870-ac40-e8711be85648",
        "cursor": {
          "ref": "408eec0f-b305-47bd-924a-ec471ab93375",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a862ccd6-e123-4d4d-9e73-0ebad6a6c763"
        },
        "item": {
          "id": "74f1f75c-f57d-4870-ac40-e8711be85648",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c5f6dda5-6ded-42f3-9a8a-d1bf18555f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b6e06e-a56d-421d-b35e-05853fb331d9",
        "cursor": {
          "ref": "125428fa-b6d3-4b47-bc5a-90ca2d92a4a4",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a3ba88a0-f1e0-461f-b6cf-4b1244d93d97"
        },
        "item": {
          "id": "33b6e06e-a56d-421d-b35e-05853fb331d9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b500d5bb-6fa4-46fa-9b71-ca8454e9fbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d32dc9-ed1c-4281-9040-4b1dd284b41a",
        "cursor": {
          "ref": "bbd5189c-ca52-45f0-8a4e-2d391374aab1",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d52e8412-f83f-4d06-88ed-2fc533ff3abd"
        },
        "item": {
          "id": "d2d32dc9-ed1c-4281-9040-4b1dd284b41a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b1371e39-7e79-4b5a-800d-1608304eaa87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5965fbf8-215e-44d1-94aa-fdbf589c5fe6",
        "cursor": {
          "ref": "43d11cb9-2fc0-4744-ac40-c10017e58b1d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "87203601-465d-4858-83a8-f50c8bed03a8"
        },
        "item": {
          "id": "5965fbf8-215e-44d1-94aa-fdbf589c5fe6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ecee3faf-a6a9-44b8-be2a-e9b652805709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aa60c4-118f-4c2a-b4a6-9a665c3ca78d",
        "cursor": {
          "ref": "3fb2d63a-27ca-4831-b4f3-7ffb5cf57c14",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "82f2503f-5adf-4e89-be4f-4c0733068b58"
        },
        "item": {
          "id": "f5aa60c4-118f-4c2a-b4a6-9a665c3ca78d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1564abb9-c9de-4ad9-9c81-0c539d97d819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365aa150-0287-4f61-bef3-c26cf80c30d8",
        "cursor": {
          "ref": "f71154dd-e3da-429a-b144-53fed88cfe0f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ec044e68-ca13-4734-8b30-0da046bcf814"
        },
        "item": {
          "id": "365aa150-0287-4f61-bef3-c26cf80c30d8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a3b998fa-d334-478b-a508-2a680d23851f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb64355f-a08c-4310-a20a-8be4d94739f7",
        "cursor": {
          "ref": "ae59dc27-5ddf-4137-a8ba-2b0fe510cf12",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1c6a56fd-47da-4b27-8fa1-97a311821ae6"
        },
        "item": {
          "id": "cb64355f-a08c-4310-a20a-8be4d94739f7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8f63c7f2-8a71-45ac-a981-e5fda5f1152e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654df329-931f-4237-b982-c52c814a5372",
        "cursor": {
          "ref": "891b53a2-0761-47a2-8017-7a4630374299",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "01e950f9-5f19-4008-a5ce-25bec5304aea"
        },
        "item": {
          "id": "654df329-931f-4237-b982-c52c814a5372",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3f862d1a-d494-479c-be21-58ec3cf0a4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188d070b-db9f-4f09-bbf0-a44a76c4dacd",
        "cursor": {
          "ref": "76ff436d-4447-46e9-a81e-4b5379c7188a",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef176c85-adc6-4d5a-8640-5bfe6097c70e"
        },
        "item": {
          "id": "188d070b-db9f-4f09-bbf0-a44a76c4dacd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e7c0fbff-6b5a-436c-85bf-06323ecdc436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd07fbe-a762-4737-abb5-0f9d7f7c232f",
        "cursor": {
          "ref": "7045d8ec-0d50-4409-bc2f-e23ff5630b32",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "33c7b86c-89a2-4576-ad4c-3a9f5ee1f3f8"
        },
        "item": {
          "id": "3cd07fbe-a762-4737-abb5-0f9d7f7c232f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0a9be749-00ec-4343-b76c-88a7d5617f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb05d93-21a2-479d-a68e-f3ca6199173c",
        "cursor": {
          "ref": "3a59e05d-4e2f-4215-b4d1-66d78a63b0f4",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b63f4fed-c0f6-46a7-a0cb-c7af8ba8acdb"
        },
        "item": {
          "id": "bfb05d93-21a2-479d-a68e-f3ca6199173c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6d36cb1e-d60a-479a-a1bd-4c195c6f6303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68cffcf-a4b7-4fc8-8699-3eba6ed89c15",
        "cursor": {
          "ref": "04ded3fb-7e1e-4dd4-854b-686d677c0c96",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "54b52f27-4b2d-45c8-bde2-ec1cdfdb44ae"
        },
        "item": {
          "id": "d68cffcf-a4b7-4fc8-8699-3eba6ed89c15",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "51b5f80f-d918-4551-ba84-3d8f43ae469d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b646588a-720c-4a2d-8951-228722766785",
        "cursor": {
          "ref": "ea584f34-f87d-47a1-aeb7-a8864248e458",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "99be2b86-bba8-45a5-840b-97d2e8ad525d"
        },
        "item": {
          "id": "b646588a-720c-4a2d-8951-228722766785",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "31127652-5956-4eaa-9ce6-45a4303b2e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221edd3d-e889-4fa2-8d33-13e8bc2b09b7",
        "cursor": {
          "ref": "3527fd49-108a-4741-a2db-a0a6615c7ec7",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "730dc440-c302-4acc-a0e0-cd06fcf7f615"
        },
        "item": {
          "id": "221edd3d-e889-4fa2-8d33-13e8bc2b09b7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f7611dfe-f557-4f79-b18d-7a41487b97c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03c46ce-0c56-4cd3-88be-b87778de741a",
        "cursor": {
          "ref": "c3c6f262-71ab-4253-b2d8-2b7c2bb496f2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e70ba0ce-a2a4-437d-950b-6a7a8261a216"
        },
        "item": {
          "id": "b03c46ce-0c56-4cd3-88be-b87778de741a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dea2c312-19fd-45e2-a852-56063038abca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a14a4e3-dd74-488a-baeb-377b2c3bcf14",
        "cursor": {
          "ref": "b8c7dce2-3756-43a7-b99a-32f4ded111e2",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6bcd124a-3aae-4d4f-9128-6393d7019218"
        },
        "item": {
          "id": "4a14a4e3-dd74-488a-baeb-377b2c3bcf14",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c9837948-610f-4de2-9450-b89753ec557b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4cf35d-264e-4705-b7fb-21063cb27890",
        "cursor": {
          "ref": "3ce93448-f8eb-45fd-b27b-a59e0707d7ab",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "188b6e9e-5d34-492e-a332-fb6ed2a1906c"
        },
        "item": {
          "id": "cc4cf35d-264e-4705-b7fb-21063cb27890",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f2c1bc4a-6596-4fa6-9102-f0af2ad5c2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fd3a29-ec12-4a14-9908-cd593a3345db",
        "cursor": {
          "ref": "26810013-b1cf-44c7-8525-41b4014da691",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6ae88fbf-2f8b-487b-92c7-5c631baa1177"
        },
        "item": {
          "id": "79fd3a29-ec12-4a14-9908-cd593a3345db",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e0d8529b-18a9-4bf3-b3e6-e266c9c8ab03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1de9df-40a0-4840-99ea-7e76cb9eebda",
        "cursor": {
          "ref": "a815c35a-eef1-42f8-b8c6-32d17eecba6f",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7f838f34-46a1-4563-8681-c9f0c5aeca3c"
        },
        "item": {
          "id": "1e1de9df-40a0-4840-99ea-7e76cb9eebda",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3482c6e8-39a2-4642-8db4-24507da5e852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10edfc14-fe55-4ddd-97d7-c31d7d1515a5",
        "cursor": {
          "ref": "55aefd3a-be31-43f0-a951-e2f7d91cf901",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "583b7af9-9b55-4fe3-b015-6931b047a01d"
        },
        "item": {
          "id": "10edfc14-fe55-4ddd-97d7-c31d7d1515a5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ebfa07f6-9219-48ea-ae5a-1856dff4a967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2370ef-25a0-4dc4-a643-487d1cb20e73",
        "cursor": {
          "ref": "ae64320d-2697-4d4e-ab8d-edb7cd79a096",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cb5c76a9-9541-421e-acc9-34552d28ef62"
        },
        "item": {
          "id": "3b2370ef-25a0-4dc4-a643-487d1cb20e73",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c91e0790-b183-48d9-845b-117ef0afa54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6f4013-192f-4335-822e-d1f7a39deb76",
        "cursor": {
          "ref": "53b29e83-088f-4760-b854-1d3af39adc01",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "96667b2e-b2b6-417e-8c73-a6aad8f31883"
        },
        "item": {
          "id": "ad6f4013-192f-4335-822e-d1f7a39deb76",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9c9b876b-a142-4cb5-8f06-306711d50bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfaad34-1271-4793-b6e1-174241bd129f",
        "cursor": {
          "ref": "c4877d2a-1ff0-49f3-a790-3b25e649721b",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1bd2f84f-c8db-4cdc-ba75-ee26b1d8351d"
        },
        "item": {
          "id": "ebfaad34-1271-4793-b6e1-174241bd129f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7643229a-9c63-4a80-96b9-b7a71bf5ccef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe255ab-e9f4-462f-89cf-5d97484b2004",
        "cursor": {
          "ref": "6016f152-d839-48f7-aad5-1a873efcd9cd",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0c06b801-e39f-477c-8f41-292ef8960352"
        },
        "item": {
          "id": "5fe255ab-e9f4-462f-89cf-5d97484b2004",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "30fd69ba-93f0-45a7-b72d-344b3b434781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4fc6a2-3946-4c51-bbc8-fe7e36bbd827",
        "cursor": {
          "ref": "4cab1aa6-504b-401d-bcac-bd4861cd4cd6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5589f124-1191-4284-beef-50845de29f83"
        },
        "item": {
          "id": "4b4fc6a2-3946-4c51-bbc8-fe7e36bbd827",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7236e632-6726-4a73-a64c-49307d486e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b655d07-ecf2-4e6c-93e5-85cefa2f00ac",
        "cursor": {
          "ref": "cbf294af-4037-45e8-8dd9-ef283c182909",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d415dd82-ceaa-4c29-a334-b520ef51c936"
        },
        "item": {
          "id": "1b655d07-ecf2-4e6c-93e5-85cefa2f00ac",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5c5989bd-35fd-4e98-935a-e9b8336f04a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53302f28-9eb6-4bb5-8629-fe61d3db97f8",
        "cursor": {
          "ref": "35947105-7d12-47a6-b0d8-203d82a8de9b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "70f2a7b3-36cf-4b3f-bd0d-8580fd26c651"
        },
        "item": {
          "id": "53302f28-9eb6-4bb5-8629-fe61d3db97f8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d3c5c7b7-01bb-4be2-995a-3fd0dcdd9a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63808bc6-78b1-40f9-b91b-c1365906e0b5",
        "cursor": {
          "ref": "f142b441-e9e0-4153-adb2-029891a23476",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "31d4cb6f-c8cd-4e13-a3fd-e857aa44b17f"
        },
        "item": {
          "id": "63808bc6-78b1-40f9-b91b-c1365906e0b5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1c139d31-02f8-483b-aa31-4b5a52016b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf5cd76-1aa5-4e52-a5c9-f4662a2cf8c8",
        "cursor": {
          "ref": "0b8f9bfb-ba39-457c-b406-6e8cd4da1ce2",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "62b1fdf0-989f-4faa-90e8-5462029f0fdc"
        },
        "item": {
          "id": "fcf5cd76-1aa5-4e52-a5c9-f4662a2cf8c8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "71d7bba5-a0e2-482d-9436-0b22549a85a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3641085-89e5-4457-87c5-b73b1006a22f",
        "cursor": {
          "ref": "56042610-5e55-46ca-b24a-05b2771cbc4a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7b8921dc-08c4-4b40-8998-ed175916eb62"
        },
        "item": {
          "id": "c3641085-89e5-4457-87c5-b73b1006a22f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "972cabfe-be51-4910-88c5-16540dff88b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ff68f0-3d93-4fa1-ad53-cd50a9d23bd5",
        "cursor": {
          "ref": "b8a5c752-0ecc-4263-a5d3-a2c6423e6346",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4d0ec329-795a-483b-919c-5851a13fb1d5"
        },
        "item": {
          "id": "95ff68f0-3d93-4fa1-ad53-cd50a9d23bd5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "65a100fd-334b-4c64-94de-0ddc21eb099d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4290a37c-ae51-4fdc-8f1d-288425c8f083",
        "cursor": {
          "ref": "66d9f750-a4f8-4b6a-95d0-ec31de052d59",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "707a2f09-f6b2-4d6b-aec9-e4dbd99584d2"
        },
        "item": {
          "id": "4290a37c-ae51-4fdc-8f1d-288425c8f083",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "95aa2cd7-c3c7-4278-be23-c620e0ddd714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a83c581-edb0-4053-9710-fe480edf8b41",
        "cursor": {
          "ref": "92d41a49-2890-4c28-ab66-cf961dee0eb2",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3ff2e3a1-f51f-4aa3-994b-d07e8cb6c7f3"
        },
        "item": {
          "id": "6a83c581-edb0-4053-9710-fe480edf8b41",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "39f3f2d9-a91d-4c29-ac02-d032b87d28f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c50155a-5913-4044-8e36-458a0cc36204",
        "cursor": {
          "ref": "33b2905a-44ef-4682-b130-f1254f738ec9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f40407b2-4cb9-44be-8aba-7ae31a367124"
        },
        "item": {
          "id": "8c50155a-5913-4044-8e36-458a0cc36204",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0f90cad2-fa36-4931-b343-857b201a02bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b845b6-fa19-45d4-9b4c-d87ab3df21f2",
        "cursor": {
          "ref": "fb048849-5162-4f1e-8776-607f682ad743",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "784c61c9-b36b-4551-8482-3c0c121e4ed9"
        },
        "item": {
          "id": "28b845b6-fa19-45d4-9b4c-d87ab3df21f2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3b16a735-6fef-43b5-9dca-83fc988a09da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aed779-e774-4a74-b773-2816f701385f",
        "cursor": {
          "ref": "acbd98d4-cb41-4c4b-874a-51d01cdf7472",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "80911981-ac93-467a-8b7b-e8a06d79885c"
        },
        "item": {
          "id": "e4aed779-e774-4a74-b773-2816f701385f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "74a4523e-a189-4774-8df5-d21bd247e6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6074319c-c366-4a9d-bc5c-f606d90c5aa2",
        "cursor": {
          "ref": "eaad881d-f0e5-4c88-a230-3249c15e5166",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "53be544f-65b8-4e9a-9445-528c4f77ffe7"
        },
        "item": {
          "id": "6074319c-c366-4a9d-bc5c-f606d90c5aa2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "48b694cb-6056-44be-89a0-20ba8525baea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5b0c6f-f60c-4e26-9158-8643b66bf902",
        "cursor": {
          "ref": "2fa7a60c-75ee-44d4-a04c-3d9e9510bb02",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d24bdce0-8a89-4f47-8a70-0d9d84f6242c"
        },
        "item": {
          "id": "aa5b0c6f-f60c-4e26-9158-8643b66bf902",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a52ba824-6de5-428e-8c53-016757d49247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391c15c9-c0ac-4640-894a-a7d47599e6df",
        "cursor": {
          "ref": "d28450a4-6b9c-4043-9d5c-336909bd27b8",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7f29932a-019d-419f-9ebc-b067bb3055b7"
        },
        "item": {
          "id": "391c15c9-c0ac-4640-894a-a7d47599e6df",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fca192da-6179-439a-8520-58a665d68001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666af72c-f366-42b4-b780-9921cf3d73cc",
        "cursor": {
          "ref": "078a0350-3d0d-44f5-8645-08553406e20a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "65d07256-7083-4029-8369-8ae862cea3ad"
        },
        "item": {
          "id": "666af72c-f366-42b4-b780-9921cf3d73cc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e65d4915-e91b-4c0a-acfe-4a68de90f089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4ae373-f42c-48ed-84d4-44d7327d4e62",
        "cursor": {
          "ref": "c8d52db1-a501-4d68-9d6e-67265f0e26a6",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "75cb17e2-28cb-4d0b-923a-6717bb72fea6"
        },
        "item": {
          "id": "7b4ae373-f42c-48ed-84d4-44d7327d4e62",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "07299c6f-7f59-4de8-88e0-0db587f851b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bec2ed-cb14-4d99-b4ed-5cf0a37fdace",
        "cursor": {
          "ref": "0bdd7288-c3a4-4031-a94b-18efd9bdb403",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "db68ec58-c705-45e6-bcd3-2a23fcecbd96"
        },
        "item": {
          "id": "69bec2ed-cb14-4d99-b4ed-5cf0a37fdace",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ac8d3599-05ad-427a-ab43-65b0e37463e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbae2f6-76da-4f8f-a701-3d9efedc14d4",
        "cursor": {
          "ref": "9bf44ad9-77ff-497f-a783-b633be07f9db",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "add0c987-97ee-4734-81dd-24fa5d203333"
        },
        "item": {
          "id": "dbbae2f6-76da-4f8f-a701-3d9efedc14d4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "473c6756-5fb1-4ba3-a2a5-ede2886c7dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e363f9e-caf2-414a-b22f-cbe280802233",
        "cursor": {
          "ref": "1c1fdd3d-fe31-4905-8de4-9375cb909985",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "77e4f060-6107-42a7-9afc-d7c4314e26a8"
        },
        "item": {
          "id": "5e363f9e-caf2-414a-b22f-cbe280802233",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "716174c5-e99d-4bbf-844a-e38df62e0c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078a87ef-644b-4ac8-8d0f-e0ac901a5b9f",
        "cursor": {
          "ref": "0f9c63ce-5bd9-4ba0-9a3f-a51812d143ba",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "aff7d527-cf9c-4578-ae21-29d358e69b79"
        },
        "item": {
          "id": "078a87ef-644b-4ac8-8d0f-e0ac901a5b9f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "51aebc8d-c5cf-445b-9443-4102ef27d068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52428d3-54e2-4822-9e5a-adb1f9478028",
        "cursor": {
          "ref": "8af02451-6849-4b72-9706-02d1c3e2fc32",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "347a571c-ac79-43ed-9bc3-d9452693ac1a"
        },
        "item": {
          "id": "c52428d3-54e2-4822-9e5a-adb1f9478028",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2eab8919-174d-4ccf-853a-e9052d9befe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd0db22-fd95-4ec7-b70d-d35e29e95232",
        "cursor": {
          "ref": "23af4083-2368-4ce7-b9e6-796e500c5c52",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "734bc9c3-471a-4168-b12f-7175e021647c"
        },
        "item": {
          "id": "dcd0db22-fd95-4ec7-b70d-d35e29e95232",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "aaa62793-4f60-40e0-8f54-3d60bd74c035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c810aca-c1da-4adc-bf1e-8741e4ec35d0",
        "cursor": {
          "ref": "06a05094-4042-40bc-a379-cdd25948ab48",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fcbfd892-5ab9-4600-9150-a08eed5decdf"
        },
        "item": {
          "id": "3c810aca-c1da-4adc-bf1e-8741e4ec35d0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bf1fb1d2-c59f-417b-99ca-24c6dc28a816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b2b909-965f-4a8a-92f1-ce4503902126",
        "cursor": {
          "ref": "cb19ef1a-9a92-40e3-a219-5547a0a513cf",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "df753bd0-625c-43d0-8a58-41679c5ca989"
        },
        "item": {
          "id": "63b2b909-965f-4a8a-92f1-ce4503902126",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f46136ed-373f-46cf-94c1-8feb8d08fd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b8b49c-f58d-4a42-9deb-9445a3caea4b",
        "cursor": {
          "ref": "679aa8fd-0d8b-4d8b-9551-573dbf4ba321",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a05be995-8c72-4f9c-a1b6-87aa75968f71"
        },
        "item": {
          "id": "39b8b49c-f58d-4a42-9deb-9445a3caea4b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "866dc426-da6e-42e2-be9f-400eb8279bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c847996-0b8a-42cd-9ded-a41d589e7492",
        "cursor": {
          "ref": "42ffef3f-30bd-4152-a5ba-49c272855caa",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0bb71c62-a66e-450b-939f-d9246f9ef817"
        },
        "item": {
          "id": "6c847996-0b8a-42cd-9ded-a41d589e7492",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ff12bacd-1c1b-4596-a704-fb07279dedcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b096dba-148d-414a-943f-40c5165ebfb1",
        "cursor": {
          "ref": "2f01bbf4-04fe-497f-bf57-3f754d4f473f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c53fd192-ca0b-4694-a99e-43cdc66d2a9b"
        },
        "item": {
          "id": "5b096dba-148d-414a-943f-40c5165ebfb1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9e4b771f-8ac1-4589-ac15-24e3afa81004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ce5e09-4121-4178-8627-7641f7c92f94",
        "cursor": {
          "ref": "7c6108d8-8c72-45b0-a082-a5f3b9b66279",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e9e5ff91-5ede-4dab-ac50-de745003452c"
        },
        "item": {
          "id": "c9ce5e09-4121-4178-8627-7641f7c92f94",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "36fdcfcd-6f6c-4a09-a63e-1a4f4d483b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd493e49-9e71-4c9f-800e-e7af78e70f8b",
        "cursor": {
          "ref": "beaa350e-1c9c-442b-a6b4-b232e215af2a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2b87bcd1-a42d-4560-8c89-1d99d136cd33"
        },
        "item": {
          "id": "cd493e49-9e71-4c9f-800e-e7af78e70f8b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0e5c23a4-fbac-4781-842b-b3db694ae2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47d85e8-00ca-4369-933d-4ff149bb699d",
        "cursor": {
          "ref": "c7f73201-68f5-4d47-a426-5beceaf77444",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c4be78d0-064d-4fd0-ab83-b0b198dd292c"
        },
        "item": {
          "id": "a47d85e8-00ca-4369-933d-4ff149bb699d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f5eb8a95-74aa-48b8-82f4-a33b3310ec25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361b8abe-0fa4-4f15-9dc3-685c8f38a8fc",
        "cursor": {
          "ref": "8747832e-8dfb-4f99-9be6-70db4e61eacf",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "95f315f8-4ca0-4bee-8bc4-9568320056a4"
        },
        "item": {
          "id": "361b8abe-0fa4-4f15-9dc3-685c8f38a8fc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ea1ad068-0cd4-484b-8937-8818699011a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb95103-75d2-424b-874d-239910329078",
        "cursor": {
          "ref": "6ba08f87-c002-47c3-a7b4-17f9f68ea75d",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5c1c3bd6-8a74-4e29-aafe-c5ea33164539"
        },
        "item": {
          "id": "feb95103-75d2-424b-874d-239910329078",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "570ab265-3a55-47f2-8b26-d87c3498f1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ea9610-b58a-46da-8727-11d1d178f4e4",
        "cursor": {
          "ref": "3a2416e7-d866-4bc6-87ed-c71c217650e4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d52dab2b-617f-49a0-af3a-c28a7e38a2df"
        },
        "item": {
          "id": "57ea9610-b58a-46da-8727-11d1d178f4e4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "73a98744-ab8a-40d6-b696-05d3f5ede28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f413ca-5c73-43a0-b4c0-13f20d1325f5",
        "cursor": {
          "ref": "e93877e3-ff15-42d9-a4b1-bd24dc27c14f",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8117f1ca-24dd-4ca4-9e7e-334123690ea9"
        },
        "item": {
          "id": "29f413ca-5c73-43a0-b4c0-13f20d1325f5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2947edcb-a819-44bb-9442-f2fc2230e9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3492a53-545f-463d-8c53-bdccb9e53247",
        "cursor": {
          "ref": "6185180b-9d82-48ad-86db-5d541c01f020",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "71f65222-c05c-45c8-aa9d-aea8dd6537d5"
        },
        "item": {
          "id": "b3492a53-545f-463d-8c53-bdccb9e53247",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d3ff49ce-f8d3-492b-8a83-9caef1e6fbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16d7dc7-3aef-44db-ae67-5ef016734453",
        "cursor": {
          "ref": "6504774f-8e44-473c-a941-9801688f706b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6f4a9a4e-9802-4960-8701-b1f044b953a0"
        },
        "item": {
          "id": "f16d7dc7-3aef-44db-ae67-5ef016734453",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "47227b17-66e2-4acf-b2d7-c4be0b52f19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e74049e-ca76-484f-90af-e4378e69c1b0",
        "cursor": {
          "ref": "0303e45b-f423-4506-b2f4-900b277632d7",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a08e0fdc-7385-4635-9b7d-c7f46f466bd5"
        },
        "item": {
          "id": "3e74049e-ca76-484f-90af-e4378e69c1b0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "844c1ecf-52a8-4121-bdfa-ea676db21bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23b5c91-edac-4460-8c79-5489de5d9b4a",
        "cursor": {
          "ref": "f359eeb2-84c4-4fcb-a49d-5cc498268e47",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f14593a0-5e95-46d8-a340-5a88ff5b91a0"
        },
        "item": {
          "id": "c23b5c91-edac-4460-8c79-5489de5d9b4a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "000f1174-5dbc-4229-ad9b-231e767b871d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f0fc92-729e-4c5b-9a80-4e9267b0f35c",
        "cursor": {
          "ref": "880339cc-2164-454a-9a64-3f9293e9c8ec",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "51d7669a-39a0-4239-b5a9-de88cba3d454"
        },
        "item": {
          "id": "a5f0fc92-729e-4c5b-9a80-4e9267b0f35c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "17d19e82-6603-4208-b058-2f60d999ca5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71404388-0a64-4d6b-9a76-8c521eba1dfe",
        "cursor": {
          "ref": "4c5587c4-cd8a-4b4e-9d7f-0ac22dfdd12a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "24ff875f-a6e2-43f7-8bcd-3c657a6428de"
        },
        "item": {
          "id": "71404388-0a64-4d6b-9a76-8c521eba1dfe",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a9b09e1c-7eb1-4fe7-8d40-ed69a128b81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea6d923-18ad-44c8-8a6d-d669d7ea8734",
        "cursor": {
          "ref": "f4bbc956-22ca-44ec-b235-e122d4931256",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "09ddab28-59f1-44c1-835b-43776542fdd7"
        },
        "item": {
          "id": "7ea6d923-18ad-44c8-8a6d-d669d7ea8734",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a178107e-eb17-41c4-a14e-0bd23572fb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a106b560-74bd-4e37-8d57-261374d6af24",
        "cursor": {
          "ref": "21d7f033-cba7-42ca-b13f-8a5e27bf7a21",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "799f8c3a-5126-475c-b9e2-f0afd2b02f61"
        },
        "item": {
          "id": "a106b560-74bd-4e37-8d57-261374d6af24",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "82f36120-ab51-45cf-8feb-c53d76f8951c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2df5a84-00d7-4dbb-aead-151719c4c6c6",
        "cursor": {
          "ref": "12ff1db8-8728-4d64-bf14-13708f5833cd",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "01276809-32bf-49dc-88a5-a8f7ce7f5304"
        },
        "item": {
          "id": "f2df5a84-00d7-4dbb-aead-151719c4c6c6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fcb2d61d-adc8-4093-bb7d-3055547c40e4",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "807b66d6-4244-4e4a-a6c3-28e4b3a64fc0",
        "cursor": {
          "ref": "76481675-dbc3-4598-b65c-5baf697d0bde",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ca8e0ee4-d750-46a5-90c4-3b24cb8f5cb8"
        },
        "item": {
          "id": "807b66d6-4244-4e4a-a6c3-28e4b3a64fc0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3e8db435-8f1f-498c-a835-cc16798b08a9",
          "status": "OK",
          "code": 200,
          "responseTime": 1845,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5445647a-86f3-462a-89b8-fb0094ca11ac",
        "cursor": {
          "ref": "dc6d1906-42a9-46c4-b90a-f6424d5d52d4",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "966cbaeb-960e-4095-a169-f5518ac70de8"
        },
        "item": {
          "id": "5445647a-86f3-462a-89b8-fb0094ca11ac",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8096efa2-f821-40ae-8263-82c74dcca3fa",
          "status": "OK",
          "code": 200,
          "responseTime": 1316,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "89810bea-82f5-4bd1-b0cd-647074734d2c",
        "cursor": {
          "ref": "36cc9807-b78c-4c9e-95d1-01ede8cd96c6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "33f95263-4764-446a-b7e9-42a630351a48"
        },
        "item": {
          "id": "89810bea-82f5-4bd1-b0cd-647074734d2c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dd60ad34-57db-4593-a054-8889e2ed22de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89810bea-82f5-4bd1-b0cd-647074734d2c",
        "cursor": {
          "ref": "36cc9807-b78c-4c9e-95d1-01ede8cd96c6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "33f95263-4764-446a-b7e9-42a630351a48"
        },
        "item": {
          "id": "89810bea-82f5-4bd1-b0cd-647074734d2c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dd60ad34-57db-4593-a054-8889e2ed22de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0d490e-0523-404d-8ed2-bdc827cb8666",
        "cursor": {
          "ref": "8e238028-2dab-452e-87e4-56ba99b3db3d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "21b856c7-596e-4ab7-9f7d-11ae36274cae"
        },
        "item": {
          "id": "0d0d490e-0523-404d-8ed2-bdc827cb8666",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f1a3d421-0cf6-4312-b720-56b788deb52c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b74250-d30f-4cbb-be9b-af33e7548093",
        "cursor": {
          "ref": "64b5093e-8253-4c10-b226-600342ae1633",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e298d953-cb3e-4cd6-8ea6-aa7af1adc015"
        },
        "item": {
          "id": "c5b74250-d30f-4cbb-be9b-af33e7548093",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d88c25d7-e77f-44be-b6bb-1d010d005404",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}