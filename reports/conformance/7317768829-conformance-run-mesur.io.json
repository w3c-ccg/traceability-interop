{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3c977990-af74-47bf-93a9-c9202b7c722b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6894a343-5ac9-4603-afac-7c7ada4c3c89",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09b85697-7f46-4d91-9cba-99ac193c5d9d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a3a4f704-7169-415c-bca8-d0642ee1bb5b"
                }
              }
            ]
          },
          {
            "id": "56e80cac-dc6e-4dc3-8ecc-a19045b37fe3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c058573e-ecb4-4d62-9b55-3a71cfbe1c3f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5436e01a-678c-4960-9a03-3ac0ba705c76"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2bb2e2b7-0437-4e85-8491-fec99571d000",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b55cca9a-7af8-4b10-a247-48ff8b215527",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d610e6b-e82a-4c4f-8c20-1eae6c48272b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abb590a3-15ea-4498-9a83-b8495e579b9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfe9d8f0-42a4-4533-9b03-a9871f24806c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "444f737f-18c1-4c2f-94ef-98ae374955c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0c63bc2-9b8c-4be2-9bbb-0c74709cbc3d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4709e026-f06f-44e7-8657-1d1445e59ea5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa689032-569e-480b-a5bb-5d8870b5f75c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "489e36b4-9b3e-44e9-a702-8c05631a0327",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "75d1426e-663e-4b10-a892-0e4c79528ca9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2df50616-6a1a-40e1-b58d-b696b55a04f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35899c6d-2de4-422d-b63a-6c050b37983b"
            }
          }
        ]
      },
      {
        "id": "6d186573-6132-466b-b952-a03eba0c8ac8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "93bea6a1-b318-44fe-93ff-ce0e7f8158c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09afa402-6e40-4d15-bba7-6397ba6d5df8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "33477aae-33d5-4249-a4e7-3e052af1efce",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e66e1e0-9345-4173-a99b-3e911bfe1aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c15c2af8-d0c8-4504-8967-c75e0a1e92c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecad635e-9c7f-4926-bca8-d930f2db0596",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d256ef-639b-4d58-a6e2-7f04ee8a619b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "900373c1-466a-4677-84de-e328fca7bcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87832940-6b38-4ace-948b-de12373af72a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4add73-6778-4a59-aa58-e077acf0f307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65616c49-bfb2-4ac2-842c-0766730352f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f62df4f8-6f29-411b-b05e-d2ac93bf7b9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b18da0d4-cbdc-487c-a302-49594e4df3f0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90810dc-5bff-4943-9a17-b298402af329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eca06d82-45c1-4048-a95c-c3d5e7f852d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b64270a-3150-40da-bd2d-092cbb8a0a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840cc506-913a-420b-9581-b2712e2e8a1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4df1ea6b-e676-4454-9427-b6c23e0ac546",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e20f518-d6fc-4170-9353-c7db4eeb1f9a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db3af1dc-f23b-4410-b10c-356b54a5eec7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "825b7c31-ae9b-4dcd-848f-7d603e0d2dc3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01a16e6e-9b12-49d5-8a3d-165a12de3e90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f8c88134-1cfa-4c61-90ff-9887cb44e4e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45e37854-6a47-4b91-a847-319e5054a29b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6811d9e8-3d4e-4c8f-97b6-47de7095f5d2"
            }
          }
        ]
      },
      {
        "id": "fa57d40a-b64a-4f34-bd06-1fc3f26e638b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1277bdef-a1e9-424c-9f3f-46c3be34ed59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "518427f2-5d26-45e2-8e6f-6eec9f8240b2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "90dd7be5-4c72-4232-ada8-7640b9a2adf0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61dcdfd-08e1-4ea3-99cd-54f42c4f8645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa509c85-2ccc-42c8-840a-8af553f34138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a393f270-5e15-48c0-ae15-0a8dc80bd288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa55d243-5e32-4267-a844-7d26c19ca5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98caba47-4345-4982-a7e4-a6b05a5aa95c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d82b5b8-fdbf-4e2e-ad65-fe5a127d25a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd84f60-51f9-46f7-baae-034c09d46431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d106550-8a2b-4c7d-bdcd-fdbe82e1259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e553b057-49c8-4b0a-a3a9-e2662ea058fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292a8a84-3226-4a27-949f-c683ce034e45",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936b1d4f-3eb1-4017-a357-198192cfe6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba61b588-84b2-431c-a268-b70299394d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56642d6-9e6d-4a64-9840-5adfdb87e78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8810b0e0-b4f3-44e1-a9a2-422541a62471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31d35c5-ad52-4be4-8aa9-fdb9531a4041",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9765ba9f-1e58-4adc-b2bf-99d6af8cb344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead2a13b-fe65-4136-af54-c5241c832a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d55356-be37-422b-8335-9aea8724ac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a7331a7-68ec-4297-a3e0-3cf94d6f8c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ddbee6-29ad-4288-b3b1-df3d699d26b0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98c7d5b-7e0a-4c97-998c-8abf35b37029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091f72c2-75b9-4439-9a8b-297455de3e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21729a02-7a0d-485b-8e70-b16b3ddc2065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7d15656-53fb-4db9-a4f1-ae47479aad3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdf0013-a0ee-4923-bc96-211375f30c86",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d258761-96d6-4efb-b9a1-875bd602425a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001475ee-e0ab-4158-996d-9e8514393221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8507e75-1e78-46ca-9324-eb3811f94fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73cfe436-3928-46d3-b1c3-47355124d56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5613c85b-a1c8-4a8c-ae05-092501d71a30",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8aa6dc1-2c14-4632-a8e4-585935812f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2384c9d-029f-4043-8bba-9aeeaf699c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbafd41-8e48-49f4-a83f-fbb47ffcc333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5ed305f-5251-4819-8d40-98e20b342a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1ebbd6-68e3-4094-911d-5dd5d5eac769",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99a1846-1c9d-4393-b78d-8e9536952184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ed4cb9-e6a1-461f-b022-e07d5f88b920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369c9001-7390-4c80-818a-d2916d4ab34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26fb6090-8c5b-4405-a039-dad9e3592534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf40609-8782-4fce-8c7e-45283acd8f54",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd900241-4237-4e1b-918a-eaad29f616b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6442569-28cb-485e-b901-d812271c9e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b79fda-bbd5-424a-8f9a-f549fc65609e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91de21a3-1f99-49f6-aea2-6b5d538d8dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1843d0-40b5-477f-9557-c09915d94030",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9311f2-a783-4872-bf82-21a42102e0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19089f5f-f7e5-4e9e-8b3b-67ff30d0e69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dc10df-7cb0-4509-b9e4-0ed08bb01c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7a60edb-b361-4fb8-a08a-c70ea041a9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5e6b0b-bdf2-47af-a8bd-c50e2e250898",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f462c24-a456-4646-9be9-088707741ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318b4855-f1ac-4ad3-893d-192ef4e50456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0b327f-e34d-4f18-a3c4-5d99d8ec791f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fe97dcc-f6df-4ddd-a640-b95a7964fb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4dd764-9cf3-43da-b357-260d1e1470a4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa08aeb-b885-405d-920a-55d1d7fc0b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7336abd1-5a8d-483e-bc4a-8bd320ed19ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726dee96-0357-4557-8c21-36147d206012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c682a026-8466-40f8-bb5f-6a75825f205f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e27b51-a13d-423f-9621-1d158e37eda5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4199e68-c57b-44a2-84ca-3d3e826aa3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d07f7b-3aa3-43fa-acf3-4011110cedf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbaa6b6-2c60-4897-accc-ba3111af20d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73752d33-f4ee-4807-8061-4880c4cdd527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa63b56-6b38-4dcb-b52b-30478432219e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14017c65-1061-430e-ae9f-5e7fb29e04dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68729a2f-36f3-4fea-a468-95cf2c8e0b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2375a508-b4aa-4a85-a2b1-fc6d08fcd18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2468b4af-0124-486f-843b-fd20fbad8462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc262b5c-b201-4afc-940d-e855ac539051",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271857ac-4634-42eb-b873-19d0c77ed880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23209b06-74ee-413c-a5e0-2ce4b99a36dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663135bc-4d3f-4bd3-a55f-0c03a65f5f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "574160de-b64d-462b-94dc-36c1bcbf6aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907a1d02-52bb-4f95-914d-9669a82f17e7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e85f34-a3e4-49ed-8105-a17b2996ddb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5da95f-e123-477a-9cee-69be849ac482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c96a91-3269-4560-8be9-d894dc983987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfa63018-4f31-4651-95c1-fa851f8854c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e795c128-b69e-4b82-ab45-112222bc142d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a9da51-9523-4ec7-a4fe-b3634fea337c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93fd570-6482-49fc-ac1f-9636af1aafd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c881effa-7954-4ebd-8a05-a7237af7ed00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1e61fbe-efcb-4ad9-87e9-847fe6c8e09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56b06b1-a90f-45d8-8213-32f4806703bb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3e6cd5-7ff7-4562-8a99-5ec2add7dbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01067531-2f5a-4728-8ccd-e094afe46e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899b2205-6baa-443d-a7df-ccb04d629ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b35a23db-4f99-4660-b3d2-e1eca69c1264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c329686b-6dd5-4348-b17c-bcd8c5938315",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdb61cc-d7db-4624-84ed-03aa255d468b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef12dae-fda4-4b9a-b7aa-1319b0913916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06a6173-2ead-49c8-b9d0-b79f46c65a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea00379e-e71f-4047-91d5-8a122f2565ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b890054c-7819-4efa-9613-d7e4f9e54af4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ab2381-981b-4245-9000-599a2a7c7bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c7857c-1693-46d4-8115-11ccf3de4654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759d0e4b-28d2-428a-8739-fa957294670c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8157b9-9912-4124-ac2e-8a943b91a10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6e110b-5749-4fdb-8b1a-780f7d519637",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e3f972-c62e-4784-bf31-1998d27511a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e715dab-cf89-43da-911f-3e7f4f1efcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4483eb9-6dfd-4d12-9e80-37b0d025c8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "874547f0-df52-4ee2-9438-2ec206c3b261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8474d737-0697-4153-9709-b59956474043",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3c1a8f-0d34-4f70-8bff-c104ed07ea44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5907af-56e2-4889-a7b0-aab874b478f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee22e428-d801-4493-a0c1-f1bc2b6135b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba1409c-6ab0-48aa-b912-9170b5b85176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696e7ed8-e0a6-49d1-b9c4-bcf9d03e0458",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95089f1-bc17-456b-b18a-cef191fd46cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5bcbe6-fdf4-49dd-b06f-2102901800fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48b4b5f-db1b-4723-8d22-bb3450c616ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14eef537-f0a7-4bd0-9a4e-06095a73e33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cd5474-5f55-467c-8e7b-990a64f258b6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137308f5-5c39-4014-9af2-6be78b576ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3629c2-cae0-4628-b94a-1dc32e67faef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddf869f-cd1e-4d90-84b4-c3e690744457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2466660-b060-4e27-87cf-f1587b08ea61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a22ddfe-b578-4673-aacf-003e06266950",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b19df1-bdd9-458f-9134-2a29c0104022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f86231-996e-48d7-9e27-130b8f7dd346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e480aa-a197-4815-a9e1-09ea55ca7603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f96c7581-96ae-48b6-8a97-71ca8369ff3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3463e04d-263b-4591-8d08-032bfd45123d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c748f5c-b4ab-4614-accb-b3d8a26494ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17df0054-55ba-4503-a47b-a42ba65ba909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8f26c9-227d-4c8d-9635-230073f2d3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96547a8f-72c8-416c-8532-127cdea96c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cc3a5e-8efb-4287-be93-ad53f6c2a033",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdc1da8-7a93-4876-a3cb-a29ad868b7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822445c4-1a0d-4338-af69-c2eaf30384a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72c9143-61a1-4511-841d-cefa7fa7d687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff27310-f9b8-4c38-a205-043bf12df78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89d7f54-cbb9-499a-bd4b-b7e531ec293b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff92c675-7695-4340-b0cd-ce530ceaa538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac22f3a-32a0-47ff-aefb-fed69072f6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4295c40-f9c9-4311-9c8e-0bbf854122dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da9dcddd-4f38-40b1-bd13-ab6274b41c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebc3245-5ae6-4723-ab3f-2ca261698470",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e01836b-e1f6-4e81-9fd7-eb7cca608e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b87ad4-9cc0-49bf-9857-0234a24f9454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07b8fea-9569-4b93-a30b-925202f3930a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc0ffe9-3711-4ef6-a692-9d12ddf58d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8af9279-cddd-489f-94f9-1781c544754e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0bdbc7-3fd9-488d-907d-e98950cccc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc26874-5d71-4286-9e48-4c43cfbae94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7f859b-edd7-41d4-b028-44976d6cddc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "197c28a7-9fed-48f5-8e03-4c383af3c988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be782020-34e4-48b0-9015-0a619aa5d370",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6f4122-3e92-4a06-9f40-7243d43785f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfd124b-b90c-44b2-936b-13fb066b641f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ec86b8-0d45-4cf4-8b07-450e14f062ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b17264-e8f3-4cb4-a94a-ae9201035e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f0b64d-a501-4f96-8f7a-b07b2881ccd7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d13e9f8-9894-422e-a862-49c46912acce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09747262-bb26-4e62-a0c7-771abdd20be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cc6692-ffb8-4c22-b345-85438462f0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c575e16-d237-45ba-8c81-24379a40f41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96442b6-bc82-4685-bf84-c25fa3bbe9c2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49f6f41-247a-40c8-81cd-268f55be19e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb04c1c-2a77-48a7-a426-de50233ea78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6c311a-e2ab-4d07-b727-d58426973b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adf4c375-361c-4919-b2a7-46550d00dd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed25d19b-868f-4b9c-b64c-bb502f62438f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142259da-95e3-4984-b418-e1de0e4b4ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2f9d03-fba5-41cf-a3a5-e23275cb3e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf21d3c-9fdd-4aea-ab4a-21a901dc8173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdf2b85-a2c6-4d2e-a867-8b049973490a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e199a435-cce4-41ec-8b97-fe1c50187bcc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f7fb5a-f3ae-4bf5-abdc-1a8c75149562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f7e887-95f5-4702-bfe9-6e18cfe50576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a412ef7b-d14e-4bf5-a520-875b04283dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a6001ebd-b351-4052-aba6-04c92d43ede9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdadc3c-10ff-4f61-936e-b9da425c473a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3d29d2-05ca-4aef-b96e-e9ded5c9b666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "976d66d7-02d9-463b-a152-502a76a71bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db46ebd-00c5-4427-a170-94f1a981e9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e84b6f4-0b8e-4fe5-a9d3-89ffb91b6adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab094c8-e936-4202-9817-931c80e988c5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac104d4d-2861-47b4-bdb4-8466742f680c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364916ec-789c-4f78-97e7-1496aaeee12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386bc755-60e1-4197-8546-53fcb5b7679b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc37b61-723a-4fce-9c67-f09c1c17da29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f9f418-d99d-498d-941b-fdac4c5ddf7c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91acd98b-efab-4238-a6f5-8006fd1c219b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e79eb0e-4bd6-43ee-aaf0-a77116f4ab7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10119707-c51b-4ab1-8ac7-106085d58412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d62efb3a-652e-4cf3-aca0-33621df0a7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fd982b-8e1e-4736-960e-4dd64314eaed",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192db8ba-ea17-4ef1-98fa-a9661a4c1057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb513f1-0e9f-43dd-a167-5bdfb52f673b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02b2754-322e-4cde-9c80-eb7bb1bc2ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b344d5-1756-4039-b43e-b612e2b4b120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffff435-5324-4f48-bb8f-f6eb640b39ac",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9c4771-9156-4d4b-a9a4-959c5a61a2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb7d392-c315-499d-8e32-b4d6c401ad42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8dc470-b0b7-49d6-9636-1d5f453ddaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b1f934-01a1-4e9a-b9a7-06a1979ed884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fac7fbd-d31f-490c-af21-531ff4d0ccff",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf90ae7-01f1-4566-b21f-bc6e4d825834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060ff938-6d1e-4c0f-aa3e-c06e33a76a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2ef698-3139-461e-9502-340c2c51c9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "310555cd-dd3d-42ba-a553-b4b10f0e8c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af462e3-8e1c-4921-81d5-30debede322e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3279b4bb-9e84-4ca2-b5b8-8f6e92a879ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8396fe91-2208-4fdd-81f5-0f22e981ccc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78d35e7-4aed-4214-9455-dc4fa0ce78c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d49d28b8-1c0e-42dc-90fc-c1421ee4dd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950fddf3-4fe7-4a2e-9aac-79dfd636afdb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11456c20-8445-4aa8-9914-a72bd68097bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cf7543-24ee-4014-b083-3e22a7b79535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fc722d-85b2-41db-a112-95747c3e7fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e15245-525e-49c5-a533-4650aa8fa196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5ce0df-3779-4c96-820c-ab0015c80ec1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a16b68b-17c6-4513-aa5e-e1559fc0e6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23ebef0-bf07-42e8-8db7-fd6bccd42354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0ee186-94ef-447f-8db0-adf62fc3e9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee03a82c-ba0f-4467-b9c8-466761f7868e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2ca53a-7a5f-4053-b953-ddca5394c7d5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1e5a6c-bc8f-4f08-b8f2-abc3257f6e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056fa567-61ac-4bf3-897f-29493002133f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4081e700-a6e1-4ffd-8a33-01f65b7355b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a51ef67c-4cdd-4e41-aef8-2f22910a7ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3188952c-b628-45e2-b1d9-4b6ad6aa122b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdac66e-c1bd-4b9c-ad6b-c28be27c856e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224ba64b-c900-4def-a83d-ef5a40192fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d111ac4-9bfe-40f0-98a5-1f07d605f56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "041841ec-cb67-4845-8042-5fdf04b03aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19602f41-ab7d-4800-9789-4a9bf94dc199",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ca00ae-3426-4f1f-974e-adb2364b9f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d28b95-3cda-4395-adb3-bc57331d164d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae43ddb5-3192-4a77-819f-7ab8d4a32c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a011ef2-8e6a-459c-92ec-57b0907ae5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a179ac4b-b4d9-4da9-acbe-51b90a65d444",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3df10b-65f0-4fc7-be2b-f102b513529a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4eba0b2-238b-4318-bf88-0c348f60f181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc08b176-67ce-4f03-8382-9f58d73b0e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dabab68-886d-4ec6-8918-73ef78595e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d8a002-07c7-4ff4-8c77-937f299db738",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791ba58b-7d4b-4dc9-843c-125fc7498d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccefa784-29bf-4944-8c9a-99f18f31793a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ca330f-be9c-46e0-9cfb-62e7d9dd3704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "272f5e72-18da-459f-a442-4b68c4654003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f34cb2d-f720-451d-be0e-8a908b3d3e24",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f2a5b9-3e5e-4b4a-ae27-72879195936e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e948d647-74d8-4fae-8eb7-6a942c6b71dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff1cc87-909c-4f46-bf11-26bb43669bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "714b91b5-0b43-4c98-8886-ff001f2b34b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13014bf-491c-446f-998e-e7da5911dff5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c74ea24-7d9f-490c-bf81-5533e220857d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516a50e7-cc6e-4b1a-ab58-70bdddd36da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd1bfe6-d775-42f2-b242-7b3c6ca40847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd4d3f7-5bd1-469e-9d6e-ffc395884730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c2808c-c8dd-46f9-a7f7-c4bb1b59459f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fe6518-99ca-419b-b209-59444601c9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250f170d-d7ff-45a8-9b1a-4522a4979a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144239a9-c754-4f8f-97f8-c04524c4ece6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dea08f8-1cec-4168-bf9f-90ccf75153e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806d8c35-bac7-4fad-9927-0f732c457d04",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653c44ad-f1e2-48d5-8b92-2419d5e96d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4fbeeb-343e-433e-b5b8-a4d5e123c31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31787cde-0130-4797-9cc8-fa3434e2e601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6d2af3-b94d-43ab-ba3c-5e2420b8fce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026e3c2e-7345-49c3-a126-64ecddff538b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f1a136-1a14-43f9-ba58-5ad97b6e026f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c025ca0-9936-4a98-961d-da1aa2fad504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fa76bc-1755-4243-ae59-b84a97c61837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f716b2-29b9-4930-a9fa-03c879c1f7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3f0c7c-3058-4646-b42c-6f40036ac5e7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0420ef63-22f9-4ccf-87b6-71733779aea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1ace6f-2756-420c-8b3b-3ed426c8677d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebae9349-9bce-4664-8e32-e7efa5d02b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f471dbe-1560-42de-9d9a-02650d0a16b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b22e69-0cbf-4b74-9026-dbcc2c7823bc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05256eb8-83a2-4b9a-948d-cbb39198601a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5228f74a-849b-4573-ac21-cabb1d8dc0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5883fdbb-0922-432c-85c4-957963785a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a42bccc4-0db7-4b03-8175-c09d598ea47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b251a7-aa48-4c77-a7d5-f2c067423432",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b1b6f3-9baf-424d-85f5-1698042c36fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befaaf48-c46d-45b5-8273-94dd899a7f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67eaa315-69f2-4b9e-9a31-0872cd10641f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6119c37d-a147-4b86-8c58-f2efab762dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ff0a91-97e4-49de-b843-725d4b2818de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cdb645-24b8-4e85-9d63-b487f5fe8e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e369d001-4491-4ccf-b7cd-f05aab9b1d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9807753f-f76a-41f4-b946-76a170a00cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dff23e7-98e2-4db6-ab03-dd6c4d6fd8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65f63c2-3a02-4f5b-bb7e-1be8d609f556",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b515a33e-07f6-4227-ba34-93e7ee0c8c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122d89fc-25a2-46c0-916c-5f95375601a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d46b377-dc29-4129-bd6d-288eca462710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22dabffe-b60f-4cb6-a012-192e02bbb6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c5edeb-1629-4f23-a1c1-398796a2e647",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d24c1fd-621d-46d1-a202-b396f45a4f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14663d2-f8c1-49f1-9063-8d4ad672e066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef10ec2-89e7-419d-b08d-26437d790149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "99add1a0-da00-4a21-9b75-a36385788ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6f4247-4524-4cf6-af00-2465c83eb8cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522eeb6b-9c4e-43f6-b2fd-61c864900fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cfd7c5-7798-483b-b5a7-a32a2bdeea53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec725b10-34f1-4e0f-89eb-638482e35fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c33db71-8a51-404b-aff3-f2dd804759c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5610902-d999-44ba-8c61-7b366af0cee4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0564cd-ff04-4979-8eff-8200c0884a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe60246-c480-41a4-a135-763340948adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7049a65-ed5f-4b6b-b817-f36d97634fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3ee431-07e9-4d11-9f88-a9cc83ac8e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b9fdc0-d155-4573-b3e1-d63af3acacbc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e21f9d9-1680-4bb6-8334-d0ab7088ff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdabbc6-a626-4290-93fa-f4df6d27498c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9e6ddc-8f45-4283-b462-3cef4e901451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a8fd58-3efd-4be4-832a-2e77ef9a95aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54325ad-3654-4262-9d5f-e6d7bf827972",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2fd01f-415a-4b17-8761-7438f7acc0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c06fa22-2f50-4db7-a83f-921ec24045cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e9dae1-cad1-4ed8-8ee0-1b621f78ad89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "709b9457-f621-435a-b430-ccf841848bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8e5c57-f754-4bb2-ae6e-d6ee3ffa3a31",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ab22fe-6e87-47f9-ba6a-601e7543a687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74d7174-a149-4e8e-8fb0-53839da39501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d38e55-b018-4d40-b654-f074e489a37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aadf24a-2aa8-4236-970b-2be9866df21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fab3bda-cf38-4a9e-a243-e246405a2485",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523db39f-6c62-429c-8be3-19821cecce97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90902841-8fa1-4904-b067-72f896b6df9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6269be57-ee40-4486-b677-bced8395a99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "285c4da6-d7a2-4569-8a82-5396b72d7c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e89226a-6565-434c-bb90-a42bce9591ea",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef96b328-db08-489b-95dc-800e3eea9797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e36041-67f4-4dd5-8131-cd10b367ace3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0eddec-3be7-4609-8ceb-82d93875985b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cb41ad-b437-4f45-845e-58982852604e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d5420e-81cf-4a6a-8f46-23bd31e04a93",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392d75af-efe0-4a01-a48d-97cf849f0fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069b85a4-0182-47ee-834d-041e297c251a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61925349-1cdd-4ed0-bbe6-f5df7c88d10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1a88ee-0507-4247-8c00-23a17c251166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6158b7b7-84de-4917-abbc-f6a9c60e177f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f832580-bc38-4964-ba3c-456bcddf2bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa72e53-2333-4fbb-96fe-24ae0ef885b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33f5630-1b4b-4ee1-a272-bcaaa7d253e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0d0dd8-26ba-4a83-b6f1-2fc3f32d5844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd646d36-a6bd-43dd-b1a7-4fcd27ebc83b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97b2c30-19fa-4805-a5f8-a9f170233991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d263c32-ae57-4c4c-b5f4-cdf5fcf3e38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767a1985-e614-4de2-9380-339d9d26b8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8575d6-c545-4d3a-8075-1a4952cf04d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7006fa3-72ae-4b28-9923-d906f1ee9335",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474eab95-0797-402b-98dd-3424ff323589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb6045b-99ce-4942-b945-506027b8a336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978c2d6a-379b-496b-b729-371a5ce163d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6f2ee7-21be-463d-8cb4-70e07405688c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12a659f-06a2-4726-9712-c86123ab315e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0115b0-b167-4a2b-8861-685c1060f3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347a3811-975f-49d3-be30-67422165cdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d28614-6ea8-41a1-a030-fc6f6e47f40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b337809a-837a-4f8c-9eac-7206e7e4ad5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac272f44-6d36-4b01-a6fe-257c9f40a808",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af725d9-e7c3-41d4-ac2e-46c77b179151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1419882-fa58-4a7f-be7e-4dede6572474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2588c3d3-693a-4db2-949a-8b5464078cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcff5082-3c88-4614-bf12-378f5f9a4a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c07f8f-887a-41a8-828b-ec2e82c63646",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3236b95-f59b-4ceb-bc5a-769cf35c8208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89488838-3e40-47b6-b7f8-d15482fe0704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236ebc09-ce17-4332-affd-7cb1148a4fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dabf480-f86f-4a32-8e0c-ada978a5fdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24df7957-2293-482d-b422-a6be81a5a0a0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513d7763-c5e2-4e61-b25a-b5ef81140b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4669e8d-a74b-4881-aa03-5ef179a1c1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9562cd-4f71-45ea-b7a6-02ccb02d91eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5d098c-8c8f-4db9-9aa4-46d08d7cf242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b27de9-7d29-44ed-b704-cfd86eaead4b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0b80aa-aa80-4d42-b33d-35cad9be471e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f35de1f-d120-4d36-8993-4b40da90bf4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82116350-0dc3-4f5d-ad4f-2d6617c5041b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb4e601-2893-4fc0-bc91-7f60782764ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc03780a-d826-47b0-a4aa-84d5c4dfb7e1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acca2b4-34b0-48cb-be7b-851d8e3966dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97adb4dd-782f-4d7d-b71b-4497a733c0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942a461c-be9f-4afb-9c96-ec7bc397f536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7717bc-4e65-432f-a616-9295d77d7d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83e1f09-536e-43e8-9cea-4540dff6952c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cba7bbf-f3c4-425d-bd1c-d1da96a32324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e79475-b560-4d00-a939-1b6e0df8e7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567d3aab-91b3-4b54-8c33-5130e968ce76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb36ba4-479b-4118-a5ad-7f21505938d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa50b09-1006-4cb4-afc2-d237d470cae3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ea5ba9-19bf-4382-a92a-b25bac46f089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a084a595-6a30-4f7c-83c5-4c18e4f7ac03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76403925-eb02-4a18-bd0b-f82403b628fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26a6de26-1007-42e2-803d-1950d271cad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e43ab1-44f1-4fc1-a881-31a5bf9e683c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608d3b96-7d0f-4273-84c0-7450da7044ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bb5984-53e6-4b74-848b-d49aa4e0ea4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc08aee7-52c0-4e24-a6f7-fef5df0975be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6183d9-bbfb-43cc-ac2c-e85fad1873bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b924d74-3ac3-4784-88ab-590aa401858d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b550b4f2-8f31-4ab6-8884-678aa53f9078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8a52e4-7ec0-4aa4-b2ed-6172dc01ef2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e449590-0e03-4379-905c-463661830034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a6a355-06c8-47d8-a68f-ce70b6295451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1227f8-9180-4fb4-b337-80b41804d5c1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd45053-e5aa-4132-9e86-3e69f2733ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ee0dc1-2a79-4a97-85a9-366c074172c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd88a84-96ae-4a37-af67-505b0266689b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e03344c4-723f-48bd-a8cb-dda20b1162c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba5a490-e312-4dd6-8d73-78ad2cc5bf0f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c32605-a64d-4403-a1b7-39be42b888cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2557ebb-d57d-4399-a65d-99fea5c563f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ae0bc1-5cbd-46c6-be6b-ded29272f35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf9f2b1-667b-4b50-a4d5-d6a52c237d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506e8055-7868-47b7-a2d2-11e58ea14c0f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1062a1f1-a103-4eaa-9284-cfe6ff1da833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d192ea-0cf4-4ab8-b364-e746d639e4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd00e316-782f-4138-9928-5792de7fc679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00874d7a-00df-4803-b67e-c5945163d137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b0ffa5-214d-4500-8b15-ff8dd8dedecc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935902af-2ffb-4307-b117-47e9fce5b747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890bc081-b807-4651-a824-37969532ef45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8ebc8f-f9d4-4569-a36f-6fcbfab70866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50269bff-48a0-4ac8-96be-ecdb7c6e69ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d1ffdc-b5f9-4d7b-beb2-b4466b2a76bc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01086700-8ea9-4f78-b831-f3b54350f27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1195e770-6798-4b0b-9618-37bcc043d0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e0d00c-2d61-4ab7-a250-86bcd231c4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9071455-0226-486b-b811-4f81479cdb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969ba690-b786-4e72-af35-659adb78b327",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af23c7ac-ed85-4524-87c7-a8040faace4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c19842-70f2-455b-bb73-3564607bcbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ffb83b-4a41-43f9-904b-361e2e13950a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "89eae01b-84e4-4403-a249-ed0f49fbaad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc38f452-046d-45d5-91b0-11385f801d4e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3720e4-7cc8-4e15-80be-83dea7817b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e7364f-318a-4132-96b8-2888a481263f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585f23eb-bc30-4369-8d6f-d0d9ba1083e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "720ccebc-29b0-4727-a5f6-8fb41d929696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83a24d0-b594-4b1c-8bcb-fb75c847f726",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962241ea-02af-476f-a38d-ec51181baae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f381c6-beb5-49cd-af59-779b4d89813e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d4b1f7-871a-4cf9-bfb0-b999e6f10d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27197072-8580-4995-add2-391c1df92cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6816f8-8626-4c24-9ab1-addabf338686",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c529aa2b-fd20-4e07-8258-c1c74808fae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac4a8b2-626e-423e-adbf-774f8517a884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e728c5a-4077-4158-aa5a-ff1c507dfb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "286e8479-3865-480c-b056-9c85f37cb40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc7937e-3f47-49ff-b078-674ebd6a120f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8404d973-37ea-4dd4-8f90-10573bf1e670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435d041a-5a3b-4149-933f-b1574b862428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f2344c-61f5-4ef9-9520-1d49d0df6195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "79902129-345a-4836-a8e5-a9728de9c42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08cae75-38f2-4218-b0bf-11f47241823f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017a0be4-826c-4c11-9112-dfd511dfca08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b41a1bc4-5957-42ad-9ba0-b1315adeac9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e379df8-58c4-4b7b-b4ca-881e5d39bcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dff7008-947c-48ec-a6c4-cff8cc2c0c88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1232dbf-0e9a-4570-96bb-54e556d8554e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8e936dd-9813-4245-8023-af1567dc786f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bfb02c-2825-4370-afcb-429223c5df11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "022d6c56-8160-4cb6-a9a0-959a956f6e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463bfe8f-9fd2-47d1-a0ea-70c5ea931249",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26a7adbe-e509-4e9a-b319-87b5f1f1cedc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3226724-cf32-4965-890f-14f344f3532f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5661a32-abe1-47f2-83ee-70900849ea60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a40442ef-ae09-4c69-9726-c126df273617",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffa72147-d1be-4cb4-aced-830beefc07aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7da59fb-423b-4efa-8fde-28d6576260b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b34a01bf-70f9-4d47-b27f-3a8f475e65d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eff4ae4d-0296-4927-b308-73354c5d1ee6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37f2aaf8-8046-44f9-973f-3d032b56b114"
                }
              }
            ]
          },
          {
            "id": "6dd874f4-3d9c-466a-b31e-f0d690a4e050",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cfde5229-cd6a-4909-83ea-33deb7d6eb24",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "477e4846-6e5b-49f2-a752-b97d9dfead91",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93df88b5-9e18-43ec-99b7-80687706cbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e98cdceb-e2b5-45ce-ad6e-705eb4d2c1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e40fd87-0802-45b3-94b4-1ed3d5214626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9bc80af-1038-414c-9ae8-64b597417e91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "038a5e18-4401-4daf-ba9c-ba3826b4f4df",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd5726d9-1a5b-4683-ae7d-6496ced3877e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0cf12ac6-877b-457e-9d6d-893f8e1c032b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7a7e759-b191-48ea-b202-e4b7520378d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49455c6b-3077-407d-8e16-b409b430d829"
                    }
                  }
                ]
              },
              {
                "id": "d39ef05b-a536-4a0e-851e-bb2412149ce0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf88964f-93a1-4749-8b85-3e6956610dbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9501381-f348-4ca8-98f4-f8222604a72f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5fe2683-e194-4afb-860e-815e7f5085f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ed7ee53-d69b-4cb3-9b78-e5e4205ef511"
                    }
                  }
                ]
              },
              {
                "id": "6aad746d-4c38-41b7-a51d-bce76d9aa293",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45da71fb-4abb-4167-bb44-619ffc083ca7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23e3d671-e7ac-4bd8-a0cd-f630974a94e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fd4deb1-255a-44c6-aa85-7cf687c12e82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0dfcf82-b4ab-4d8b-90ef-2eb072e5cf65"
                    }
                  }
                ]
              },
              {
                "id": "fd9e75f4-f7a6-466d-8daf-8f8683e76771",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "911cc5ba-e76c-4dee-bdfe-766d0dec8f13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e209ba45-7c0c-4e55-aa49-cc7173509fbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d5d8cae-f94d-41bf-9383-06c99072127d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "90f1fb79-2bcd-4df2-9e56-425c7c16a675"
                    }
                  }
                ]
              },
              {
                "id": "b983bcc2-8667-481e-a447-7c64d126038b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f059c192-a510-44c6-8a74-9fe93d5f4e38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a648e979-0d13-450b-bce6-5b27bf788456"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c86365e-ac20-4658-a36d-246605879d70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "88ff0ec0-e16f-4548-a58b-a44c539b978e"
                    }
                  }
                ]
              },
              {
                "id": "bd7197c4-e028-45da-a544-5b5c5e711e0b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a5394f6-eacc-4f5f-a1ce-cd5632a8a508",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a19e90c1-b7af-4996-89d8-a1578bbef711"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2989683-91e0-452d-9263-464aa895e0a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67e85244-c7bd-492d-ab37-0ea5f0096191"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77550da6-1023-4ebb-a248-116510eca371",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bca49959-7a21-42c3-b577-ba73e6277fcd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1990ba3-e487-4449-8ac3-a0870fbb80dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a37ee62b-8786-4d02-8391-ec40bf250729"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79382baa-8170-42f0-9c20-39a7411e3ed9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f479b6c5-ff4e-409b-b9d1-a8cb192d0090"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45973b84-ef99-4be6-805a-f9eb49c9af17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10c07d7b-5f92-4447-ae55-cb767c463415"
            }
          }
        ]
      },
      {
        "id": "638eb812-0dd1-4644-b5d9-f8eb11c5763c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5f07d47a-b1f6-413b-a452-49436eb7136e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "384490f9-78b5-49eb-a7ea-f4d8114be097",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b89fee13-f5d2-4170-8f37-1895bc7ad998",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c91e240-2d20-4581-8c60-3d6bb50fa341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994cc946-11f4-4560-a1f5-120b97dc5731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97db649-087b-4a3d-843c-fce4a3d7c42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7bd421-bb0a-4eb4-9df5-98e0e6f2d196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9c15bf-36df-46ea-a257-3e8e0e42b174",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeab8e9-fc65-4667-b671-34269a06101e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed51bc5-6564-4934-9b00-d5c572f01a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56e3972-a384-41c4-918e-5d9830406b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "981685fa-93af-48be-87e1-24f1ea11a9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe5d7d3-1fd8-4b42-a718-a53b9ac3df2c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca94ee8-3e1f-41b0-a5b0-6db16afed910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8555dd5d-c156-4fc3-8f81-1ea50796684e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af39fb51-f6ff-4afe-b068-d6da8c753a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d405b4e6-97c0-4eaf-9298-23adda046071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4396cad-88d2-4dc3-b360-a7f7736260fc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4756e7e9-91f7-472c-9f8c-dd3e7c084fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d519683-3c91-4025-943e-dc51fcd2b653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18655619-a107-4eb0-ac11-128331e04882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc00c77c-c433-4013-8c43-d2a39acd780c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf809aa8-2524-41a1-8a03-78c099360bb4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482ef35d-0abd-4638-af3d-b2ee2c2a22ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165a51ad-cbeb-478f-8f4f-99601104fc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d3074b-064e-4158-97e9-e7a8c51a7abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee60234-fdc3-4ad7-bf9b-96e087d39ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a0b78e-bc9f-4bc7-a0a3-06920a912a9c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e8dfd1-1587-4e64-849e-7b1a175bf8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e98a85-7178-415e-8c1a-1ac952478be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c65fef-792c-405f-a75d-c08fff95400a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edda0683-7e41-4206-92b2-ff9850cdb9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a294e94-9b96-44f0-ac71-4e1b157b3829",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6219878-690f-4e71-b3a7-c95f05e1af2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59b9949-7bc7-4393-ba87-6cd27e9e7079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17ed6f2-be85-4785-85b8-e3039e6cdb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "997cb459-0337-404b-a1d2-a701249ca6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08478d9-1b32-4eae-862e-8a721e3ab1c0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb5d17a-7ab7-4b19-97f7-bb0c7991eb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a875b09c-4d07-4b1c-ba2b-54764262cf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2111bb4-c9fe-48e8-b3bc-e1b4568e1a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01b67141-37cb-4d2d-9505-6d580cd01b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cdb9c7-b8cb-457b-aefa-1bc9866e262d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b29458c-0bd1-4745-b6b9-1d0668d2e9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388cc313-00a8-40fe-b628-17ea57bde5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f8f092-acae-4aed-8325-75220c74eda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38a44c80-3752-47cb-bc82-4ebe37b67239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563d4d10-d278-4d82-9fc0-7db8f9f18572",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c836f2-65b9-465a-ac10-1d5880420d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b713d5e5-60a5-47dc-ae76-e1c7697920e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d1fb94-12f9-4cb3-bd8b-fc16da8ad127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "553aa9ce-9ac8-4073-b030-9fbf8a63b961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704500c2-9ab8-42d9-a236-1b43885f31a4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50575168-4538-406e-b232-bf9b3aeaaa2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81087080-7d0f-473e-8555-dd0bd3fe6c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f02b29a-eb4f-4b69-b323-3ddb0ad6eb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b94eb05e-4c05-4db7-9682-81ebd03e5308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85943032-4143-459a-a9b6-2921b11e6529",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e29dcb-597b-4a5a-b771-355c4bd6c75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc229f4-ea0f-4da9-b9fa-b248286757d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a746e255-682a-463e-98fa-a282f3d5042b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "455ce36d-ab5c-4af6-bccc-6eee1c867a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b80c16-0585-4637-b760-d899b07ded24",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a1fd33-5786-41a0-96f5-f07c9ef910b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e35f7ae-0191-4cb4-98fd-d82a46a08289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1713aa0-b72f-432e-8ef3-6cc1be4ce11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb973cd9-bbc9-4662-92a5-8f8ab142497c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9019e717-9df6-4824-b145-b1a0e4bfb3c9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebf0599-99ea-442f-a997-b4e2923b84db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0a1cb6-62f7-4fb4-bd2a-27b2ea5dfdd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfafe90-eda5-4397-89b4-d8c1ef1b5a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2352a9-80cc-4cee-880f-e3da479c2081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd6aec9-1a52-4fef-a123-3cbf618f20dd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fe7003-5c80-4f20-a283-4d5c1e4ec90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1ff903-0807-4b6d-9122-c96dc72623f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c71487-1b38-41d2-b7cb-a2a2c98a7cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c257dd-2dd1-445b-8efe-e659d6fc9199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e98eabb-338b-42ba-9e5f-1d35869b0e3a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759578b7-35d2-485e-bae8-9ff7880ff9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76395dd9-ba5a-44cd-a3a2-da33b6a912dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d07e85-fe96-4163-a468-126f64420b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c32492da-5634-4758-8b2c-878461eec32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b45abdb-9fa1-434f-8ab6-b7e80dc92066",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8fe4a5-b001-4fa8-8c3a-dec90053525b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfe49da-341a-45f5-ac56-52433e6a34cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b511a5-5c4a-4b1f-9f22-98054f806daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6caa67-c099-41de-a59a-c542e56e4736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd55df8-3032-4ca9-bfb2-ef7ee9223186",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b02b8a4-6242-46b4-bd29-3c8d9f39cc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bad4b49-b66d-4ecf-bba0-b9eb4d8375f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e689d84c-55b1-4e81-bba2-f6289b966234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ee6021-18c3-4b2a-91a8-e6bef8e0b5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617e68a0-2cc1-4986-bc00-64455b4323b4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2eb6e7-8395-4ee8-9588-c1e698012e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ead74a-d24b-448d-84c6-e2bf58823c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6922e05d-0da4-4312-b955-835ff458d522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "641e6c57-7b6b-49b8-8b28-b386f4d1c8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7327f3f-9205-4048-b459-656824e58679",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f253bf3-b77a-4956-b57c-fcbdcab27bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d882da5c-b1bd-4e24-8ed7-09f8cd59a651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2188a3-c34b-4199-b42c-6b2e4a22886e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "568cf661-e0bf-453c-b755-246146314f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9d475c-63f2-4bb1-816b-cdec3504a12d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc521f3d-49cb-480f-a798-bba025814b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bdab91-2027-46bd-9e24-4b2fc259e244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742717ad-742a-4266-9243-5523c5b3dceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41636b9f-6152-4a0b-8108-b8b06ce85d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469c7d53-b3ed-40ad-9635-a5208f9c8954",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007f59b6-5ba0-43fe-a6c9-6645c58baa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29bf953e-ed5d-48b0-80a8-82c0d6798e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8101ba-50f5-40c1-a9a9-67663c0a7e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "debebee5-84f8-4c79-8bad-b8d9e98736a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ffc4da-ea95-490a-84a3-cbe1a8a1eb91",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a69e0d2-355d-4283-80df-907268994cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a32a48-9e01-4ad6-bd6e-33e4f758c857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f96927-b391-45cb-ac43-fafe7a0809ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37842be3-a87c-467e-8925-5a70992ec990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c12a94-15ac-4ee1-98a4-93888b6483b8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed32a313-df68-4774-b0db-5c3ecdd0dcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4616d8c-ac9f-4692-848b-68699614e5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c0c49c-2b24-40dd-a0e4-f4c814cb2be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e47845-b843-4aa8-b6c6-6ef6576dbbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d623265-3f2e-4689-8bb0-8d93b9a7bd1b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbe3a56-9d11-47f2-96b5-29bda17ff42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57d1b75-1b6b-42cc-af5a-de5fcb81e2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8217a17-53c9-43f1-a87b-5f9357bfddc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e16cbb81-dbd2-4f1b-9cd6-e033f3f55828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59fb3a9-a20a-43ec-a6e9-318bee18d9e1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972dd56d-56f0-4646-94ad-ddd0891297e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a45f53e-9d64-4a4f-a5e5-519e80a5143c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531b4227-6356-4fa7-a6b9-b864b005cbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7a4521-8e64-447e-b407-b121159ca0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0025e3-11be-4ae5-9ecb-a14e9a882185",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920cbce9-1571-4fa3-bc08-6b4127cbaf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1431814-bb5b-4b42-acbc-2e83ed0142e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950ee7b0-ec01-4e0e-bf65-6ec294730faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7648f70b-07fa-440e-ac2f-9910e3a900d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a031f74f-74da-461e-bb4b-e263a98db63e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2915d39d-68b1-4ccf-b399-53db0fd14364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507e3cea-d886-4ad8-9df0-db1c01e25a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bdcb56-a6ae-4def-a687-6d2e4b7ef985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d9310d-d502-488e-aa79-b962a400bad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6c804e-895f-4cf9-80d8-7167be089ee6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7810489d-5731-45df-b5f2-d046a1161b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b59762-22a1-4f2b-ac71-7a9db372cd21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae241039-da0f-4d5c-999b-ea8731fb3bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d81ebd3f-c8e2-4ccd-bb09-28d66e4cb0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e7fe8b-3d1b-4c58-b8e4-2012e051db05",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa10a6d-6007-4afc-83d4-3b33bb9a9dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c824df9e-d107-4fcd-b952-dacbe964ade9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85ed4e7-23c0-4f5c-ae74-d42f46af3147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ba8a66-a432-419c-9272-f5dfe54d1be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedb77e7-9555-4784-81c6-df4f6e13f6af",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f54fb5e-f18c-46ae-8871-ba9ab9fb1374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91f7ba1-8e28-4386-ac53-a4c78ae0d0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf315824-e9f4-404f-93fc-bebb0f8c8d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc749656-7af0-4b2c-b3cc-c85e90fe1078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d89237c-f407-4008-97c5-bda1ac9ee449",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc9bba3-f13a-4521-9fe0-760ae99634a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab79a38d-7a78-4019-915d-0f164a17c763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69462e0c-2297-454e-a2e3-345368747604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f459dca-376c-4aba-a889-cf785ea84a42"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "581178da-8e23-4175-a682-4536d5b5f5af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4a321df-04c0-4e4d-b9f1-67a27fe450c1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4fc978-9c7a-4bb2-81a1-de15902d4dd9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab2d415-30e7-49cb-b1b5-5fc1101ff5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f372802-1b74-4f3c-9732-5de972cc51b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34d52682-baa2-4368-a556-ce4d10f83b49"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faef90a9-3540-474b-a94d-c4627b68ce00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3667bf5-e187-4e28-a1da-760c5be55d8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69c7b935-4b04-4b0a-b907-caaed7ca1e43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b42e1dd-bde1-44ae-9a32-0b98b83b3278"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e403bd77-1b77-436f-a3e4-baa882464a5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "065b350b-65a5-429d-99a8-8c84cebcd3d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9994ec2-c83b-4164-92e7-fe15dc0cdf92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c769bd2b-9b08-4837-bc78-3059f06743aa"
            }
          }
        ]
      },
      {
        "id": "51358877-bf81-4514-b4fc-3491f1b40d40",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "eecddddd-e93e-47bb-956d-fa19973fbbd9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc85154d-bd32-442f-b8c5-61cfe695be50",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "301f8410-cf21-4f35-bfae-5e64bcde5ea4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908ead28-d1cc-47b3-884f-5192b4c53873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a0e726-5599-427f-a8dc-82f2834e9ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab2786e-e401-4999-9516-041bf6ae65ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9040d4-8b18-44f7-9aba-f55f3eceebfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596a251c-eafb-44eb-aeed-fd77815d126a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad498bc-c757-4b26-9a44-eaf83c523165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d0e9d8-c7b8-4a62-83d8-a7583fb55126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb75d20-b1bc-40cc-9a5b-a1ef03c35d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f31f8667-4ce7-4433-8ce6-1f1785942130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0f567d-f196-478f-8502-bb020547404d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c152099f-fc4a-4bd5-a46f-7c770fcecf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4de876d-7537-48b3-9d46-8ea013093299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc082c0-b905-4246-adea-5784913c1f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47cdddca-54b3-49a0-999e-e16fdafca5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eb4a35-dd80-47da-8fd4-2cd8ac9c61c5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d90580-48eb-4428-9d3b-c5db14f8257e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528cafa9-3a6a-4460-9333-c06a1a9c006c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e8c1c1-0099-41a4-8f9d-565818f0661d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "843509e1-5803-48bf-b893-b0622ff36f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19f9a81-bc3f-4f5c-8bfb-27004b0f18be",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0bd398-303e-465a-818f-a7d2eee84da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9f085d-0c63-4ecf-9846-d9379dcae4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44672d61-b70e-4d65-b895-7c6da0ed745e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3969c28b-dec3-47f7-9b52-71e5ea660350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0afeb1f-a12b-4cc8-abb8-09992465a81f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7cbb94-9df5-4127-90c5-5f3f088a330b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ef6184-a4f1-4988-9db4-a70c3602102d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd70e955-37e0-4429-8262-a4c4bdb3de4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14bd11c0-a363-4df0-9ffd-9bf3a1ff2e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fca00f1-511f-467d-9c60-10554185f40b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ab790f-3370-4d5f-866d-c4914aeee2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf1d9bc-bc34-4797-9c4f-a3b960fb0fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0423c60c-cafe-4930-8057-dfc77db9868d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6c241d-46c7-431b-ba64-8494ff87e014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e002498-b816-453d-8d63-3b6dcaf4974f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d067de26-969d-4541-860a-b0987329cb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690587f0-0662-4e6e-bbaa-d4412eb0859a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca38311-8d8c-4961-9c47-a8ac11e7ced1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "907c198a-5d64-4d8a-ad1b-35efbd6b8d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88887129-bce4-4367-b344-2e8e0c4e6f8d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18911a4f-e644-44d8-a68f-584ce38f5512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2b48b1-21c7-42c6-8938-96f32da65837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b816ff-7089-4bde-8b7a-8b43920468e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65617525-008d-4697-a933-60d1d521a337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710b708b-b91f-4edd-b9c7-d5bfb671a25a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2541cce-3195-46fa-82f1-1b9882eaa4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cbe0b4-c3b1-458a-8eff-1767a2860445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26aa2ac-6ee7-4faa-9277-2d51bfa18f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b97561d8-270f-448a-b4f9-a033e10e9e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee91dda9-ea03-4924-957f-d4274506c941",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2462c78-68e0-49d8-b2f9-e1c11b8a331d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b4520c-b0a8-4733-8f9b-243d92d44d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b3bff5-48a2-4dec-84fc-f0e301d1565e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7b89953b-92b6-495d-9d34-49ee86ac5185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054a50ee-c487-4e6f-a5d2-4191177b7842",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1a312b-9349-46b2-916e-cd45d84bc05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061079d7-d35c-47d7-8edd-2b367fd9788d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02792f39-28d6-4177-840a-a46fba013549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7a9fc1-6856-4ec7-a0bf-d9610dcfec02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1006e9e0-ac4b-436d-a54d-d650e18dfbab",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d46cf9c-98cb-4dc4-9533-b7a9f2d2dacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66b36ab-1325-428d-93c3-7ec6c237b373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdca832-3128-47b0-aec2-1a54bd738ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ec6383-b906-4918-a419-3a002f86b64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96459e3c-f9ec-4c05-9da2-286b74323892",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7eb2bc-1670-4bfe-bc6d-2f521d95eccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd57d53-1dcd-4a61-810f-1efbea6a1a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d63674-7ad2-48ba-8e10-3645cbb792fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e102803a-220f-415b-8921-d5ba04bbb432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3a4eed-cfca-44a3-aef4-4f648a5d13f8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eabd353-60ee-4a7a-bb61-43788d44ad50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee72c001-e63f-479c-9ec8-b2bc8d084dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4c3b83-f6a3-4446-a5ff-8bca648b5915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7041f097-606e-4669-aae5-ff110e5f9e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa8dfac-7474-429e-8e3d-ea6036021fd4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682cc716-e6dd-4eee-934c-a6ef50cdebfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a005b90-806b-4e4e-a2e3-3e1ff8ecbfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42a12b5-0b9f-4a0a-8193-00e4c05b9b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d442111-f464-47b5-87d0-b2035e11cacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c335a3-55b3-4820-9ae5-0c6882d53895",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901f850c-a44a-43ab-af33-0de850890e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2fd0a2a-6c8f-4ab1-a2af-ab6e3f62e0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eb7993-2d5b-40b6-9d22-e812f32e01dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9366139-2073-4050-a3a3-0828306a37d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c12ece2-ecca-4bb6-9929-9c53ac54ba52",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d8d078-102d-45df-908e-74b66f0f154a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a308571-8538-428b-9bb4-e404e8042fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f701add4-c8e5-476e-8b7b-8b23d5c1a88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2a396f-684b-4a81-ac85-47033e50453c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f461b57-05b6-48b3-b322-6f3844f84e37",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824788d8-135f-47eb-b103-72383f312e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80dd25f2-3156-4004-8362-000bc96525e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cccdad-a5f9-440b-95d1-d723b7770af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "710aff11-43a3-45cc-9914-886dd30a691c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc15142b-0fb2-4727-9176-e9298c425716",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af6e0cc-8896-46b7-817f-82d82fffc542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215661ca-edab-44f6-a2fe-f41a2ca2b350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18bd29d-e444-4322-acd7-1bb006b5d76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de5a1e29-17c6-4e62-b115-2d3cd9c3b54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017e11cb-772b-4204-a6c2-8e6c39a3e127",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea41ce9-e518-498c-add9-3a432c494d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84960b8b-d2ab-4ffd-8b57-45ec6fa81336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9885da2e-e3a1-41dd-9da9-1dde2d1e7b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "899dcd27-8f0c-4065-b12a-7b919af9d4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9c2b76-56f8-4074-99a7-1f6a1ad51926",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae71f8b1-6ab8-4384-b2c2-8c470e14b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e734a7b1-4b4d-4e4b-87cd-204ad68fa0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed267be-a21a-49b6-b38d-6a6aa79c052d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c54f6d5c-f0b8-41d4-9755-d98fd6aa69a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c744c9-d3da-4524-86a8-f81b8f2edf2c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103a8ea1-bfb9-453f-b57d-dd35a77ce284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d945198-2c82-43ac-8f38-e59702819129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39804e9-1c32-447e-9cc4-e235d06dd6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa4a915-fd23-498f-9515-b62139652345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fce8c8-7eb7-4306-9ae8-0797cb23cd73",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff80b527-33cc-4e3f-8c15-0a2e7883ddd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68353c86-d01d-443a-9998-407e8730947c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9168be3-622e-4cb9-95fb-1090da8b2ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b22799b-93ce-4ec9-8bdb-4fdcbfe2d2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c3751c-3de2-46b4-8e99-d8c042aa45b7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bcca95-4fdc-4316-b53c-ff0c93c01311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261764ee-e713-4e28-a4d0-8a9b708600f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501122cb-ccdc-4c44-b769-1538e3273bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6992af2-7096-4d74-bb5b-532afb726292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dfd828-ce83-415b-8699-55cc3941252d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d794f5e-c068-44ae-bae3-a4d98116f071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ce459e-9baa-4f64-865f-7532ab002819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafbe404-ec8e-4607-b38c-87458250cf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b704d1cb-0f36-4bab-9e70-0b3cd3887e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285b5a52-1cfc-4a98-aae6-0a77adbc2f5d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5748a27-2b5b-452f-b3ea-fcc140e59060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c20326-ae42-4586-8759-47937eaa2fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aade3333-65dc-44bd-9d8c-bd537d2499bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b826f2a2-fe15-4201-a8b0-426f56959a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808738aa-31a6-4619-8013-4b6710e0731a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac9a13c-7133-4dc3-afad-7718349b44a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a165b9-9276-4f2a-9313-e2b8af10b063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008cff77-7ff7-4dfd-8fb5-499d129d29eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "555ec846-fc34-4f55-a711-ab3b03afca67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dbb195-6054-426a-9b21-295f952616c3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ffa48a-5af6-4292-a42c-039a7e72a8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd2014a-980b-4e86-bd11-50d01f87f2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fce8f25-e589-4f97-bbeb-f50d6839828a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "583942fc-ed28-4758-94c4-d1f1e4e8f496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2b9a91-4e4e-4bf1-ad6e-fcaa19136e83",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79362a60-1789-4e60-a69f-91201efe5fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34aa58cd-04d1-4800-8360-19c59496ec42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b89e99e-92a9-4eb2-a6d5-7485b554ddce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a5398f-30a4-4110-b22b-f008f1e9406f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e0cb2e-bd6d-4e5d-a9f9-db1cf354f2bc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1885069c-7a25-4969-8d65-5e11f7d7a24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f13a3cf-579e-4df5-be68-c58cd486c519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d97673-d0e6-41a0-844e-8ad248bf95c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d83694-7972-4993-b0dc-b57290241d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb6d207-9476-4929-a385-088a836d1361",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fb2cd7-59c6-4f11-bac5-c11702f435a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b82ece3-19ae-4c4e-8a40-f05ef924b5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b088acd-0a0c-4e86-9d34-6634d44bae08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb391d9f-043f-4970-9b13-3d59e3a7f8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce0f315-3c7e-4d26-ade0-7e7a4cfe257f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7331fc3d-d3fa-470b-a55c-27875f580907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5276bc79-907f-4a80-bf10-209bcc4e77e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e26b2ed-8eb3-4a2e-84b6-bc6c984235f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "231c8d1e-7de2-4a94-8b36-d8a24ab4a31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554afe05-7022-4a32-9e92-7de3f9832766",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d572e4f-80c0-47f8-b8df-ea318b309d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94b7a81-1ff8-49bb-9f3c-c4f10bb37e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2936e7d-6ea9-44fb-85f6-45099a5a835b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf1316a-6f75-40f4-9a3e-c1cf572f0e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03aee23a-4b7f-4831-a1f1-8c3c3f85f52c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd054751-1cf5-469f-afae-e317ace01f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3735ac3-39c3-4efc-9c73-5df1566c7e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a5dd72-81c4-4fec-ae77-7f2e850451e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56a1c5de-0f3d-4fc5-9be9-497898b68ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070879a3-7f95-4e51-9b24-fd6f964dd913",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ec8321-38c2-43fe-9d1a-f0bfc4fe87e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e0fb96-4ceb-47ac-927b-3a169d9497f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c52eb0-aa23-4f91-9a0c-2a6eb1f68d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d59f9eea-ce7e-4147-b71d-6a02868fa1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6515ce3-139d-4123-9dce-ede11fc9e8ad",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d60f10-4c56-47a5-bb77-864b14926273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af49a3e-2a17-47ee-865a-743a9dae8d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e43530d-8dc5-4936-ad06-e09fbee31f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0877671-4cd6-4350-a534-18d66f6cb5a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d0a4867-79a7-45c1-abe4-116fec593d78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "274120d5-f7ae-443e-9053-5bd09bf7df71",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79b7c94-2fa5-4174-be39-2bd4343f4a0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "960e3baa-36a6-4206-bcdc-2225b0061432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0ce156-2eb7-443c-a24a-025a7758fea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e70a69c-4518-4c34-bc46-db6efec4ca51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33c392b1-7d4c-4a52-aa1e-b0ff0fb8c046",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17ee6312-baf9-457c-a833-d5d374b8181c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e273c54-b28b-4870-90d4-6cad77821a8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a1a1d98-a926-4367-baa8-d3074450a530"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd3e4d97-4f89-4645-8e94-b4f5f6937e02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "369b275f-8bbb-418f-a334-11222df41855"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9424278-9c03-40b8-8deb-90d18f1b3b90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1eefaf0-ef86-4b80-9b79-2b0279638f4b"
            }
          }
        ]
      },
      {
        "id": "ae7ff4c0-143c-4cb0-bf45-af77c5d9c7f5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c7a71686-a455-46fc-90c5-9d58910a8635",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20ab60fe-7fa8-41b6-a8fb-ee73d0291483",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5f265f4c-da80-4a40-bdca-c153c43d7b40",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c25f514-bc07-48b4-bc99-9fa4366a42b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22dee4e-0ad7-4ed7-b6ba-91398c471986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb97a40-e27c-4d91-b9a0-0baa4c1412ad",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dde290-8dcd-4b72-835f-eeb65be46c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe388ad7-8454-44be-bdd4-b60e058d05c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8f5c53-b5e5-4f62-9f97-f28798a0c1d5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acd7584-7878-4655-9d49-29eb35ca1e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81feaebb-c63c-4a1a-896f-cb95bd704255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ca10cd-9fb7-4f0a-a97c-f9b99e54a622",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f3003f-7d04-4fb2-9946-1ae77dbe9f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cfe36f-37c3-4fe6-888e-ddf584f1b10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21408dc3-99f1-48e1-8440-1c64a6de2944",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e5d1d5-0d29-4aff-89cf-192b820da4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4bd7c4-5b91-48c6-b8eb-5bca0e24fa50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155aeb06-9b3b-4ce1-b5ea-7edbc75360a8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f627601-9e6c-4675-988a-a244695d94b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce949952-51d7-4eda-af65-17427687afa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a983fbde-1d1a-4495-896b-a86832b5d780",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09142388-1f84-43f3-b0f0-a6c759ba106f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8224dd-78f0-4a2e-9f6e-a4e7dfe83514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49145453-6198-48b7-b9c9-2d36c66c7593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079bcdfb-f657-4c16-aa7f-c44bdca8feaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a160ab79-1c18-471f-88c6-babceaf1f4a8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e5c18e-b21b-4438-b377-e5509beb25b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93bc1cff-463b-45ba-a289-3da337d19867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46510ce-7302-423d-9921-d0358a2bf69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2659f1a-8c1b-45b7-8141-ab7f7b6304fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8458028d-0ae8-4bdb-b223-9b1330722f05",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe5f933-ed1b-4b49-adc2-a63ed87a1f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9a1ae6-31df-4474-af90-09dcb04ad084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7fcfd8-4912-4b96-8ab9-5089e7b3bf4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cfccbe-f454-4c9a-bba7-8b3153ef0b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1683624-bd7a-4d4a-a680-e2695f5e7d1d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1062f5bc-f5b6-4905-a320-cb3aaf1fbb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9f0b8a-ab40-4f43-81a0-91e931eea7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11271eb4-f459-4cb8-b015-f1aee5eddacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ced92c-d555-49c7-a693-f8219fc57974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ddb3be-c773-4120-8dfc-16ae03188564",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f46978e-66f1-4465-8ecf-1395846eaa88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc7c7ce-7cb9-429f-8e15-bcda397e8b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df07348-545a-4ede-9b87-2baeaa85063a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f01c29b-2bf2-4234-abc5-43e278b25341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03d3fb9-7f04-451f-9ab9-85abff3bae80",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd21c9cd-7682-4d66-b27f-546edd800a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cbf372-301b-40fd-b383-ce40477bed62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4577e8-c30e-48dd-8fba-e9557bfe9177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f188506-6d10-4237-8bca-89d8ebd62cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd2104e-228c-4d6d-9d0f-1127d59494ba",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14783653-a94e-479c-9b91-e0c0748b45fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd403e2-8a30-4c5b-bc3d-f3cfc40f26b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbadfcd5-494a-49b1-8b28-254011902fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c009836f-2d24-4684-a460-1928bb664868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3ddcaf-ad62-427e-9a03-08b4556877bd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e51a535-b6aa-42b9-8b79-6e6599a71893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e86fb11-897a-4c65-8901-cf7de8d68f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541e9d8b-a8d9-4a85-bad6-ee59e1176dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170cef17-9090-4438-bc53-ead52bf8f103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e775b7-38c4-4234-8003-e17d80089ec0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2771a59-ed5c-405e-a464-432c1d2ef6c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "040d1dc0-2bf4-4fcd-9c33-c4b81cd7f456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28974ce3-6c55-40b1-9010-5deadc93030b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfed36d6-0e47-43bd-99b4-62ec1e667419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400bac88-7814-400e-aa07-05669b25c7fb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98999583-e83a-4325-8148-270abb92b3bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab1a671a-0f04-40e7-a469-d09ba4124f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8ff443-95b7-4425-991b-010b314a5b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141a6ce6-3e75-4411-ae49-cb277e4d3092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aee3017-9312-4129-82c3-f8ae75fb0c9a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f4bdf4-476e-4ffe-a64f-6158b7e3e74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2cb808-ef5e-4e14-923a-b6e5ae81f6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42193303-6758-4999-9b4e-df2996ae24fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e0138d-e5bc-40c6-8291-1117f87b2082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0ae368-1dec-4194-a8ee-4df7e938df29",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d506a53-6295-4544-bd48-4cf5f3ceff16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71cfda42-9fba-4510-a7c3-af0199609498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cc861a-e094-4bb3-9623-a3c709f60e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ced4be-7796-47e2-a7d2-083877f499b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457dba0c-d3f3-4357-8940-a6be774139b3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bc0266-9b42-42b1-90d7-3184817829eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db84625-dcc8-4eca-9617-624d55036215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec025d52-1274-4ee9-9487-b0e15085639d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7ce498-0d7a-419b-87c1-cfd44cc17f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1132d7-6b6c-40c1-b31a-cfa6bb49bf20",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cf5167-fb9e-4f33-9e1f-cc6da01c5697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffacd65-bde4-4ccb-91a5-6d23d9e75d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46926edc-736b-461a-adf2-4d3c08c363a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02082438-968a-4bb3-99b1-66f4c81442d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20093261-e667-4642-b0dd-9cd832931bb1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2145400c-ccbc-499c-aee4-f71333b37a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0faf134-a412-4530-b708-17d8baa06f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b61759-7907-4c29-8c91-d7e887ce03bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcaa2cc-802d-430e-a4a1-f7bb391df964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcd3c22-dfba-4af7-8793-73db80173bd2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42129961-cb98-4de3-8431-cd8d7b5de930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bb7d84-244b-4cc9-aad9-19a55872a1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7089e8cc-0431-4547-a358-faa63cfb81b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62597ae4-2af7-4c42-b971-d0e5369b2a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b730ddc3-437d-4178-a2fa-8171331b0603",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6558062d-e603-438d-87fc-32fd4d146517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153f9586-1194-4d57-8b11-c5390b466090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b16cdd-4768-4b7b-8c1c-e9c2008059fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ee4f0f-072e-43fc-9f03-f1d7b0032c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b30002e-6e56-483b-a0ca-41496061a5db",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436e9e5c-bccf-4b32-96ad-d13e666d1ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "520e8c1d-9fa5-4952-b1c1-e35856e6f293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c2aac6-e6ab-417b-85b3-93764e12ea42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13a329a-5c4e-4359-a2e0-6af5360ef8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581b05f0-ad8b-44d4-8bc3-0f9112a111ad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ef9106-f9e2-44ae-b9d0-a0f821cff029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b4e9c01-0745-4fe0-840a-9270deb86ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b48c9b9-5ced-4588-9cc5-e40e4310da94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e0c813-f3bf-49e0-baaa-9b61349e351b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45e79b5-4799-4fd0-9578-f8837e5cb1a8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1de1f81-6cf8-4bf0-8fa0-cca94f5f6d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06ccfe9-7af6-4b91-9eb6-a8ca43f61fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb087df4-798c-47e4-9854-ff8f8a743946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b421dd1-6482-47a9-bea7-2d89b7cf39cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154b8146-e5c5-4278-ab05-f03e8c8a2d04",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6cb788-21ca-47b9-88ef-9750a330ec9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e69a60-1e56-49d1-8200-80cd76fc5240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfc3840-ba5b-42bd-a063-70906abaf2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b399ca12-69f4-4475-bf32-dd1918764361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5642afd6-1ce8-4145-83f0-69f98df3ed53",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6484fa8-993b-45b9-bb11-b434f4819e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c891e22-1502-4c63-b2e0-c7afda43d35f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe98571-2d74-4a1f-b9e6-ddda258c8d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab83474-711b-4994-84d8-feb6e00f998f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4673b41-e381-499b-b162-916b56fe114a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8365d89b-9f08-4545-a80f-a4a7c79406b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b0595b-cb3b-4296-9e81-63e35bebb49e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72ab0da-e7f6-4d96-bbbc-0d2d8698a8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea673dae-a91f-43bc-97b9-fa1b9f577bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceedd08c-4463-4aaf-8f71-6f226192518a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9851119a-1110-40b2-a3d1-13ed1650cb43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c47a51-e5e2-4584-91b0-7a3457c21e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7974f4a2-09e1-4f61-86d3-fbe08213fe5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5a23a1-777e-4443-b536-1afdc6ef9a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8847d7-3d94-42db-875c-9c6686017201",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42d6075-c75b-4bbe-a0c5-c5abb15ba20e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2c57a93-e582-4d77-ac70-1325a5e6d9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83aaa519-1e37-4bad-a64f-a1e676c35ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0cc2eca-8af8-4e4b-b4b1-2162d4bf9cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99da30f7-9529-4ce6-8954-92d0c38eb321",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6b9fd0-9f39-49a9-97e6-4bb4e9a25227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518146dc-632a-4337-b31f-28d5765b5cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67e2d0d-28b8-4374-a1e4-39764ea22c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cecad8-e45d-4c5b-8d91-9dc659ca3e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cb6278-35f8-4e73-a132-b015733fd99f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10aab916-6393-4f89-a0cf-e570511e3dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf90fd3-0cf1-434d-a272-392fc75a74d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f03c6a7-c9e6-445a-b3ac-7975a33bff21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4956522b-15e4-4149-8133-2b51419463a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e944678-4b23-416d-9db7-319936e9864c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c92e282-0506-4674-a2dc-1cc58ad2e518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5a6b442-6586-48f8-9e93-c43a70a33a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb416d5f-ff23-4634-93c2-6e7c336f332a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6212a4-0cb0-4728-bf06-25526e679732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a897e3e-b1b2-41c3-b1a9-89290922886e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150c12c3-123e-4bc2-b00d-5a365ceeb48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c901e1-ce1a-49d5-8f0b-b57df89fa37a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04da4223-95d8-4074-9bde-37d74236972c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8018e7b3-73fe-4b5c-bc3f-56c4aa1e54ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b901ddcb-a505-4002-b11d-4ecde7cc656c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c007f8d-4cc8-4759-923b-3e32025a7290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2832fa-285e-4da4-89f8-2ee63d26e412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bf2b27-39c3-4b4b-9a64-a28e878f0b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d01405-d3b2-42e5-8a49-42c991835cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a013fde7-57e3-4bd4-86c8-a07c7b4d01b7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0784e5-f254-48e0-9f0a-12b9e7e9a805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae80d629-7595-4ab3-9429-aa6dc1843c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ff1beb-a022-44d9-8863-f0dcce387332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b742a6f5-6921-4e25-a04f-495cf64cd595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9c92a8-6540-4c55-9ad0-a669358c3bb9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf6c5a3-dff6-48df-b5ed-44272dcf7d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53c93d9-5cf8-4368-9a60-f734f5fc162c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bf9d6d-a372-4033-8ffe-25f15d830926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece49a27-4407-4510-8bd7-2fe93635222c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1407c070-4713-4ec7-8714-814a20aedc23",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc937c03-b6ea-435f-b1c2-93ed0a500c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f754406-c103-4358-8974-c78b01c49139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b934ca-1445-4273-9599-c69155030eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4a626e-3562-47af-b8ac-e559098b2a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeac687-f14e-4536-9d38-b28d5aaf1fc5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebaf935c-2acc-4393-9064-32a992fbf020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266c4740-dbc9-47ad-a345-b55bc9cd3716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f26d710-7c48-4945-9540-ca4d62e080ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6cc856c-a10d-4321-b36b-00df9fc95bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18216231-6e53-479a-b5d8-8a5b5dbc7c20",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725d070e-f29d-437c-977d-bc99f5f2d2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77b5b5b-b398-40d3-89e3-a95c7eea8b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844c6651-d366-43d3-9ef4-8d17864d57c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ea02dc-f8cf-47b0-b1e7-847e14b2b1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76ad4cf-f72d-43a9-a848-11d32caeb1fe",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dd86c1-dac9-4f11-8b7d-7569d21824a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d71d6f3-b9ae-47dc-9c85-918c445b0cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c2d147-3ff9-441e-9178-82583ccb24e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d9c246-ce96-4670-8c1f-b2efc988e21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ba3b77-8a46-4db1-856f-4b16a0612d65",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a39869-bd8c-45a0-9b99-604cd11a7303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc26039-8217-4f4c-9898-48945641c39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da3c7bd-a7fd-465e-b0fb-4956cb22c6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82d8eeb-b927-4895-ada2-dded25460c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cc3957-ed40-4a1f-89c3-2f71dfdb0ef8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdbd53f-6c3f-4ab3-9fce-268e431fc563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924843b2-8c47-4bbe-ae72-817ecdebd042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61533c55-0538-412d-9bab-8b195aaf7d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ede087e-4141-44a8-8218-8c50941af990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5da13a3-a95b-4504-b341-fe10e0246fe7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f26916-8199-4d07-8a78-cf81dbf4d95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ae3e4f-2a97-4767-96c0-b3e4060c6728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d25de8-35cb-4b72-91b3-0d9fe9c47e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e77a4a-d7b1-4f80-a345-163a28ccee09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2da80b-9eb4-4acb-b322-15f515393f53",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7445c1d3-158b-4e90-a326-08435c7846e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d25da6c-158c-486c-8fee-2e33989f26c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ccd34c-7957-4f46-b41d-8770940ede1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559d3181-1d52-4ecd-ba3d-c839d78b4a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99568d8-4a49-4734-b1d4-30247a9fd884",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44214f76-7424-426c-89fa-7542882ae732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e270e79f-9410-492d-b9a4-ad58933ccb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031b86fc-168e-4b74-943f-fd05a4f91bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7714b879-29b9-427c-bc8b-7e89ac182234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577e46e4-5c41-441f-a295-b4cee3fde4b6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ff7901-8ff6-43cc-a779-fae10edde368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b82f32-a33d-4c4b-8848-55472740be85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043979b2-a53f-4473-8236-87939a0bf1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d3dabf-b642-4a93-b332-f64648f9b6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55df6031-1929-41b9-a2ea-335acd27a966",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5d7e40-1d71-428a-9ac7-cd4b5dd2658d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40ded29-5b73-4a99-abce-88b9a58b0c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e420b024-05f6-4853-bed2-019b0f546419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e04013c-a5b6-4ffc-b949-71c4333765ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c4ce27-92c4-41d2-b2b5-1123949f658f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2e7573-d9e8-457e-a6ec-7ee804b3e872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca5d568-5250-4437-a461-91284640bbd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc905a4-dcfd-4d9c-bc1d-0a64e9ff154a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddad83c6-6bca-4b0e-b56d-9c28e5358ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba018a75-4f48-44c8-87be-16be806bea8c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bd868d-717b-444a-876e-c41ce80d85ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428317ee-045d-4691-9695-a50d659dfb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973129c9-75a5-4a3e-86d3-4600fa262a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fd0e17-83a0-41f4-bbbc-40a0ed13b2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecc27ed-4835-4670-96e2-fd34e475002a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6e5c46-97ad-478e-8082-daab76d38fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8d0338-6a6f-4f04-88ad-e083b1776585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ecaff7-57a1-4cfa-8dda-e13dc130b64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebcec22-3bb5-4863-afdd-459c7d14c552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7377146-e797-4d21-9f2a-56178b3d8c21",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a941308-93f2-4fb3-a172-ffa75e43d334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7f3d0f-3b2b-46ce-b6ec-2e1b93f4dbe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bbf6c9-f891-4626-9bd7-511f7498eb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08a08b8-c069-46c3-addc-9fc05bff0c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb04936-f234-4a38-b8d8-817cd7ae92c9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9059f0db-8407-4fd4-8841-cfc7c137b3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504070d7-fae4-4e23-98bf-8b885311dca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22f9d2a-06ee-4fed-9ba6-7d96d97338d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75de273-9369-4a05-a68b-b3f1590adadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fec55c-4931-4716-9683-6d9c75eb9283",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfa9831-7a77-4d5d-bc0a-6866b243e1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7bd0e1-b7f1-435e-af77-f6125fa5e685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407135a6-e724-417a-b8b6-ed64620a4b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34bd68ce-8e15-4350-8375-92453555c632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc76b36a-b29e-4432-bcec-e9629d7f5c37",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56fd1f2-eb2d-46c2-bb62-7209777c8ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0161b9a9-b7fd-4037-9761-3d224f9e7c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f82240-2dd7-4041-b8bd-08c787c488d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c6be7b-647c-4534-84b1-eb383a6bee43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cf9cff-8f59-40f0-bd69-d3f7dee50f3f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec066e16-3ad5-4845-98ac-14972daea4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a0c6fd-d213-4b29-9207-b33db622e997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fd368f-078c-4ac3-9f14-3dbe0d380ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a848f410-53a3-4222-9642-778f379e707f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d8ff31-cb02-4375-9801-30930df06b1a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3582db3c-0b0e-49d2-87b6-3e6f97b3ed6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a621fb77-3f73-4680-ab82-f816bfa2ef26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c206f053-ff70-4895-bbb8-95785c03c206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d247d9b2-3d7b-4941-ad8a-39720778f171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e62fd76-8426-40ee-ab4c-ebb02c8d31d4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6340ca1-9e1a-4c37-908a-136b02216cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6626e8be-8cff-4d2b-8c79-be913200ce27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95809f46-7153-495b-bcd3-bf586984854d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f95dbc-e411-4782-8c1b-33fd0a572d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8313b76b-55a4-4c32-a6c1-d86dc45a02f5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099a6c00-b672-4fc0-80a2-5ec240124dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb32476f-96aa-4f80-90fd-76a751fe7f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ec595c-c4f4-4c1a-9162-0887af50c396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ca5c81-8f39-4a9f-b3ac-92fbb5a5a15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e65a4c9-b996-42d5-8238-f3791590c0e1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed65c1b-a9e5-498b-9396-30596a9dc7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f306b455-198a-4a2d-a0ef-27f02956f64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6435b9-603f-47b0-a61e-1b9aa8bcadc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ea8c8c-a7b4-47a5-a310-1c3fdb8e02be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c08ef20-1ca3-4a36-922a-c590b7dbe51f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc42dd9-4d78-4d56-95c4-8574afb64b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2563a723-24db-410d-b6f2-f2168325d6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f579c3-9a9c-419e-9f16-47510ed73d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22660f3-9dc1-4261-9c44-509e96fdaee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3302a032-08d1-4c54-a82c-ff34ed8271b1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1c6faf-0f2b-4191-bdbd-daf789c0619f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b01633-6bc1-46d6-a6c7-158b6f6c233e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9034ef5b-aac6-4969-94d9-8b931318c739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6f1b9b-5b0d-4f66-9d88-588d6edd6c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd70b30a-0c12-42ee-8563-82cb386febe0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fb1c43-3456-49f8-8652-890c74f3a511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01629f88-f5ce-4289-9c08-7cb5057503b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bae5738-834e-465e-9516-89599fa0e618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7e1469-60fd-468c-aad2-3156fa8422aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac415cf-8b4c-4927-85e1-9cfe6829fcd7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a459433c-bd0f-43b7-9b54-869ad6d02cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c035917-96c0-4829-82df-d1eff700ac56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536a8ad1-dd3f-43c2-b7fd-6071b66e919b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9d4661-dc30-44aa-8522-a03eb125915f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dcfcf0-900e-4c77-b77a-a4d22a9c4ab8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559ee4fd-adae-4637-b07f-07fccb906f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff416f65-aaf0-4760-ae8a-2fbdff1affc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a80d053-7c2f-41bc-9275-7d84b71ae9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb79eb8f-005e-4066-acc0-e02c2903e2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7077dc8-6a81-4b1e-bcd1-75ff01821737",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69a992a-c2f1-4695-b413-7feacb27a5cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9943a1e8-9ba2-4829-afaa-d96f5a9e5fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f3768b-94e7-4d47-a23d-e21ef01a6cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79753fc-afcb-4aac-9d6b-9690e5d8252d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59002cbd-a418-470d-bc1d-a08e494e8e3b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcc9571-21f9-400d-aecf-abdf58aea0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b9b9b5-a455-4497-8fc0-da65e25cadfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933bb31a-9097-40fe-9d3c-09e65408f64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d430d8-d0a7-4e81-8745-0e8c55c68f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3857bdc3-da93-4baf-aa7c-2655c4ffefa5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d45d24-75bc-4439-9afd-0b1ace389d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6574c861-1da3-49b4-a691-44b9e36eb742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c8a42c-09ff-471a-beb4-33cf7f38e84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c955e3-5bc5-46f4-b35b-917a620f109a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cf8f59-3a4a-4f5f-a4eb-e0885d4868dc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5f2a88-755a-4cb6-9c84-8013ff91d480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8084ce64-e5c9-4474-8f1b-c1e886626f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8adfd5-7a7c-497f-8190-817fa14b20f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ab6c6b-d438-4091-b9ee-d80dabd9c969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5819095-b1ba-44bf-a694-290988598e04",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a4b97b-2770-466a-a56a-3c83d8c7009b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57889f5d-d61e-41e0-ac64-c4ff11f9f1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75b255f-2ec8-4eb3-9b93-d934727a56fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc37d8c-0035-42ee-b431-96f5c66d9ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb8d7d5-acd2-4e69-aa9c-1b8dfeacb61a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92065d6-a1d9-4984-9692-4f74e8f734be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fc02e61-a4a6-4424-9ada-1a48856cb375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df68a35-ec8a-4cdc-848e-1ea7b1ead1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8f253c-b33e-4484-8407-4a5454286512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3767787f-bcc0-420b-8378-e01c5448d3df",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790e0706-52e3-4cf3-ba95-b88aa18a5105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e14146d-f638-4390-8f4f-3ab07e4aa88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9779f494-06cc-4527-84d9-bef98341984c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71be1323-b620-48a9-93da-07a3811b6625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57164c2-2bdb-4b6a-af28-d8d9a96132b7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfae403c-5dcd-481a-91fa-067a1c0ffffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0493a33a-1ca1-4a31-8c3a-0d8825ea18a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e257c6f-dac7-4c22-8679-922bf148c7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b8a5c8-e8fb-454a-a437-e86c05e32f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf5acac-ab1a-4bce-85f7-2b56e5da8143",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039e104b-6781-4691-bcb7-bdd1ad699093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c194ae39-d86b-4f53-984c-e84a749d41a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4e4a6c-7d60-4232-8ae2-442ae366ccc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4890ed19-3d4b-4600-bb9e-ce55599d30c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b5287d-48d5-4e9c-b2da-55a1480d0639",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e9dd0f-92b2-49ae-adf7-d67339c1bbe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a6db38-d578-4771-a9ec-d0f041515ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c78336-4f1c-40d7-8f8c-38c1316573bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8c2916-11d0-46fe-9eb8-f7e89668d630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02736789-032f-43e7-aa62-407d3c45f19e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1a5d76-276c-4fb4-b032-1cb7ec9bd192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7c6d59-2815-4a03-8aaf-b3b8970e7743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf0dcd6-5c1d-47b4-8473-7de6fecf40bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b59a47b-2159-4fb7-a461-98a7c3878e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de17af47-3708-48c5-89c0-dce8eb9e69c2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89d7ee4-b3e3-4cff-b8dd-c69881e8aea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b39c23ca-0295-49e2-8d36-10ec5470803b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042e0358-3a1a-4329-a207-6e68d7e60bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc482b9d-8efc-4639-a1e0-ea33c2db8f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376b3d5f-a39e-4ebd-8934-76422e3a9732",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb071fb-7ef7-4b02-82c4-7886bff51f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ac6b2a1-0e51-4609-a966-7fbc233f0425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5317f6fd-47e9-4a15-acec-7f2cdfc1fa29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac77178-73cf-4050-a453-b6055462e685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0ecb5d-8669-4e0b-8aab-6e63bd4aae45",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d324bba2-c001-4fbf-a1dc-1404037cabce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a38a5b-e089-43e6-8447-71f83e0b9f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52d5113-819f-45d1-9cd9-fbe8ea2e12ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6032e434-1e32-4852-9047-64d181e1bf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a84bf41-ff10-4480-ab6e-b3a168e0b233",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a485053-10ac-4015-b5b0-1b0800f32bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85b82ff4-4f97-4c9e-98d5-562d90a40848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4f6f6d-162a-4290-a389-50ae121b8a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64855282-cb09-49c2-b413-c48c0ce4e551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdafc67-7c7c-43aa-92b8-aa9e3f386367",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86fd790-c1a5-4fde-bc96-5e3eac7af08f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ff334e-1819-48a3-aae0-704ceea05a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e697d0c-d4c2-49ba-ac22-7b71c578cbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b2a277-47f9-4316-934a-7d165fb91928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc89871-93e1-479b-a054-ccc0cd772497",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114ffe00-8a34-4d0a-8ec9-c4fa2a334c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f84cf91-4528-4f06-b9df-86ae4db755f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07a5ac7-2415-4ba3-987c-8b130d87f57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80522c6-eb2a-42df-abe8-491d9ac01d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e380d8ea-3cc2-41ee-a7bb-21e9cd75f691",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f7510e-24fd-47d1-90da-797d8a979c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d7581f-332a-49f5-8d6a-f5d1f45f3c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2eb898c-78d5-4ee6-9530-0b803dc59712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e80246-a2b9-4b1c-961f-5357c5b86a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a46cdbd-3f4f-4f53-8c4a-dae1cdbb7170",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0450cbe-de0c-4204-a0bf-d25a760c047f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc91de1-2a0f-472f-8e62-f9bb6e3da04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4916779a-d013-42d7-8246-b1708efa1150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279b8dfd-f10a-4d31-acda-7f8d81dc2111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b76ecdc-f921-4c10-bcd6-3643dc9ee3da",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4773be8-bea1-4ea8-9fae-f97bbc099115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2125700-11bf-4eb8-a8a9-e99d65948e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e456ab4-74e2-4f82-aeda-2aac1e1bb3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f254362f-7d26-4805-a527-b4d1649544b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb42da0-8086-4144-a447-57180ef1fa51",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8bb3e7-3298-4d6d-b3b9-5dd0c3c19889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8bc69d3-e158-42bc-8ea4-4785cab45bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb7e610-8a24-43b1-b493-d3e7e6267a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87cd8d5-7387-4290-a783-c3ae2e762336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251b805a-e57f-4c9f-bd9d-ea1c4cde3303",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35aaf594-bec5-481e-a233-04eeefe28db0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f977ebe5-0f88-4159-9f5a-ea066fda1f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7e0585-b64a-417a-a5a2-1e9a753374b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd5fa91-e131-452a-80de-a367b0409bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0105674b-7932-459c-abca-a25651a9ef32",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dc6558-4291-4d70-978d-8524d5a51b08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57fdc192-1334-4ca0-b58b-179c7cfa9e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2140d4-6971-4fe8-8a7e-e9362931340a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b4ae85-24bb-448d-b8ae-613e6a1b5b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a320299f-0716-4b45-86e7-f51465970687",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0520d426-d591-4065-817c-f4c2649afb40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94453ea7-ad27-4c83-b906-525d95dbaf83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7296b868-f362-4c20-9acb-c97ce7be667e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6313c12-279e-4a0b-a534-414f9e6f5dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c747c359-9330-412f-89ff-6b610335e0ea",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f6a588-e169-4b3d-a5fa-54f07e670b05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "726367d6-10da-4d7d-92aa-7f8e1ec3bf7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a8a03f-7bff-4d33-a71f-787fe9922553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30755dc9-ab4b-4691-a860-a88b40c2dbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3444174a-c516-40aa-a946-b929588b30cc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb81d24-410e-4b79-981e-3d554cd469c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed9ca0b7-85ae-42c2-831b-9b1d507e8011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076e6449-41d2-4d8a-8e2c-c60fb54a43aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63133787-0e45-487c-aa61-ee69a9bd15d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d1945a-4b3f-47f5-b8cc-11306d3b15e9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0993a42-e858-4bd5-b749-74e9717c5691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d619265-df6f-4ebf-9148-e674c99169ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dba38ff-0952-4b94-84a0-c347efe708b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc91583-59c3-4a97-8df3-e8136e0e940a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2d00e7-3c0d-48e0-ae2e-8cef313860df",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f98a26-f014-4346-bfbd-2cd850a2a620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fadf51a2-45aa-418b-a1b5-3b5e801df84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da57304-10d6-4e9a-b67c-19d12405f409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ba0981-f448-4c59-8e01-dae1f9526520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c910e51-4fc5-493c-bc24-1dc63e918169",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2508f022-a8ba-4de9-8a30-f3b9240061b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11e8e35a-6b2d-4f7f-a1fa-11bed7d3197b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e23bc49-ebed-4f14-8b39-62adc5ec49b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37313165-4538-4771-b266-920aa4532c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc621a8-e4f0-438e-9faa-0484e8cd3cb2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25adab17-f02e-44ea-97c2-d3efc3c54184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a264cc-c54a-45d3-b80a-d4a7394d3f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021dc071-1223-476c-9619-8cb5951e016f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4be34a8-32ea-41ff-a253-400a03d25653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6c2540-9b3f-4bf0-b19c-1b1278742562",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe6240d-1d83-496d-b598-3ad89ccb432d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26632438-6071-42e1-8a21-b0c03b3dd3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6e6457-5d7b-4fcf-bf82-2beeab3bbcd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f48f9f1-9aea-4986-b6ca-2464a23a8b0d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c0cd3c6-d52d-41ff-a409-f498442765e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d65f744-35e3-4817-9869-6da746cc8705"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca173673-672c-4cbc-ba44-8f3e046755ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08c55004-8f7a-45bd-8cf0-6d7d0f2e245b"
                    }
                  }
                ]
              },
              {
                "id": "485fdea3-8f01-42dd-bc11-c0feb98fbc6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fad5d8c-72b3-42b0-b17b-2afbac1c489c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ecf150-e7b8-4965-8b39-e3e9685f15bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d022b13f-dce3-47d7-9a32-6cdd0c3f4f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbd782d-37d4-47da-b250-f1b4681425d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e060a8e3-b410-4a8c-bf58-e2225fdcb2fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0983e84a-3475-4a8e-ab4b-88580b03e506",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f25bb278-b428-4bcd-a53f-50c7e8c7b9b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28815e82-a884-4bdc-a262-c2f6e9409fb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14b1a901-25ac-4181-a36f-ad4916f15c62"
                    }
                  }
                ]
              },
              {
                "id": "43effbc1-003a-47ae-8c60-c1c5d9a6d369",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e1b81a57-e2a9-4b89-b509-53518ea02eee",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cd6263-cc95-4abb-8921-77de150f9b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f3d6a3da-6763-4bf2-aa72-f127bdf9bbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dadf71e-7d7c-4bb8-be6c-7756e33cc46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653db14b-ad7d-4cc9-ac33-bf02d1003d1d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d708b6da-78cf-48de-850e-b90993752440",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18fafe2c-fe6d-471a-83a4-6effc35e4aca",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "692469bb-4bd4-4151-96bc-f81bb027e6f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa744bb4-aa4c-420c-b9a0-e8d70e4969e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47768bc7-ef90-4b4c-80eb-2e0b383356fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca97930c-bc38-4042-bfa4-017aae11eed1"
                    }
                  }
                ]
              },
              {
                "id": "81b41b03-7db2-464a-981f-fa0dd932c6d5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "515247d9-d41e-4f7a-8053-a58ce7054b3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ed892beb-9404-48ed-ad23-b8fd3380d484"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a77f880-b665-4d47-8aee-8cd7d427de80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ff70ce9-2f91-417c-905e-dc64ed425628"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50ef9c78-5621-457d-9637-c4b7b87bc479",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0d90140f-20ca-4b1a-b322-687a6770307b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "279102d3-b0a8-4d87-ba9c-fc27a5b05120",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cefde420-66f2-441c-a147-4b976bae1141"
            }
          }
        ]
      },
      {
        "id": "9ba4cd9c-e5a8-4c75-b39d-11bd35fcd824",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "88707fa4-76e9-427a-8b7e-eb9a117f092e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99e7853e-d2b4-4999-bf85-22b144ef1f60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96323e26-44b7-4918-b040-c409bea19ce3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f00eddc-de2d-411f-8032-6549e2908f1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bd7c16ef-1b1a-4bbd-9c81-4363856985f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89acfdc-c813-4aed-ade0-c88f464c4dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0990fe5-d34d-4390-89f4-46d8256dbceb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a742b41-a865-435a-a424-82e13e8bd6c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0202cf33-13b6-45c6-92fd-2d85b92056e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d3c28e6-117b-468b-ba07-a41aedd243e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2df5604-2f18-43b3-9752-6fd245d02b63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "813be323-fed0-46f0-abca-8ac52f07b061",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6ada4c38-cc4d-41c7-8b66-b34e00c4d72b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5cbd258-4a02-4bf5-9657-5a70903711cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55f81e34-1de2-4c3a-bda0-58a5370376af"
            }
          }
        ]
      },
      {
        "id": "e4d20093-740e-4608-bf98-eec06d26e362",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0699596f-13e7-4196-9703-e430dac898c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddd2d1f0-f1c0-410e-8f3b-2c76fbab977b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2efad056-e944-45e2-b904-1dc305751430",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8291503f-f8c7-42eb-96b7-ffc6aa421c2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66e6aa0c-1451-4351-9b6a-15860a687076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2b0206-fd25-438b-ae23-04040321293e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a651e72a-b3c4-43d5-a9f0-5d479a763c90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2272c68d-776f-4598-bcb8-9d6eeaf4b234",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c37e47d-60f1-4b5e-8558-e6906411d56f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f60728f2-b962-4616-be60-e74521484de4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a397cfd-b939-46e3-a543-d12e57cf7ae8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d475645-7883-4191-a37d-6741bc296176",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08458dd1-0ed8-4c38-b965-6a0ba66a78d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d33a09e-a485-48f5-baca-806f6d477830",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c0f6652-af03-4404-acdc-25f34ccc24db"
            }
          }
        ]
      },
      {
        "id": "a93a3f45-1738-4df2-a49d-6321d104b2f4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3946e0ac-27e6-46e5-b545-1cf2e3c5672b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35bc4d5c-adfc-47dc-be4e-08382711f79a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06eeb9c0-01ff-4ec1-b0b6-772f11f0f441",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23163fd-3428-48e4-af9e-cc11270d7499",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1db117a-7343-4215-a837-bc6c6f9c6ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa4e337-04e4-46ca-a869-00fd0ea07e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "843c0a9d-0adb-4925-8166-2899e27dea52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bb65815-2f2c-4383-8ee0-dbb7c3ab7548",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "795e7a3a-2444-482e-bb18-60cbbc70d278"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "047b466a-4e7e-409b-a0af-ef233d82bd54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21d5ae64-b302-46da-b807-b57f7fbd017f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07c4898d-5160-4bc6-8c10-9fd27768b054",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9697dd33-90b4-4a2c-b2cf-e0f6313193d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a982b68-32a0-4abf-9b7f-a0f138c36407",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdb530e4-9a5b-4822-a048-ce764b60005b"
            }
          }
        ]
      },
      {
        "id": "894415c8-9132-4d47-a8d2-11ca24bf51f4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62d7bcff-c953-4cdd-b052-e1dfe31fd3dc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c8bda3e-935f-486c-9117-d6e3dc8b4859",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7d939cdd-84c7-4ad2-a38d-fb1545301e9e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90f2472e-8e1e-4be0-a421-511ebafdcda6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db42a049-2ec7-48dd-90cd-cba51a87ae6f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.831578947368424,
      "responseMin": 6,
      "responseMax": 326,
      "responseSd": 27.784124950433707,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703464570560,
      "completed": 1703464583174
    },
    "executions": [
      {
        "id": "6894a343-5ac9-4603-afac-7c7ada4c3c89",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "14127192-f99c-40f5-82e5-8a7312917267",
          "httpRequestId": "c7551cc7-4175-4a92-818e-261fd50ef6d3"
        },
        "item": {
          "id": "6894a343-5ac9-4603-afac-7c7ada4c3c89",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3b00a80a-234b-41ca-9b8c-2284cc6e2dee",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "56e80cac-dc6e-4dc3-8ecc-a19045b37fe3",
        "cursor": {
          "ref": "340aba3d-b82d-4e02-8e2b-ea67069169ec",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e1e99aeb-c470-45fe-80e7-f2af4c59441d"
        },
        "item": {
          "id": "56e80cac-dc6e-4dc3-8ecc-a19045b37fe3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "289b8c56-34d6-4bd7-8250-60ac4fc27c4d",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "2d610e6b-e82a-4c4f-8c20-1eae6c48272b",
        "cursor": {
          "ref": "2c48dd0f-e131-4510-8de7-83211d1dd27a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a395ef90-5acc-4062-9e79-eb61499112f1"
        },
        "item": {
          "id": "2d610e6b-e82a-4c4f-8c20-1eae6c48272b",
          "name": "did_json"
        },
        "response": {
          "id": "29caf5ae-4919-44b4-868f-dc91cc134259",
          "status": "OK",
          "code": 200,
          "responseTime": 213,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33477aae-33d5-4249-a4e7-3e052af1efce",
        "cursor": {
          "ref": "4cd35341-32bc-48cf-b769-fff78f206e8a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1256430e-3b70-4d26-bf3f-5ec2b890064a"
        },
        "item": {
          "id": "33477aae-33d5-4249-a4e7-3e052af1efce",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca64762d-064d-42be-88d4-78c70965ce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33477aae-33d5-4249-a4e7-3e052af1efce",
        "cursor": {
          "ref": "4cd35341-32bc-48cf-b769-fff78f206e8a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1256430e-3b70-4d26-bf3f-5ec2b890064a"
        },
        "item": {
          "id": "33477aae-33d5-4249-a4e7-3e052af1efce",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca64762d-064d-42be-88d4-78c70965ce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecad635e-9c7f-4926-bca8-d930f2db0596",
        "cursor": {
          "ref": "9796244d-ce8c-478f-a830-a6d080778336",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a07b22f9-592a-4b72-96de-13f6c3490881"
        },
        "item": {
          "id": "ecad635e-9c7f-4926-bca8-d930f2db0596",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8cf40834-6db7-4905-a7ae-b6cb7aeddea4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87832940-6b38-4ace-948b-de12373af72a",
        "cursor": {
          "ref": "f2a6aa67-ef13-43ec-bb55-dfe3c808b012",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4d8cefb7-62db-4a2a-8ab6-4e440720911a"
        },
        "item": {
          "id": "87832940-6b38-4ace-948b-de12373af72a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "84a4e82a-12fe-4c2a-8ba0-c87887db1d1c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18da0d4-cbdc-487c-a302-49594e4df3f0",
        "cursor": {
          "ref": "25a1b0ef-c929-42c3-8630-ce2b8b1b70b5",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7375d8f4-91e3-4b13-997b-993580e47e15"
        },
        "item": {
          "id": "b18da0d4-cbdc-487c-a302-49594e4df3f0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7ca96e17-ae23-4897-b03d-829a3a56d91c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e20f518-d6fc-4170-9353-c7db4eeb1f9a",
        "cursor": {
          "ref": "8421c6db-7d37-411c-911b-9ec01fe13000",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d6878301-13ce-4ace-ac91-7968473c6f97"
        },
        "item": {
          "id": "6e20f518-d6fc-4170-9353-c7db4eeb1f9a",
          "name": "identifiers"
        },
        "response": {
          "id": "b103fa40-138c-44f7-b3c0-e6582570b599",
          "status": "OK",
          "code": 200,
          "responseTime": 241,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dd7be5-4c72-4232-ada8-7640b9a2adf0",
        "cursor": {
          "ref": "2fd865f3-3d24-4c0a-a5ed-0338bfc9346d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d9447cde-c1f1-4278-8d15-6d2e171fe8cc"
        },
        "item": {
          "id": "90dd7be5-4c72-4232-ada8-7640b9a2adf0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "46102325-3e6a-4a5f-8612-332d0b32fa4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98caba47-4345-4982-a7e4-a6b05a5aa95c",
        "cursor": {
          "ref": "355c0714-7182-49e6-9cc1-0fa011b9895a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8da47713-fbee-4ac5-b35e-fa3b6c0c2828"
        },
        "item": {
          "id": "98caba47-4345-4982-a7e4-a6b05a5aa95c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4e12186f-ab94-4cb6-82ed-ec08715df6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292a8a84-3226-4a27-949f-c683ce034e45",
        "cursor": {
          "ref": "53891754-e393-44a2-949c-3e4d9222acc8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d429fe06-0876-4837-9d67-5ba6de1cb5fb"
        },
        "item": {
          "id": "292a8a84-3226-4a27-949f-c683ce034e45",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1f03d37e-7cc6-4199-a11e-464476ea4ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31d35c5-ad52-4be4-8aa9-fdb9531a4041",
        "cursor": {
          "ref": "1a94a441-87bd-48ad-a914-13c0a8e796c3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c5257d12-d22c-4d91-9f30-940853bd514f"
        },
        "item": {
          "id": "c31d35c5-ad52-4be4-8aa9-fdb9531a4041",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "49a549c1-c337-4123-8f2a-4c4941ec1201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ddbee6-29ad-4288-b3b1-df3d699d26b0",
        "cursor": {
          "ref": "cd7e9103-7d2c-40dc-a931-927c3f193a1e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fda7ed20-3006-43bd-810f-173be3069301"
        },
        "item": {
          "id": "c8ddbee6-29ad-4288-b3b1-df3d699d26b0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "958b367f-941a-4a89-96b1-0936083492e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdf0013-a0ee-4923-bc96-211375f30c86",
        "cursor": {
          "ref": "bb8ff269-c1bc-4b68-b8c6-bb671750b743",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "20784c4d-b994-4adf-ad12-92264507ea63"
        },
        "item": {
          "id": "ffdf0013-a0ee-4923-bc96-211375f30c86",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6fe7de05-8c90-4851-b7cd-77e14e288b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5613c85b-a1c8-4a8c-ae05-092501d71a30",
        "cursor": {
          "ref": "b912243f-96d6-4730-9711-afbd579091e4",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c703ad4d-c3d8-45b7-ac14-b5ff6af9d04d"
        },
        "item": {
          "id": "5613c85b-a1c8-4a8c-ae05-092501d71a30",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a05857bf-66a5-4d25-a32c-e2726b583389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1ebbd6-68e3-4094-911d-5dd5d5eac769",
        "cursor": {
          "ref": "1790ac08-2352-40b8-86ca-8498523cc239",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b9edf493-db17-494a-a956-3e45db8218d9"
        },
        "item": {
          "id": "8f1ebbd6-68e3-4094-911d-5dd5d5eac769",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5355381e-e684-4637-b927-c22d23896837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf40609-8782-4fce-8c7e-45283acd8f54",
        "cursor": {
          "ref": "0b312058-b67b-4dc1-bde0-1caf5131f21e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0d891dce-c1ad-4482-80fd-a34670a3b7fe"
        },
        "item": {
          "id": "baf40609-8782-4fce-8c7e-45283acd8f54",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2ce0f45d-5ccf-4b4c-b6ac-5feed6f26255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1843d0-40b5-477f-9557-c09915d94030",
        "cursor": {
          "ref": "0621970d-4cbe-4108-bbbe-0edbfc741cd3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "08df625a-cd92-456d-aa63-913f1d65e558"
        },
        "item": {
          "id": "2f1843d0-40b5-477f-9557-c09915d94030",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "eb7fa348-f88b-421f-b03a-669e8e779d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5e6b0b-bdf2-47af-a8bd-c50e2e250898",
        "cursor": {
          "ref": "68753816-e0c5-4378-9aa6-1206667ae667",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2a6f33bb-0263-4500-8331-6ad569e1e90b"
        },
        "item": {
          "id": "fe5e6b0b-bdf2-47af-a8bd-c50e2e250898",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c1207554-71b4-47e2-b93a-ac8eaa31d2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4dd764-9cf3-43da-b357-260d1e1470a4",
        "cursor": {
          "ref": "b6e7104c-5002-4c32-aacf-efbdbd685bdc",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "590ef198-9473-47de-bc67-501c72a0916f"
        },
        "item": {
          "id": "ff4dd764-9cf3-43da-b357-260d1e1470a4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "546b8812-a2d3-4a6e-89a2-04382e56d04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e27b51-a13d-423f-9621-1d158e37eda5",
        "cursor": {
          "ref": "ecf7f5a5-8429-43f7-a7d3-174158519a70",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "37f5f4d8-0ff0-4654-9cdb-82ccd31c43b6"
        },
        "item": {
          "id": "14e27b51-a13d-423f-9621-1d158e37eda5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d9f80ef2-cd2a-4dc4-b59f-7333f94d9ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa63b56-6b38-4dcb-b52b-30478432219e",
        "cursor": {
          "ref": "ef60042d-7788-469b-a820-62d1378640e8",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8b448cc0-c702-4d25-a52c-be7ebb6abaab"
        },
        "item": {
          "id": "1aa63b56-6b38-4dcb-b52b-30478432219e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "640baa4d-5031-4419-aae5-8323e9760995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc262b5c-b201-4afc-940d-e855ac539051",
        "cursor": {
          "ref": "480f8d0b-a936-4027-9e56-ab5cf1909def",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9fce08ba-9d9a-4d20-b343-dcd5b5ac921c"
        },
        "item": {
          "id": "fc262b5c-b201-4afc-940d-e855ac539051",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "153d1b39-0837-4704-85fa-0f83b84eadf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907a1d02-52bb-4f95-914d-9669a82f17e7",
        "cursor": {
          "ref": "b8ea12bd-bf8c-4a9b-a3c5-a454c37bb202",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f3b2ec4d-2ccb-40b9-89e4-2b2b7c6cdf08"
        },
        "item": {
          "id": "907a1d02-52bb-4f95-914d-9669a82f17e7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6342310d-7001-4d86-91f9-7c2fd81ba874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e795c128-b69e-4b82-ab45-112222bc142d",
        "cursor": {
          "ref": "2dbb5d33-ec5a-402b-a156-ecf8bda5ac52",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "13739239-bf1b-4282-ad0f-1b306e8c96f9"
        },
        "item": {
          "id": "e795c128-b69e-4b82-ab45-112222bc142d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2f2e48e8-80bc-4040-9327-2e9e01a0d6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56b06b1-a90f-45d8-8213-32f4806703bb",
        "cursor": {
          "ref": "76b25fbe-fb42-4f51-ae8a-14c6f2adae4a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6b101bf5-7fb0-4f7f-9b39-2b1c1551a732"
        },
        "item": {
          "id": "a56b06b1-a90f-45d8-8213-32f4806703bb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c3ec9d51-a12c-4092-a01d-ea635797232d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c329686b-6dd5-4348-b17c-bcd8c5938315",
        "cursor": {
          "ref": "678cac72-076f-438f-86e3-0f70b2da9457",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f1b95579-3421-4986-954b-890b23ed33f4"
        },
        "item": {
          "id": "c329686b-6dd5-4348-b17c-bcd8c5938315",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5218c919-8e6e-4078-9250-3001d08f2fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b890054c-7819-4efa-9613-d7e4f9e54af4",
        "cursor": {
          "ref": "8802cd56-26eb-46e5-bfc7-8c8e0e5d8594",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ca16b8c4-6d12-471e-84f9-cff990660b92"
        },
        "item": {
          "id": "b890054c-7819-4efa-9613-d7e4f9e54af4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3e4c9115-76c3-4895-94b8-913dd6828bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6e110b-5749-4fdb-8b1a-780f7d519637",
        "cursor": {
          "ref": "fdcfa453-e062-4538-9214-c77c5bd7295c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "96dbd652-453f-4a8e-86f7-b5e5d865c4b6"
        },
        "item": {
          "id": "ff6e110b-5749-4fdb-8b1a-780f7d519637",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7adfebd4-135e-4ae2-9c22-b5f86e12fa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8474d737-0697-4153-9709-b59956474043",
        "cursor": {
          "ref": "24b12c6c-f5ac-4bb9-b73f-be1bf5ec1163",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "45f3b734-b06b-432c-a4c0-53d0dcc345b4"
        },
        "item": {
          "id": "8474d737-0697-4153-9709-b59956474043",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1dcef81d-b2c5-4eb3-b290-5982c20c2a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696e7ed8-e0a6-49d1-b9c4-bcf9d03e0458",
        "cursor": {
          "ref": "62aeeb14-ac78-4fd0-b7b3-f7c79d7400de",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "db16af0a-5b6a-452f-913e-abf277147624"
        },
        "item": {
          "id": "696e7ed8-e0a6-49d1-b9c4-bcf9d03e0458",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7ebd559d-35ef-4b9b-98c0-e62f0f218358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cd5474-5f55-467c-8e7b-990a64f258b6",
        "cursor": {
          "ref": "d995d4ec-cca9-4925-a259-981334c0485d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cf374691-a999-44e7-acd9-f910e91ebb5d"
        },
        "item": {
          "id": "61cd5474-5f55-467c-8e7b-990a64f258b6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "be27314d-54ca-4c08-8f56-677313a7dad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a22ddfe-b578-4673-aacf-003e06266950",
        "cursor": {
          "ref": "270bf0c8-fff8-437c-9095-83933f9364ab",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7c9baf91-1612-45ac-8f10-86fc2f914770"
        },
        "item": {
          "id": "8a22ddfe-b578-4673-aacf-003e06266950",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e9743fe6-156b-4ab3-bc82-00d6586d44bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3463e04d-263b-4591-8d08-032bfd45123d",
        "cursor": {
          "ref": "79b8531c-e969-4840-9ad6-962bfe8c9536",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "41c37359-ba9d-472f-b26d-8a589fbc0c5b"
        },
        "item": {
          "id": "3463e04d-263b-4591-8d08-032bfd45123d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4cae5243-33ac-40e1-8c34-35d3b07be9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cc3a5e-8efb-4287-be93-ad53f6c2a033",
        "cursor": {
          "ref": "ee0f3655-2ad6-45f3-8a5c-2317bc758070",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "da532ee0-5fa5-4300-841d-604f10f4b579"
        },
        "item": {
          "id": "d5cc3a5e-8efb-4287-be93-ad53f6c2a033",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0fe270b5-21c1-4aaa-9500-4ed837efff5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89d7f54-cbb9-499a-bd4b-b7e531ec293b",
        "cursor": {
          "ref": "c124503f-6c71-4e0a-bc0d-9cf80fe2834a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c8145393-6e9b-415c-9285-12fbb9d807ba"
        },
        "item": {
          "id": "b89d7f54-cbb9-499a-bd4b-b7e531ec293b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7db0aa34-5153-490d-81ec-3cd77ffb184e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebc3245-5ae6-4723-ab3f-2ca261698470",
        "cursor": {
          "ref": "2997fa32-7486-4e85-bee6-b3f8f817ca2f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e42c9fbd-540c-45d1-9092-6ae94adf53d5"
        },
        "item": {
          "id": "7ebc3245-5ae6-4723-ab3f-2ca261698470",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "11e36400-721c-4b61-bca5-9a5c39ed069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8af9279-cddd-489f-94f9-1781c544754e",
        "cursor": {
          "ref": "3f38b9cf-4da1-4603-b6e4-59530d0802b0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8e326c83-aa56-4f67-b031-af7316fc9f7c"
        },
        "item": {
          "id": "d8af9279-cddd-489f-94f9-1781c544754e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8a0d10c5-d4f2-443e-9b44-2d8807997f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be782020-34e4-48b0-9015-0a619aa5d370",
        "cursor": {
          "ref": "7a4ee4c6-d5d5-4fe3-a8c4-5d969111e2a3",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dd5f81cd-8047-4a5e-a4a9-fca5dbeefdc7"
        },
        "item": {
          "id": "be782020-34e4-48b0-9015-0a619aa5d370",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e40a6dbc-e5c4-46c3-a413-5dbc79a53e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f0b64d-a501-4f96-8f7a-b07b2881ccd7",
        "cursor": {
          "ref": "2a4b03c6-9df7-41e5-806e-4d288b0f36d6",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "24586cee-9773-4a1a-b855-524be495ec0e"
        },
        "item": {
          "id": "99f0b64d-a501-4f96-8f7a-b07b2881ccd7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7817849b-94b8-4315-8c6a-0360a3631ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96442b6-bc82-4685-bf84-c25fa3bbe9c2",
        "cursor": {
          "ref": "37e0a8c7-1573-4b3e-95a7-05b28173b19b",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d370f428-94b8-4797-9b8d-a46e763e2cb4"
        },
        "item": {
          "id": "c96442b6-bc82-4685-bf84-c25fa3bbe9c2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "891e40f0-eee7-4d1f-8f7f-467a05455a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed25d19b-868f-4b9c-b64c-bb502f62438f",
        "cursor": {
          "ref": "be24c7a1-19aa-4962-b7e9-0cbf6bbe1b93",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7ed4e8c1-e46a-4033-9bff-43ae95eaae8e"
        },
        "item": {
          "id": "ed25d19b-868f-4b9c-b64c-bb502f62438f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "95a554e9-4094-4712-8180-747b6f482a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e199a435-cce4-41ec-8b97-fe1c50187bcc",
        "cursor": {
          "ref": "ee4584d7-d163-47a9-85fe-d3073bf73fec",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f85da9c9-1475-429c-acfa-72f6336fc8e7"
        },
        "item": {
          "id": "e199a435-cce4-41ec-8b97-fe1c50187bcc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "171e27c3-4c65-4a9b-846c-1f855eda7768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdadc3c-10ff-4f61-936e-b9da425c473a",
        "cursor": {
          "ref": "fe8b33b5-827f-4abc-9b7c-86dd61dcbb9c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fccd5e0a-c413-45a4-8b8f-0ba8a8bb1c8e"
        },
        "item": {
          "id": "ffdadc3c-10ff-4f61-936e-b9da425c473a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "baf77e2d-848a-4913-8354-5542ad0a74a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab094c8-e936-4202-9817-931c80e988c5",
        "cursor": {
          "ref": "6a73bd69-88d8-4748-978c-4f401dfa4c6a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "812c2235-795f-410a-a009-feb41805d679"
        },
        "item": {
          "id": "aab094c8-e936-4202-9817-931c80e988c5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5630410e-4cab-4fad-8cdf-272e7ff1f343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f9f418-d99d-498d-941b-fdac4c5ddf7c",
        "cursor": {
          "ref": "985d7275-d21a-4619-9829-00204c5c3962",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8b5f9c89-2d6d-4c87-8583-7419fad94151"
        },
        "item": {
          "id": "86f9f418-d99d-498d-941b-fdac4c5ddf7c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b11fccac-f52c-45e1-9fd4-d41ee4f6c408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fd982b-8e1e-4736-960e-4dd64314eaed",
        "cursor": {
          "ref": "f2e219cb-eb59-48d7-9db2-55476d249b2a",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7352f4e1-bbfc-4b36-aa0c-9dd24f032909"
        },
        "item": {
          "id": "87fd982b-8e1e-4736-960e-4dd64314eaed",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "78829099-18df-46fd-9934-1c70947e78bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffff435-5324-4f48-bb8f-f6eb640b39ac",
        "cursor": {
          "ref": "61041dd5-5b9f-42b5-b71d-1e20098eebb3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1d706024-16d2-4af1-bc5c-647a1d9ca4fa"
        },
        "item": {
          "id": "0ffff435-5324-4f48-bb8f-f6eb640b39ac",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fd076ea7-ed48-411b-9765-3fa0059db3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fac7fbd-d31f-490c-af21-531ff4d0ccff",
        "cursor": {
          "ref": "de286289-a427-4324-94b3-e4b979b096fd",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d2c7a642-269d-40da-bf31-4ff8eee55990"
        },
        "item": {
          "id": "7fac7fbd-d31f-490c-af21-531ff4d0ccff",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "30683699-3b99-4bab-95e1-4398d713f4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af462e3-8e1c-4921-81d5-30debede322e",
        "cursor": {
          "ref": "a1c817c8-19f6-409d-8d09-a8e74a5b5b61",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3fdf7e13-18e0-43f7-8942-3277ca7406ce"
        },
        "item": {
          "id": "3af462e3-8e1c-4921-81d5-30debede322e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8e0a34c7-27f9-4209-80dd-6e2db5c4b718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950fddf3-4fe7-4a2e-9aac-79dfd636afdb",
        "cursor": {
          "ref": "27d47099-7ae0-4210-9659-152bb62503fe",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0d7e0f0e-af74-451a-822b-9353f30d646f"
        },
        "item": {
          "id": "950fddf3-4fe7-4a2e-9aac-79dfd636afdb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "52ece34e-5bd4-4b8c-9014-5e0036da6066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5ce0df-3779-4c96-820c-ab0015c80ec1",
        "cursor": {
          "ref": "3732a6c4-10fe-4c2b-91ca-881b2b7cd308",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b7c4fc7c-6dfc-481b-8d35-14c11bcd0bf2"
        },
        "item": {
          "id": "9f5ce0df-3779-4c96-820c-ab0015c80ec1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "18a71698-2564-4bc4-8f90-cd98c8435a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2ca53a-7a5f-4053-b953-ddca5394c7d5",
        "cursor": {
          "ref": "8a2d2ec5-246e-4544-ac6b-58ccc371b973",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "624c505f-4520-4bcf-ae48-5ddba95132d7"
        },
        "item": {
          "id": "de2ca53a-7a5f-4053-b953-ddca5394c7d5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4005cf2b-d9c2-44e9-9eaa-90279c6c0adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3188952c-b628-45e2-b1d9-4b6ad6aa122b",
        "cursor": {
          "ref": "105c10c1-4a6c-42cb-92b9-5dd391d81d5b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "42741b9b-8b12-430c-9107-62613eb01eb3"
        },
        "item": {
          "id": "3188952c-b628-45e2-b1d9-4b6ad6aa122b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1a5ca60e-9926-4fd3-99b9-6451d93104bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19602f41-ab7d-4800-9789-4a9bf94dc199",
        "cursor": {
          "ref": "0eebfecd-7bf7-4cfd-b8cd-9aef39300001",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fad89a8e-9f4a-4c65-9efe-ed5101539416"
        },
        "item": {
          "id": "19602f41-ab7d-4800-9789-4a9bf94dc199",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "500eb5bd-deb1-4c18-bc7b-58a3ee1461a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a179ac4b-b4d9-4da9-acbe-51b90a65d444",
        "cursor": {
          "ref": "41627f33-a2fe-4c30-a44f-99b6094ead5a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1a122cc8-019f-47e3-8e00-944bab91e6a7"
        },
        "item": {
          "id": "a179ac4b-b4d9-4da9-acbe-51b90a65d444",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7705fba1-cc32-49c2-8815-ada84cede3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d8a002-07c7-4ff4-8c77-937f299db738",
        "cursor": {
          "ref": "c2c6024a-0a18-4f4b-955a-0dcb689f21b0",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f0492108-67bc-438c-8b86-a3a016a81d3a"
        },
        "item": {
          "id": "e1d8a002-07c7-4ff4-8c77-937f299db738",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "713a5282-90cd-4651-b506-07ace5707874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f34cb2d-f720-451d-be0e-8a908b3d3e24",
        "cursor": {
          "ref": "7ec19d67-80d2-4160-99ab-54062f1e6478",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a568af86-cc6c-4a52-99eb-80ca657bdb61"
        },
        "item": {
          "id": "1f34cb2d-f720-451d-be0e-8a908b3d3e24",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "09d99d1e-e008-450b-a98f-85be1a98068a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13014bf-491c-446f-998e-e7da5911dff5",
        "cursor": {
          "ref": "ed4d9fa7-3832-4a6d-86a6-0c080109f2fb",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c1420e15-d7fd-46ee-96d8-f03b3e90c51d"
        },
        "item": {
          "id": "d13014bf-491c-446f-998e-e7da5911dff5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a5eff617-5d9e-4efb-b46b-543184294a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c2808c-c8dd-46f9-a7f7-c4bb1b59459f",
        "cursor": {
          "ref": "d0c6e3cc-5731-487a-9db4-15ceb4d1aae7",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "96371209-4d40-47b2-bf88-ab516a762412"
        },
        "item": {
          "id": "21c2808c-c8dd-46f9-a7f7-c4bb1b59459f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "04640cb1-154e-4137-9152-66f10e5ec561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806d8c35-bac7-4fad-9927-0f732c457d04",
        "cursor": {
          "ref": "3f5c59a3-c8b5-484d-b39c-652e510cc404",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7dd08074-0a72-4c0b-a010-9e170e8daf89"
        },
        "item": {
          "id": "806d8c35-bac7-4fad-9927-0f732c457d04",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8ccdfbb1-26e9-4142-8352-87fcab48d34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026e3c2e-7345-49c3-a126-64ecddff538b",
        "cursor": {
          "ref": "6c1dc7f9-dbbd-49d4-b43d-dd4f565f9c34",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f0d8e310-be35-4c1e-923e-54424b70fbbc"
        },
        "item": {
          "id": "026e3c2e-7345-49c3-a126-64ecddff538b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0718bd18-d2be-414d-b871-ff2b1280311b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3f0c7c-3058-4646-b42c-6f40036ac5e7",
        "cursor": {
          "ref": "5df4029a-553e-4f99-a9ac-d6287e349ebb",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9f13fc38-df5c-4785-8190-c1cf3beaf332"
        },
        "item": {
          "id": "de3f0c7c-3058-4646-b42c-6f40036ac5e7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3fd61257-c9aa-463d-8aee-78959f0fd37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b22e69-0cbf-4b74-9026-dbcc2c7823bc",
        "cursor": {
          "ref": "e7202360-cdbe-4b69-b4c5-5ac92a524c22",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3aeb970b-e2ad-48df-a116-7593005d8054"
        },
        "item": {
          "id": "06b22e69-0cbf-4b74-9026-dbcc2c7823bc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fd9bd75b-bff1-46d0-b995-d03162f9206f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b251a7-aa48-4c77-a7d5-f2c067423432",
        "cursor": {
          "ref": "1fa9e3a2-3b8d-4de4-9352-a5060d30daae",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ef59f814-31ae-41e7-88bc-1d28bf4570f1"
        },
        "item": {
          "id": "02b251a7-aa48-4c77-a7d5-f2c067423432",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d5d1a595-4e9a-48c8-b605-3a4edcfeda62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ff0a91-97e4-49de-b843-725d4b2818de",
        "cursor": {
          "ref": "8b27e96a-0302-4b15-9215-b9dfd5e97246",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cc6a966f-2136-4ac8-aaa9-69e81219e44e"
        },
        "item": {
          "id": "95ff0a91-97e4-49de-b843-725d4b2818de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dfa31a68-b402-4117-86fa-149dd6be0ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65f63c2-3a02-4f5b-bb7e-1be8d609f556",
        "cursor": {
          "ref": "a9db0de1-1913-4304-bc10-11c8e3c4c9f7",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "136d8377-0ec4-4a7f-9c90-1dcb3b343a49"
        },
        "item": {
          "id": "e65f63c2-3a02-4f5b-bb7e-1be8d609f556",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "16549314-3c2b-43c9-a822-5d477d07e750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c5edeb-1629-4f23-a1c1-398796a2e647",
        "cursor": {
          "ref": "bba9e6ed-b38e-47e6-8c46-af518cfefd67",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "995e95c3-0b1f-475e-aaff-4f3e85889270"
        },
        "item": {
          "id": "16c5edeb-1629-4f23-a1c1-398796a2e647",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e1f514c4-7726-4bcc-99b8-c495254bd166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6f4247-4524-4cf6-af00-2465c83eb8cf",
        "cursor": {
          "ref": "90e6e13a-9d8d-4f04-978a-6fba92211a78",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8c7d8eea-11d4-496c-bf3a-0f9a7e85beba"
        },
        "item": {
          "id": "0b6f4247-4524-4cf6-af00-2465c83eb8cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b143b210-c73a-4da7-a6f8-8a35dd77308a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5610902-d999-44ba-8c61-7b366af0cee4",
        "cursor": {
          "ref": "cb5d4b94-a775-4d35-ae42-7b55fd1038b3",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "47474a7a-31a5-4678-b7b2-1232f0030ad2"
        },
        "item": {
          "id": "f5610902-d999-44ba-8c61-7b366af0cee4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f3c717ca-4b18-4e27-8790-9c290311d570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b9fdc0-d155-4573-b3e1-d63af3acacbc",
        "cursor": {
          "ref": "638b2d05-8a99-49f4-b9a4-5dec0a8b1643",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "18725aa9-dbcf-4a5c-8f66-dcd3993b38a3"
        },
        "item": {
          "id": "13b9fdc0-d155-4573-b3e1-d63af3acacbc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a9d13c7b-8245-4d42-a7f1-260e8ed293cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54325ad-3654-4262-9d5f-e6d7bf827972",
        "cursor": {
          "ref": "7f9ee6e0-c9fa-4a8d-8f8b-01bd04b212db",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0de51c51-b5fb-4d75-84f8-883716ab5c0d"
        },
        "item": {
          "id": "d54325ad-3654-4262-9d5f-e6d7bf827972",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2ce33454-79d6-432e-9ba6-4cecce9d5cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8e5c57-f754-4bb2-ae6e-d6ee3ffa3a31",
        "cursor": {
          "ref": "f502bc1d-6723-4d46-82ae-9465f5ee1e1f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "934712d6-4b30-49bf-83a6-be3937a0c797"
        },
        "item": {
          "id": "1a8e5c57-f754-4bb2-ae6e-d6ee3ffa3a31",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6661cd84-83cc-4148-8ad1-03f2233b19f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fab3bda-cf38-4a9e-a243-e246405a2485",
        "cursor": {
          "ref": "7b6a8b63-f20e-448a-98b9-0f80b8f30019",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "64b88d4b-5e30-4c07-8bf6-2b6902c4288e"
        },
        "item": {
          "id": "7fab3bda-cf38-4a9e-a243-e246405a2485",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b854528a-6f1c-465e-afd3-48dca4a8772f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e89226a-6565-434c-bb90-a42bce9591ea",
        "cursor": {
          "ref": "2387af7a-6b79-42df-8d16-56745e4025af",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0963f20d-ddcf-4def-a2b9-4ca8b0717c0e"
        },
        "item": {
          "id": "0e89226a-6565-434c-bb90-a42bce9591ea",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "86d992d3-5006-44a9-991e-32682a33c63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d5420e-81cf-4a6a-8f46-23bd31e04a93",
        "cursor": {
          "ref": "d636f5e4-d165-4326-a6f5-185d79ee74ea",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f696d16e-d389-4a91-bbc5-10d915a9bf13"
        },
        "item": {
          "id": "b8d5420e-81cf-4a6a-8f46-23bd31e04a93",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b4d754c7-217a-49e9-b847-b4c12027433e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6158b7b7-84de-4917-abbc-f6a9c60e177f",
        "cursor": {
          "ref": "2e175e71-c851-43a6-b861-ace831b0ba8a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d9c5b1ad-7312-4d6a-8522-d51842fbd264"
        },
        "item": {
          "id": "6158b7b7-84de-4917-abbc-f6a9c60e177f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b75a532d-6838-4783-88f7-ecc8b4500e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd646d36-a6bd-43dd-b1a7-4fcd27ebc83b",
        "cursor": {
          "ref": "6a7214be-a341-4bd0-8113-a23b8a8b3f23",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e4d4f91c-58c5-489c-bb26-b7ba3343985a"
        },
        "item": {
          "id": "fd646d36-a6bd-43dd-b1a7-4fcd27ebc83b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0b0a4e36-3d4b-41b0-8232-b64e8b229e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7006fa3-72ae-4b28-9923-d906f1ee9335",
        "cursor": {
          "ref": "0aabc2dc-864d-4452-a109-58f86acce978",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5eab9c91-5f20-444b-9938-c52e51ef3e00"
        },
        "item": {
          "id": "b7006fa3-72ae-4b28-9923-d906f1ee9335",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bbb580c9-0a40-47b4-a5fb-1e9961c5c40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12a659f-06a2-4726-9712-c86123ab315e",
        "cursor": {
          "ref": "26a4422f-f23b-442a-9345-580709b09e9c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "14cae07d-cf20-4d5d-b4a2-da67134b9d46"
        },
        "item": {
          "id": "b12a659f-06a2-4726-9712-c86123ab315e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a107f65d-23a0-49ab-8024-9a71d3e6c39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac272f44-6d36-4b01-a6fe-257c9f40a808",
        "cursor": {
          "ref": "a4a940fd-9a75-4fe3-8b82-dd011e1cbb96",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7670c6a8-109d-4081-8070-2471b16d46d8"
        },
        "item": {
          "id": "ac272f44-6d36-4b01-a6fe-257c9f40a808",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6b574ba0-8573-4d2c-80b9-cb14bbbd9853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c07f8f-887a-41a8-828b-ec2e82c63646",
        "cursor": {
          "ref": "0c6e5e17-2d72-4277-b24d-171e4986b916",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f0330f8b-d557-4c01-baca-e4a0182e4ad4"
        },
        "item": {
          "id": "05c07f8f-887a-41a8-828b-ec2e82c63646",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9292dbbf-d72c-4fd5-aab5-0e6cae77a7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24df7957-2293-482d-b422-a6be81a5a0a0",
        "cursor": {
          "ref": "a7477db7-821b-4f7d-9645-dc56b5275cd3",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0914ed16-3fe5-467c-9f94-78e41ee5a12d"
        },
        "item": {
          "id": "24df7957-2293-482d-b422-a6be81a5a0a0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a68b1df1-f346-485b-be15-9b8ee8d4eb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b27de9-7d29-44ed-b704-cfd86eaead4b",
        "cursor": {
          "ref": "dd24c6d9-e66e-41a0-ad12-624f0b3c54cc",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "38432968-2a4b-48f7-9461-5c2d663f1c66"
        },
        "item": {
          "id": "c1b27de9-7d29-44ed-b704-cfd86eaead4b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "184828d2-1aed-4e1b-8036-edaa23d9b623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc03780a-d826-47b0-a4aa-84d5c4dfb7e1",
        "cursor": {
          "ref": "380317e3-0106-46bc-8fe5-4b7e3c70a16a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7e820b8b-2151-4539-8dee-5a6e59cd49d9"
        },
        "item": {
          "id": "bc03780a-d826-47b0-a4aa-84d5c4dfb7e1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ade69a8d-ff6a-491c-aa16-e0669cd9461f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83e1f09-536e-43e8-9cea-4540dff6952c",
        "cursor": {
          "ref": "1c08a14f-9cd6-4659-a008-5b0beb7cd6f7",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "187a4885-bef3-4422-a6ee-278aaf6663f8"
        },
        "item": {
          "id": "a83e1f09-536e-43e8-9cea-4540dff6952c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0da825a0-aa35-4792-8d9f-c432e2c859fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa50b09-1006-4cb4-afc2-d237d470cae3",
        "cursor": {
          "ref": "35bd1597-4f77-4e0b-94b8-ec87e4b5cb2e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "59117a09-a877-487e-8a22-4e7aff6b9e3a"
        },
        "item": {
          "id": "ffa50b09-1006-4cb4-afc2-d237d470cae3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9b8609eb-79c7-4179-813f-6634ac8f8159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e43ab1-44f1-4fc1-a881-31a5bf9e683c",
        "cursor": {
          "ref": "c8d7788c-de78-4f91-9d9d-abbc782209b2",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6682bbcb-42b6-4e58-9c7b-57fa9cf33311"
        },
        "item": {
          "id": "d8e43ab1-44f1-4fc1-a881-31a5bf9e683c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "44462275-f367-4968-b0c1-5ea8ce9e420f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b924d74-3ac3-4784-88ab-590aa401858d",
        "cursor": {
          "ref": "2fbac722-7b27-4669-9475-62ad159371db",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bb4f7d94-7e2a-416b-83b1-450b3dc4ee66"
        },
        "item": {
          "id": "3b924d74-3ac3-4784-88ab-590aa401858d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c0617295-686f-4a38-a973-cadcec7b81d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1227f8-9180-4fb4-b337-80b41804d5c1",
        "cursor": {
          "ref": "f2880b8f-49f3-4a26-a6df-8ec499d54841",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d2710e6a-108c-40b1-b03d-d971772fe005"
        },
        "item": {
          "id": "cc1227f8-9180-4fb4-b337-80b41804d5c1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "600109f0-7655-41fe-a484-8e06e1f023fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba5a490-e312-4dd6-8d73-78ad2cc5bf0f",
        "cursor": {
          "ref": "602f8c02-a3a1-4265-8f16-8f5b6fb3c2eb",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fa3e0a44-e26e-4e44-a0b6-71483fa98efc"
        },
        "item": {
          "id": "bba5a490-e312-4dd6-8d73-78ad2cc5bf0f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b0dd0cea-b83d-4e52-a4b8-17790eb30303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506e8055-7868-47b7-a2d2-11e58ea14c0f",
        "cursor": {
          "ref": "f0b341fc-7b52-4e69-9bf4-94afd9022efe",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "000ac230-9c80-41bf-b917-8171bdc2d394"
        },
        "item": {
          "id": "506e8055-7868-47b7-a2d2-11e58ea14c0f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "433e4614-51c1-4661-9a18-db0355505176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b0ffa5-214d-4500-8b15-ff8dd8dedecc",
        "cursor": {
          "ref": "56764ccd-3808-42fb-9cd5-266401ce0370",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "311c5cb6-a8da-42c0-bbe3-2e05ece6a317"
        },
        "item": {
          "id": "29b0ffa5-214d-4500-8b15-ff8dd8dedecc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "46d5e6d3-f11a-482a-91a7-332367f36524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d1ffdc-b5f9-4d7b-beb2-b4466b2a76bc",
        "cursor": {
          "ref": "c0188ddf-20cb-457b-9cf4-c538be71923c",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ed4f14a9-58bc-458b-97ba-285f08b8ad17"
        },
        "item": {
          "id": "79d1ffdc-b5f9-4d7b-beb2-b4466b2a76bc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "93913b02-9c1c-49a1-9223-4c9aa8501a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969ba690-b786-4e72-af35-659adb78b327",
        "cursor": {
          "ref": "99d29f86-6d42-480c-a42f-d2dcb6982ae5",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9c7afc91-876e-4c93-aa65-52ad6d6e1985"
        },
        "item": {
          "id": "969ba690-b786-4e72-af35-659adb78b327",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7f43b6a9-8bf2-4283-a611-f07d0e1ff206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc38f452-046d-45d5-91b0-11385f801d4e",
        "cursor": {
          "ref": "66cc18c1-2e89-45f9-b0ac-e97cf0251f8d",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c511c0b6-d9f4-4a50-b0b1-c1f1d4db494c"
        },
        "item": {
          "id": "fc38f452-046d-45d5-91b0-11385f801d4e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cd78bff5-74f3-4bbc-a92e-103c3a20c065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83a24d0-b594-4b1c-8bcb-fb75c847f726",
        "cursor": {
          "ref": "62ecb019-3a31-40d4-a9dc-ca5f3c6a166a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "50c5599c-62b6-4f55-8050-6dd33e65d5e8"
        },
        "item": {
          "id": "d83a24d0-b594-4b1c-8bcb-fb75c847f726",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e60e102f-4a4c-46b5-989f-0eeeab159bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6816f8-8626-4c24-9ab1-addabf338686",
        "cursor": {
          "ref": "392f78ee-25e2-41f6-9c3f-32595f418c14",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "72310b40-11d7-42be-875b-560cc376aeeb"
        },
        "item": {
          "id": "ad6816f8-8626-4c24-9ab1-addabf338686",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "805ce12b-cb54-4ebd-bda1-a17d00da786a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc7937e-3f47-49ff-b078-674ebd6a120f",
        "cursor": {
          "ref": "844a7044-4b39-426d-a1d2-f6d026319837",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4a70fc77-038e-4903-8e18-5c20446e8993"
        },
        "item": {
          "id": "9fc7937e-3f47-49ff-b078-674ebd6a120f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7f1ec0b2-7d0a-4fc9-9969-2367e7b7d6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08cae75-38f2-4218-b0bf-11f47241823f",
        "cursor": {
          "ref": "774efc90-f79b-4141-b507-450dea9a3a36",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4c1322bf-db4f-4c35-b61f-0f40988370d9"
        },
        "item": {
          "id": "b08cae75-38f2-4218-b0bf-11f47241823f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b0ee0409-1ffa-4941-840b-e539bb02bbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e936dd-9813-4245-8023-af1567dc786f",
        "cursor": {
          "ref": "6a8e311a-3041-4e8e-882c-95ae27208ba0",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "124adab9-6ce4-4150-ad9c-162a57abe8c6"
        },
        "item": {
          "id": "f8e936dd-9813-4245-8023-af1567dc786f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "35299209-8722-4a2f-acb5-c3f027675e9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477e4846-6e5b-49f2-a752-b97d9dfead91",
        "cursor": {
          "ref": "acae0d4e-326e-4515-b6ce-78bf03ddcada",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "94aa93d9-2ea0-4ded-999a-73b5b096c504"
        },
        "item": {
          "id": "477e4846-6e5b-49f2-a752-b97d9dfead91",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "455def54-386a-402d-9552-5b3b91affe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "038a5e18-4401-4daf-ba9c-ba3826b4f4df",
        "cursor": {
          "ref": "a3b99cb5-2c2f-48eb-9180-f214b49d7f98",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6d53e754-bf67-4870-8b42-f28c3f50e2f3"
        },
        "item": {
          "id": "038a5e18-4401-4daf-ba9c-ba3826b4f4df",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f75cf22c-7b93-4bb5-813c-97710f10e5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d39ef05b-a536-4a0e-851e-bb2412149ce0",
        "cursor": {
          "ref": "4006e503-80d5-480e-b81b-35d9c1490e32",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "457543b2-dada-41a7-8d67-8f48a2bf275e"
        },
        "item": {
          "id": "d39ef05b-a536-4a0e-851e-bb2412149ce0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a517b046-e197-4d2b-be76-d9b870613c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6aad746d-4c38-41b7-a51d-bce76d9aa293",
        "cursor": {
          "ref": "7c869509-e1b9-4c10-88b5-19a3cb8aca2a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "732d5dfa-96fa-4401-8da4-e7f667683085"
        },
        "item": {
          "id": "6aad746d-4c38-41b7-a51d-bce76d9aa293",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0412de88-96dd-4407-a446-8a64fcce7bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fd9e75f4-f7a6-466d-8daf-8f8683e76771",
        "cursor": {
          "ref": "32a5a6b1-8d0b-4cbf-b181-6a477ff4b095",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "158605ec-2025-4c04-84fa-60d0285f99da"
        },
        "item": {
          "id": "fd9e75f4-f7a6-466d-8daf-8f8683e76771",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "60fbc5ec-51fd-4459-ab74-7c87d718811f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b983bcc2-8667-481e-a447-7c64d126038b",
        "cursor": {
          "ref": "bd31490f-9689-472a-9eec-4013df5a3f90",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "735096d0-87bb-4cab-9d7a-9ee37071cfe4"
        },
        "item": {
          "id": "b983bcc2-8667-481e-a447-7c64d126038b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b97de4ec-b877-4cb0-b642-a184c67d22eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "bd7197c4-e028-45da-a544-5b5c5e711e0b",
        "cursor": {
          "ref": "99b1b559-236c-4962-95ea-4cc6b19a3dd7",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cd2f337e-c30e-43fd-ae4f-3df3df8ff82a"
        },
        "item": {
          "id": "bd7197c4-e028-45da-a544-5b5c5e711e0b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "faa39f41-a5bc-4f9b-a63f-f5ce0f5d682a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b89fee13-f5d2-4170-8f37-1895bc7ad998",
        "cursor": {
          "ref": "ef462013-ff18-47b5-a60e-cf22cfc63894",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3b16535f-7378-4cee-acd5-62c3241a3114"
        },
        "item": {
          "id": "b89fee13-f5d2-4170-8f37-1895bc7ad998",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "245644cc-afa9-4312-82e7-4653d9606736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9c15bf-36df-46ea-a257-3e8e0e42b174",
        "cursor": {
          "ref": "01d61e91-6f93-4976-b737-47dbe4035333",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6aa5819e-d4db-4058-8349-54e8ebbf4808"
        },
        "item": {
          "id": "9c9c15bf-36df-46ea-a257-3e8e0e42b174",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9cccb8b0-d8f8-43f7-8623-dc1eda5124c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe5d7d3-1fd8-4b42-a718-a53b9ac3df2c",
        "cursor": {
          "ref": "6d4852ad-c567-4491-b0b3-8dc764551f04",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d7d2e025-0cc1-4567-9dee-e33d9ff6752a"
        },
        "item": {
          "id": "efe5d7d3-1fd8-4b42-a718-a53b9ac3df2c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1515ee2f-e455-47ec-aeaf-5671f666b1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4396cad-88d2-4dc3-b360-a7f7736260fc",
        "cursor": {
          "ref": "d5919dc2-e074-4609-a775-50df71fe8125",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4d9e19b7-5939-4a3c-ac03-f15915a5af5e"
        },
        "item": {
          "id": "e4396cad-88d2-4dc3-b360-a7f7736260fc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "46fa27f7-6ea5-4dd9-8755-c88ffb5a9b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf809aa8-2524-41a1-8a03-78c099360bb4",
        "cursor": {
          "ref": "fc068831-eedc-4ec1-96e5-81f12005d57e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0416ae15-aba9-4ea2-9ffe-b9bbbadd2281"
        },
        "item": {
          "id": "cf809aa8-2524-41a1-8a03-78c099360bb4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2b1c8d1b-9c90-4932-b3c4-360ba888a380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a0b78e-bc9f-4bc7-a0a3-06920a912a9c",
        "cursor": {
          "ref": "57253642-df1b-4145-8713-7447073cdb07",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "74319ee6-6963-4f0c-92cf-d70dfff71cc9"
        },
        "item": {
          "id": "88a0b78e-bc9f-4bc7-a0a3-06920a912a9c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b235c415-a4f6-4eef-895d-eeb3d3fdf5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a294e94-9b96-44f0-ac71-4e1b157b3829",
        "cursor": {
          "ref": "5c8da2e2-fee4-460b-bf64-3ca5f02ab1ca",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "53579468-b2eb-4604-acdb-9a3b43d93f5d"
        },
        "item": {
          "id": "6a294e94-9b96-44f0-ac71-4e1b157b3829",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a596ade2-94a9-4d9b-ad91-780a14020a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08478d9-1b32-4eae-862e-8a721e3ab1c0",
        "cursor": {
          "ref": "2a07481f-abd0-47a0-9120-114581361a91",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cc697a35-bc76-4d99-92fa-5d62b6b1f5ec"
        },
        "item": {
          "id": "b08478d9-1b32-4eae-862e-8a721e3ab1c0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "48c4c22c-82e7-4779-8acf-b93c6c48b816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cdb9c7-b8cb-457b-aefa-1bc9866e262d",
        "cursor": {
          "ref": "80e6838b-c070-4007-86c8-48a6d9356681",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "46cfc78b-4c3d-426a-9c34-918963902c7e"
        },
        "item": {
          "id": "37cdb9c7-b8cb-457b-aefa-1bc9866e262d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ef275236-de38-4400-9990-4cfd72dd5da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563d4d10-d278-4d82-9fc0-7db8f9f18572",
        "cursor": {
          "ref": "a3b88157-bd43-45e8-bd88-9f01bed06260",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "18bc1387-ed70-4528-83f9-30b412bf6b6c"
        },
        "item": {
          "id": "563d4d10-d278-4d82-9fc0-7db8f9f18572",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4c91f5e5-c698-4759-a3b8-ae13f7997df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704500c2-9ab8-42d9-a236-1b43885f31a4",
        "cursor": {
          "ref": "40339022-9676-41c7-9315-a9716fceaf27",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4a70f53b-bb12-4927-b02a-c274184381dc"
        },
        "item": {
          "id": "704500c2-9ab8-42d9-a236-1b43885f31a4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "672f2690-4b31-4109-bf4a-259155b139f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85943032-4143-459a-a9b6-2921b11e6529",
        "cursor": {
          "ref": "4248daca-4325-4c9f-a771-4a8d36f1f04d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0e447d4e-5525-44ba-9be0-7b7d830e8dbd"
        },
        "item": {
          "id": "85943032-4143-459a-a9b6-2921b11e6529",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bb7084d9-9dbb-4f37-8326-19103ed2a6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b80c16-0585-4637-b760-d899b07ded24",
        "cursor": {
          "ref": "2873853b-f28d-4536-b55b-c89bcc9a16b9",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1f2ed3ce-9fc9-4e13-bb6f-efe8959514c6"
        },
        "item": {
          "id": "63b80c16-0585-4637-b760-d899b07ded24",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6b7b5ad9-9ff7-4229-8be0-9404749bfff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9019e717-9df6-4824-b145-b1a0e4bfb3c9",
        "cursor": {
          "ref": "2f4554cc-1b94-4503-acda-9182f12e5879",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "357972f0-0802-4555-b08a-596a476b171f"
        },
        "item": {
          "id": "9019e717-9df6-4824-b145-b1a0e4bfb3c9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0c58e066-a299-4ea7-9f25-51a9cc8a2d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd6aec9-1a52-4fef-a123-3cbf618f20dd",
        "cursor": {
          "ref": "474b5a35-b678-40f9-afdd-10c02c55a86e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "55eb66a1-dc7e-4ff7-903d-d92b199df734"
        },
        "item": {
          "id": "afd6aec9-1a52-4fef-a123-3cbf618f20dd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8db384ea-eefe-4f3f-9e0c-1e0c84d8cbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e98eabb-338b-42ba-9e5f-1d35869b0e3a",
        "cursor": {
          "ref": "4f4b3e35-0d97-45e8-8c90-640da0ff9d42",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2e1e13fd-ca9f-4b53-a75e-064430f94b15"
        },
        "item": {
          "id": "9e98eabb-338b-42ba-9e5f-1d35869b0e3a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8290f07d-a1cb-47f8-a388-d57b2be8b2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b45abdb-9fa1-434f-8ab6-b7e80dc92066",
        "cursor": {
          "ref": "182c74c5-ebac-481c-877e-c3c7d5fb6dd8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9a62c53f-fedc-4e8f-bd8a-58b4e6792154"
        },
        "item": {
          "id": "1b45abdb-9fa1-434f-8ab6-b7e80dc92066",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b0566dd1-8839-47b7-9e80-6ba3beb1c906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd55df8-3032-4ca9-bfb2-ef7ee9223186",
        "cursor": {
          "ref": "84929a72-d79e-4a81-a7c4-08b07ba4e31f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "40851cb7-ad49-44b2-bf15-93cede1289c0"
        },
        "item": {
          "id": "6cd55df8-3032-4ca9-bfb2-ef7ee9223186",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "985a6e83-a066-4d5a-ac32-2310059dbeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617e68a0-2cc1-4986-bc00-64455b4323b4",
        "cursor": {
          "ref": "78a515f1-bfba-46f0-8c8b-d1813359712b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6d6e0d2a-9fbc-47c3-b475-326028688fcd"
        },
        "item": {
          "id": "617e68a0-2cc1-4986-bc00-64455b4323b4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b79e1bc8-1a90-4f90-8831-20c6733789e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7327f3f-9205-4048-b459-656824e58679",
        "cursor": {
          "ref": "e0587146-1acf-4420-b72d-d46746aac724",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d5ec5e4d-d73b-4438-adf3-cf5af4cbc44a"
        },
        "item": {
          "id": "e7327f3f-9205-4048-b459-656824e58679",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "30c03b49-5b6c-46d3-8d7e-9f3e317a0b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9d475c-63f2-4bb1-816b-cdec3504a12d",
        "cursor": {
          "ref": "170a7d4d-9f22-45d4-95c3-04e541ae0b6e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f177da7a-ce65-4b6c-88be-9d7e85f5efea"
        },
        "item": {
          "id": "5d9d475c-63f2-4bb1-816b-cdec3504a12d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1967f048-ef6c-4829-9a33-dce55504aead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469c7d53-b3ed-40ad-9635-a5208f9c8954",
        "cursor": {
          "ref": "2220223b-9976-4ab6-b6ff-a6273ebfc082",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "784d7ccb-c701-4f2c-b85e-4eda5006fa82"
        },
        "item": {
          "id": "469c7d53-b3ed-40ad-9635-a5208f9c8954",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bb3862b4-c768-4bdf-aa91-14aa0424d30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ffc4da-ea95-490a-84a3-cbe1a8a1eb91",
        "cursor": {
          "ref": "fecdadf3-ed93-47c4-8906-71f223c1da03",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e3f91175-910c-420c-902d-7406782c9657"
        },
        "item": {
          "id": "d3ffc4da-ea95-490a-84a3-cbe1a8a1eb91",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "47da3020-b957-447d-91f1-6a7a220c54d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c12a94-15ac-4ee1-98a4-93888b6483b8",
        "cursor": {
          "ref": "337d254d-228e-4c97-9150-c8225f3f378c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "eb0ca42e-5e7e-4f1f-84ab-6334faf4d8dd"
        },
        "item": {
          "id": "65c12a94-15ac-4ee1-98a4-93888b6483b8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ae7cb0d7-3188-49b7-bc7f-4caae192a6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d623265-3f2e-4689-8bb0-8d93b9a7bd1b",
        "cursor": {
          "ref": "f813efaa-10fe-4a54-b8dc-bdbe261ffd39",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "91517330-af10-41d3-b2bd-3e19a0c07f3c"
        },
        "item": {
          "id": "9d623265-3f2e-4689-8bb0-8d93b9a7bd1b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dbfd967c-4838-4896-ac0e-5d348cff759d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59fb3a9-a20a-43ec-a6e9-318bee18d9e1",
        "cursor": {
          "ref": "66e2192e-0f66-486f-8736-2b3f3add5e0b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "02cb51eb-74b1-4126-a2c6-6a48e1052e68"
        },
        "item": {
          "id": "f59fb3a9-a20a-43ec-a6e9-318bee18d9e1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "745905b1-5f26-4271-8c91-90d68610fa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0025e3-11be-4ae5-9ecb-a14e9a882185",
        "cursor": {
          "ref": "81ee5c0e-3cb8-407f-bc5f-285dc1912bc6",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dc20cb10-8826-447b-a3b8-f61736cd0551"
        },
        "item": {
          "id": "ab0025e3-11be-4ae5-9ecb-a14e9a882185",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8aa13f95-e503-4045-bb67-270f0f9cf6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a031f74f-74da-461e-bb4b-e263a98db63e",
        "cursor": {
          "ref": "bd870bb9-be23-4fb1-893c-39e756df5090",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c0d26848-783d-46f7-ae08-3906f721db29"
        },
        "item": {
          "id": "a031f74f-74da-461e-bb4b-e263a98db63e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7cad4d0a-00dd-4535-86da-07025be56641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6c804e-895f-4cf9-80d8-7167be089ee6",
        "cursor": {
          "ref": "35ebd6c7-4a30-4356-9c01-96e129c53489",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2d98dca6-bf0d-4dfe-80ba-3532a4ad1205"
        },
        "item": {
          "id": "af6c804e-895f-4cf9-80d8-7167be089ee6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9617fcf2-071f-4351-8f0b-a80d46f8d9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e7fe8b-3d1b-4c58-b8e4-2012e051db05",
        "cursor": {
          "ref": "4e11d567-b380-477b-9811-f5a2a8cb6b27",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fea4accb-9742-4f18-8f9b-aa3f37e8e1f7"
        },
        "item": {
          "id": "d5e7fe8b-3d1b-4c58-b8e4-2012e051db05",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2167472f-3c6d-45c7-913f-4f3e113cf1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedb77e7-9555-4784-81c6-df4f6e13f6af",
        "cursor": {
          "ref": "22e49d1d-85cc-418b-a96b-47377813f375",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "388e703b-4ff3-4b0a-9492-0bcd14ec565e"
        },
        "item": {
          "id": "aedb77e7-9555-4784-81c6-df4f6e13f6af",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c0c5ec49-d7bb-495e-be3b-238b875ab82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d89237c-f407-4008-97c5-bda1ac9ee449",
        "cursor": {
          "ref": "343b5c11-0c21-4995-94f2-c09d163831b2",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "236ed804-509a-4a83-a157-df9c0e327417"
        },
        "item": {
          "id": "4d89237c-f407-4008-97c5-bda1ac9ee449",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f59a6e2c-1dfd-43d5-811c-c0e95920616a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a321df-04c0-4e4d-b9f1-67a27fe450c1",
        "cursor": {
          "ref": "dc30a240-6524-406a-8381-d61015029933",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3dfdc700-9fe4-4527-ade1-5788c411fd52"
        },
        "item": {
          "id": "b4a321df-04c0-4e4d-b9f1-67a27fe450c1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0a3056fc-5117-490a-a1b4-323baabbf174",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301f8410-cf21-4f35-bfae-5e64bcde5ea4",
        "cursor": {
          "ref": "0c245cb3-517f-477c-a852-cbc230be14f8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "39575365-a403-48b3-90fa-0b496ffeb51e"
        },
        "item": {
          "id": "301f8410-cf21-4f35-bfae-5e64bcde5ea4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "96fcc9df-4436-4d7e-a5ba-ea3ab7506ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596a251c-eafb-44eb-aeed-fd77815d126a",
        "cursor": {
          "ref": "5c38077a-45f2-4ee6-90f9-d84c2b7adc7e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9c91d239-8aad-4ef2-a5db-812acbb85b05"
        },
        "item": {
          "id": "596a251c-eafb-44eb-aeed-fd77815d126a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "80b03def-501b-4efe-847d-1d950f66ddac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0f567d-f196-478f-8502-bb020547404d",
        "cursor": {
          "ref": "97ff3514-52e7-4358-9a1d-56706dc1a449",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "425fcd2c-30ed-4181-ab68-f5c75ad847cc"
        },
        "item": {
          "id": "cf0f567d-f196-478f-8502-bb020547404d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "19acd460-3ab6-4cc9-b76f-10886e8ebf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eb4a35-dd80-47da-8fd4-2cd8ac9c61c5",
        "cursor": {
          "ref": "62007f45-65d3-474d-bfa7-a45f0aa26f27",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8bebfdb8-0771-46c6-97f4-79f71c972363"
        },
        "item": {
          "id": "59eb4a35-dd80-47da-8fd4-2cd8ac9c61c5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c33b3e57-093f-4b92-95b9-f0f062317b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19f9a81-bc3f-4f5c-8bfb-27004b0f18be",
        "cursor": {
          "ref": "55144699-b106-48cc-aaa3-06b95ff080a3",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8021c3d5-d1d4-4366-90e1-5d790df05644"
        },
        "item": {
          "id": "a19f9a81-bc3f-4f5c-8bfb-27004b0f18be",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d0520446-2496-4728-8867-272931f77bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0afeb1f-a12b-4cc8-abb8-09992465a81f",
        "cursor": {
          "ref": "71cde70e-6973-4cd8-ba0f-af537f37fa24",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c516922f-b1b9-4a94-ad5f-908ca6d89766"
        },
        "item": {
          "id": "b0afeb1f-a12b-4cc8-abb8-09992465a81f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "86ed4e26-9067-420b-b563-726a81e0ad63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fca00f1-511f-467d-9c60-10554185f40b",
        "cursor": {
          "ref": "3ecfe21a-59a4-47a7-9964-d5f85353f13d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8018e0dc-9e8c-4b0f-b2d1-bf44cabcd1a5"
        },
        "item": {
          "id": "6fca00f1-511f-467d-9c60-10554185f40b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0dcdd78f-058b-48b8-b9aa-f6831764c985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e002498-b816-453d-8d63-3b6dcaf4974f",
        "cursor": {
          "ref": "ab41e294-1a4e-4e6d-b83a-40c9eec4a8a7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "21b941b2-64c7-4097-96eb-f88b4ad6e41e"
        },
        "item": {
          "id": "6e002498-b816-453d-8d63-3b6dcaf4974f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2b60aa71-b545-422e-a335-b19ba4db7a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88887129-bce4-4367-b344-2e8e0c4e6f8d",
        "cursor": {
          "ref": "b3eec85e-3fad-4c30-b871-37d4e2b265a2",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e388943d-ce43-45fd-b145-486878764b4f"
        },
        "item": {
          "id": "88887129-bce4-4367-b344-2e8e0c4e6f8d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f64f594d-acc7-48ed-a6ef-0b90d65d5b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710b708b-b91f-4edd-b9c7-d5bfb671a25a",
        "cursor": {
          "ref": "7b66d50b-93d1-4a51-aea1-b0cf20a5882c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6066b976-057b-4435-b867-8757c5370872"
        },
        "item": {
          "id": "710b708b-b91f-4edd-b9c7-d5bfb671a25a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41541d20-649f-4299-819a-cc8ec40a7a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee91dda9-ea03-4924-957f-d4274506c941",
        "cursor": {
          "ref": "b546b7ba-10a4-43af-af30-333675405d67",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "673e419d-af54-402f-ac23-de414e683074"
        },
        "item": {
          "id": "ee91dda9-ea03-4924-957f-d4274506c941",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "86b4807c-a38c-43d8-bea5-3f6fb78a0e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054a50ee-c487-4e6f-a5d2-4191177b7842",
        "cursor": {
          "ref": "9ece43db-7409-4f8c-964c-4e74860ab20a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "51769fa6-807b-4611-8dc3-746c60cadd08"
        },
        "item": {
          "id": "054a50ee-c487-4e6f-a5d2-4191177b7842",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "688053b6-3c42-4310-8d3c-e51cc24a5bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1006e9e0-ac4b-436d-a54d-d650e18dfbab",
        "cursor": {
          "ref": "d2b4cb11-4485-4cec-9436-adfae95a9ab4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2bff0a2e-c0e4-41c2-a2a0-735a39c22e43"
        },
        "item": {
          "id": "1006e9e0-ac4b-436d-a54d-d650e18dfbab",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "49c0e15a-4a35-4211-818e-26761f1a3c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96459e3c-f9ec-4c05-9da2-286b74323892",
        "cursor": {
          "ref": "b19a8c91-c131-42e7-88ab-be5553bfea56",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "18ebe8b6-3dc0-47a9-ab15-f76aa7dd4d0e"
        },
        "item": {
          "id": "96459e3c-f9ec-4c05-9da2-286b74323892",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f92f7b02-c961-4f8e-9b4f-9a4dd63118c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3a4eed-cfca-44a3-aef4-4f648a5d13f8",
        "cursor": {
          "ref": "cd16faf7-7284-4558-8e36-45db8d292605",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "910d4882-8240-4dca-a6c1-fe9ed35600a4"
        },
        "item": {
          "id": "8c3a4eed-cfca-44a3-aef4-4f648a5d13f8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cfeb4218-e788-43ed-8913-c8a478d95809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa8dfac-7474-429e-8e3d-ea6036021fd4",
        "cursor": {
          "ref": "dfac3510-2d85-4a33-b84c-bc190bc155d8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8f82d27e-a5a3-4d84-a2aa-41d7fd1518ba"
        },
        "item": {
          "id": "3fa8dfac-7474-429e-8e3d-ea6036021fd4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "acd06735-74e5-4e7a-9a0e-a19fd53be8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c335a3-55b3-4820-9ae5-0c6882d53895",
        "cursor": {
          "ref": "659e048e-dfd8-4cf8-9baa-35cea77d66ad",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3ae7e497-a733-45f8-abf9-547174b6c31e"
        },
        "item": {
          "id": "e6c335a3-55b3-4820-9ae5-0c6882d53895",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "43e28245-d6e0-4dc4-9f9a-12491837d98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c12ece2-ecca-4bb6-9929-9c53ac54ba52",
        "cursor": {
          "ref": "2cc2d61d-95dc-4749-8bfb-0675fa72b915",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b2cf5372-ea57-41c4-a06c-239c80198cf8"
        },
        "item": {
          "id": "2c12ece2-ecca-4bb6-9929-9c53ac54ba52",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c1130644-63ea-488a-9196-5d54565b04cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f461b57-05b6-48b3-b322-6f3844f84e37",
        "cursor": {
          "ref": "26dc09ef-e69c-4b6e-8944-764a60fca32d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "eaa57b7e-5035-4ae2-bb08-4839b2d8351b"
        },
        "item": {
          "id": "4f461b57-05b6-48b3-b322-6f3844f84e37",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0152e0ed-8c5a-4456-a812-2c3c733c8322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc15142b-0fb2-4727-9176-e9298c425716",
        "cursor": {
          "ref": "28adefbb-2074-411c-bc16-46572bbe91cd",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "93b70bf1-77d4-4e54-a65c-f08a9f7d585e"
        },
        "item": {
          "id": "dc15142b-0fb2-4727-9176-e9298c425716",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9023f844-4a58-4f29-bfb6-30a6f96fea60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017e11cb-772b-4204-a6c2-8e6c39a3e127",
        "cursor": {
          "ref": "cda9ce60-cf7b-4711-8ebc-4fca2419c0c7",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9bbc52c4-41af-49bc-825d-fe4ab5336704"
        },
        "item": {
          "id": "017e11cb-772b-4204-a6c2-8e6c39a3e127",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f5c48141-178b-48bd-b37c-e64d677cee93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9c2b76-56f8-4074-99a7-1f6a1ad51926",
        "cursor": {
          "ref": "f8212648-c417-4a4d-9c42-e818cb1497bf",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ec5a95d9-e5dd-4753-a866-5dd3c5304142"
        },
        "item": {
          "id": "6a9c2b76-56f8-4074-99a7-1f6a1ad51926",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0f9f9154-b538-4dbb-944a-332edd3c2530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c744c9-d3da-4524-86a8-f81b8f2edf2c",
        "cursor": {
          "ref": "7d013f92-196d-4042-a54f-ae6622232a28",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "983f5277-6c9f-4afd-997b-c4c56311ed41"
        },
        "item": {
          "id": "e6c744c9-d3da-4524-86a8-f81b8f2edf2c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aac13c5b-fda9-437e-afe1-d1edd070c622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fce8c8-7eb7-4306-9ae8-0797cb23cd73",
        "cursor": {
          "ref": "09382fb4-4deb-4a5f-9655-598ffd62280f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "47d0902e-51ec-4bf7-ab27-8928803215b5"
        },
        "item": {
          "id": "c1fce8c8-7eb7-4306-9ae8-0797cb23cd73",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c1355839-daa2-4cf1-83a2-23a3e43ee6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c3751c-3de2-46b4-8e99-d8c042aa45b7",
        "cursor": {
          "ref": "1dec6a37-c07b-4a0f-988d-9dbcc027dc9c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "28b95b65-0ee8-4a38-9e1e-780adba2ee6d"
        },
        "item": {
          "id": "e3c3751c-3de2-46b4-8e99-d8c042aa45b7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bea70589-db12-4728-95a3-1c7d6ccb0be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dfd828-ce83-415b-8699-55cc3941252d",
        "cursor": {
          "ref": "7f4e9a4f-dd41-426b-9d84-8486b8f8bba0",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "806ccae2-08ec-4d8d-bd31-5f17ee13452b"
        },
        "item": {
          "id": "c4dfd828-ce83-415b-8699-55cc3941252d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "da46456a-d8db-41e3-a1a8-1a7e6a5a82e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285b5a52-1cfc-4a98-aae6-0a77adbc2f5d",
        "cursor": {
          "ref": "9dffeef8-3094-4da5-aad9-77018761ccf7",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "384540aa-5036-452c-8cac-cf13bdd5b92d"
        },
        "item": {
          "id": "285b5a52-1cfc-4a98-aae6-0a77adbc2f5d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "58df4686-fc0b-4c65-b345-67d234b71943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808738aa-31a6-4619-8013-4b6710e0731a",
        "cursor": {
          "ref": "5d2a9b1c-7e6f-46f7-8132-f721c66b1a45",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d678d4dd-bb5d-46b1-aeab-e4f25b0b1a14"
        },
        "item": {
          "id": "808738aa-31a6-4619-8013-4b6710e0731a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6c3669ee-8fab-472c-b984-4395ee571228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dbb195-6054-426a-9b21-295f952616c3",
        "cursor": {
          "ref": "4decb957-ba5f-4698-b340-58acfe46d775",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c35c2d07-239d-4f31-9a69-08cc245f8998"
        },
        "item": {
          "id": "16dbb195-6054-426a-9b21-295f952616c3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f0763824-a338-4ed6-95ac-50eb8362b431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2b9a91-4e4e-4bf1-ad6e-fcaa19136e83",
        "cursor": {
          "ref": "64f7f628-3fe1-4688-ba8a-70f0ec6b8db5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9b76e00e-57cd-4c2f-821d-5718ef029870"
        },
        "item": {
          "id": "ac2b9a91-4e4e-4bf1-ad6e-fcaa19136e83",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d70ab975-bc5b-4dea-b5c2-3fd21b56e3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e0cb2e-bd6d-4e5d-a9f9-db1cf354f2bc",
        "cursor": {
          "ref": "578cc78c-b88b-4370-acdd-53143720ad05",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "254e4dcb-4142-40cb-8193-903ae6b0f5d4"
        },
        "item": {
          "id": "01e0cb2e-bd6d-4e5d-a9f9-db1cf354f2bc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "52dff440-7a5b-4f2c-8072-89897cb3fd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb6d207-9476-4929-a385-088a836d1361",
        "cursor": {
          "ref": "23d1999a-568c-4175-9453-7cbf3e342c1e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b914a5b1-aefb-4010-a341-31c6f4fbbd1e"
        },
        "item": {
          "id": "ccb6d207-9476-4929-a385-088a836d1361",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "47a5676c-8d19-427f-b875-70c658fea871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce0f315-3c7e-4d26-ade0-7e7a4cfe257f",
        "cursor": {
          "ref": "7b829861-dda5-4026-a5fb-31233f13420a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d89fa762-c9b5-4819-8523-8164f9069407"
        },
        "item": {
          "id": "6ce0f315-3c7e-4d26-ade0-7e7a4cfe257f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6b28ff66-4460-4576-bedf-dc618adbb449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554afe05-7022-4a32-9e92-7de3f9832766",
        "cursor": {
          "ref": "57cd6b88-0195-4d8d-915e-49dea0474351",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6ed7b3a5-3081-450c-95ab-ea19ee5f260b"
        },
        "item": {
          "id": "554afe05-7022-4a32-9e92-7de3f9832766",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6c05ec7c-5bea-4b2c-be56-945720c99c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aee23a-4b7f-4831-a1f1-8c3c3f85f52c",
        "cursor": {
          "ref": "39dfa34d-9b3c-4879-b316-044191bd6751",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9de1afd3-8af0-4c4d-8855-b1551a98d0ca"
        },
        "item": {
          "id": "03aee23a-4b7f-4831-a1f1-8c3c3f85f52c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "05f8d80b-5867-4ac3-9f7e-c22c927ec1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070879a3-7f95-4e51-9b24-fd6f964dd913",
        "cursor": {
          "ref": "64be89fd-2f0d-4982-aea6-f130e1ec9327",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "51a15e95-770e-405f-bccc-48cb2d7368b9"
        },
        "item": {
          "id": "070879a3-7f95-4e51-9b24-fd6f964dd913",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "70b2759c-de61-491c-8eed-91bf8f990d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6515ce3-139d-4123-9dce-ede11fc9e8ad",
        "cursor": {
          "ref": "fc7d9d8a-8440-482a-8644-8d88cdee7449",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2e1d1470-ca99-40f0-86c7-d5ff8fe1273c"
        },
        "item": {
          "id": "a6515ce3-139d-4123-9dce-ede11fc9e8ad",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1562f935-a4d9-45cd-a35d-d944587154c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274120d5-f7ae-443e-9053-5bd09bf7df71",
        "cursor": {
          "ref": "1ca867cb-4cae-4172-826c-c4c7697c346c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "34b5b31c-80e1-4529-b9a4-59a708eff512"
        },
        "item": {
          "id": "274120d5-f7ae-443e-9053-5bd09bf7df71",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4f06e0b7-ead4-4570-8891-45671c6747f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f265f4c-da80-4a40-bdca-c153c43d7b40",
        "cursor": {
          "ref": "5ea5777a-8717-4ff8-b63b-05bf4416a7c7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c952148c-542d-4d78-9daf-53859671e3b9"
        },
        "item": {
          "id": "5f265f4c-da80-4a40-bdca-c153c43d7b40",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cb4eff95-be55-421a-9a18-9a9439af48c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb97a40-e27c-4d91-b9a0-0baa4c1412ad",
        "cursor": {
          "ref": "4d45bd1a-7a5a-4f57-88ca-c4d1b52c3a4a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c347e6b6-003e-4014-8ec6-357e39dcbc21"
        },
        "item": {
          "id": "4cb97a40-e27c-4d91-b9a0-0baa4c1412ad",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4f8d4d67-8d28-49a7-8c94-81197ced0c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8f5c53-b5e5-4f62-9f97-f28798a0c1d5",
        "cursor": {
          "ref": "270492a8-6d0d-4d65-808e-3427f3316eb7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "894fcb4b-78ca-422b-9b08-a729248b772a"
        },
        "item": {
          "id": "db8f5c53-b5e5-4f62-9f97-f28798a0c1d5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4c601fa3-a794-48a4-a30c-5b2efaae138a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ca10cd-9fb7-4f0a-a97c-f9b99e54a622",
        "cursor": {
          "ref": "d82c0773-8b39-44a2-8649-19861935f2d6",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "04d04578-f921-42b9-9ea7-7e82467eb749"
        },
        "item": {
          "id": "75ca10cd-9fb7-4f0a-a97c-f9b99e54a622",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "24f6f1e4-862e-493d-87fb-36c70a12d121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21408dc3-99f1-48e1-8440-1c64a6de2944",
        "cursor": {
          "ref": "65160424-ff68-4bcd-85ea-cbc86a215af2",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "83cb5a53-f729-4aed-a485-3e034ea57e49"
        },
        "item": {
          "id": "21408dc3-99f1-48e1-8440-1c64a6de2944",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1b6315d0-6eba-4ec5-b732-62431a3c67ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155aeb06-9b3b-4ce1-b5ea-7edbc75360a8",
        "cursor": {
          "ref": "dfe22f4b-bba0-4a67-a9ae-eee40527d2d3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c3626cfe-1270-4c1f-a3fd-1bf7d27adebf"
        },
        "item": {
          "id": "155aeb06-9b3b-4ce1-b5ea-7edbc75360a8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ee7256b6-4b35-4e4c-b1a5-7a9af387b22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a983fbde-1d1a-4495-896b-a86832b5d780",
        "cursor": {
          "ref": "b44e9dde-15a3-4fdb-9f22-52cefe4eee7a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cee014d4-8170-4516-a9c0-21117cb8bf43"
        },
        "item": {
          "id": "a983fbde-1d1a-4495-896b-a86832b5d780",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a77d0d80-729c-4f91-ad5d-b1ac5fc9c4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a160ab79-1c18-471f-88c6-babceaf1f4a8",
        "cursor": {
          "ref": "2eab61ea-3687-4127-9a36-402c01e14c0f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "11d266f0-527b-491f-bed5-8cc296ce9d01"
        },
        "item": {
          "id": "a160ab79-1c18-471f-88c6-babceaf1f4a8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "eaa7420a-bcfc-4e28-be57-08d10abf7ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8458028d-0ae8-4bdb-b223-9b1330722f05",
        "cursor": {
          "ref": "e99299e5-3dd2-4e09-9624-c866146c2dea",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "960ee596-505f-422a-95d6-ea18674681b3"
        },
        "item": {
          "id": "8458028d-0ae8-4bdb-b223-9b1330722f05",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1726702d-2b0f-4655-97de-8a2a3d6bcf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1683624-bd7a-4d4a-a680-e2695f5e7d1d",
        "cursor": {
          "ref": "acfb34ef-f5b3-4541-82a4-4f70fe2b3993",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7654b233-550e-42f4-bb23-d154281364f7"
        },
        "item": {
          "id": "e1683624-bd7a-4d4a-a680-e2695f5e7d1d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c303eb7d-8e86-4ceb-aeff-a7b74d06b56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ddb3be-c773-4120-8dfc-16ae03188564",
        "cursor": {
          "ref": "5a091867-530c-4ac6-bda8-9610e52ccea1",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f249af04-a471-4cba-ad28-570874ab76f8"
        },
        "item": {
          "id": "a7ddb3be-c773-4120-8dfc-16ae03188564",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "afbf775e-072c-483e-b4df-0baf770a4080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03d3fb9-7f04-451f-9ab9-85abff3bae80",
        "cursor": {
          "ref": "019760a6-99e3-4988-9566-2fd1947e09a1",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4344b9c1-4ecb-4958-97f0-5cab5800d6cb"
        },
        "item": {
          "id": "a03d3fb9-7f04-451f-9ab9-85abff3bae80",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8fd22945-914c-4844-bd5a-01706f5251f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd2104e-228c-4d6d-9d0f-1127d59494ba",
        "cursor": {
          "ref": "4365a23d-cc2a-4eb9-a4e8-40fdd902b9fb",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e2bac330-163d-4cd0-9a6d-76bbb947a550"
        },
        "item": {
          "id": "8cd2104e-228c-4d6d-9d0f-1127d59494ba",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "39918ea5-d60f-46bd-8b97-86fe697cfe89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3ddcaf-ad62-427e-9a03-08b4556877bd",
        "cursor": {
          "ref": "f586bd7e-cc7a-4e20-b2e6-655f42268783",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3cce5483-cce4-4481-9248-3a20ed8273c9"
        },
        "item": {
          "id": "ff3ddcaf-ad62-427e-9a03-08b4556877bd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "18d02334-2309-449a-b86e-2748c581c0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e775b7-38c4-4234-8003-e17d80089ec0",
        "cursor": {
          "ref": "142fc029-111a-4b5d-b40c-72205d283c9d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "802132e1-0f47-4885-aa92-45402487177c"
        },
        "item": {
          "id": "74e775b7-38c4-4234-8003-e17d80089ec0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7e61a871-df7b-428c-abd8-9e803c8cadc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400bac88-7814-400e-aa07-05669b25c7fb",
        "cursor": {
          "ref": "512e2a99-2607-4e86-b6c9-c93340b7e43d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b48303c3-fb24-455a-a472-90e9558194a0"
        },
        "item": {
          "id": "400bac88-7814-400e-aa07-05669b25c7fb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4174ffad-d070-4a52-8b41-0ddccebb5308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aee3017-9312-4129-82c3-f8ae75fb0c9a",
        "cursor": {
          "ref": "18a1e069-2c04-4af9-a9d1-bf7450926542",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8fbde035-dbe7-43bf-bffb-26d67e3afe03"
        },
        "item": {
          "id": "1aee3017-9312-4129-82c3-f8ae75fb0c9a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b894d888-adfe-45ce-9ca7-a28b994fd78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0ae368-1dec-4194-a8ee-4df7e938df29",
        "cursor": {
          "ref": "d189ca81-004a-46ee-becc-a66209bc1516",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "df9a3316-696d-4570-8a08-13fcf2bd0b8d"
        },
        "item": {
          "id": "fa0ae368-1dec-4194-a8ee-4df7e938df29",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4e5ca99b-beea-4c12-a119-b4428a978bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457dba0c-d3f3-4357-8940-a6be774139b3",
        "cursor": {
          "ref": "43fcfa2c-5621-4158-9586-591b55bdf79f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4a7ae428-1533-4d7a-affc-756290a58d39"
        },
        "item": {
          "id": "457dba0c-d3f3-4357-8940-a6be774139b3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "76c0fb53-5230-4018-a88d-415f5a48ffa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1132d7-6b6c-40c1-b31a-cfa6bb49bf20",
        "cursor": {
          "ref": "c7410b00-2106-4e79-8749-83453f43ee0a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1df397cb-be22-4e42-bf0a-1c9dff717463"
        },
        "item": {
          "id": "1c1132d7-6b6c-40c1-b31a-cfa6bb49bf20",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4991cb66-c8d2-4dee-9ac3-8b71e61541be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20093261-e667-4642-b0dd-9cd832931bb1",
        "cursor": {
          "ref": "216caa97-5fe3-4087-9b98-1fe7ff47f9c9",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0f7b5fc5-5c28-46a5-826d-26b756be0f8f"
        },
        "item": {
          "id": "20093261-e667-4642-b0dd-9cd832931bb1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "50bf474b-fe20-4396-bb7a-ac6aff2a7ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcd3c22-dfba-4af7-8793-73db80173bd2",
        "cursor": {
          "ref": "af205299-422e-4309-b7c0-31c92217ee4b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "127a523c-bfc9-432a-9572-30e27a9ea1be"
        },
        "item": {
          "id": "2fcd3c22-dfba-4af7-8793-73db80173bd2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "540dc3db-7f87-4bf5-8c45-559bd66de51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b730ddc3-437d-4178-a2fa-8171331b0603",
        "cursor": {
          "ref": "3598f541-f783-466d-ae34-1bfbefc651d1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d71c8f9a-20b8-4451-b113-4d5379f6525a"
        },
        "item": {
          "id": "b730ddc3-437d-4178-a2fa-8171331b0603",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d1b57742-0ca6-419f-8365-c3cac592d615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b30002e-6e56-483b-a0ca-41496061a5db",
        "cursor": {
          "ref": "36d604a3-3fe2-40d1-8ca4-a43486f5e28c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2f8acebb-ea91-4d0f-9b25-4e72d108d300"
        },
        "item": {
          "id": "6b30002e-6e56-483b-a0ca-41496061a5db",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3cb249a5-66a5-4519-ae23-d86fe1e46398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581b05f0-ad8b-44d4-8bc3-0f9112a111ad",
        "cursor": {
          "ref": "6c33f11c-549d-4625-a949-d80756f76405",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "46b7af9c-81cc-4409-950c-f85afac91f8c"
        },
        "item": {
          "id": "581b05f0-ad8b-44d4-8bc3-0f9112a111ad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2ac76506-9f3e-48eb-a835-538d2db30f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45e79b5-4799-4fd0-9578-f8837e5cb1a8",
        "cursor": {
          "ref": "2568088c-d114-4843-8e7d-cc55105dca6a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4e841b55-679a-4186-9c39-3421e863fd31"
        },
        "item": {
          "id": "c45e79b5-4799-4fd0-9578-f8837e5cb1a8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c5de7d85-8d95-48ad-a8b5-5cd76f04b20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154b8146-e5c5-4278-ab05-f03e8c8a2d04",
        "cursor": {
          "ref": "65e26959-3d45-44a8-8bde-12a140efc960",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e9f26378-480b-4bfe-84bc-49ed511cbc7b"
        },
        "item": {
          "id": "154b8146-e5c5-4278-ab05-f03e8c8a2d04",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "665da37e-14f1-4c92-8204-b499737ed24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5642afd6-1ce8-4145-83f0-69f98df3ed53",
        "cursor": {
          "ref": "74dbf3c0-1a4f-4ffb-8ba4-2127eeb58ba8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c7959807-7c3c-4f71-a3ef-647d076471d9"
        },
        "item": {
          "id": "5642afd6-1ce8-4145-83f0-69f98df3ed53",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ebb41f8e-c434-4fdf-97a0-e5d7e7f95fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4673b41-e381-499b-b162-916b56fe114a",
        "cursor": {
          "ref": "a4db5c7b-a37b-4389-b8e5-9bdb005f3da6",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f9fc478f-0b3d-4d36-8536-0ea0671168d8"
        },
        "item": {
          "id": "d4673b41-e381-499b-b162-916b56fe114a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "439de1c9-c0e9-44da-89a2-927ee1f259b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceedd08c-4463-4aaf-8f71-6f226192518a",
        "cursor": {
          "ref": "652e2e1b-fdf0-462e-aa64-74b03031dc85",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "94dd4ce0-21cf-4d1d-83be-8322c4bce14f"
        },
        "item": {
          "id": "ceedd08c-4463-4aaf-8f71-6f226192518a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2fcd3290-4272-45ef-8c28-49a29d40e82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8847d7-3d94-42db-875c-9c6686017201",
        "cursor": {
          "ref": "a4e91940-16ed-4a9c-8d3a-47999646a604",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "50cfafac-87f5-4220-a9d1-1a110c024fdd"
        },
        "item": {
          "id": "6e8847d7-3d94-42db-875c-9c6686017201",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f81a2739-f249-4a84-ac4c-73b724d4dccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99da30f7-9529-4ce6-8954-92d0c38eb321",
        "cursor": {
          "ref": "4822ea26-ed44-4daa-8446-3220860e2007",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5f2f9b45-b7c6-4c4a-b897-30492d12b9d8"
        },
        "item": {
          "id": "99da30f7-9529-4ce6-8954-92d0c38eb321",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b46f8766-6226-49cf-ab75-44f6364666ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cb6278-35f8-4e73-a132-b015733fd99f",
        "cursor": {
          "ref": "557c091f-eda9-4180-b0cb-a691339dc821",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "17a6a2e5-69fa-43c4-a7ed-36b8cfa14a3c"
        },
        "item": {
          "id": "10cb6278-35f8-4e73-a132-b015733fd99f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "04f05c33-5f17-42b7-a0bc-a87a370bbb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e944678-4b23-416d-9db7-319936e9864c",
        "cursor": {
          "ref": "38025276-352f-4c6d-9e32-30d42e1a64a9",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d6c9c70d-557f-4449-9e16-5a2801939c91"
        },
        "item": {
          "id": "6e944678-4b23-416d-9db7-319936e9864c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "66cf3340-0fa6-44a6-858f-3149a00b3202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a897e3e-b1b2-41c3-b1a9-89290922886e",
        "cursor": {
          "ref": "e47be5de-0f5d-4f2b-a3d1-c7926bed6d7e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f08f9175-6f0f-49da-bee3-b188a9aada23"
        },
        "item": {
          "id": "1a897e3e-b1b2-41c3-b1a9-89290922886e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3c20c2c3-03b5-464b-999f-61f26d2e23b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b901ddcb-a505-4002-b11d-4ecde7cc656c",
        "cursor": {
          "ref": "cc73eb8e-9416-4eed-acd8-d45c62976af6",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "57002c28-e3f9-4942-b72c-8d8a216eeb95"
        },
        "item": {
          "id": "b901ddcb-a505-4002-b11d-4ecde7cc656c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "087af164-b688-4deb-b096-b899e22dc2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a013fde7-57e3-4bd4-86c8-a07c7b4d01b7",
        "cursor": {
          "ref": "e9cacc0e-a269-49aa-9925-5e1ecfca6a59",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b1e1d183-9263-41ae-8ea1-75a874306dd7"
        },
        "item": {
          "id": "a013fde7-57e3-4bd4-86c8-a07c7b4d01b7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "43277167-71c8-4034-a119-50c18ca05a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9c92a8-6540-4c55-9ad0-a669358c3bb9",
        "cursor": {
          "ref": "e186c9e3-3083-47d1-a321-3fb6983185fd",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5fec9855-029d-468c-adc4-5912bc58443c"
        },
        "item": {
          "id": "1d9c92a8-6540-4c55-9ad0-a669358c3bb9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "55bc4622-1c2d-43bc-a232-2896dc72c605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1407c070-4713-4ec7-8714-814a20aedc23",
        "cursor": {
          "ref": "798ca08c-6944-4e74-a808-4615f95ed601",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f34159cb-0595-4f2f-a547-2cc1349e8c3d"
        },
        "item": {
          "id": "1407c070-4713-4ec7-8714-814a20aedc23",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3bed873b-1f6e-4e07-828a-0e9f8e95f6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeac687-f14e-4536-9d38-b28d5aaf1fc5",
        "cursor": {
          "ref": "93fe0c47-4cca-4d17-8af3-1c403b35b5c6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5672aa2c-616e-4fc2-afd1-93b76cd204d5"
        },
        "item": {
          "id": "ceeac687-f14e-4536-9d38-b28d5aaf1fc5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5c5f4552-141b-4d87-a933-4ddd0bec68de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18216231-6e53-479a-b5d8-8a5b5dbc7c20",
        "cursor": {
          "ref": "6167d23c-35c7-41d9-95d7-e838a9a38d74",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "187a5852-b16f-4618-9b0c-7854c6eb9bf3"
        },
        "item": {
          "id": "18216231-6e53-479a-b5d8-8a5b5dbc7c20",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "186c53f0-5acb-4bbf-91a4-d0be9aa3e015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76ad4cf-f72d-43a9-a848-11d32caeb1fe",
        "cursor": {
          "ref": "461791ad-1989-41b2-ac2c-a10db5380385",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "96cd9027-4a86-4dad-88be-8d456f744fc9"
        },
        "item": {
          "id": "d76ad4cf-f72d-43a9-a848-11d32caeb1fe",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e361a427-7fde-4ce0-a2fe-c4c47ef76c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ba3b77-8a46-4db1-856f-4b16a0612d65",
        "cursor": {
          "ref": "dd42ad49-3c2c-4b12-a9b4-558ecfb5b4ca",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d66abc0e-51a0-47a4-9230-d6e6e102f207"
        },
        "item": {
          "id": "18ba3b77-8a46-4db1-856f-4b16a0612d65",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "be0c0b31-d71e-4812-ae7b-63f3d4b64d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cc3957-ed40-4a1f-89c3-2f71dfdb0ef8",
        "cursor": {
          "ref": "8a5d0562-906b-4f87-bf77-c66ffa5029f1",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e943c1cc-5aa4-4fb2-aad6-24f3245a553a"
        },
        "item": {
          "id": "04cc3957-ed40-4a1f-89c3-2f71dfdb0ef8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "12f7028a-59dd-4165-8104-5ec9cc595916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5da13a3-a95b-4504-b341-fe10e0246fe7",
        "cursor": {
          "ref": "3fb2ada7-e241-4024-a531-d4a9c47d5c39",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2fcfff8a-716f-44db-bf7c-87a463f48e7f"
        },
        "item": {
          "id": "e5da13a3-a95b-4504-b341-fe10e0246fe7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a5642993-39e6-4e5d-9cfb-9970117d37e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2da80b-9eb4-4acb-b322-15f515393f53",
        "cursor": {
          "ref": "628f6d49-0612-4658-9617-e39d43f90d68",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "63a9732b-19b2-4300-beef-678023fdaeca"
        },
        "item": {
          "id": "db2da80b-9eb4-4acb-b322-15f515393f53",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "49676ac4-541b-436c-ac66-77b50fa3fdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99568d8-4a49-4734-b1d4-30247a9fd884",
        "cursor": {
          "ref": "35b1d446-f984-4d52-afa9-1941db6e70df",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2422e740-ecef-4b04-b917-73a992ba4599"
        },
        "item": {
          "id": "e99568d8-4a49-4734-b1d4-30247a9fd884",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b25e1eb4-cddb-4946-a408-72a0b6cb2d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577e46e4-5c41-441f-a295-b4cee3fde4b6",
        "cursor": {
          "ref": "2ab32406-39c4-498b-b645-0c2975fa360e",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9a579700-2c2a-4c03-ac77-caf2549512ce"
        },
        "item": {
          "id": "577e46e4-5c41-441f-a295-b4cee3fde4b6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "078b935f-b32c-47a7-b4b9-b614d78a39e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55df6031-1929-41b9-a2ea-335acd27a966",
        "cursor": {
          "ref": "c33567da-53ce-41e9-9fc1-f27edbab2e44",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f004fc17-b958-4a00-a40b-59c43450ad50"
        },
        "item": {
          "id": "55df6031-1929-41b9-a2ea-335acd27a966",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d9935533-3e51-4707-b8bb-663b21919fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c4ce27-92c4-41d2-b2b5-1123949f658f",
        "cursor": {
          "ref": "44a078e8-bf4b-4a23-8891-54b8375440b3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eb21ce5a-1386-40a6-b221-15bf4e01a038"
        },
        "item": {
          "id": "97c4ce27-92c4-41d2-b2b5-1123949f658f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "85b8a898-b2da-42e3-bd0e-5a7ef26a2525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba018a75-4f48-44c8-87be-16be806bea8c",
        "cursor": {
          "ref": "9477d3be-898f-49b9-88b9-b46ee9476634",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e835af3d-d994-46c0-8ede-51b377572837"
        },
        "item": {
          "id": "ba018a75-4f48-44c8-87be-16be806bea8c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "04461f98-5287-4a94-827e-2e0723019357",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "cecc27ed-4835-4670-96e2-fd34e475002a",
        "cursor": {
          "ref": "b5bef6fb-b8fb-4911-9546-7a65703ee19e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c41f65a5-83c2-4378-add3-f54a18e0f650"
        },
        "item": {
          "id": "cecc27ed-4835-4670-96e2-fd34e475002a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c044aee8-af97-4737-a3ec-220a0b147c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7377146-e797-4d21-9f2a-56178b3d8c21",
        "cursor": {
          "ref": "cfcc5827-f90a-41f6-b963-0f74aeb5825f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1ddb1eab-976e-445c-b8d9-35710e282ac4"
        },
        "item": {
          "id": "b7377146-e797-4d21-9f2a-56178b3d8c21",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c5a2a4cf-8a0c-467a-bac0-960f52af66cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb04936-f234-4a38-b8d8-817cd7ae92c9",
        "cursor": {
          "ref": "80487285-1ef3-407b-bdc5-084bafcc1862",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5f5d3504-df37-4e60-a8fa-365f9ac50978"
        },
        "item": {
          "id": "dbb04936-f234-4a38-b8d8-817cd7ae92c9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "19a3e633-485b-4d04-9592-e01692c2d387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fec55c-4931-4716-9683-6d9c75eb9283",
        "cursor": {
          "ref": "07889117-5d49-48fa-8550-eb88e66b8361",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "10902d8b-b305-4bb2-a7e7-e9146d555d30"
        },
        "item": {
          "id": "80fec55c-4931-4716-9683-6d9c75eb9283",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "19613e90-a110-413c-a1fa-436282683dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc76b36a-b29e-4432-bcec-e9629d7f5c37",
        "cursor": {
          "ref": "7d208fcb-9431-4333-88f0-9f97cda02b19",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7ba7c0f9-ac4a-4e42-ac89-0ac594b149f7"
        },
        "item": {
          "id": "cc76b36a-b29e-4432-bcec-e9629d7f5c37",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5c623e80-1521-4563-aa76-0578ddc6d7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cf9cff-8f59-40f0-bd69-d3f7dee50f3f",
        "cursor": {
          "ref": "67195907-531d-42ac-a435-b9ef756b79b7",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "004c0ed9-fc04-4d13-8eb3-9d4b9312f62a"
        },
        "item": {
          "id": "11cf9cff-8f59-40f0-bd69-d3f7dee50f3f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7531e41b-3216-4e72-b8b5-0f7402ec81ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d8ff31-cb02-4375-9801-30930df06b1a",
        "cursor": {
          "ref": "73460e42-f051-4727-8a25-e5b29e13861a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3e0273c5-5d23-48fe-8e84-e2856213a950"
        },
        "item": {
          "id": "36d8ff31-cb02-4375-9801-30930df06b1a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b9d4675e-3b6a-49eb-8495-b52faa575781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e62fd76-8426-40ee-ab4c-ebb02c8d31d4",
        "cursor": {
          "ref": "a12f81eb-7b95-4baa-8764-ca3696512480",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0b6cf451-3835-4d87-a388-f89e090e5302"
        },
        "item": {
          "id": "2e62fd76-8426-40ee-ab4c-ebb02c8d31d4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ac3c8cb3-7b08-46c6-9bd7-d1e0bbac467c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8313b76b-55a4-4c32-a6c1-d86dc45a02f5",
        "cursor": {
          "ref": "4c3f2855-967a-433a-94e7-aa4d66001d75",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "aa4a5e58-4395-4a8a-8eea-2b37d2d40417"
        },
        "item": {
          "id": "8313b76b-55a4-4c32-a6c1-d86dc45a02f5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "43feea6e-67d0-433e-abb9-da9344e75960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e65a4c9-b996-42d5-8238-f3791590c0e1",
        "cursor": {
          "ref": "f231fcd5-e419-4f58-a9c1-82d6cc1c7cdc",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4a9ca6eb-fd5a-49de-ac53-d9b8914296e7"
        },
        "item": {
          "id": "2e65a4c9-b996-42d5-8238-f3791590c0e1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9b34b363-e8ec-4da8-81ac-6f08b4049e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c08ef20-1ca3-4a36-922a-c590b7dbe51f",
        "cursor": {
          "ref": "92972b26-7603-41a5-acb8-7d2e26fe0dd7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "895f3df8-780e-4d48-a42f-038927ccff7d"
        },
        "item": {
          "id": "5c08ef20-1ca3-4a36-922a-c590b7dbe51f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b3e614ae-bb9d-4a46-aaa4-fd4a2486c82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3302a032-08d1-4c54-a82c-ff34ed8271b1",
        "cursor": {
          "ref": "69a65df6-6687-4b7a-a4ac-1a1a76a75aa3",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "46f36ce8-a48c-4a85-a051-87490d670c9f"
        },
        "item": {
          "id": "3302a032-08d1-4c54-a82c-ff34ed8271b1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4dc6bf49-aacd-4a48-967d-567f33dbfb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd70b30a-0c12-42ee-8563-82cb386febe0",
        "cursor": {
          "ref": "b8cc12d7-e875-4b48-938e-b418b36ee4cd",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "630c4e38-9f30-4c4e-8498-c29ea0436417"
        },
        "item": {
          "id": "dd70b30a-0c12-42ee-8563-82cb386febe0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7cc28f98-f9bb-4f03-89b2-3002010cdcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac415cf-8b4c-4927-85e1-9cfe6829fcd7",
        "cursor": {
          "ref": "9d09b9c5-3a77-4b53-809c-0cc2ffdc27b6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cfdc01c6-8e61-4bdd-81c6-1c5614083f4b"
        },
        "item": {
          "id": "fac415cf-8b4c-4927-85e1-9cfe6829fcd7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "df8d5c5d-2a28-4131-a13a-6556f130a487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dcfcf0-900e-4c77-b77a-a4d22a9c4ab8",
        "cursor": {
          "ref": "f9fa4f69-8a6d-44e3-b3a3-882336dc7b7b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b818e57b-e83b-4e10-8518-d3669cb8ec79"
        },
        "item": {
          "id": "93dcfcf0-900e-4c77-b77a-a4d22a9c4ab8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bfba69f2-6f28-4ebb-aa2e-9a7df37ab0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7077dc8-6a81-4b1e-bcd1-75ff01821737",
        "cursor": {
          "ref": "243ce5b3-b11d-4fbb-a181-412e4313d34a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3317336a-4dec-4d42-b97a-2dc8a591751c"
        },
        "item": {
          "id": "f7077dc8-6a81-4b1e-bcd1-75ff01821737",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "608ee5cd-1774-423a-a5b1-3dd809179cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59002cbd-a418-470d-bc1d-a08e494e8e3b",
        "cursor": {
          "ref": "d15e8e4c-ab4c-400c-b351-3bca788423bf",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b493ed15-be97-40f3-a187-4470ca5830cd"
        },
        "item": {
          "id": "59002cbd-a418-470d-bc1d-a08e494e8e3b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7d9f4a44-92f8-4a46-9f83-391614a90653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3857bdc3-da93-4baf-aa7c-2655c4ffefa5",
        "cursor": {
          "ref": "adac787a-75f7-4884-bf5a-7c5f9ddec20b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0a80281f-fc55-4cb2-9c4d-d94f034b4863"
        },
        "item": {
          "id": "3857bdc3-da93-4baf-aa7c-2655c4ffefa5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9c1b95d7-b7af-4e48-9b96-3b66d00628a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cf8f59-3a4a-4f5f-a4eb-e0885d4868dc",
        "cursor": {
          "ref": "5dd5bf5a-a0be-4028-a282-2f0a81f9c565",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fc0d877c-8ecb-4f4a-98d4-3a6e169c0e30"
        },
        "item": {
          "id": "a7cf8f59-3a4a-4f5f-a4eb-e0885d4868dc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "acd6a92d-92e9-44ae-98f3-0affc8eb6295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5819095-b1ba-44bf-a694-290988598e04",
        "cursor": {
          "ref": "8e37ee48-9b7a-43fb-aab4-046e15a580af",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a95fc1ec-bfda-4f77-acff-d63b0eae4b34"
        },
        "item": {
          "id": "e5819095-b1ba-44bf-a694-290988598e04",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3e89a6f9-5247-45e8-92d5-eb86d030eb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb8d7d5-acd2-4e69-aa9c-1b8dfeacb61a",
        "cursor": {
          "ref": "67968474-4ae0-4ba1-a76c-33786a25cd6d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "59356f44-5d17-4b38-84de-eb759a48c7dd"
        },
        "item": {
          "id": "1bb8d7d5-acd2-4e69-aa9c-1b8dfeacb61a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c83ec345-8d06-46d3-8761-160445dc0efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3767787f-bcc0-420b-8378-e01c5448d3df",
        "cursor": {
          "ref": "5df427e8-6949-496a-b18d-59608246a0ba",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "24325538-36e7-4dd3-9d46-b62643a27bf0"
        },
        "item": {
          "id": "3767787f-bcc0-420b-8378-e01c5448d3df",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5ed99f80-53f6-4ef6-8462-7cc32dc98159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57164c2-2bdb-4b6a-af28-d8d9a96132b7",
        "cursor": {
          "ref": "f9333e8f-1672-4088-8dd8-89f2577ed651",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2fe1344a-9c26-4e66-a28c-325d7c2dfb32"
        },
        "item": {
          "id": "c57164c2-2bdb-4b6a-af28-d8d9a96132b7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9b38bfad-1fc3-4d81-81bd-2462da0d1f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf5acac-ab1a-4bce-85f7-2b56e5da8143",
        "cursor": {
          "ref": "2e558c29-8bf5-453f-9f7d-612d9f19dd22",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "62ff4ad6-37a5-4e17-a576-f77025eb221f"
        },
        "item": {
          "id": "bcf5acac-ab1a-4bce-85f7-2b56e5da8143",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "76c91dfb-99e3-408b-be43-3076bb608954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b5287d-48d5-4e9c-b2da-55a1480d0639",
        "cursor": {
          "ref": "ec4a5578-605c-4fb9-a1c4-b1502d7bf3e7",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b8449ea7-fbdf-49f7-bba8-98bedc87cfcb"
        },
        "item": {
          "id": "b9b5287d-48d5-4e9c-b2da-55a1480d0639",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b431b144-d4e1-49b3-ad93-f597bccb402e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02736789-032f-43e7-aa62-407d3c45f19e",
        "cursor": {
          "ref": "4c4b2cc8-e918-435b-ab07-8fca79714ee1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4baea1ea-e534-49e5-a186-cf1bb48f193a"
        },
        "item": {
          "id": "02736789-032f-43e7-aa62-407d3c45f19e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e948a6e4-aba3-4973-8553-f619209ec9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de17af47-3708-48c5-89c0-dce8eb9e69c2",
        "cursor": {
          "ref": "92745e69-9856-4cd5-a27f-67498097bfbf",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f10a3639-ade1-46cb-99af-cc21f204ea0f"
        },
        "item": {
          "id": "de17af47-3708-48c5-89c0-dce8eb9e69c2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a6cfc698-f932-4b4a-99ac-40269fdbbd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376b3d5f-a39e-4ebd-8934-76422e3a9732",
        "cursor": {
          "ref": "8b40b4eb-e8e3-43c8-aec3-4fdaab939874",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b1f71477-3137-412e-92de-b3f982cbd94a"
        },
        "item": {
          "id": "376b3d5f-a39e-4ebd-8934-76422e3a9732",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e5fc7238-e50b-4650-a0f7-904161b4239b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0ecb5d-8669-4e0b-8aab-6e63bd4aae45",
        "cursor": {
          "ref": "7dd2c46b-e0a7-4439-838d-9a7b70c9200e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "eb84a984-3a89-404d-9409-74df5f180c23"
        },
        "item": {
          "id": "eb0ecb5d-8669-4e0b-8aab-6e63bd4aae45",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "65e62c78-9548-4b94-8ab0-83aff4a025b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a84bf41-ff10-4480-ab6e-b3a168e0b233",
        "cursor": {
          "ref": "94865506-532d-45c2-ac36-e4029899d955",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "64cad83b-e4e7-49b2-9cbb-c2fb6b02f86f"
        },
        "item": {
          "id": "9a84bf41-ff10-4480-ab6e-b3a168e0b233",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a0bc906f-e965-476c-9916-a9f72adff478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdafc67-7c7c-43aa-92b8-aa9e3f386367",
        "cursor": {
          "ref": "3c0327ec-bb87-4942-91e2-1d4e22422be6",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b994335d-1f65-4d39-8cde-e97fa03434ac"
        },
        "item": {
          "id": "8fdafc67-7c7c-43aa-92b8-aa9e3f386367",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "714d4909-02d8-4552-82e5-2494dab621b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc89871-93e1-479b-a054-ccc0cd772497",
        "cursor": {
          "ref": "afc95426-bf1a-4275-9515-eaa271297db1",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "972ec184-b09e-4d8e-91a9-73147b287948"
        },
        "item": {
          "id": "7fc89871-93e1-479b-a054-ccc0cd772497",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "62525419-8fc2-42c9-adde-0c6465f133d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e380d8ea-3cc2-41ee-a7bb-21e9cd75f691",
        "cursor": {
          "ref": "74bf4a6b-929d-4da2-aa3c-c099816c6649",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "50d86f13-43fe-4062-a53a-67e1094c258b"
        },
        "item": {
          "id": "e380d8ea-3cc2-41ee-a7bb-21e9cd75f691",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e647eb4d-d020-4a09-bf5c-d9b46d1664a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a46cdbd-3f4f-4f53-8c4a-dae1cdbb7170",
        "cursor": {
          "ref": "37c0df74-8f8b-4b4b-8c73-04237f2b7c3e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5570aa45-e7e5-46a0-8077-67d115276d46"
        },
        "item": {
          "id": "6a46cdbd-3f4f-4f53-8c4a-dae1cdbb7170",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8097a55b-9768-4388-bd8d-3a24b0a1f959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b76ecdc-f921-4c10-bcd6-3643dc9ee3da",
        "cursor": {
          "ref": "03a612eb-38f3-49d9-b496-8447078bd4c8",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a95953d3-696e-4795-8be7-95d67e6b789b"
        },
        "item": {
          "id": "1b76ecdc-f921-4c10-bcd6-3643dc9ee3da",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "707b1084-7446-4cca-a156-422cf18afece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb42da0-8086-4144-a447-57180ef1fa51",
        "cursor": {
          "ref": "4ec50269-7569-4f82-a15b-69a1432664f3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "83c2502b-8531-4650-a9ab-f3c3f79029d9"
        },
        "item": {
          "id": "fcb42da0-8086-4144-a447-57180ef1fa51",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f291d326-1698-44c4-b71f-ef4bb183e555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251b805a-e57f-4c9f-bd9d-ea1c4cde3303",
        "cursor": {
          "ref": "19ca5362-949b-488e-9478-375176d9d08a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "79df869c-21d5-4aa9-92c2-c285805e306b"
        },
        "item": {
          "id": "251b805a-e57f-4c9f-bd9d-ea1c4cde3303",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "881a844e-63e5-4bee-9bae-5ba84c96874e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0105674b-7932-459c-abca-a25651a9ef32",
        "cursor": {
          "ref": "de1949b2-7a40-4815-ab15-2b95dc357039",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2b96b01a-a6e5-47eb-9b8b-70b4194ac399"
        },
        "item": {
          "id": "0105674b-7932-459c-abca-a25651a9ef32",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "592f6d6d-f82b-40fc-9d20-340fb9a98866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a320299f-0716-4b45-86e7-f51465970687",
        "cursor": {
          "ref": "d63fe2db-53d0-4f19-adff-97f36bb000a4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "818794f9-0234-4278-8727-d5aac2908a67"
        },
        "item": {
          "id": "a320299f-0716-4b45-86e7-f51465970687",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d73c96a5-a538-4888-8be8-d5629355a830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c747c359-9330-412f-89ff-6b610335e0ea",
        "cursor": {
          "ref": "8b11453c-9fc2-4a7d-8d87-6060e48d3e0f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6ebc5cd0-08a9-41b7-87e1-4b858f7624ef"
        },
        "item": {
          "id": "c747c359-9330-412f-89ff-6b610335e0ea",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a545993f-f54f-456f-8a59-bc55f0b97021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3444174a-c516-40aa-a946-b929588b30cc",
        "cursor": {
          "ref": "d0ab5905-c023-4749-9a09-f614d1928916",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bfb4479b-abc2-4b21-a0f7-ae1e8fd9a2b9"
        },
        "item": {
          "id": "3444174a-c516-40aa-a946-b929588b30cc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1883e9be-2f97-4817-aa6f-a9a9256f3c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d1945a-4b3f-47f5-b8cc-11306d3b15e9",
        "cursor": {
          "ref": "6fe0d55a-9b7d-4c16-bbb9-39af65bf7f87",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f96a67bf-d216-416c-a239-1b8108dfa342"
        },
        "item": {
          "id": "76d1945a-4b3f-47f5-b8cc-11306d3b15e9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "464fc1c9-d553-479c-bfed-542d6f4d8712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2d00e7-3c0d-48e0-ae2e-8cef313860df",
        "cursor": {
          "ref": "0fe64945-8cc7-4ff3-8995-f065c9e349af",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4a3a4fe9-8073-42cc-b6f7-f920085297fc"
        },
        "item": {
          "id": "ea2d00e7-3c0d-48e0-ae2e-8cef313860df",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4cd681d4-153b-4187-9515-c0f850b7805e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c910e51-4fc5-493c-bc24-1dc63e918169",
        "cursor": {
          "ref": "7ecc232a-cc24-44d4-9c52-f4669cf1f56b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8e4ebe38-dff0-4880-8300-db3a0880b753"
        },
        "item": {
          "id": "0c910e51-4fc5-493c-bc24-1dc63e918169",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7bb18816-a97c-4346-8ef6-aded93ffe6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc621a8-e4f0-438e-9faa-0484e8cd3cb2",
        "cursor": {
          "ref": "bd4c7503-cb5d-44d5-82a5-b2bfa08d5323",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "aa2de3ac-8998-41c1-9f2f-ebddf1d4fd20"
        },
        "item": {
          "id": "cbc621a8-e4f0-438e-9faa-0484e8cd3cb2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6a2e9b59-cc6b-4ef4-a8d8-49dcf395c58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6c2540-9b3f-4bf0-b19c-1b1278742562",
        "cursor": {
          "ref": "23dc21f8-204e-4de3-be41-b41bbd24fdca",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "057f3bc0-1878-4742-9f29-4d228636154e"
        },
        "item": {
          "id": "9d6c2540-9b3f-4bf0-b19c-1b1278742562",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "797e75ac-9394-4515-9fec-d867ee5cf7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fad5d8c-72b3-42b0-b17b-2afbac1c489c",
        "cursor": {
          "ref": "96bc774a-ddf8-4ec3-a88d-d2e2eaf96c37",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f2673a85-adac-449b-bd68-70d70853fc88"
        },
        "item": {
          "id": "6fad5d8c-72b3-42b0-b17b-2afbac1c489c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7be97f91-beac-40eb-a9a2-b2d473268225",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b81a57-e2a9-4b89-b509-53518ea02eee",
        "cursor": {
          "ref": "5b70733e-f8c3-4113-89da-ede0bb92c85c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6febd67d-9c67-4fde-9ef8-3307320c4c62"
        },
        "item": {
          "id": "e1b81a57-e2a9-4b89-b509-53518ea02eee",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f9f4fcab-3399-48d9-9ab5-ee7c0eb4fe78",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fafe2c-fe6d-471a-83a4-6effc35e4aca",
        "cursor": {
          "ref": "84c643d5-2ca7-4809-acbd-58c9766a5d58",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8def4a1b-47b0-4752-8ab0-370e866a7584"
        },
        "item": {
          "id": "18fafe2c-fe6d-471a-83a4-6effc35e4aca",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e1cdcf47-613e-49db-9f09-227d07399638",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b41b03-7db2-464a-981f-fa0dd932c6d5",
        "cursor": {
          "ref": "1d9144b1-0030-42dc-84ae-e1e14b2f0585",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2d876810-1de6-44fd-94b2-0bb767bfdcee"
        },
        "item": {
          "id": "81b41b03-7db2-464a-981f-fa0dd932c6d5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3586d9e4-2165-425b-8a2d-e49dfb68adb6",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "96323e26-44b7-4918-b040-c409bea19ce3",
        "cursor": {
          "ref": "a58f63e5-e6f8-4c9d-ae91-1d607ae7ee75",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e862f6bd-e2a1-4860-833c-28dc19c037cd"
        },
        "item": {
          "id": "96323e26-44b7-4918-b040-c409bea19ce3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4ad4a197-32bf-48ef-b635-3a8907ab2e36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96323e26-44b7-4918-b040-c409bea19ce3",
        "cursor": {
          "ref": "a58f63e5-e6f8-4c9d-ae91-1d607ae7ee75",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e862f6bd-e2a1-4860-833c-28dc19c037cd"
        },
        "item": {
          "id": "96323e26-44b7-4918-b040-c409bea19ce3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4ad4a197-32bf-48ef-b635-3a8907ab2e36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efad056-e944-45e2-b904-1dc305751430",
        "cursor": {
          "ref": "2ab1b5a4-727e-4aea-a016-88fbca2fc703",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "706155da-85e8-49a3-8403-328cd88ca423"
        },
        "item": {
          "id": "2efad056-e944-45e2-b904-1dc305751430",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4cafb8ce-7ed4-4663-98cb-56e4a3f0b731",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06eeb9c0-01ff-4ec1-b0b6-772f11f0f441",
        "cursor": {
          "ref": "fb988c08-c77d-4fda-880f-1dc9157d18dd",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "0062714b-c6ed-46fb-87fa-c5fa2a262d35"
        },
        "item": {
          "id": "06eeb9c0-01ff-4ec1-b0b6-772f11f0f441",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "caaabe96-8eef-4209-833f-3b91430d471f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}