{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8b9e98c2-ec39-4e07-bed9-cbd30fa7bb15",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f95d0ea9-4a28-4a67-ac4f-66ea88a4ca6b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab42b44f-fa31-4b73-be04-383d823d361b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d0816a07-118f-477a-8dc4-2757c624b1ea"
                }
              }
            ]
          },
          {
            "id": "99338385-0cbc-415e-91c6-5f09ccc4defa",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77c82834-407f-4cd5-aec4-83a91429b35d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e80ade8d-972c-4880-8f4e-61ad26d8ff3b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b1769037-b863-4646-bbbe-61cc40755240",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1c4115f9-c3c2-4f0d-9ef0-947c20ab7551",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2627b83c-fd17-46cb-8649-34cc5f41087c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73da8d8a-3916-4ce2-983d-3af0aa84c4a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dedb72dd-e896-4890-810d-9e4232907814"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a03d1fd-d8fa-4717-8acd-7f7c5ec7b4bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "583a9315-6189-4821-a3e8-dd84bbf1f771"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b4fcb6a-f5f9-44ca-abf2-a84a8a990a71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab84a4e2-2d1d-4c28-82b0-0132fea32371"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5cc79bd-465d-4359-a973-dfc9216904b9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b42394d3-088f-4677-aec3-2b1295746ea6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48eb8c85-0bcd-4e63-876d-960e1a5ef373",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78148750-a3ee-4ee2-a4b4-dec8f50d7cef"
            }
          }
        ]
      },
      {
        "id": "26c4cb1f-e044-4355-92a9-8d6cfb612eb8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e6845d5b-0619-4a99-a9a2-f94c0479fcee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f1cb92f-2d79-41ea-8ae6-12441feba8df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b6e03cc-aa8f-4779-8359-2fa4e845005e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c752b0b2-920e-4055-ad34-1fb100cd6b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "806b3515-a720-42e9-83dd-afeac2676dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b970557e-da93-460e-a0f3-36c4c449f546",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330e6888-d979-4f99-b9f9-4aff38ffcafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d94a54b-6de6-4f56-94b8-e590d1501e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182ca14e-21a1-4377-b0b9-500b7e49cf2d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8e475c-c310-45b2-9a4b-eafcb1350002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fecd5d3d-6542-4efb-968b-6a6c37d3d5b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac208461-08d9-4691-adb9-59c4968997d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3814f3d4-7b78-4b4f-ad48-e54dd13618a2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8203a1a6-975d-4886-bf0c-ba5f654226fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe772eca-28e6-413c-b680-e74b5dff8163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae42fd9-66d7-4591-997e-95df6cb4a64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae17db9a-9f19-4287-b4a6-5f26d7251031"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b97a2962-ff80-49ae-8d48-9678f11a226d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6cb8b099-f47c-4ba5-84df-9069ecc7022f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "104fb544-2665-4149-8d4f-7b39b8a3a3a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3144f70b-03ab-48a5-bbeb-de14e5760fff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d85a781-1293-4544-86fe-896956d93657",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2214fe8a-5a54-44e6-bf08-f376f0e16e99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67db0ef7-0537-4751-90be-4df2793b6f72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daee9ea3-d100-4905-841f-190592dcc119"
            }
          }
        ]
      },
      {
        "id": "cb7ad202-bd7b-4a7c-a375-18fb0ad6eb5f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "feb46c6e-7e77-4a8e-96ac-7ab470a6640c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35fb9091-69b7-4f09-bb7c-fd40e4f185cb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3155e22c-02d3-46f8-86d5-91f8a8df9084",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a3657c-80a6-46b6-8203-c39ebded5223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b07ca3-e73a-472f-8121-332de9991c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ecd3f8-7295-4145-8481-4028f972e8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "756e3ff8-59ba-49fd-a0bb-691c9e4efa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccd1d25-cbdd-4891-a88f-2b5cfc2eeeb1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5ca2e8-4fc0-469f-a335-2094c1f0d829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5411c1f-5eca-4510-b328-9eef1fb0dd31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd15d65-7caf-4619-869d-c101392c84eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02450323-1e94-4455-941a-142e53eca8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306e52ef-9182-4e4d-ba14-701da94dd4b7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040e8458-e5b6-49f3-81cd-5e6ebfdc4297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9f76a3-9667-42c3-9dea-226f0905954b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc93d91e-85b1-46fa-8262-ecb533d781de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27283ec8-cce2-4f20-a8ce-6ef7ed7402da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3a90e8-3e9c-4947-8360-a55fd40370f4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feafbde-616a-4e2b-ac70-4f3c9fcd4cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513d8e95-cf08-44d4-ada4-20d6024338f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d2f915-7015-4550-b7d5-c5b1f4968150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9caa596-b5af-4a32-9ec9-8ed06e5ba8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf8e1c3-befc-480d-ad92-24224b676ef0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9163508-70bc-49f4-aaf2-de55bb3f62ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d9666c-60c8-4ffa-b155-117338ee9b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3ca727-d3f6-4a51-b253-b8a996a771e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8bef1b0-f233-4e54-a20e-105a36b78a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fd0e8b-84f7-44ac-b403-b8b2d8297657",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc26814-afcc-4b58-8507-a0d7bd5f8337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d549ff-c7bc-4a79-b986-334f11fc076d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5a2130-1a09-44e6-80d3-1d16043c5b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0012983-f84a-4c4d-afdd-74450764b0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df582f1f-e08c-4488-a30d-e68973632464",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677ed540-3e12-448b-8f94-52f294a458de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f6e7cf-5651-4bdd-92ab-5c42b24cf859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63032a83-91fb-425b-b506-7e7e0ee0292b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c407c05-5af8-46ed-87d8-7078603c69be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe9248b-3d83-4225-b0dd-69ff1a2fbff1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4828d57-27b6-4e78-8141-2b0d2f73ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d479983-e4d2-4aa4-b67c-3fb715bf1877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610a3ca9-4882-4e88-b1ab-0e6e839d0bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "421258bc-1c9f-4f4c-8122-1c9d20049358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b97af9f-5fe0-4ab4-8397-591a4b3b1219",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d85456-4e0b-4605-9f30-242acabb7442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f630ed3-9786-491a-97ae-4bf9ebe7a89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11ad5df-1d50-4f1d-8594-de335890792d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1098d4f5-7e1e-4b97-b294-aee4181b5236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080eb54a-3ffd-4d40-9654-11abb947e770",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79163360-1437-4b0f-8d41-28cfa02de586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95606b5e-f9f2-40ad-b143-13d18f7f30c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a3b148-1790-49f6-a152-c663c88b9b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf653e30-a428-4b28-a8bd-b0754c334481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59813e79-b2d7-4bcc-b719-168b6926767d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cd16f8-a333-496b-a9d5-a0575c53c942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dce2a82-ffcd-4288-8e01-fd5b89251262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4a0762-af7c-4196-bedb-009d04940a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2289387-9ffd-4b2f-a551-6d94aff42a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167f13c6-49be-4018-83ad-7a7f9b7c8530",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97a4025-edae-4336-9c59-5d4071c6243f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e0babe-06ff-4128-a9ed-4317e9a244c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71081a0a-8a87-43f0-969c-cfeee9a070f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a07b9e7e-05d4-498d-9d16-96c0b33f35c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea194b5-a470-4b41-9548-d0e1e4038f8c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb49af3a-bba7-4aa6-ae0e-9523c2611424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f1fa1f-77f5-4a4f-9d95-5f961162d89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f249c9-eedf-4f33-95e6-620367a24a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0328a81b-d80a-435d-bc54-161ff8f4be67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9406f4-b58a-4075-84b3-028921896dec",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621e2b92-0f4e-48e1-8d59-bbecc854aa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52876218-c493-4d7e-8942-9b675cfcc06c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fe8d81-50f1-4671-bbb8-b72058830107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2931a71-e98b-4a59-b7fa-56d9800d226a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73790342-1877-41bb-ba6a-e3677602af15",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859b9ba6-3640-4d81-9dce-9430592613d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bd809a-cef1-4a74-82a3-a43316e77160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90432817-0875-4f2f-bc5c-0818e88a4f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6e0ee1f-3da4-410e-895d-8b1fd7529d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba2b46c-5bcb-4e2a-aa1f-e16132e0d756",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d7dae9-4099-4db3-8ace-e1bbd711bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31cb63f2-ce53-4a38-a8bf-bfa14f9b0d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8af16b-11ce-497a-a265-040a809d0d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3a0ccc6-d400-4bf2-97d4-da421da624af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395cc533-b7b8-49b1-8389-481c990530fe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bc6ce0-ca2f-42fd-a79c-5816869abd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c465862-1004-454f-ae20-ba0636265f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006ff221-1c9f-4b83-b3bb-0856c80e0c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e54383c-e0d5-40b7-b6df-c792872b9b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3b2c99-9ec4-4f72-be61-9477266e7be7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d0446f-efbe-478d-91c5-a09d8e1a7b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860260d9-6466-443b-80d2-8ea048d563fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366a52cf-6d97-4428-9adb-90b8eca36c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c88b355b-1089-4028-a15d-7da340381c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75256957-ff32-4680-8953-5e4cb0775f53",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9df37da-5ae8-41ea-a238-781f42aa8fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15391f41-2adf-42fe-89fe-65788b080529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e604801-58ea-43dc-a1e4-1e11a14ce45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bfdbfd2-5990-4af3-b399-eb85e5238431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac6cfd7-d307-4a47-9983-16274d4d7257",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2a5213-bbf3-4052-b8a6-3c5fd1ebc437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4a373f-75d2-4973-8e99-5bb8c5a600c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b5c727-a52b-4418-864b-3f09ed5b910d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b7f4c7-98fb-4454-bad4-faf56778304d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034d3ffa-697b-4d4e-adfa-7fb209f22c89",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2dfb2f-1f5b-4a2e-8f98-927387764e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8466f6e-1e58-4dc0-8e2c-43e9fc146bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05433c33-3d4c-4708-be17-926dfff3f44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90037f56-a863-4de5-88c0-59aaa193d097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704bbc61-b682-4da9-bd51-5a95488b2e24",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e1283d-5377-483a-93a3-0309acabc372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f182ad60-da35-41d3-a698-e98a3abdb22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b280ca8e-04d6-4ade-a727-ff0d19aa6eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "140efe1d-c34d-4217-9f6a-b3aceca874ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa20904-bf87-4d48-b820-47719b540aaf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacbe3f6-1b85-4e4c-865d-abec993c1454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d284bb25-bcc5-49ca-848f-71f009a2e4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0967f70d-ea78-401e-b25b-d7051ad30a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cbe290-04c2-44cc-a869-41bede249abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690ac1bb-12a5-48e8-b43c-e04b8cd2bab5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd679a9d-9fc5-4641-8dab-045b23608747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546f8bee-301d-4e36-97fa-2b849f2807e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216b9bc1-daf6-40a8-9ab4-80731a2046ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff026c32-9508-44b3-ac3a-a95f48d07c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b814d05e-281b-44f7-81fc-e5e73397c692",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce15dcb4-f28d-4cd8-a02c-fadb8f666734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7da4b2-c78d-46de-a9f1-7c45e7507d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55563bca-3821-471a-ba2e-e8abc6444f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd9828c-8d0c-4e18-b1c7-f0c5db65a063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748c55b6-7a60-47c4-896f-b5d5e116edaa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc3d3f8-be96-4a26-a12d-583ae5481227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ddb35ce-44ff-4c0f-8b7d-ecce21f96afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f24eb4e-d5aa-4d09-8dbd-731560f9400a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4adb8b2-96f9-449d-90fa-09c2f250a768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a28a21b-0ac1-412a-9bc0-30b09bdf03f1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f905b29-f975-4614-a201-78b5abfde59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f30158-9dc4-4b04-bdf5-59194523859b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57666a5f-7dc6-4c3c-97a4-31d30bccb484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee7e269-6353-4d5b-887c-8fafaebfeb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625d7a6f-674d-4344-9545-35b19f754d7c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe6cf93-dbd7-42e6-997d-edfb04bcabb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98ca6f0-da7f-4fa4-a068-e5d8c655bdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a006beb7-0f5b-405f-a278-a920e34f76d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "daff6cba-92dc-414b-9d32-9e67d5acf1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9059c5d9-de35-4af7-8b38-8cdc9542cb38",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383674ac-ec57-4ceb-a291-31a6a1781cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8150b3d6-7dd6-4d5a-8401-28b4bf0fe583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c931ab44-d451-4fbb-8118-80414907b39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61839034-2e74-4128-a707-96dd1f193264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0299be48-4633-4785-a364-22b686cc323b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408cbed3-e953-449d-b9ca-449b406237ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d6163c-4d36-4766-b359-8576829308b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d170986-0ca8-43f8-83f7-9161978021fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "febd557e-e2aa-4cf3-a25c-8835a017b4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ef2180-0dad-4ae1-bfec-968683829038",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209244a4-35e2-43e2-9110-0d88037301f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3654b4a-a4e9-4a84-ae99-0f6071731b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5189067f-d87e-4deb-81c0-f2d0c7eac4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "376a3205-01e6-42f4-a80d-295f8d8e07d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f264cb5-63fc-4338-8c00-6bf384af277f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4d3e6c-cac9-4bf1-a8d7-d02399ec89d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedc479b-69ab-4782-98d4-4ff1b6852ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a048e236-e7f2-447e-a725-619ca4d3575e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "050df962-845c-468c-8de8-b9b0f40d6068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88b220d-9043-4142-a9bf-a30ab8655509",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c318cd26-7735-472b-8d2f-3e55fbdde2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d139802-c8ab-43fa-9acf-b13e4e9885ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9925d768-13b6-499d-ac31-8b42b40ff67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efacd2b0-bb43-44f0-bad7-3711c0302a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfffb91-94d8-4244-b42a-dd52a23946ea",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a0a831-1df5-4237-88e8-70d5ed7d92a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84441e95-79c4-4706-913f-4fa3589cbf43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb4a804-64b2-46e0-8571-9a9e77fb5e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "663d19b8-65c0-4dfb-b469-384ccd900efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cd2854-41cb-452e-9f92-f91dad2924c1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1802be22-56c9-4bcb-a185-152091090a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16867fe-28fb-4913-89a7-9e7260b95357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83cd4fb-3760-497d-8a8a-8bc9b540f57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b2325515-9160-4d7d-a976-6a29cd9791e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72e20f8-5140-465d-b2e2-e502a1b0a808",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdbf7e0-0512-4751-8b0a-4634fffe7eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5613a5e6-a8cf-459b-b4fb-d92a7ba3a6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33fe08c-8c2c-4b2e-b695-d0a72568176f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "214e0129-d261-4e5c-a3dd-6cefbe2aa96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1b9b73-f445-416b-87e2-4f174c911a2d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682ab4d5-bd7b-4cfe-99ad-e0243597c3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d7cb46-860c-4018-bac8-0d83823e1b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432758ef-1209-4bf5-be4d-ea5d414b346a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b10e6e55-b372-4b6d-8962-24c185bfd377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8be94ab-1d5e-4dcf-89e1-dc90d0195dfb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb387375-cfc1-4a56-b186-2bd303e19258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2d5c79-8b91-4247-9e99-d1707e9c4657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8340c91f-ec68-490f-922c-eedb900aed88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddb43b1-8ff6-4be2-a497-4da13e01bb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae5d50b-4054-4c54-ac57-a131fa89e6ec",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f20fc20-d476-4eaa-b5a7-64ed08271b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8276c96-455e-42f1-9828-ead82021aaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6adef7-5aa1-4f56-a82e-fec954c796b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "acc2711b-71e4-4bf9-80a2-43406dbd39df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0ca4b2-3290-492f-82d8-5512ce12254f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb10c51-96b0-41d8-82d9-fb9f6bbb266b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d65acef-caf2-4859-81c6-71cb8c8f793f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4639805-c449-47c0-a6f9-8ddd5664690b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab1ca63-897c-4aea-b019-90cfb26cef70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f7950a-91d1-4d6b-8d05-646dc9f0f65f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bfc7b2-9900-4937-a456-44ee6305bcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c55e666-4a11-4ac9-a99c-2740026647ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3f4e57-f12b-4c89-baf4-8c7311c0704c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e200905c-9364-4a3b-91a2-a3a2d81716a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ef15a4-379e-4b7c-87f0-2def0c04b158",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bb8bf1-bfc9-41a8-881f-558f2ffbb306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79cf2ee-3dc9-467f-bbba-aa254648777c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2d36a3-9013-4988-9215-6d6590c5b9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "48fba508-6d9a-4159-b4fc-53ab01327f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e62b0c-e753-4909-ab82-55a097c792f7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb700a39-34ba-4f06-83a7-62cf155967d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac18221-36ec-4df7-b8b1-59bdf05a9f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159bca94-c59d-4855-a1bc-886f4b955321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3c6c9d-b6a7-4e8c-a1b4-9d2ce55af07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe8d3a9-10de-49df-b1e1-7984fa046d89",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6988f675-6854-44c8-bdb9-35ac363b299b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7a4433-963a-4d6a-8d53-65e0f849e047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c6fd54-7b84-4bfe-aa6a-6f3fe33ad157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4db114fb-a36e-433a-b629-cad690dc73c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de36b5c3-d46d-47e1-a772-7bdf8331ac96",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bfe67f-1b5f-4003-9950-4e333365b064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7aa935-3d68-452c-a67c-3d235796d082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc74a5a-7e29-4f40-a247-53ceeb46c11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "682a1cfb-b641-4aac-bcd0-f01e6bc76ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1fa123-85ae-46eb-9561-500e9d75767d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae45f86-c99f-4d6d-a2f3-cd4a168f93d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c609fd34-a219-401f-895c-254a42e2fbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dec6c52-d513-4a6f-9675-b9a2b0e62beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9d5714-6a8d-4e7f-b6e7-e263e7bf097e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e3c48e-599a-4a11-9d1c-7d0c3fce7270",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d6478e-a4ac-4782-a4c3-aa4f5f718ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f84795-2f3f-4848-95ea-8ec007b02ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e03f786-92a4-4a84-be73-15fb64f85b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87849519-f920-4d6c-ae65-8e3e2f77ce7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ddb79b-91c3-47e8-8798-b82d10873185",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc665fe7-7111-4048-bc21-bfa99f51b22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f66924-db42-41ed-9a68-9d286ace2a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0db82dd-9b80-4d5c-8f31-20e9e500045a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5e43e2-d624-4425-8584-74c837ec5893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb4954e-e3aa-4a11-8bbc-8d658ed773b3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9765c28d-660c-4256-8dd3-d6be1fb6cff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0772f530-5232-4fe9-b9ba-adc84e87c11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3734fb33-a145-43e2-b5b4-1c7436974670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec5bb0d-0566-4105-a416-8c28e1fb58a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dda8cf5-604a-44fd-a8fd-f808f2e8165b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3175c71-d3db-4c56-b4a2-de0822720e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6a9ba7-4e5e-47b7-abf1-5be303ff83c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31df05b9-c323-4654-8c85-4eff20d365e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "875af04b-7093-42af-af2f-de184d36b4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef77be79-4300-43c0-bf2c-959c76df87be",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd905a5-12bb-4b98-85e2-6e560d870f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf9affa-508f-4594-a132-f65f100e3258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84ebb47-1e72-4566-b8e5-baf7e9704805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "77fb3715-f913-488f-9ac9-39544f9fabfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fe7cb6-c699-4a7e-934d-cf129b60726e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16614ae1-1154-4cdb-902c-a16304406841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e960ca9-9cfb-436c-9e1f-ff622cdddbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476dcdbe-4874-4d51-a731-e068ce625c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62da1b77-9073-43fe-929f-add62e003d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad0be1a-faed-4f27-a2da-de95be5b12b2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da630e2-1a64-4526-9439-b848dc7f77ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc2006e-5978-4952-b356-4e4b4968a2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f7a122-26f2-48ab-af12-5a54fab58d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd9c05d-8d8e-4c42-a708-eb4a07717114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e76ee1c-fab8-452a-877e-91dd7b773e5a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a98646-7871-4585-b60d-e77151811fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d99b49-7282-4f7b-847b-4fef5b51c839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3e0f66-8289-4f67-bce5-8dbe038ffbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76753a1e-8997-4b1e-9c3e-5f35721fe995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e757cbf1-5182-42d9-bea5-9bd9a954e90a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf125760-e05e-4231-8621-e8ed269c4c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dca6e9f-8473-41cc-80b4-ef957c7765cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f01c27-837b-4f70-9a88-4b2c87863627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4492c2a-2ced-45c2-9275-e45ce2841ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820cb4c1-9d0e-4a81-afd3-d389d11749b1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f200dc35-67c6-4ddb-8ff3-9b3dc3d4903f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb36c84-3b0d-4d4c-90f2-fedf3008662e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51d5f6b-3d76-49e4-8a19-c6bef73291af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7eb13d-0cb5-4dbb-92fd-22666f887023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcbdb8e-0bfe-42e3-a2f3-37cde5eefbd4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4959a6-9e3f-4ec5-8e69-38468d7ebb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407aba1b-864a-4be7-aaa1-11557792a484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5728f93b-c2a2-4e98-abc3-8ba3a805063e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6848cac8-3ba5-4794-b0a5-e7ce9095ad40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04653a87-e89f-45dd-95f6-0ebfda6d7f9e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d217032-3c8a-4eae-855f-4fba7ade0416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658c9b01-d54c-4f06-9340-cf8445abae49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba29692b-30da-4792-9e95-f3f272810763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38d49590-536c-401d-aff2-9d3b075dd3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd046355-f62d-4324-bcbc-ff29381844ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e675cedb-4a02-4662-a3f9-273c6e0df2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c30b78-3525-4440-bb88-9b0ab6fe9727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be8fc90-2406-40ba-907e-9115b15389eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9354f77d-f685-432b-b310-68cebc39799c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a248d3-5378-4916-a7fb-26781ca009d7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955e7c75-e9e1-4dd0-bb8f-fe3a8bcd3d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85630c1b-2e3e-4520-aa4f-9c00d56a8c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9439e8df-c030-43be-af06-09c1513ecc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5717e2-e762-4e37-ac45-28b8e984e768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0363f185-462f-476e-bad3-b71282c705b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89786209-3275-4ed9-a426-35b265bae114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ff8653-89bb-4d66-bc60-1ac63af8c4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54442144-c7ec-48ec-a300-82348e8bec5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "880bad8d-a1e4-456d-ab7a-6d0e5297bf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b115d7b8-0a7d-4b0e-a2b5-65ea2e2460ce",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11be2292-6878-44d9-a47f-2b6a8fd69c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937dead2-5db6-4fc8-887e-0a6b741b1b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d02f346-8eae-4d39-9d96-022ad9dbc0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "30949e72-71d7-413b-8ba8-2c9ad4085868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf782da-1164-4051-87d7-abeee69c2042",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2732c91-ba31-4822-b597-69fafcbafe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a110de5-cf12-4179-b163-dd64ef406334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492795e7-59dc-40fc-b3fd-fe431fab729c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "114e9173-c0ab-4eaf-95c9-9e0e31a119bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8f6e2c-f0fa-4312-b4ea-4bb1f6d87802",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e37ba33-b4c9-4f22-b991-3d52bfd3ae67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098eab10-b152-4a14-83d3-23bfae4d84ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb589cd-3451-4f26-9f1a-846d0f182a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c01e02c4-3111-4a72-b13b-40b16036a779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb48df3-351c-4a0e-8581-f917d165749e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e20787a-af4a-4341-8c1f-4dd7fb234e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ad1281-f9c0-4690-8ec5-72e3b4483888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b186f5a8-2ede-42f2-b0ed-727c2a8cb282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a3781f-640a-477a-98fb-cd279e73e9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d959ff38-5398-49ed-853e-417584ed12c3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bb6983-701e-47b3-ae8d-7601d6c782d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f881708-cd71-4419-9b0d-8116f272e124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822ea2e3-e412-46d5-aecd-eeecdbeaff6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf69cad6-c046-47e7-81a2-b99d4568c879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99531781-210f-48e3-b339-cda641a264e5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebbaa1b-b368-460b-b8c1-817b84991eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3171a5-d919-45ad-9a04-660a89781491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef4e739-1434-4e17-bff6-c92b14be2421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "440c1a83-9768-4ebe-a594-0748fec2fb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ce83dc-ee1d-4ca7-8f13-2e198737f314",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc66b3d-a762-454c-8fab-06be7c33e1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e589386-bc8b-4d05-8ab3-b00fbf726416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0623f180-868f-48cb-b66d-f088ecb86bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a43da67-a027-45a0-863d-c571f1adeaeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2c1fa5-73e5-4d5b-91ae-43ee45cc7b70",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e7874e-29c4-4327-9ad9-5b253ec7a73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf49f9b7-bf06-4653-9cae-bd38ef11b19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0105ed4-469d-4419-b8fe-4f7ede9835d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f48717da-8748-4ecd-b407-d5b2e3acb799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdecb860-8d8e-4812-bb1f-4ee74506bb9c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2414d1b-1802-4f0a-a6ce-2fbc56f8961c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2092f0f-52d0-4765-b44c-415b0af3ec41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcab9ab7-48b0-424e-a78b-0750655956ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "065304ab-1e1f-4e3a-afcc-21900e391f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75ff17e-695a-4225-a4fd-6ab71370b30d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbb9b21-6213-4518-97e9-ff436175a3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee8d900-6b81-4617-b275-06f63d26c505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e659b0d7-e3d7-4e3d-99ca-8c661d98aacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dda1d80-c0c5-4f1a-802d-67714ff61c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a75fb32-eef0-47c2-880c-d80ff4826a86",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cb9ac3-af4a-4823-8190-0b788ef67297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772d2130-f1b8-405c-9311-7d115defea33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2f1e73-433e-48b5-a124-05fe3d6a22e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e70c7edd-c6e9-4cac-a083-ee1163192ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df96c4ad-934c-4de4-b38d-fdd7c5b5e726",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc7b04a-5a08-4058-88ba-93ba59812b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54285d27-af0a-49d9-88f2-596658a61304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4b170a-f17c-4f7a-9aee-c11d60f214c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c79182cb-9049-4cdd-b6a3-2e613d82b60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5409d218-d677-4c2f-a9e6-54c8d0302f05",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ec6ec0-6189-49f2-8ab3-71c87ed63660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c28a614-d446-4bd4-a3ab-80f1029d4cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59089757-9f82-48d3-957f-697f882a5874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc45e1b-7a31-4a52-ab05-cd4462fad56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f300b7-2c34-4639-b6e6-06624399e895",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299f9976-e03e-4cdd-90c5-2ce98039473b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a68c33a-0a3b-40f4-a3c6-601a8b933f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff861c3-2359-4832-913d-a144a0f50986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5780df24-f62a-48ed-b73d-0664b29b5b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9338fe2-403e-488b-ab53-8e599055c80c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e443f3-59aa-4f3b-a0b3-0d2a8c07744b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef4975c-c347-4760-ae98-563b82613075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef38ab1-38f6-4f80-9b00-62dcbae8dce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4e5383-8f41-4250-aa41-58d6639821a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5063d7af-d6b1-4d52-8376-62550e0c3056",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7e6a4b-bd73-4c1c-b4e2-7c9c873b0f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf762c64-29e4-4194-a659-ef29b9c0952f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6d0aba-1704-4cdc-9162-1e411e7e1065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f749a19d-3bb3-4b7d-bff9-b3691e5eb639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3d0ded-e62f-4afd-9e74-0255b36a4960",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b71854-e0cc-45a9-83e0-c1b7f80a685a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a274939-a202-4269-b87c-7aa82022b806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5937e4c1-bbcd-445a-8f06-92c2cfb6b97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7192a3-7c76-4b57-a763-f5fe5d12d3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334f8c78-da06-4c0f-a949-858adbfa76ae",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8186638-79f9-4c4e-8b0b-aeb2dc1c1d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97499822-000a-4017-b9c8-6373eb1eed74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bf6681-c19d-4888-b495-4df18e975207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb970c97-0153-4818-99d1-f279568fa352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9319ccfe-77ff-44a3-bf7e-c1f31af7f127",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5ff2a0-e589-41da-abd3-67ea7ca740b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400ec555-2c19-462d-b8da-42b0c172bf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64e82cf-fdc6-48a6-8ccd-ae56545420a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ccf15e-203b-4f53-a94f-e1eb98c2037d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67597b3-34a1-4d36-8bfa-9b0c54118398",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814c1665-e49d-4e43-918e-e227a1947d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bc7f35-688a-4d3a-bb8a-3e127a5137b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823c5424-9f0c-4673-8b25-da6e2c02085f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c9704c-785b-4580-973f-5d61c05a9af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068442eb-61c4-4894-8e54-7f21acbe5bbd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d627c0-e6ac-4fe0-bc0a-2d05ec1bd168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c48b74a-2a2d-46dd-99ec-480089bec09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18899fca-dde0-4a5f-83d5-649e57ff9984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0a9be0-6d3b-4635-9e10-bc26ad50baac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2b5f25-a813-4196-a3db-1207b1a48486",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06d41c2-9af8-4f59-8ec8-5d9f038aee08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab48792-cf77-4ad7-90cf-9f229c7663db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3207caf-56e0-420a-a0eb-516d7c88c2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5189b82-826f-481c-8e1c-1af6ebaa4126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c19a78-8734-43e0-9c9e-99a2f96d41cf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75b64f5-d5d8-4bf9-88cf-b8c57bcd6ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2902367c-1a23-42af-bf72-30762450afa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46758a9-1d1c-46e0-9164-78e64f2b1975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dbd659-9f04-45c4-a949-93d4570fb5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5ff83b-e071-4a7c-abbb-c0dd9430b4ef",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc34dc1-6eba-49f5-8cee-dfe09d3ea110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41446671-5a72-4b2c-b82d-0ff56ac895f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07b9082-4b82-4ece-afcf-d8a45fca1a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8978d03d-76e1-4f98-b3b6-79a46d0c2962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec923df7-62dc-417b-ae56-99a86ad6a370",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226f9ff4-098a-4990-af4a-7c7400c8a956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cf267a-c315-4832-a120-777cb80ab005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75e3f33-292f-46d9-a3d8-0346df586027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2023ef12-e83d-4486-9373-b1e7d652bd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1839a1c0-37d8-49f3-a09b-7fd8c096c79a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af15fd6c-6bed-486c-89a5-cb16f827906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112ba3c4-0df9-4474-8e08-ff8fb44985e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a6ce47-75f9-4450-8fb3-33e6a235b87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "98ff7b8e-65dc-4bf7-a862-4da94c0122be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05d9032-2a11-404c-a337-0827bce55ae7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5963b4f-1271-4158-90ca-b6c028b13916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b71f85-110b-434a-9745-adb0b11f69cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90b2742-2774-4190-bb0e-1a04b906c039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "22a6d95d-3447-40ae-bef1-cde57d5e1a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c179a7dc-5705-4b66-b712-0d89c296e7db",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2228c5-f95d-4fe3-ba71-9855c71cc7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb2c97f-afbd-41a6-a2be-160dd199f5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856024c7-7397-485d-8235-f50a7404e2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dccbe91-a051-4f01-a25d-37de6e4ed083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d790fa-05b2-47d2-8aa5-81a50e50f564",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e498b38b-02bc-4ead-991f-e871e6e19e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37402951-6d30-4e9b-bd62-21039a59c825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d59253-60cc-4611-b3c4-5e6f663fa29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "989c6bd1-8839-4178-b63b-d19ec149ba8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da25032e-8331-42d9-bdee-e356ebafa394",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f35e56-dfd6-4a15-96a5-436b1a118455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c162e66-a194-4dae-9e89-9d3f6dfbbc2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d516e16-6f91-46b5-9cbd-c911e58da908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab6875a-c8c9-4381-9da3-b2e188099b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7334c6f7-7eda-4a82-bc66-104a8ca808c8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7c2088-21d4-4957-9253-bb2458be7d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1489c7be-cae1-4e09-97f0-f835e83e7516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583172d9-9027-4c78-895f-b8bce9beee4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6968d218-676f-4047-9dba-90afc3d45326"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd5996ae-046e-4dad-94d9-ba8555f93e8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2092614b-3f8f-4fe3-b55f-1b2ad4f782ff",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ce473c-2396-4367-951a-da2d264110f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0df025c-61af-4b78-bf26-fef716505c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b999e695-bddd-4cf2-9d20-fe63c14e3e6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99ef0276-b223-4512-9c74-f755a5bbcf3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6601d81-fffd-4b35-bc63-b50edea6668f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e32e6e0a-c5eb-47fa-8ad3-5f0eed90566d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0748e6c0-08e2-4bca-9bc1-2cb4294e9f16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45ebc37a-b760-4d0f-984b-2cd68fd5c855"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79f0e0cf-011e-4fb8-90d3-7486deffcb85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "51e604a2-38c8-4e72-ba43-99de2acc41f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2dfb839f-1b47-4dae-8c07-87c54b0115e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5affe5d3-33d2-4735-a31a-c30630a25469"
                }
              }
            ]
          },
          {
            "id": "3069fb0f-124e-4040-a202-8668a9196b8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "54613e6a-872f-4420-9557-56b73f0d32a6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7ea4e4a3-cecc-46a1-ab84-e2f577a3d668",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d05aa4c-677d-4a50-94d7-7da72665b4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b086ab65-f6ae-4fd3-9f8e-303341989927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e47cd33-a87e-4d53-be4d-c93ad4c5d336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9e88ec-87b7-4112-b8fb-9752f7e01730"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "621f7d75-e896-4621-ba8e-bbbe8a1d2553",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0f7f9bb-8006-4e90-9b7e-2d17b0b5d25f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a2677d0-f411-4969-8d89-8538a752f761"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c62775bd-c403-4332-9e56-0a979bf24d2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "036b017a-2607-4376-a839-f80aab72fdab"
                    }
                  }
                ]
              },
              {
                "id": "70010754-9e78-4c3a-b51c-5b7c88ded800",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de1b035f-306e-4e7c-b61e-7057e52959af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb00d5ee-0e25-4133-a733-4d55bf2b8e1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8450ef50-179e-43c8-873c-b54800f356ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6fcafa2-c7b0-4ef9-a22b-fa3b14189f9d"
                    }
                  }
                ]
              },
              {
                "id": "72d0f1d7-0d0d-4819-9753-fc0aca05fd08",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edb6f303-1234-4cf9-8091-3976f820fdc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d191bbe0-7396-4aba-a5b0-52df45e927d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2175825a-fb80-4327-820e-61bbb1313671",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eb62c0e9-cd52-474e-afbc-896caf554562"
                    }
                  }
                ]
              },
              {
                "id": "c9c64a9c-8e1d-4373-aa8b-7e55577d927b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed25911e-e75b-44d4-8e8f-ed2860c775c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0b81442-622a-4e7e-ad0a-da7399db4735"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b1bec26-f4b0-43dc-8c60-07ce7d36c14f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "eea1a93d-c2f4-4c56-8e6a-037c53508db5"
                    }
                  }
                ]
              },
              {
                "id": "5e6d19f5-c1c7-4a1e-bc96-3a6517076701",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d762f94-7142-4c12-99fd-40607c3f310e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0baea4f2-972c-403c-a454-4557555f9fed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9d86d0a-c9d4-4cc0-a62b-5d9da4e78094",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "57927452-db64-4e92-a455-117ac3e0ba6a"
                    }
                  }
                ]
              },
              {
                "id": "ecbfb68f-f4ee-497f-aab7-e3c69482664f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa57513f-b0c3-4ae7-84c4-d628981b411a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e8580b4-c34e-4570-a1a8-59057a66a8a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "625a6587-8f1f-409e-b611-b331738b62dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "215f96e1-d74d-45cd-908a-77a6c6d4e743"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4988bc30-1da8-4101-a6dd-122d86b73f6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d76a921-78d7-4280-8db9-6dd8eb788cd4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5eff04c4-3c01-4d3d-a6fa-9ba408ddef9a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c6e1275-fddb-470a-a153-9cd566fc9196"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "116540ca-2f08-4bc1-9ff7-2999d00be0ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "155362c0-8a82-4765-bb0f-d73bfbee0969"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9444904-4273-4795-ad15-5086aa16b591",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b7176d2-7597-449d-b6ad-0f79c3efbcf7"
            }
          }
        ]
      },
      {
        "id": "4326e7c5-3449-4985-8f17-10cb9f10d1ac",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4e71a598-1b7e-489f-a762-dbd16f42007c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86e55a7d-982c-42fa-8a8d-65328ce49c38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad83604a-5912-4d8d-ad4b-60a43ac0920b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f49ee2e-d606-4bb8-abce-d441a5d95472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89c4b97-b060-4fd8-8c4c-a2ac49d298f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd1067d-423c-4db9-a1f9-8c7494404e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8c0c53-89d1-4335-a8e0-489645e2f751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d073e2ce-70bf-48ae-9f50-d48c3f582c13",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11654a3-ba0e-4e55-8d43-2d45679a6f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f27325-4db4-4de1-8bdb-99ad3fb28282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ca172a-23d4-466f-acd5-714ce2c63cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9748c9cc-d15f-4ed3-9fa8-390a6f345799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cfcdb6-9fc9-488b-8193-7675da8550c6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c999bc12-e7e4-4dc3-a9e2-f8d7a41fca19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426dcb62-7f2c-43ac-a348-64063e8e734a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d08635-fb63-4727-95d0-4e4ee67b0c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5b009b-ea27-410e-92c6-0adb472055f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009ec683-cf38-4ea8-9e5f-2eb6c9b2c0e1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d95488-7462-4e8d-b8bd-1948aeb6cb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29aab7e1-357c-4b09-a2a2-6f920964c716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4963729d-6c62-4f99-a10c-3df8547927c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff029a5f-1944-418d-902c-ccfe251c97f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c85c410-8589-4b44-8ba0-fdc99e40c25d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c120638-0ab4-48ad-b7db-6b088152aee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d3aceb-e3cf-480a-8baf-f465e0c892c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df809e0-b77e-4a27-a930-f8bc8d8fcf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4266ba7-4e4a-48bb-b874-7a4750e3423f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23d56c3-e147-413e-9dd8-80f079366a3f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1ad600-6c4c-45b9-8b35-47d1e5b05b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a473e8-f3da-456f-932f-7c2fd432f660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff3a316-e8cc-4a3f-ade1-17c27c594868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3037c7bd-f459-4543-932a-5827c36db499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c9294f-6609-4324-b833-f7b8180c0142",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f040437a-b4db-4e4f-8208-df9a24ccfdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b86ad74-5869-4c70-ab47-7a251363eeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ef962e-a55a-44b9-b546-435abeccb34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c77b504e-48c8-4605-8bff-bb19bd9beeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336f6a59-5f40-412c-9f60-97198691d9e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7dd812-2d1f-4cc1-b4d5-1fcde3233830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c05bc7a-29f1-4d7c-b2c1-5dc22533372e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9afd64-9406-439e-bd9d-892845cd7e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d078f3a8-921d-4af2-a34a-fc8f53b57977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e01a4b0-6018-4308-bcc3-f83b67ebdbdf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf094b5-84d0-40c3-a31e-3473e0af7a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9be982-9412-4c45-b47b-dd90c5d68e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70b075d-3270-493e-9ea6-b53bfa6b331a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27f3670d-5f49-42a9-b0c7-ae8a49fac1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb30defc-21f3-4623-982b-0da17d868f3b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5c0ed3-e5d6-48ba-815d-18084cdff534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c208b0e-ae51-4af4-9501-f80027bb7dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a27f21-b460-4d8d-afd2-c9b379b22799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a43295cb-9f0e-4530-a256-3f4ab8d45c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8700e3fc-c2c8-4ef6-ac05-3b032e94e43c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310ce40d-19e6-483b-b998-17b87da1f625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273263ee-e794-4603-8728-2bd841a63b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72ad9a3-ee55-4204-abc1-216d7a16e3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b2368089-aaaf-4b28-8b13-38a2abf735da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1247f0f7-15e9-4c45-b73d-47a257e60306",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d30e24-7d41-4700-ab14-4ae55b4aa5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c62aa61-5e16-438b-93ef-b79362cb3328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bf2100-03fc-4621-946f-08cda55454cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "357b7488-bd9b-429e-8377-fe0c78800887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01d6211-e930-468a-9f1f-36c6bfecc50d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795aff52-fa1a-489e-a037-8c78cc4b4e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7578f3b2-e8a5-4693-b133-e0ea2cc0a073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc20b6d-331e-420e-8878-e2f141737aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be77303-2b52-4f10-81c3-cb38cfd5f9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abd8088-aa9a-4cc8-a1ec-f1d9ae2e8e81",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4073df56-0866-42b5-8aae-0eef6058efcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5eecf8-c667-4718-a573-49cac68895e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59916a3a-ce5d-48ee-82d8-01523fab9036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9a9ac1-01ac-4df5-8c00-1c26914c0734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da09e4af-e874-4a9d-8658-17f68d4699a0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f56631-06bd-49c4-9adc-7a03ad7935c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3ac761-e569-45ce-9cbc-714490b8cc37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f7f02e-f1b3-49ce-9119-f265e27fae73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6f665d-cdb5-4019-af82-bac419a54215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda6ed17-bbcb-4fa3-bde0-c83e4170cdac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc824bc-490d-4b27-81df-8783372c51d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7922092f-5100-4b8d-bbae-abf81b9e87ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3027f376-341b-43c8-b35e-419871a05969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "24d7cca7-e989-431d-b03a-13a7311353d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be2308d-43f5-4ab9-9347-a5a0eff413e7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d33baa-1cd2-4e69-92b4-3016dd2f05a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f02fd45-106e-47fb-9629-105308549e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fabe50-b05a-4fd5-8220-417998b74810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c611bc8-5c27-4283-87e5-68a348ff27f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10957644-0dad-436e-8853-9e0b36ab050a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81615405-1412-49b5-b946-49d47f0c9158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adc7368-862e-4901-b04b-2c264e905f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55041e58-d99d-4f75-b807-804ccb2d9228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cad6a9a-000e-418f-bbb9-b1a5362d2075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70afb1e-c1fa-4cc0-aac9-613fa2378d9f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e017fac0-f0b8-4c05-99be-5d4a8af58940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2b809c-015f-4641-820e-5cc94d4a2d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84362913-4441-4a39-a6f8-588945bb9e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b3b4bd-37d8-4ce6-95bf-b9ff25f27a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610e2640-360d-4173-a1eb-6ae4cbab8291",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd57855-cdad-432a-9fbf-f041ae08cd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8ded04-3f24-40fe-a24b-b315dc314054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fba3c4-b931-4572-9549-b2ec2b99fa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f85c6208-992e-4ff5-b18d-0883c4addd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d8d5d9-f8d6-4db4-b33e-8fadc1535612",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba5b0eb-60ce-48d4-b5a5-9a8aaa510d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bfb1f0-c281-4290-a79f-78b5dc257590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2848ee-810d-482a-874f-b20605a6ceb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03550b90-ea21-4224-88b7-e8480d6f876c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2689bca-acd5-4ee4-a785-038aa01fd8ee",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8520ae-9e9c-4e22-8017-b7b0d9b220ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9332347-fc7c-42d8-aa74-4dce628bf911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5512406f-0f01-4263-83ca-8f5f47ffe7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ff8c9d-0103-466f-b5a2-12c590f703a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e2feea-1a9d-4b56-9c28-5d051c65ba9d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c815f553-ba36-44a0-bb2c-874be68bde3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c79c3fb-44a4-4f81-85a8-8dbda96bc599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74564a3c-6c72-4d04-9dc4-34cd9e0b89d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8011bc-d001-4554-85b1-70ef08e00159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7546011f-ace4-47ee-8bec-e18b5f6daa84",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9294afc-f0bc-4440-89db-d3e09768c920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e088ab-8b75-4bbe-af1f-6bffdf8b2a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00675246-565f-4e1b-bdcb-6bd032d080fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a74af5a-1af6-4a93-8f7f-4177d79fe9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cacbf92-452a-4a5e-aac3-64327d8f2b3b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f25c9d-cfc7-47f6-9567-02175bfba4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8727f2-aba7-4f45-8c2b-4cdd0d3310ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a52db30-92a4-4e46-adc6-de44431f1c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3befbfed-970d-455a-b049-2accf3053e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0326335-6495-4e14-b24c-3fe4c1371da3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ffa677-8f27-4b07-97a5-9e62c33dac6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05e180e-2ef8-420e-8051-b2ff2fc45401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cf9163-86b6-40d8-8be4-577229812afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f865c6f-9a11-4fb3-acca-6fc5cb1cc11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099a189a-4dc4-4392-8085-c478d3df5cc6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c715d05-c634-46f2-b30d-6e96c412ee29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6d489a-583d-4101-a19b-19ce51db358d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88599bce-69d2-46ea-ae03-4511ab6acd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d009b9-4f47-49e9-b173-b1cd98dce864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c194442-7642-41b6-8dc1-b51e9cb96358",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664a26d4-6afb-4195-a666-7bead0d3559a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01764eb6-7cc5-421b-8808-84cc49591fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61eb88d3-8f88-4c0c-98ea-b28406952c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd8a991-bf3c-4c9c-9e96-965cb29eef43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262a1e52-fe4f-4069-8142-51432a123932",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aed2279-309a-41d4-bc06-813fd6511bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249c53f9-d0b6-4bae-8b2e-f44bb383e389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128c2820-1987-4430-9498-8d2ae329e081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4819817f-6a5d-402b-b63a-f48edd820110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f73e69-d4d9-48b4-a38c-438740e392c7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2765a9-3762-4dc0-9612-1ca08a48bc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128a60cb-ae8f-42e0-8a43-89c4070619db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcb7e4a-6068-4fa6-b6e5-fa373d500f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9376999-1b48-4374-b2d4-758516460ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75fd22f-8ce9-49b5-9c73-e6594a107c96",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa866d2-74e3-41e9-ad7d-4e05dfbce806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3e4ad3-023d-4d8f-b4e4-3abec382b0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98ffbd8-9839-40e3-b8b2-277d15893621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5df1e7-18c0-4a1c-bf58-3e1b73926449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fab4efe-3526-450d-8c23-2af225a4c3e5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd05566-1b0e-494f-b76f-059239e52b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772e7dea-fb1c-4dc3-bed3-ea4104c49c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b13345a-024b-499a-8fe1-b6229120c035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c06b738-4371-460e-a1ea-d4fadd717e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1967fd2f-f61c-4b51-8822-3aeda62b0d2e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d786de-59ae-49c1-af96-762fc74c5ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d493ddd-2659-4c8f-b5a0-2b11fbc9451f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a4ae66-c228-46a6-8962-21330444e898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a38439d2-c948-42d6-9665-a44f69cafa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f03c0d-dbc9-49a9-a34f-c67fe576c63c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffc2a5b-caa1-41e4-be74-45a1f26a373d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e1b276-58fc-47e2-9228-ef9bbccaf32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5aac225-fc1c-4ccb-a048-f040654c0598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "704c60ae-88c5-41b5-a1ca-d96ca995a089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9038362e-9d8f-498c-8a25-6d655757df0e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5181f0b7-5123-410c-90f3-7870bce392fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d154053-1e49-4a33-9828-b04b22f2761d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6795c0da-aec4-4382-9f6a-1317acdb7bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff42e49-a7db-45a4-9812-db0d97af9606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66f1a11-394c-4d8c-a5a8-924da8aac6f8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3d92b3-9746-4bbb-8bc9-ffe4a125c204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f1270b-e5d4-437e-bb01-a768ab6541e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96ff0bb-d3ab-4a97-8868-83392b582264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8c60ab-03b5-4b49-b7f5-e61981a67892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2840ee7b-728a-4b47-be46-d05595bd445a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83329a4d-16bd-42e3-8396-416ac89b1aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c0cd47-278d-42e2-9a10-583a541230f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5a5cc1-77d4-4bc8-a431-f41336c8f5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e41bf27-1f57-45dc-9c5f-29c2427107c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5c035490-a7ce-4e79-bb11-ae564f1ea34c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97a0ea8a-1123-4494-b139-bad33b105695",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f551d14-e9ae-4039-bcb6-214ea6f9c5cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "40b71f77-a47a-4b97-9bfc-1ca767ec5217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1635fc-0968-454f-8313-e30609ce6ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "294c63ad-569d-498b-aba7-458375c7bd5f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23c5b749-5dd3-41e3-a409-feebaba96546",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9edda7ae-deb4-4a1d-a96a-dd6e876d7d07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fe9620b-6ca3-4db5-aa65-4cc209b3600f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "621a8b7b-9b9c-4f08-865f-47e668af0e6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03cb5864-2495-43aa-83b1-cc16b0a3e430",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f696b77-dc03-4d3a-b6b7-e2a0e9c83ea7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c435be3-4992-46bd-82c0-8162ae14e2b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f0aedb6-25be-4c90-a5c6-8739a7ef2231"
            }
          }
        ]
      },
      {
        "id": "3719d9df-a898-459c-9323-df9c263d5ff1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "018d2700-135f-42a6-96ab-135eb3b24949",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdab1731-58f5-45e8-8c43-79670086f3f3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0ea6ec1-a2ff-4690-a247-d814c1d1ff11",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3d8f46-3c10-4235-9aac-488ba440dc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b372490-4198-4040-bc7f-e8414b1d2455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1744314-93c2-4458-b7a6-fa52b22c5c04",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ae23dc-d435-40da-bdd5-414ed57a979d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983a50e0-d561-4bb6-97d2-95bd3c5319bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68378d83-adfa-473b-9dbc-02ad70af77e3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb2f7bf-4683-49b2-a50f-f44c4bf21011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b088e06-dd70-4cc2-9a64-467557746272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57eae7dd-8bcb-4128-a36e-d3f6ba706b8d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20a7a0e-6d73-4ad7-86e4-1fc35a89349e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d41ad0-0714-4f4d-8d05-91bb17d907b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ecac8d-ffdd-4c55-a0f2-506c060774fc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484f7afd-0100-4a42-9a6a-1e1fc8e2099c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdd3d90-0c3b-478a-9bfd-af534b4c2102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24edd81-9b37-40e2-87c0-127548654e4a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50415f8b-355e-40a2-b309-0d81a2a1f032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a570910-b536-43e7-b470-6113f8b977c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe24d26f-bb3e-4ab9-88c1-6196baedd520",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbce4a3d-9a44-45bd-a4e7-8eace6f23214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38e9043-20c7-4b2c-afde-bc29f50d778f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37b4ec8-76ca-4a09-9657-216218acd00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e41b5b-d362-4715-a5d6-822292d8e066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef360073-53fa-4ee3-b215-5e5d81dc2428",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e49dca3-dab4-4401-aca5-ded6607de712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28817e94-8b3e-4963-9fed-71834294c25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29469d0-bfd3-4e8f-a94d-cd229e0b143d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12a90df-9525-4e2c-86ff-bfc59feda3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f4b349-9e86-4a4a-bbbf-178bf833ec54",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8476a5-71cf-4aea-9c73-b5a80d085f1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c4dfb8d-bf1b-46ea-a4ce-2bf05230b7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52d616e-80db-4460-b3c9-ca16057e7e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316a0c13-255a-4071-bdd8-7c81d7d0a390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b983e56b-1a4e-4976-93ee-31cd42f8e9d6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125551a6-18eb-4b69-a1c9-185da73d199c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6162586-907b-4a0c-8f87-da3ef22ac71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093cedd8-21f3-4d8f-aded-944b828a7559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27df444-edab-445e-8526-d79ef35e3515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea726093-5099-44a9-9616-b88855fd85db",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40317514-cc58-4ae0-9429-355317d7e34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e664f08-4957-4a2f-a83e-4e96bd57c5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26be1800-7def-4b02-933a-d1a241e54944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fa5049-72bb-40bf-a0b1-7abed9bdb736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdbd47f-a048-4cee-8886-2a70abc1c446",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72291acb-9967-4d9d-976e-91ec024717cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e28c0b-2b1c-49c0-9183-8d6966c50fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32b9fc2-eccc-4e3b-8e1c-18576b57f982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51aa5c0-7007-4515-8e5b-be802448c71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315a1922-0088-4a0d-ae16-e6f5a58385a9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de3602c-6a72-4f64-b0f1-9db8190ddf1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40ea5d4a-fa76-4536-8f0a-4c2a4d6cfd6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d1d046-1625-4494-8ca2-5bff1ef8b45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314e749d-9809-4415-bff3-4c00ae1b8ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a321ec15-7e79-44b9-ae78-1cdfaff3c9af",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757b26a6-672b-45e9-beac-08662cdeb69a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d67dbe7b-401a-48f8-910e-61d6cde140a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae24ed95-dc43-414c-8478-46061caf4aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dae6f9-a8dc-4e33-aeba-fcde79e000bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064f4df8-3a72-48be-a94b-2aa0e31d2332",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac507f44-16a3-4892-9716-4ccc7150aac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "181f0664-8c26-47df-98ba-2231c19dc2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0fd51d-f74e-4357-882d-77f8e701e35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e2eeab-2a3e-406a-8de5-02c14b2435a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45aed5cc-884f-4e60-8ff5-257ebd34f8a5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906ee653-1894-4226-8c7a-5ca202f6a71b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b14643f1-a9b1-424a-8db0-0547aac74b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41faa3bf-4f84-4424-9d03-9ac9d8cee3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8a58bf-7801-43d8-9c84-b83d2c7bda69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f96b3cd-7a12-4100-bd55-10491e101343",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2388e3a9-96ee-42c6-8b54-a5ebc679e759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2569e2fa-8df9-40e6-8077-1407f66213da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76868504-a35e-4c4d-8e85-0cbc4cc74870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c79f37b-bf39-4dfa-8165-748d9624f082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c27fae-4393-4d8c-9f8b-f765039a3f56",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ec888c-2207-43af-93c3-e8b6b952f802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7db20d8-ef05-49f4-8f4d-a8bcfc918a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d2a2bc-5571-4dcf-91f7-41f2634b6e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dc529e-020c-4c41-9585-0ab053a24d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8890b84-6ce1-4e55-af21-dca5195028f9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99149547-fb01-4d4d-ae9b-241d26de6ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e592174b-1c62-4f2c-a902-3f49946337fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8003dfc-6add-48bb-bdf3-d73277d3f755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39547228-c203-48ef-bb72-09a43479b8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc01bb8-9535-491e-bb5b-4eaa3dd9df5e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215d69fc-5705-415b-8ce6-e6ae3c8c8a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1e4269-632f-44a4-9423-68a5d9274caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8b5ec5-e86e-4ce5-bd7c-b5f82b07251e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf28dd9-9758-49bd-8fdf-e8c99ecf6f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867d856b-ad8c-42df-9753-25bf30e1e157",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc16eaa-895e-4110-aa6c-8866b75b6178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cc5969-aba3-472f-9e5a-0338424824b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055e6322-bb13-48dd-b47d-0c42f3da264a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71817b38-8a96-4b01-b98e-6ad7a543638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a9adf5-ec9f-45d7-98d1-0952d8ca6365",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f66dac-8eaf-4bf8-9aed-3b5322d4acb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59008485-9b81-4de6-83aa-5681b4a11bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b644d3c-d137-4c78-a689-c9391630f26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8e8bb4-8d9f-47c3-9037-df704ee091e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f57bb52-1e02-420a-996e-e1d231e033ed",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59633c92-374d-4882-8bf9-8a2f2b4e436e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e431dd-9022-4081-ad5d-168a0543f571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539f158d-3eb3-4633-8d8a-3aff193ad5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3150384-724f-49fe-9d3d-2f5b3feb78c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a955cc-a010-44c7-857e-d11a9170074a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcd5fac-52f6-4a62-ab01-e0976116d936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f16ee6d2-bb26-4dac-b42d-5f93aa784781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b0133f-1c5d-433f-9bfe-22f0aec6fb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2263160-63c4-4d2b-8cb6-e994dba8f04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257555d2-b3c1-4e50-98d2-4d69373e9673",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ad49c5-8c7e-4d6d-86d5-ef1487291ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a72c82-13f3-4ffe-b75c-08b698cb0c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3cc462-f1ea-483e-a9b5-68c5744fc843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6312bdcf-84d1-450a-b314-ec5528539edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae81a8f-03bf-4f27-9114-4ca2f715078d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909ee6ef-fcb8-42f5-9de3-0d8fc18d4627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbec7887-7f53-4270-a7ac-1e9e72da957b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a7c39c-88de-400d-8254-e35b86865725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd2a0e2-84d1-45f2-9a68-b8f22c67fa11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291f7a67-72c9-44ce-910f-ef8b08090adb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcabad53-86e1-4538-b025-5464feeca91f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1f9779-7652-40f3-a7b5-f24c64a85c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622fd4b8-1780-473f-9402-4456a12f6546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6cc184-cf09-4b67-a08c-30f94e2dac6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ce1602-0bcc-467f-b125-20d0fa8d7f9d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161bdb66-dabb-47d0-a26d-050d2cef1972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cd5e53-8287-4d44-8e05-1fd0499fe645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ead923-eb0b-43b4-8124-9e3b5419ea0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d87f9c7-2d4a-47a8-99af-28d2b6b91826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212ba51e-aedc-4f78-9008-95f08c94d644",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5e4ad6-1650-4361-9379-47a99e8114a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3ed915a-3294-4ec2-8d5d-48e120410645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd493ab-2eba-4f84-9d9d-5904f3f48b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c326364-443f-4949-90df-da2bc3f08974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb309b9-4d50-488d-9d5d-29907206db31",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530f15d5-72d1-4485-ba14-bfa4014fe53d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56a8d308-5e01-4bb4-8a9c-8b5b40cf291e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9a934e-1b4a-4856-853b-87f8bd9cb916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e05593-6151-4400-ab7d-c4a9614e6bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaa7599-e3fa-4418-8c78-045441b39e41",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899a2f43-7e55-4962-98dc-9147c05538f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5317957f-83d1-4ebe-b6c4-c2d427b6f6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02731789-cd66-4a29-9b01-ed5582b81275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d21a176-26fc-4b8a-ba8b-aa249a1c14f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3984fd-8cd0-495a-83d2-b22975a3564b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57a8938-1867-47d0-8274-ae4046e42074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20cfc38e-3311-4d47-ad74-b8145ae64547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01eba565-45fe-42bb-b43e-a5917c062116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be72a9c0-bbb0-4e9f-b5c0-ab0711128a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442e5551-3fee-411c-b3a7-cdea4eb4587c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713e3081-8eb7-4a9c-8eaf-94d8d5172287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5589c419-6f84-445b-a775-333dbd940c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8006521f-5a36-43c2-8a25-e4922648ec1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb554d2-80df-46a3-ba48-e4ddd7a442bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343fae94-1496-40e5-847f-0aebbc3a878e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a9ef24-590d-4298-a2ba-1f7ce257bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52277a0b-a7b1-4c86-881c-69db375edc67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ff78a3-0861-4847-8d59-a5c11cc70ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2a9727-b309-4478-8fda-d1993744eba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4241f3b7-dd5e-4aa6-a4f1-6330bea644b5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e95dbd-5990-407c-bd26-77f624603107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ed358d-42e3-42ed-aa6f-bb7538e5ebb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcea2b85-19f2-4b98-b3b3-c61fca91ae03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12515dec-078b-4bb0-b4ad-0c8de922ad12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f16a859-22da-4f67-8951-77aa83db6213",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5b4591-0054-4fae-b6bc-2a75d0000283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12474911-53be-409c-92aa-964998dde077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880ee1f7-5333-4aa5-a42d-aee426632116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f684c839-22a9-464d-87d0-1e182122330c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dada5fe8-16b5-4759-932f-4d71a83f0859",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d89058d-59b6-4a6d-a06d-ec0e2cc74f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fb72ea-0b4b-4c56-876b-3e7adf86fdc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60b400b-242c-47ec-b30f-8c93e5bb46f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7921fa-e998-46e7-abf6-0b312b808812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85435e94-3d1f-4631-babd-42534e2a57dd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec85f575-b198-4cab-b021-c2880f7613c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dc0bd6-ee95-4faa-9ca3-b096a50d1fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69fa6cc-8878-4e6e-ac9c-80c372ebf210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33fd1f1-1af0-42cd-8f3d-e75a8b581aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961548b4-737a-4164-b451-d5122fe064f4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b98299-b97f-48d9-ac73-dbf75c0248fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ed69a5-1a83-41c8-a592-cb98be31cab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdffb224-a6f1-47ea-9322-749608ff97fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38d7e54-b4c5-407f-b815-670d98c8db33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5f27e9-648f-4912-8047-a4fd8628581c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28418083-0071-4c6c-9b72-0cd904a8d99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9caf69-0711-473b-bdc0-d43e4912a96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d374c2a-e008-47aa-b21a-cc8f9e05b189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bda75c-5d0e-44be-88db-28b89995728d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5eba44a-2bfe-49f1-b1a3-b80cbab40459",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d0f310-e7dd-4bba-b998-8203c2428405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a3bfa2-3a4a-4cee-aabd-542438ee0e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3234631-cc56-40af-b798-351b6270f218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8a29a7-895b-4929-a260-0b1708a4cf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508b07bd-ea9c-45b7-b8be-8c7dc11bc13c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72f889a-09e7-4d94-862b-9b7920076983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ca7faa-d6e5-443b-9b46-5968a709e8d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1439cae5-e516-4e7c-a268-f9b28f0f2c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67947b94-b0db-47e0-b092-aa21e09f44f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a406c7-9694-445e-9374-739d8d5c77e2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fe836e-c084-42e3-b047-3c1287343ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049fccb9-8ee7-49c6-a008-12e6abc2d7cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7951ceae-7284-4069-ad00-cb60dc73fe9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a608925-2043-4c94-900b-9404a0dd2a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab8911b-2795-4c6a-b7ac-656f8b25c58c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d8812b-e8cf-4458-889b-744c9fbb7025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c1e25d-eb5d-4165-99fa-7446d3c30053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcb636e-b43a-41a3-9487-719b5749b925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e9ec15-cc70-4e55-873d-cb024105592b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0c513e-559b-4540-91f3-6d4afc3ae34f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a2e03b-ef82-4e96-8b72-a7ad2088bf90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b11465-5574-4329-aca7-3f5cf16ed244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ac5370-7f1d-4a09-9a3a-fbb5baae05ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eacf9fd-10c5-4886-8954-bad8113f04d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5edd3c5-0c8a-487b-aaba-c70e32e102ef",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a697f451-8137-46de-be04-e0d2cee05539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc38b6f-d904-476a-91e1-e1a724d9cd73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ad6229-f081-40fb-bfd6-cf3e7169090d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15800e9b-a2ef-4a8f-9643-4b29e4b59d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006980cd-5b93-45a4-8dec-82c87a4a13d0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b9f4ce-7f18-4bb1-8508-62216dfdc23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fa1cfd-e41d-44b8-8fc9-96ba1117e7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc1ae9b-14bf-4a44-a601-3917c99f813f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b19b0e4-4fc9-4b4c-9252-a9a435d0bbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2f800c-1cf6-4732-8533-732920c991ec",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb0c418-6b8a-4fa5-92a6-f2f050b2fdf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbb6eb3-ccd5-4b52-b6cc-875936ea4ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6545c7f-2a52-479e-98aa-3ba25f17a913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb68bea-5bbf-4d3f-b316-f3b7fc9eeded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d1eb3a-1e4e-46ac-bb27-1d58dc98b42d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5966580c-90d4-4d22-bf19-62dde9ad8e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f32ad5d-8f73-4584-bd4b-340275e6eb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2503cf71-790a-4a0a-b2e7-b63188734aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9530c9a-709d-43a7-8a7b-dcdcfba4be28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ee5e20-f468-4208-a1a5-3e22700f4022",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe7053f-24ce-4617-beb9-4f57077e9502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc001783-9368-4264-8ae4-f184580b20d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9392765-adc9-4bbb-a17e-7c9e9405055b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14991e73-dade-4072-9f10-d08055f3d6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8bf862-c613-49dd-8ca3-85133545b876",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc097a06-2705-48f7-bcdc-400ea17d9243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c1c840-d24e-4fcd-b158-642327bd9659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f1c513-6e50-462b-a57a-161f0cb039e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1d520d-96f1-4710-a451-0b53262264bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0afb776-6fee-4e92-8cbd-7029a9f71cee",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f747d882-8696-4de6-9f1e-b47740146e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71aac7f-bfa9-4a75-9289-c9a54bdbcb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217e45b3-f675-42e2-be5c-fb15468a3029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166a6e21-4547-4596-a3aa-05a23afe5b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b28c578-4cbf-42b5-a980-ddf549f42fe9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7a403a-2ac6-455d-bf1b-6acc9286453e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a81a08-3653-4df0-86bf-a110195dc08a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b74ce2-bd50-4c10-a829-120c3300534b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60173a0f-77a2-47ee-b8ef-3d053b9707ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338bb4cf-4e58-4a35-9720-33db0aca3ec3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bae8c1-e7cd-4eea-80d9-0cdc80d48e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30c1e27-d1d2-4d77-852a-2c52b134a099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4ffc6a-a089-46e7-8f6c-dbc5ecece6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b09960e-ff06-4eae-8ca6-ec3439a7b94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e214b9a3-2d9a-44af-b2f2-0d8a62f9336e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14143898-15bb-4bae-b979-c13bfdf0917b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2585ad-301e-4339-8d2f-20e40e374796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "133873db-5530-46ad-a947-ae7864336082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1694db8-63a7-4dce-ae73-15e9fd28d2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe51c37-1105-4664-a106-d4e4199b8b64",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a17f8a-5ab5-4445-833e-e697294d1581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393abc92-2d6d-4b15-aaf7-dd2f8bfd9063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bf55c1-98e1-481d-9419-cd78d80be5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a74a991-f483-4069-9aa7-8066868c6b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee45704-e0b1-457f-8131-ae2a18feacec",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344f2adc-200f-4323-b988-5d0b25103db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08a859e-5e89-487d-9f24-74e3e62648f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a97ca24-d8b9-4ea5-bd9a-8f731fdfaa65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8f557e-af09-4f62-ad12-8547bde27417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2b6238-60ad-44e7-a3d9-eafc9b2cb8dc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28884864-a4dd-4505-bacc-590f04656ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de04cbaf-2829-4fdc-9a53-2cf2f3c17f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b32161-fb5d-4925-9496-8aea45eecf51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d378deb-68e8-4b30-817a-cb2261f60912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cf810d-a26a-4e49-a84d-204752300ad1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7be138-6b57-47f1-8687-71794642b3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b910450-f69e-4291-8bfe-a33c09e55b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6abb51-3be5-40ab-8d3e-85f276ee8688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da47331-526a-471a-a12a-0f8b457d1b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957a60e2-1735-48b3-a43a-09031fcad9b5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1747abf-0a44-497c-b57e-ea39e472e3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bb7dad-ee8d-4bf7-aa74-d0859adbdfed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edd179b-22d9-46f8-8873-e735fafd2920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f710b2d-c376-4f4c-9ce6-1d1860be8b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c8a223-2044-49f8-98fc-d59ca8ad3d45",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0015607b-2b42-4629-ae8a-baba07c4b850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf23fbb9-53ee-4c6e-9ed1-f591f7b6aa84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f7fb47-1939-465b-a2cf-b5504f23096e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b855e5de-8e3b-4bce-b1ed-d473da900e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2226fe-277e-4a69-b4e3-c50809f07b1d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c175bbba-c03e-4b6a-b709-6703752553b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d55b675-dd02-44ba-86fc-932bfbfe74b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d33dbc8-78e6-4a4e-82c8-6c73636569a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf05cac9-a4e1-41dc-ae3b-05514a2cb382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9fd111-b4fa-45a8-8ed0-bfebb0a559f5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22283f15-c47b-4549-91c7-6106af8e4834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8ee7da-d01c-4719-9d00-45231c1afd72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b4ff44-ca0d-4c9b-aacc-fea810210017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350e3306-c1f4-44d6-823c-18b2b0b6a6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8502f45-628a-4e81-81a2-ff5c0005943e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3696575b-9473-40c3-b66b-ba7d5d944bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87353181-88d7-4ebd-872b-66f392bf2974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338bc24f-98b5-4175-ba37-175b2e21f7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd38698a-c386-4831-a8fb-9df202f7455c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a53e2e-0d14-4f84-b609-bc4d8ce71585",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac260800-1646-48f7-8d0d-8077324be0f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21b65d79-7adc-4efa-a95e-bab3c2d0932a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c10790-e3b0-43e2-8f24-40c7a3b129ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7659f44-23d0-4764-8c9c-a96fbe4bb027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0189e239-7c03-40a4-8f51-df15361d8118",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83947b5-8c56-4b1a-a68a-544844d915bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aad91b1-49cc-46c5-b757-518baf994697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02976d85-f375-490e-9483-e1ba9c4488a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9005d3fb-e911-4ec3-a59d-2b30266ede87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdde88c-abaf-43bd-90d5-fea5d97a3baa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4b24bf-a2e2-4098-8a27-b8df82791aff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58df97b9-c2a6-44a3-9723-9534f3db9446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2096ea7-cab8-41a1-b059-de0c0487b807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9dff9c-7e53-491e-8049-811bc2a4ebee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ca1727-1d98-4fdc-bbd9-6103437cb745",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c856eb4b-ef7a-4439-9509-e4ce595fc3f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78cdd8e4-c5fe-41ec-a50d-6cbc34ca5ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc5afad-782e-4a12-8346-576b0eac58b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a948677c-5f67-409f-984b-5de8adf99607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce6bc24-ba0f-493b-bfd4-b2ca83a678ed",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac860011-176d-4bb6-b6c9-4d8b2fd37bd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4804879b-4fa0-47e3-9a26-273997eb2c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fba115-6cd7-47fa-9859-b9f2f881a9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961b5f58-ffd6-4d19-9590-d336fe7ffeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172c5e77-aa5d-49eb-bf1b-e20764ce94df",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715b0043-f2d5-4403-960d-05eed86d8818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ea32bfe-e283-4eb8-80b8-f90b45179810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dd838e-a2d6-4d62-881e-0d8c1557c4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033ade9b-20df-4ec0-88fa-22d60651917c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a6ffba-882f-4aed-8e8f-afa137d87ea9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da027d6-9477-4cd2-9d56-e1a9643aef9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e72b418-496f-43c6-ac29-4fa20ca1b896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d959a57-0b94-4fa1-a4a4-39c137bc0ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856a345d-a6f6-46fb-9d7f-c374b539b9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b521473c-c2de-44c9-931a-274950b4bf66",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de7be33-667b-4dbc-8d5d-ed60413c3db9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dcb189b-a389-453b-855c-14b4677647ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00b56cf-3b41-426d-b737-95683c83abc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cce1a7-6845-4d89-bec1-84682709c4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d7746d-b8a6-4337-a4a6-89c2a5a15939",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff678ce7-0e5c-4d47-a1c1-13308f18253c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a5febc-0393-4f35-8f81-f0e105df7fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c7cff0-8b12-4c56-bcde-d3f1180bf251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972b92cf-9786-4896-a28a-576e6d7ab35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb31507-82d7-4b9a-aed7-dbbf4c260b1a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b540fb-1443-4cc7-9ad4-2e1e7120d339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ac6083-e2d2-4422-b5f4-e12164bda89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2614c5d5-cf2b-4d0a-ba53-d78dc5629403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e879bd1-50a3-4183-a4a7-34f3e7aee0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303f0ee1-5822-4184-a8ee-e702d1517313",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b2c023-e2dc-406e-8c6b-c983d8bb1fc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73a047c6-ed04-42c4-bbd6-943962a01ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630227fc-ac8f-4849-a280-d543a0778ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603d3ed3-a7e6-4ea7-94e8-72d77fe3e0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a7d03f-341f-4132-9a3f-8bc07ab6e549",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60d780c-3a71-4ce5-99b5-7873ff9b0578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06da6717-a4f7-4266-98f5-2acea7d2a202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1567caf5-7827-4241-891c-bb0acbfa2be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd0180e-0ec5-4c62-a06e-a7177974322f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a2df97-dcbe-47af-b63d-1efd8f06605c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ee09f0-8831-4641-ac5a-6e288d24d39c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18402cad-f21d-4890-b4ce-8522504d6b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77b2130-2e05-4d9a-bca6-d4753f0caed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ffb982-bf11-4720-9420-058024dbac58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d74912d-ac58-4eec-83d6-d9531418bec8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6707f5-97bf-437b-ae31-5f70ea0e22b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a3885d7-985c-46fa-ae38-a0f983f8ac2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1944d564-563a-4720-8827-5a1b81076161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c24712-467b-4616-ba4b-57d073b853d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9358b0-fd8d-4720-9227-dc7e5b758e80",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e683243c-36c0-4b7d-a77c-27a31d5cd6f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c1d88d5-4417-44fb-90e8-0b597f2f62ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c14dd14-a5d0-41de-9089-6c5f4ba33b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97f947c-9ce4-4070-94a4-bf04b7a34415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fe427c-6365-4372-9e8c-6e6393ffdd64",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a753ebd-3741-409d-9eaf-645e736043ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef4a75d-2ed3-4151-976e-11a91cfdbd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a063ac-b229-415b-bb60-ec385de7ebee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33df1d07-8690-489e-b9e0-58b819535527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab93968-8f68-4e8c-8b09-bd11f82115dc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bb6ec7-1953-42b9-b684-05d2ffa91ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1c6584e-b3a0-46b6-bb8a-1bfd905e9d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be08a01-51eb-4d13-97bd-3a75f4ee02a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f693ff82-4ef7-42a8-b4b3-4a8a357e8b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d52c56-df17-4af2-bbbb-f6697f3bcc8b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6965e85-9123-443b-b134-4d41a0460758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92c1e024-dcab-46df-be2e-cca7b58b13db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaa20e8-2889-41cf-a96e-2b039ae1b2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdec0ba8-200f-4dd1-8e49-498f6cc74239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc61e40d-46b8-4cba-827c-599205c40d31",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bb762b-129b-42fa-aef2-4a8d078bb0eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d79e2d97-b474-414e-9a2e-0d7a1faaa49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1814999-c689-4adc-835c-2058e362db4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec9b694-a479-485b-bc9b-b527f35d4464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d70fe3-a43f-4f62-99ce-454cddde9ffa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d408b1-c872-4a12-8162-ea24970043b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7afe823-c56b-4a3d-963a-bdf752233bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506ea6e4-02d9-4c03-a9df-9903f5d0e5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3075b317-0f0a-4ae6-b47b-1d963b501485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614e6757-89b2-4172-ba31-daec19c689c9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b46573b-e498-4544-8df5-5d40556c1ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c37ee5c-ec43-43fa-aa36-913cc9480927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9c2734-5f88-46e9-834b-10908869fa7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0238af07-5ab1-4a24-bc3b-a0484735d3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fce35a-b146-4ece-97a4-ec9bf4991524",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f30d79-b4b1-4a47-9f96-59108ae25f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d96fc5-b9a2-4b74-b79e-fd1ec025e15d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd8d99b-38b5-42e8-bdc2-cec7dc98c84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54aa8b2-ce5a-4241-95d3-df062a866098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3221a9-1910-471e-853e-cabb4d4bd6c8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f747c62b-2e4f-4b52-9d9e-aa312ecd3cf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4451f194-650a-4d0d-a44e-3ae9646dfa56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a60593-bd40-4d01-bb86-6ca1952e87e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a2fbd9-e5ba-4112-8cb4-52075978fa48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b839462-169c-4ce0-925c-3c9f4c8b896a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76676464-8e81-488f-9bc4-85d520506db0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "292dce7b-f7d3-4e1b-9449-f16490d5d3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c834c446-f1b4-4dbe-b3f1-8c191a9595e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a7a9d1-10a0-486b-bedb-63d04e6e87d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18107495-3a08-483a-bfed-acae2dd1e2fc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7d2227-655c-45e5-8cbd-27698271fa10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92aa0bc6-bed7-437d-94e4-fb06bf797f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e277e64d-4505-4c7f-a0d0-d5ce732a63ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f988e56-48f7-4147-8c3d-8d192a502c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59566760-f961-4bd3-898a-4989cb2b49ec",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5bd4f7-db1f-43b9-8cb0-e6758c62d804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d36b7228-7804-4b34-a250-5840e32c3444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc57728b-2546-4b62-a053-4f7d4016edd3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68ecac6-0f60-450a-bb7b-56be80db0422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11923ce1-0333-41cf-800a-944add5e98d5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343af481-1072-4bbb-9a0c-8193695ca434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c034037a-1cbc-4876-bbd2-428bb14f3b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9190f327-8f5a-40a7-8df7-0c453dd81f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b7930e-4fad-409a-81be-5dae9180c804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40c9c80-4684-4656-aeb4-68251f7b66ad",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e36ae58-9372-40ba-b901-dc1bc789d74a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "607ad201-4be3-4d2a-8b0e-404229e2a290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d591fac-6078-4294-aa86-475d05142395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82b584f-5ded-42eb-8939-16b17821daee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378705a6-8aa2-4991-8742-5b6abf2f9f80",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcbf942-3ca4-4005-ab43-66fd7a388559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8069edf7-0989-4aeb-bb53-735c6ced4e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2628cb54-0dd7-4794-b131-e76d8beb86cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac56386-81c8-4b29-bd1d-c9c7593233e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e134f7-330b-46bc-84ed-6a05c25e3692",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfc8ec6-2fa2-4872-bfad-1623ba4d7387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf0a829-454a-4d9d-b780-59d33b16770b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686d37bc-72ad-4be2-a330-43652615c7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ac0070-1557-49a9-b7b8-d0dc170a2a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba04673-2894-4374-81da-6a9ead22e5a0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69adb55b-845a-423b-b3dd-6c3c51690705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4dcdc79-e2b6-4f14-8e56-cacc3b056131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147c6371-bf05-4a32-9818-3674db63cbf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23858b34-e481-421f-b843-06c349d40714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a722ac02-5e8e-4342-8e8a-124ac4380e0b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea114bc8-a391-4198-bd26-09a13cae3832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bbe9fae-f739-49ea-879d-8773459f2b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5ac81e-e215-45ae-9043-0dca6342992b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b87c0ff-d99b-4752-b8b6-12dcbac80647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982d9f91-25a4-450e-899d-cc6dfc039d9f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb1a7ff-9dbc-418a-af24-99385a38a63e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "184a43a0-34b8-4e55-9fed-e2cfcbdad68e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1e5f41-8175-434e-84f8-7e4982f30410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0528db9b-b241-4820-b660-4d817cb46d0f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc51368b-f57a-4e6d-aa4c-122083a9926f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51d64bc6-abc4-4b8e-8f3b-bb62a5533246"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3629568b-18f3-47cf-85a4-ebc68e24073f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9862b8a1-5d85-4d2d-90fe-2bacdb6c9c1c"
                    }
                  }
                ]
              },
              {
                "id": "3a866c78-0139-4ffb-b262-2efd140b7485",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9c88aef-90f4-4a55-b6c0-d0ddfbcf4f44",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7810d5-4f24-4038-b188-f7a98573a04e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c210fd42-a5d3-4b8d-b069-6a302f8679b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a0fa33-f638-4289-a451-a377407d667f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f51f72f-8419-4e88-b110-d202cd3efa0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ec926e2-03d0-4f63-9e31-2c7c4f73400d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa64ab9d-3e76-4cfa-97ee-ab5d3c467596"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30abc210-31ab-425b-8e77-688f7ecbd360",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98421ba1-8dba-4f3c-bd44-97b04e0a1547"
                    }
                  }
                ]
              },
              {
                "id": "0821aacb-ea86-4d96-ada7-181a0b567fcb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "54bfb1e9-71de-4d25-9daa-95c63d1c8389",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff947b1-3e09-4c7d-a90f-7567dabd835b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ad279c54-07fe-47ec-b57f-12526dda878f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914b05e4-174d-4e82-8c80-0ba775b494de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0908a416-4abe-49b5-b582-85bb40baf079"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "04d8d46f-5f39-48fd-9f7f-d38f52ada5d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb8b1d0a-3b00-41fb-9186-8b575aa6c7a1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "000d4c93-4a59-4312-bba0-1e509e79a81d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "86cb08df-d4ed-482d-802c-04689a250d58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8ec10d6-9417-4c8c-be97-812f22c2e4af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84e93d89-0766-4b43-97a3-8907779d5d69"
                    }
                  }
                ]
              },
              {
                "id": "1759d601-841c-4f35-a514-5f01d9d5b8ef",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e9701a0-0a11-4193-a5fb-59625c35d305",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0e7050d2-734a-448d-b8e2-7dcffd81ba95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45bacc97-812a-4857-a828-a794a9abef6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0fa716e-ef84-43c1-9099-419c254d7249"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1449854b-6138-415f-89e4-cb72c3ebcb68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bda9c9f6-e933-43a1-8e72-478ac98aa641"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fafe93fb-20a8-441d-96c3-82365850ebe1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c72de01-bf25-4031-b380-d4aaed26d143"
            }
          }
        ]
      },
      {
        "id": "9228acfe-f926-4139-bd29-cd5aa35f504b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "71af5dcb-996d-4a79-a898-e1191eabe5b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88e35914-f106-4056-abda-ef9cb8a2d965",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d58db2ce-3618-46bb-889f-b9c42d6231c4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfc9e76-fdc9-45af-bace-35a0de83ac58",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e03d1ce8-b07b-4286-93e2-db68b3da547c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197fa495-8930-49c7-8fbb-73e4a173645d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "656b7b84-7bc9-4ab4-9ad0-371c520b96f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9313d71-2b37-4ee9-9515-ab95d2ccea9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df98e4f0-3852-4236-83b9-bf68b32c601f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a83cd78-638a-4bf3-ad8f-637eff12c7b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea7b19f1-ccd2-43db-b9ef-222722164af8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2630dcb1-fbef-4cd5-bb93-4ffe59fc2bff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b9db0dac-264a-4db2-acf2-f0ba7d99a67c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e631ebba-c24a-420d-9a6e-27fba751afcf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f35feec9-50ca-4302-b19e-b29bdbc762f5"
            }
          }
        ]
      },
      {
        "id": "bc964c56-aa0e-4362-af15-20052c89c143",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4936a1e7-e4cf-481c-aed0-566bdca3b63c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bae04de3-2acd-4343-b62d-5dccc7e26b87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16f6db4b-a804-431f-8c78-b0a91bee8068",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b849b7-6be4-4838-8038-6f84ae27748b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe64834a-0856-4379-b70c-10206b033c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5944b22f-3270-4201-bb50-7cb2ddb3b167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7e3111f-50f5-4a94-826c-6d6973ab15b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "729a7f2f-1a83-4622-8ff3-b10753b90aa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35f65faa-c453-4498-90ac-8e7bf9a9924f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ca70bb8-8280-404b-b1fa-95ef40e8fe12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "883524a5-3d19-4677-a8e8-63c3932e04f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "198751d2-5de0-411d-ac1c-a1ddc7ac34f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e78bd20-a6c6-4f39-91e5-a125ee429f65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8437b7c2-e4d3-4775-9ec3-341270206917",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b03f6b2-a89e-4c28-83e6-497e876b5768"
            }
          }
        ]
      },
      {
        "id": "5fd42cd5-ad43-4e9c-b2f0-7a53f2979ad9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "482d1094-9146-42cd-bc13-b040051110e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d27e4a3-a9b4-49f3-8c43-29ec3b91ff9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e70ba21-b474-4577-902a-47c250324f4e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6383680-cfaa-4f98-a04c-0e81c6d48c26",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91fce1a7-3f36-444f-bc0a-2107a9dffd56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c9f772-ef53-44bc-975b-b89777aee232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee8de33d-259e-45cd-92e4-124c1ab0d425"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cec3685-6175-482d-8d1d-36b839ed9ba2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48ceeef7-836d-42db-96cd-80f32dfcadd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc3ad8c8-de8e-4dc9-879b-3d80c7972df7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a7f26dd-92ac-470f-ac22-80362460d70e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03e96fa7-3639-4d88-adc7-54748ffc165e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "decde117-7007-4043-aa9e-068df2b64ab8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "867e6eb2-e454-47b3-9126-d878641a3c61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d37330c8-d496-4cc2-8b39-5e9cf5855bf6"
            }
          }
        ]
      },
      {
        "id": "9d116059-90ee-4c97-9320-9d4ca8915eec",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77a146ff-4597-4be8-9a2b-34bcb4b8216a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c345f52-2a8e-4059-b317-f7c820089148",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "73118af7-a209-422f-bee2-50ae81aae6ed",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35836ea4-fe58-4400-8fd5-ec3d34896a3a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5754d65a-d38c-4164-9ad3-12b3d1f7d55a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 312.968253968254,
      "responseMin": 6,
      "responseMax": 9620,
      "responseSd": 1401.996130446101,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719794644831,
      "completed": 1719794732314
    },
    "executions": [
      {
        "id": "f95d0ea9-4a28-4a67-ac4f-66ea88a4ca6b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2ee8b96d-b46a-43da-9c9e-e42ea8c22477",
          "httpRequestId": "76c91ae2-75cd-4e04-aa0e-a1d924bc778a"
        },
        "item": {
          "id": "f95d0ea9-4a28-4a67-ac4f-66ea88a4ca6b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a7569d18-3ff8-4908-8833-3465f3f37443",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 0
        }
      },
      {
        "id": "99338385-0cbc-415e-91c6-5f09ccc4defa",
        "cursor": {
          "ref": "ab0e7373-e85e-49eb-85ed-52fd7689cf27",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "43ec8f5c-a776-47e9-b117-56e66133f285"
        },
        "item": {
          "id": "99338385-0cbc-415e-91c6-5f09ccc4defa",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d6d019de-68c2-4984-8b67-ee31c98abc2d",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "2627b83c-fd17-46cb-8649-34cc5f41087c",
        "cursor": {
          "ref": "b327dc99-6fb6-4461-ae67-70c537f7d36f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a22d3270-5818-4c15-8752-257be95781a7"
        },
        "item": {
          "id": "2627b83c-fd17-46cb-8649-34cc5f41087c",
          "name": "did_json"
        },
        "response": {
          "id": "396f1d8a-df8b-4b74-b6da-f6f2f1d68f25",
          "status": "OK",
          "code": 200,
          "responseTime": 174,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6e03cc-aa8f-4779-8359-2fa4e845005e",
        "cursor": {
          "ref": "d813740a-a627-481d-850c-e6d55e01b465",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0382dd14-0369-40ef-9f02-81fe8587bd43"
        },
        "item": {
          "id": "8b6e03cc-aa8f-4779-8359-2fa4e845005e",
          "name": "did:invalid"
        },
        "response": {
          "id": "284642ec-4964-4355-b8fd-c68c91c3484b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2323,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6e03cc-aa8f-4779-8359-2fa4e845005e",
        "cursor": {
          "ref": "d813740a-a627-481d-850c-e6d55e01b465",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0382dd14-0369-40ef-9f02-81fe8587bd43"
        },
        "item": {
          "id": "8b6e03cc-aa8f-4779-8359-2fa4e845005e",
          "name": "did:invalid"
        },
        "response": {
          "id": "284642ec-4964-4355-b8fd-c68c91c3484b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2323,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b970557e-da93-460e-a0f3-36c4c449f546",
        "cursor": {
          "ref": "43d6e49a-ff30-46b6-96ed-87f305a91d32",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "660556f2-ca9a-421f-b1d4-7e1b0387431f"
        },
        "item": {
          "id": "b970557e-da93-460e-a0f3-36c4c449f546",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3d5a5630-b7b7-43c7-aee7-37ae7dbc1407",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2560,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182ca14e-21a1-4377-b0b9-500b7e49cf2d",
        "cursor": {
          "ref": "5075e019-8581-498f-9f81-a8fce7bb3532",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e1b2a81b-4507-4713-9f7d-bd04063ec5b5"
        },
        "item": {
          "id": "182ca14e-21a1-4377-b0b9-500b7e49cf2d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "321684bb-0f43-4e8f-acf0-b2c4e0e0ca3c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2247,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3814f3d4-7b78-4b4f-ad48-e54dd13618a2",
        "cursor": {
          "ref": "e1e3ba8e-0952-4c4a-9f17-ffea2310e46b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1914ab66-1348-416c-b956-5ab2138c8979"
        },
        "item": {
          "id": "3814f3d4-7b78-4b4f-ad48-e54dd13618a2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b73d5a88-aa12-4fa3-9683-0b5c2cca9344",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb8b099-f47c-4ba5-84df-9069ecc7022f",
        "cursor": {
          "ref": "5386517b-83de-4968-8104-1e0c193be130",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "beea8ebd-22cf-4928-8e2f-2e7f3ecbc45d"
        },
        "item": {
          "id": "6cb8b099-f47c-4ba5-84df-9069ecc7022f",
          "name": "identifiers"
        },
        "response": {
          "id": "6b0cea36-8c97-42d7-8eb0-704dcaf78c08",
          "status": "OK",
          "code": 200,
          "responseTime": 2418,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3155e22c-02d3-46f8-86d5-91f8a8df9084",
        "cursor": {
          "ref": "bf08a285-4c3a-441e-82e9-f70bd17d645b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "35471dff-4fa2-4510-9af4-c253d03336b9"
        },
        "item": {
          "id": "3155e22c-02d3-46f8-86d5-91f8a8df9084",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5467685a-0c68-4b42-83cb-fbdcd4d8f157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccd1d25-cbdd-4891-a88f-2b5cfc2eeeb1",
        "cursor": {
          "ref": "60ae32eb-1ee5-4a8f-8f31-4259e72f5308",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "85f8a4d4-1cf9-4060-b43d-16680c439e01"
        },
        "item": {
          "id": "1ccd1d25-cbdd-4891-a88f-2b5cfc2eeeb1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1844700c-99f1-4ac5-a523-65aece9e1a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306e52ef-9182-4e4d-ba14-701da94dd4b7",
        "cursor": {
          "ref": "7852c17b-4f97-42f3-b691-1c7e50d5b538",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d084187c-83b3-4b92-a35e-a464b3277725"
        },
        "item": {
          "id": "306e52ef-9182-4e4d-ba14-701da94dd4b7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1622e1d3-d8d0-4878-aca9-c3065c07a5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3a90e8-3e9c-4947-8360-a55fd40370f4",
        "cursor": {
          "ref": "4ca25b4d-bfd0-45a5-9887-202f4420cc6e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6117d7da-8917-4459-9f43-0ad3b5c5f51c"
        },
        "item": {
          "id": "8c3a90e8-3e9c-4947-8360-a55fd40370f4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "beeca8db-c2ed-467b-9e26-613a0c4e3863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf8e1c3-befc-480d-ad92-24224b676ef0",
        "cursor": {
          "ref": "b75b046e-6f71-423f-887c-747d9eb858d5",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b76eaa1d-b45e-4930-98ae-68f37c87c8eb"
        },
        "item": {
          "id": "9bf8e1c3-befc-480d-ad92-24224b676ef0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0cfd1090-0278-4b0d-a940-704b56bea230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fd0e8b-84f7-44ac-b403-b8b2d8297657",
        "cursor": {
          "ref": "01ef56eb-69a0-4000-aa77-9d277e96c7ea",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7e1a710c-2afa-4495-806a-07abb56197e2"
        },
        "item": {
          "id": "50fd0e8b-84f7-44ac-b403-b8b2d8297657",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "134e43fa-3135-439b-8182-43cd88525034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df582f1f-e08c-4488-a30d-e68973632464",
        "cursor": {
          "ref": "3b7dbb8b-759a-4b16-be62-2daa00a9d9cf",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a79bc9e9-f32c-4cfa-ae5b-c3864ef383c1"
        },
        "item": {
          "id": "df582f1f-e08c-4488-a30d-e68973632464",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f21c9db8-34e8-4274-b7dd-e4a30b447f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe9248b-3d83-4225-b0dd-69ff1a2fbff1",
        "cursor": {
          "ref": "d90120ff-61f3-4522-83a8-e09807ba11df",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7e64a09c-13bf-4d53-87ff-b9c6d4085c62"
        },
        "item": {
          "id": "8fe9248b-3d83-4225-b0dd-69ff1a2fbff1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6595bf34-9b6f-4a90-80be-6c7466678fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b97af9f-5fe0-4ab4-8397-591a4b3b1219",
        "cursor": {
          "ref": "fb282ca7-0f6f-4438-ad8b-20293b8d8dab",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5be97ea8-d69f-43d5-99a1-ec4a9082ddd5"
        },
        "item": {
          "id": "9b97af9f-5fe0-4ab4-8397-591a4b3b1219",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8070a696-9719-4bb1-816a-55d3d16ae3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080eb54a-3ffd-4d40-9654-11abb947e770",
        "cursor": {
          "ref": "42cc63fd-c9ac-46b4-bbe0-8cd1293b8162",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b286bda7-dc30-4233-9020-633ed77bcfe1"
        },
        "item": {
          "id": "080eb54a-3ffd-4d40-9654-11abb947e770",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0df6b057-af5b-45f7-8356-cbe5ee20c924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59813e79-b2d7-4bcc-b719-168b6926767d",
        "cursor": {
          "ref": "07162d7d-b8ea-4955-af38-e8004692ec04",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c1b91830-336b-435f-8266-26e5b686471c"
        },
        "item": {
          "id": "59813e79-b2d7-4bcc-b719-168b6926767d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c59f87f2-217b-42b5-98cb-996810380c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167f13c6-49be-4018-83ad-7a7f9b7c8530",
        "cursor": {
          "ref": "ddc232dd-78be-429e-9cc7-4d0e94566f0b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4e8318d8-3de8-4ff1-9554-d240393bab4a"
        },
        "item": {
          "id": "167f13c6-49be-4018-83ad-7a7f9b7c8530",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c15789f9-cf90-4f5e-909b-208c4e7091ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea194b5-a470-4b41-9548-d0e1e4038f8c",
        "cursor": {
          "ref": "06c8be80-cf37-4719-90a0-759dd888107f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4412de94-b699-478d-b71d-2991f6d53fa7"
        },
        "item": {
          "id": "8ea194b5-a470-4b41-9548-d0e1e4038f8c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1fc88918-0068-4b3e-ba0f-7ea2f58de407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9406f4-b58a-4075-84b3-028921896dec",
        "cursor": {
          "ref": "7aa70594-5bc3-4b7a-a0a3-1212ea403631",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "80207208-022f-4a15-a4a5-113b5cd6c2cb"
        },
        "item": {
          "id": "4a9406f4-b58a-4075-84b3-028921896dec",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d706246e-4fdf-4a9a-b3c1-2ac93afed1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73790342-1877-41bb-ba6a-e3677602af15",
        "cursor": {
          "ref": "f9df6a6c-af2f-4e8a-afbc-634c2faa0842",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8f661872-ba49-4929-9f8f-d611d7443598"
        },
        "item": {
          "id": "73790342-1877-41bb-ba6a-e3677602af15",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "961fdb53-550d-4d8d-a4bb-266e5da5a1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba2b46c-5bcb-4e2a-aa1f-e16132e0d756",
        "cursor": {
          "ref": "ee7763d1-914b-45c2-b201-2cee73d3017c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4e8c0d2b-5081-4ec3-a5fd-c81dd055de46"
        },
        "item": {
          "id": "8ba2b46c-5bcb-4e2a-aa1f-e16132e0d756",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ee796e6b-79aa-4e46-9066-6c038dad605d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395cc533-b7b8-49b1-8389-481c990530fe",
        "cursor": {
          "ref": "a4046b47-6638-476f-a588-c8c02961c1fe",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "be59bbb9-e938-41ab-bd9d-edfc72a39bff"
        },
        "item": {
          "id": "395cc533-b7b8-49b1-8389-481c990530fe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fed7bb94-c2ca-47d6-96d6-71e2d8604e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3b2c99-9ec4-4f72-be61-9477266e7be7",
        "cursor": {
          "ref": "1951614d-1cb4-42ae-9627-968e4f4c1569",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "515ffc80-8a20-43ef-8b76-5193e4393bbe"
        },
        "item": {
          "id": "ce3b2c99-9ec4-4f72-be61-9477266e7be7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "adc3bc3a-d454-4e0b-be66-0b0a0f871579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75256957-ff32-4680-8953-5e4cb0775f53",
        "cursor": {
          "ref": "1a08e84b-c457-47ae-8d19-6e0e71e3b0ee",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d12db61b-b927-4f8b-a122-040bc5122739"
        },
        "item": {
          "id": "75256957-ff32-4680-8953-5e4cb0775f53",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e6c6d9ea-ff14-4c89-9053-1693a9b33b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac6cfd7-d307-4a47-9983-16274d4d7257",
        "cursor": {
          "ref": "2bf39643-12cb-4d65-8d58-07c1fae2eb0d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a7ad9747-4d7f-43d2-8633-35e5900a695d"
        },
        "item": {
          "id": "bac6cfd7-d307-4a47-9983-16274d4d7257",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "eaaf62de-ec03-44a3-b8b8-c53e72cd12a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034d3ffa-697b-4d4e-adfa-7fb209f22c89",
        "cursor": {
          "ref": "7922d53a-d685-485b-a2ea-ce7cbc754696",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ef5ef6e6-7cab-4770-980f-bf3e2e16472d"
        },
        "item": {
          "id": "034d3ffa-697b-4d4e-adfa-7fb209f22c89",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fa48526b-f79f-4c2a-8b44-95c4a188fdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704bbc61-b682-4da9-bd51-5a95488b2e24",
        "cursor": {
          "ref": "32daa153-531c-4cc5-a6c1-ff043ad1db56",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "57d450c7-c4b4-48b3-afa0-9cba20a090ac"
        },
        "item": {
          "id": "704bbc61-b682-4da9-bd51-5a95488b2e24",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1510b671-b9a3-47da-a270-dbd004b63e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa20904-bf87-4d48-b820-47719b540aaf",
        "cursor": {
          "ref": "dddf4e7b-1ff1-451d-9241-4dd8d27d3330",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "87570c47-da8d-4cd5-9ed8-65cdae202293"
        },
        "item": {
          "id": "0fa20904-bf87-4d48-b820-47719b540aaf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d9f891c1-ed1f-4b20-b3e7-331a27e0acf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690ac1bb-12a5-48e8-b43c-e04b8cd2bab5",
        "cursor": {
          "ref": "0382301e-3b3e-4c46-8b7f-5217403d2519",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "684664db-5d2c-4458-b724-f04a60e3ab3a"
        },
        "item": {
          "id": "690ac1bb-12a5-48e8-b43c-e04b8cd2bab5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f0b09372-5430-46b2-a5f8-bdb8e95a0947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b814d05e-281b-44f7-81fc-e5e73397c692",
        "cursor": {
          "ref": "669a92ca-160c-4283-9eda-6ad8980013c2",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "473b38b8-960a-46b7-92d5-cba556aadeb9"
        },
        "item": {
          "id": "b814d05e-281b-44f7-81fc-e5e73397c692",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "81058221-471e-491e-8971-70680f76d22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748c55b6-7a60-47c4-896f-b5d5e116edaa",
        "cursor": {
          "ref": "3bc689b0-0c50-48d7-bac8-50af9529d248",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cd21c053-e883-46f8-bbf0-5674975f690e"
        },
        "item": {
          "id": "748c55b6-7a60-47c4-896f-b5d5e116edaa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d28501df-aa80-4458-a90d-96b73b09ee86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a28a21b-0ac1-412a-9bc0-30b09bdf03f1",
        "cursor": {
          "ref": "7eaca242-e881-4d58-ae1a-0709da579c40",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cddcd901-2dea-498f-a8d7-9cb0c3aa0420"
        },
        "item": {
          "id": "4a28a21b-0ac1-412a-9bc0-30b09bdf03f1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3f88c6b6-4643-45e6-b3da-80d00773278c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625d7a6f-674d-4344-9545-35b19f754d7c",
        "cursor": {
          "ref": "43d59f92-bd77-468e-b389-bd98af3c81f0",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "55ba2d33-91db-4bed-aeff-1b968c927c5a"
        },
        "item": {
          "id": "625d7a6f-674d-4344-9545-35b19f754d7c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fe8c8712-41f4-49b0-86ce-62d878c3da0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9059c5d9-de35-4af7-8b38-8cdc9542cb38",
        "cursor": {
          "ref": "a87d9001-d60b-4f82-ad0f-da75b8cfabac",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4c96ac3e-44a6-45f1-af12-acb621964305"
        },
        "item": {
          "id": "9059c5d9-de35-4af7-8b38-8cdc9542cb38",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "52ba8acd-1ac0-404f-92f8-629e8bf0ebaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0299be48-4633-4785-a364-22b686cc323b",
        "cursor": {
          "ref": "4ac35280-140d-4427-94a1-548c3b48ab8f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "58021188-2431-4386-8916-04202ac4469a"
        },
        "item": {
          "id": "0299be48-4633-4785-a364-22b686cc323b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9714e3f2-97ef-4ee1-bde3-ef8e9372d700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ef2180-0dad-4ae1-bfec-968683829038",
        "cursor": {
          "ref": "25660fb1-2787-4174-af1e-77c163d401b9",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6ef70e67-e4c5-41d0-a3cb-1a68e9d565c1"
        },
        "item": {
          "id": "87ef2180-0dad-4ae1-bfec-968683829038",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b567fabb-4a26-4981-a988-ca6caee24178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f264cb5-63fc-4338-8c00-6bf384af277f",
        "cursor": {
          "ref": "e5715553-d026-4e05-9b2f-bcb1caf6ea2d",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b216b630-7862-4638-84cd-44e3366498c3"
        },
        "item": {
          "id": "9f264cb5-63fc-4338-8c00-6bf384af277f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3aa36d4a-9a88-4a15-8fef-eb06990afa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88b220d-9043-4142-a9bf-a30ab8655509",
        "cursor": {
          "ref": "1a4df063-0851-4c28-ac0f-2379b7f4d1a2",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e010281e-735d-4bab-b89b-e7d0ea449c62"
        },
        "item": {
          "id": "f88b220d-9043-4142-a9bf-a30ab8655509",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3c8c05b0-1b70-4c2e-872f-74eb6c31aabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfffb91-94d8-4244-b42a-dd52a23946ea",
        "cursor": {
          "ref": "6858f1c6-3e74-48a8-9608-c69695ae4703",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9ac098be-e4f6-46f5-ab3b-ef6f1d7b4e62"
        },
        "item": {
          "id": "0bfffb91-94d8-4244-b42a-dd52a23946ea",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9ea0d9ed-b162-4b68-bb9a-241252efdef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cd2854-41cb-452e-9f92-f91dad2924c1",
        "cursor": {
          "ref": "e03aa344-805c-4081-a812-c2d86baf5239",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "212d8e42-4a38-4ab7-ab5a-8afa6a44e3ea"
        },
        "item": {
          "id": "e8cd2854-41cb-452e-9f92-f91dad2924c1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "db5edfca-3344-4eaf-8034-33810ee0d697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72e20f8-5140-465d-b2e2-e502a1b0a808",
        "cursor": {
          "ref": "b33d4fd6-8ccf-4fc9-aeff-61f279d102ad",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "600b7bf4-5cb5-4e05-abc0-e8ab0beb5db4"
        },
        "item": {
          "id": "d72e20f8-5140-465d-b2e2-e502a1b0a808",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "00ecb821-064f-415c-b07b-53969c3ab827",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1b9b73-f445-416b-87e2-4f174c911a2d",
        "cursor": {
          "ref": "176a325c-9b74-46c9-ad1c-5b614b5cf42b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f56ee8b6-c482-48f4-af5a-6b739802d5fd"
        },
        "item": {
          "id": "5f1b9b73-f445-416b-87e2-4f174c911a2d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e65d62c9-0bd2-4fca-8b8f-75521f822ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8be94ab-1d5e-4dcf-89e1-dc90d0195dfb",
        "cursor": {
          "ref": "1a62e03f-e18d-4369-809c-f386a734d6c2",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "82135a29-5b5b-4b29-8be8-019e1dc5a119"
        },
        "item": {
          "id": "d8be94ab-1d5e-4dcf-89e1-dc90d0195dfb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d3c31177-4037-404f-bfd9-d750206dcfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae5d50b-4054-4c54-ac57-a131fa89e6ec",
        "cursor": {
          "ref": "95411da5-c0ca-4d3b-94de-9503bf80dde8",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "571d4cdd-83f7-44d9-b693-6284a619dd5b"
        },
        "item": {
          "id": "2ae5d50b-4054-4c54-ac57-a131fa89e6ec",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "61627c48-384a-4c25-9cbb-3d3c603bbac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0ca4b2-3290-492f-82d8-5512ce12254f",
        "cursor": {
          "ref": "17e51451-a96f-4cc8-bf3b-3fc2d49fcbfc",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "610c8bff-67c1-44e9-9dbc-02352f020b06"
        },
        "item": {
          "id": "bf0ca4b2-3290-492f-82d8-5512ce12254f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "881772b7-ef3d-4b74-a067-5997226f8723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f7950a-91d1-4d6b-8d05-646dc9f0f65f",
        "cursor": {
          "ref": "38c34743-d0a7-40c1-9bae-38ff919dbcdd",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5ec8212a-45d6-4b20-8a46-5a532d74aeb0"
        },
        "item": {
          "id": "b2f7950a-91d1-4d6b-8d05-646dc9f0f65f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b88d17bd-dc08-44b5-893a-423ffe7050c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ef15a4-379e-4b7c-87f0-2def0c04b158",
        "cursor": {
          "ref": "3fa62700-4c05-451a-9dd8-cec56741581b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "37ffbe7d-3c24-4875-ad85-cea29cc80590"
        },
        "item": {
          "id": "a3ef15a4-379e-4b7c-87f0-2def0c04b158",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "08252f50-357d-4df6-ac9a-a406dd650705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e62b0c-e753-4909-ab82-55a097c792f7",
        "cursor": {
          "ref": "108b8478-fadd-41db-a284-6217c2cb0560",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "adb5fa80-e906-4187-b864-2891d0715841"
        },
        "item": {
          "id": "f5e62b0c-e753-4909-ab82-55a097c792f7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2f7c5e3b-8e5d-4798-b3a7-118b5672145c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe8d3a9-10de-49df-b1e1-7984fa046d89",
        "cursor": {
          "ref": "c2d5d4de-7994-418c-a47f-ee2f63f2586b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d7eb429c-5fc1-4c7f-a207-a014a5806ac7"
        },
        "item": {
          "id": "4fe8d3a9-10de-49df-b1e1-7984fa046d89",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bc5ab999-a2b5-4770-ac92-f9d9d1b59ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de36b5c3-d46d-47e1-a772-7bdf8331ac96",
        "cursor": {
          "ref": "9c4e3f53-207e-4fca-bb58-19a725189ca1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "386408fb-fa7a-4095-a167-b23264d101e9"
        },
        "item": {
          "id": "de36b5c3-d46d-47e1-a772-7bdf8331ac96",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a7596eab-812a-4548-ba49-3ce7098920be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1fa123-85ae-46eb-9561-500e9d75767d",
        "cursor": {
          "ref": "d30d5a78-11fd-4201-9e90-8c9e33ce74da",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f6923997-fd21-4438-b3fa-8a3c5d2b113a"
        },
        "item": {
          "id": "6c1fa123-85ae-46eb-9561-500e9d75767d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "56820205-28f4-4a35-95f7-bfdc578f0df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e3c48e-599a-4a11-9d1c-7d0c3fce7270",
        "cursor": {
          "ref": "c3a2a5d8-3f83-4e90-9746-c9d87e6c7afb",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "78dc6baf-ab42-4882-8f16-58fa321dba7b"
        },
        "item": {
          "id": "68e3c48e-599a-4a11-9d1c-7d0c3fce7270",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4bdb3bdc-8337-4556-b776-06984229acb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ddb79b-91c3-47e8-8798-b82d10873185",
        "cursor": {
          "ref": "6c4e99a3-3112-4271-b0f4-24656bff3656",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5e1e2982-e671-4229-85e2-e2f0198527af"
        },
        "item": {
          "id": "d4ddb79b-91c3-47e8-8798-b82d10873185",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4bc407a8-5ad4-4b3f-adcd-756379d5188f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb4954e-e3aa-4a11-8bbc-8d658ed773b3",
        "cursor": {
          "ref": "0bc3b7cf-341f-40d7-83e8-3ab88b17161f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "28e47269-aa9e-40e7-bd4c-152914f769fc"
        },
        "item": {
          "id": "feb4954e-e3aa-4a11-8bbc-8d658ed773b3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eecab1d7-95a0-4466-86b0-517a5aad79c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dda8cf5-604a-44fd-a8fd-f808f2e8165b",
        "cursor": {
          "ref": "d4d4df72-8b9c-4a0f-ba35-e3bb08006a97",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "98e794cf-3af8-410f-9190-18afb50e1dba"
        },
        "item": {
          "id": "6dda8cf5-604a-44fd-a8fd-f808f2e8165b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "15d42997-818f-4e65-afca-cb549edd7c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef77be79-4300-43c0-bf2c-959c76df87be",
        "cursor": {
          "ref": "95719733-848a-496c-aab4-7830b1b73692",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ed94a005-74e9-452d-b4d7-f6c4fcd00c2e"
        },
        "item": {
          "id": "ef77be79-4300-43c0-bf2c-959c76df87be",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0c96623b-08b8-4b2e-8cad-78c58b2157bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fe7cb6-c699-4a7e-934d-cf129b60726e",
        "cursor": {
          "ref": "9d507e04-c32c-4b39-bcd9-b1ef7d0a61fd",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4f580e7a-b8c0-4a52-a35a-a33d245a47c7"
        },
        "item": {
          "id": "46fe7cb6-c699-4a7e-934d-cf129b60726e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5caf5c9e-8465-4849-8f2a-5a5c70f9328c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad0be1a-faed-4f27-a2da-de95be5b12b2",
        "cursor": {
          "ref": "f72da2d2-7787-4273-aee0-4d1dc7cde4c2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4c064088-2ace-4ed5-b091-a8def21f09d1"
        },
        "item": {
          "id": "4ad0be1a-faed-4f27-a2da-de95be5b12b2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ef41e3c9-d1bd-4e0a-8191-b1346c51c5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e76ee1c-fab8-452a-877e-91dd7b773e5a",
        "cursor": {
          "ref": "00b53382-dae6-4942-92b8-d9511f50e6aa",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "39e9d327-8f18-4a13-a7a7-283c3e8e2297"
        },
        "item": {
          "id": "6e76ee1c-fab8-452a-877e-91dd7b773e5a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9bb19461-15cb-4dba-b80b-4a108d84edeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e757cbf1-5182-42d9-bea5-9bd9a954e90a",
        "cursor": {
          "ref": "b6fe2353-1f0a-4daf-8566-355196dc3253",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f0b396a2-8456-488f-93b7-3eff841c56d1"
        },
        "item": {
          "id": "e757cbf1-5182-42d9-bea5-9bd9a954e90a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cc4553b5-ffe8-40da-9200-794fe3f23c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820cb4c1-9d0e-4a81-afd3-d389d11749b1",
        "cursor": {
          "ref": "41e3fefb-3366-49a7-b489-ab1f5b2c3035",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b4f70630-8fd9-457f-a274-a93a1d655ac9"
        },
        "item": {
          "id": "820cb4c1-9d0e-4a81-afd3-d389d11749b1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f2e83e56-333f-4bbc-be2d-e3115442bd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcbdb8e-0bfe-42e3-a2f3-37cde5eefbd4",
        "cursor": {
          "ref": "33fa7f6b-fd1a-47a9-ac2a-2b3a4d6def91",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2354f8df-900c-436c-bcc2-3407606353b6"
        },
        "item": {
          "id": "7bcbdb8e-0bfe-42e3-a2f3-37cde5eefbd4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "60ba6238-53c2-431e-bdfb-93c3079805d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04653a87-e89f-45dd-95f6-0ebfda6d7f9e",
        "cursor": {
          "ref": "894e7c63-f183-42c2-bf97-78bd923160a1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e6d5e6b3-8ecf-48f0-9ad9-97dce6024f27"
        },
        "item": {
          "id": "04653a87-e89f-45dd-95f6-0ebfda6d7f9e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6619c606-bd04-4f75-96b5-473909af1022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd046355-f62d-4324-bcbc-ff29381844ad",
        "cursor": {
          "ref": "f58928a2-6df7-49b2-b9c8-dd3683df85d9",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5512e3e7-6037-4884-848b-2f571a8668ce"
        },
        "item": {
          "id": "bd046355-f62d-4324-bcbc-ff29381844ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c29ea8c1-7d6f-41fd-a3bc-389de13856b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a248d3-5378-4916-a7fb-26781ca009d7",
        "cursor": {
          "ref": "7ac65cc2-40eb-4776-bbf9-d3a35f1ec16d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4d6b9ddf-1027-43dc-8f75-956720245722"
        },
        "item": {
          "id": "e3a248d3-5378-4916-a7fb-26781ca009d7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ab03fdaa-b99c-487d-a621-fd051abccc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0363f185-462f-476e-bad3-b71282c705b0",
        "cursor": {
          "ref": "5e269f06-c45c-4dc6-a8bd-7aace86a7692",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3965d9c6-d7f8-4b7c-a94a-5f5a7008a60a"
        },
        "item": {
          "id": "0363f185-462f-476e-bad3-b71282c705b0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e34e2895-1d89-48ea-b460-41ef13fff5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b115d7b8-0a7d-4b0e-a2b5-65ea2e2460ce",
        "cursor": {
          "ref": "a4b09e51-43f7-4036-a247-5c2a150e704e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "23f6c447-b300-4257-a6ca-5e0c6e4bbf18"
        },
        "item": {
          "id": "b115d7b8-0a7d-4b0e-a2b5-65ea2e2460ce",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a6a9d2d2-d2ab-4253-9122-34dcf918e052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf782da-1164-4051-87d7-abeee69c2042",
        "cursor": {
          "ref": "dd20893d-0e61-435e-b678-44849f3e237a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b7ee8510-27f0-4710-9712-c2139b180481"
        },
        "item": {
          "id": "fbf782da-1164-4051-87d7-abeee69c2042",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8a5a3bf6-9096-47dd-8268-e40e66fa4973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8f6e2c-f0fa-4312-b4ea-4bb1f6d87802",
        "cursor": {
          "ref": "3f735b21-fa8c-4df2-bf35-705822b2b44f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "250ba1c1-8764-4f95-94f2-84fc0f89fe6d"
        },
        "item": {
          "id": "0f8f6e2c-f0fa-4312-b4ea-4bb1f6d87802",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7632b1ae-c90f-4103-acae-7dcc2ac74471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb48df3-351c-4a0e-8581-f917d165749e",
        "cursor": {
          "ref": "a44003f0-0ef0-4325-a1f2-1f6eb0c8cd1b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f7b01a65-f9db-43ba-a900-ef0c1d547c80"
        },
        "item": {
          "id": "beb48df3-351c-4a0e-8581-f917d165749e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "abc8510a-f763-459e-b3ee-a0389c9943b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d959ff38-5398-49ed-853e-417584ed12c3",
        "cursor": {
          "ref": "7a9be0c5-92b5-4522-b76c-bdc4302c321e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3a4c7bc8-45f4-43db-8ae9-acf6dfabaf96"
        },
        "item": {
          "id": "d959ff38-5398-49ed-853e-417584ed12c3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c155bdd0-432a-4010-9e9f-8a77a47b8c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99531781-210f-48e3-b339-cda641a264e5",
        "cursor": {
          "ref": "fc1769de-81d3-4a7b-a1dd-c8803f1a1293",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7b34ab4b-c44b-4770-b2ef-317a7487bc35"
        },
        "item": {
          "id": "99531781-210f-48e3-b339-cda641a264e5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a984d40b-caf2-4058-b94a-0bcc975032b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ce83dc-ee1d-4ca7-8f13-2e198737f314",
        "cursor": {
          "ref": "cbd38840-cdf7-4a49-a9cd-64bcd2f67e9c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c8f38419-06d2-48d1-93d8-5778d74a12d4"
        },
        "item": {
          "id": "f0ce83dc-ee1d-4ca7-8f13-2e198737f314",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dd289fbf-2efb-46aa-898c-71b9afc51eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2c1fa5-73e5-4d5b-91ae-43ee45cc7b70",
        "cursor": {
          "ref": "9c1db839-d510-4564-9093-f843dffad794",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cdad8b55-d2f0-4b3f-8de5-bf173f2abb5b"
        },
        "item": {
          "id": "ea2c1fa5-73e5-4d5b-91ae-43ee45cc7b70",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0a7e2525-8caa-408a-a0ef-348e7b62b0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdecb860-8d8e-4812-bb1f-4ee74506bb9c",
        "cursor": {
          "ref": "1c327fb3-1f5d-4f42-8b33-63347b4df735",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "68058054-e9d0-4699-a26d-7583ae61cb2f"
        },
        "item": {
          "id": "bdecb860-8d8e-4812-bb1f-4ee74506bb9c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f403aa3c-bb7d-40a2-9aac-0d531e3f93be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75ff17e-695a-4225-a4fd-6ab71370b30d",
        "cursor": {
          "ref": "674d0859-c2e3-448e-8e18-e3d4b5729680",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dc851d2d-da8c-4186-8152-45d2a417c7f0"
        },
        "item": {
          "id": "a75ff17e-695a-4225-a4fd-6ab71370b30d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bfa0ffef-b561-4bcc-a816-0ddf21f4e1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a75fb32-eef0-47c2-880c-d80ff4826a86",
        "cursor": {
          "ref": "08496813-dcdd-4e18-b720-cd1afc7005c2",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2d0cbbe3-f280-4f69-9e40-df1301487c23"
        },
        "item": {
          "id": "3a75fb32-eef0-47c2-880c-d80ff4826a86",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "63fba91e-96f8-4b30-a870-2d95e07cbc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df96c4ad-934c-4de4-b38d-fdd7c5b5e726",
        "cursor": {
          "ref": "78933947-3b3b-4664-ab40-d23da9b37432",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cb8c9dec-d1b7-4151-b03a-b5fea3a32a24"
        },
        "item": {
          "id": "df96c4ad-934c-4de4-b38d-fdd7c5b5e726",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "208d2233-b4f3-42d5-bdaf-ac6954b57b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5409d218-d677-4c2f-a9e6-54c8d0302f05",
        "cursor": {
          "ref": "30d92712-de52-4c50-9f10-c083f0803391",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3bc30d4a-e6c4-4754-92f7-94e7868853f4"
        },
        "item": {
          "id": "5409d218-d677-4c2f-a9e6-54c8d0302f05",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3627716d-b365-4455-8b44-a3b7a16563a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f300b7-2c34-4639-b6e6-06624399e895",
        "cursor": {
          "ref": "05e4215c-8635-463e-bab8-5379a9ab56b0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "87409196-49e7-4340-b1d0-ee544b7470a2"
        },
        "item": {
          "id": "f5f300b7-2c34-4639-b6e6-06624399e895",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e91154cb-da61-41f9-a255-b3b267c24abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9338fe2-403e-488b-ab53-8e599055c80c",
        "cursor": {
          "ref": "49706658-bca0-4c39-9923-374c11f72ad5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9f34e9fb-17b0-4879-9dff-a2723044f129"
        },
        "item": {
          "id": "e9338fe2-403e-488b-ab53-8e599055c80c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1b7aac4e-90d5-4c55-b258-96584d836332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5063d7af-d6b1-4d52-8376-62550e0c3056",
        "cursor": {
          "ref": "f78cecf3-b725-444a-9cda-adc134e954ce",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9442e3eb-d513-44c8-a27f-c5842f9c7590"
        },
        "item": {
          "id": "5063d7af-d6b1-4d52-8376-62550e0c3056",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dbb6ef3f-1094-49a5-aaa7-71b88fe72ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3d0ded-e62f-4afd-9e74-0255b36a4960",
        "cursor": {
          "ref": "b402ef57-2902-4a6b-a5c6-39e9db848971",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "41700f42-1026-4fa3-8956-b6880882deb8"
        },
        "item": {
          "id": "eb3d0ded-e62f-4afd-9e74-0255b36a4960",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "79d92442-27be-4aee-9a16-ac52139d2b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334f8c78-da06-4c0f-a949-858adbfa76ae",
        "cursor": {
          "ref": "7e807b77-ac79-4001-beb5-216bf81c74c7",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3dc17802-0a38-42c8-ac15-a088ba5aad00"
        },
        "item": {
          "id": "334f8c78-da06-4c0f-a949-858adbfa76ae",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ab06833b-bf91-47f3-b21b-cf08580d900d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9319ccfe-77ff-44a3-bf7e-c1f31af7f127",
        "cursor": {
          "ref": "cf16ef84-6774-433d-8feb-dc5beef943b5",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e4bac8ef-4b4c-4aa6-aca3-2cc23ae43b4a"
        },
        "item": {
          "id": "9319ccfe-77ff-44a3-bf7e-c1f31af7f127",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d07b4791-67f0-42b8-866d-14e38280f078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67597b3-34a1-4d36-8bfa-9b0c54118398",
        "cursor": {
          "ref": "f8aad5bd-5104-4a14-bfb2-259b24f6696f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fc4b1538-551b-4c90-86bb-4719b5965e4d"
        },
        "item": {
          "id": "c67597b3-34a1-4d36-8bfa-9b0c54118398",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "da560e15-6431-4e29-bf29-550cedaf8747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068442eb-61c4-4894-8e54-7f21acbe5bbd",
        "cursor": {
          "ref": "15fed295-eb57-4ea1-8fd6-7139cf883287",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "aff5fb97-3eb8-48e9-9cec-399935c2f5f9"
        },
        "item": {
          "id": "068442eb-61c4-4894-8e54-7f21acbe5bbd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "44645872-22ce-4e61-b2d1-2565c16a1572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2b5f25-a813-4196-a3db-1207b1a48486",
        "cursor": {
          "ref": "476b1959-36de-4593-80c9-f5709887b69b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e0cd567d-1bb0-4675-afb3-f230db0662a6"
        },
        "item": {
          "id": "ee2b5f25-a813-4196-a3db-1207b1a48486",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "af156282-4b21-4bbd-b400-00763c39b948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c19a78-8734-43e0-9c9e-99a2f96d41cf",
        "cursor": {
          "ref": "3dce14ae-07a4-4840-bb40-65ec03ba454a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "22c5e702-c3a4-4029-b700-aed483b29206"
        },
        "item": {
          "id": "22c19a78-8734-43e0-9c9e-99a2f96d41cf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8c811fd9-ea07-4308-ab1b-3777f98c8b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5ff83b-e071-4a7c-abbb-c0dd9430b4ef",
        "cursor": {
          "ref": "4184fd00-96c9-4b56-be0a-88b5ba6a995c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b9461a1a-0291-4d38-a5e6-f23f779f29d1"
        },
        "item": {
          "id": "6b5ff83b-e071-4a7c-abbb-c0dd9430b4ef",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "272fdc0c-18ca-40ab-8def-cdebdca92423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec923df7-62dc-417b-ae56-99a86ad6a370",
        "cursor": {
          "ref": "a167eb9f-3c34-486c-aec3-f928c504077a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c230e2e0-94d3-4fbc-a4ae-17e85f8358f8"
        },
        "item": {
          "id": "ec923df7-62dc-417b-ae56-99a86ad6a370",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7a41c528-8b2c-4dac-b580-2368c502e129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1839a1c0-37d8-49f3-a09b-7fd8c096c79a",
        "cursor": {
          "ref": "276a923c-ab33-45fc-9b26-4ebf6897b9a8",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8e1655b1-41f2-400d-a02a-49dc7fbf7513"
        },
        "item": {
          "id": "1839a1c0-37d8-49f3-a09b-7fd8c096c79a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "71b71752-5947-48fd-b9cc-018f6176ee98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05d9032-2a11-404c-a337-0827bce55ae7",
        "cursor": {
          "ref": "0b1b27ec-73d9-4cfb-8b42-a7aaf676663f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cea8594d-3397-4558-88f9-99b97de45071"
        },
        "item": {
          "id": "e05d9032-2a11-404c-a337-0827bce55ae7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "054322c4-1826-4c13-ba37-625e96329b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c179a7dc-5705-4b66-b712-0d89c296e7db",
        "cursor": {
          "ref": "80991bc2-88a1-4dc6-bb37-d277ec27c297",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "574de41f-f6ce-4978-8c76-c00eb7b438a5"
        },
        "item": {
          "id": "c179a7dc-5705-4b66-b712-0d89c296e7db",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "89ea1ff3-afad-4ee8-866b-540ba0f11b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d790fa-05b2-47d2-8aa5-81a50e50f564",
        "cursor": {
          "ref": "f8cae587-0479-4622-9d71-29a35f09ef43",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "82b6d21b-9085-4356-9a18-75aae02f67df"
        },
        "item": {
          "id": "c0d790fa-05b2-47d2-8aa5-81a50e50f564",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2bcd7c8b-3a6f-41f5-ba65-d1690bfc4dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da25032e-8331-42d9-bdee-e356ebafa394",
        "cursor": {
          "ref": "02d2270b-2225-4af3-b1d2-6cbe009265a7",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2599b1dd-9bb7-40be-af69-18f2d443aea1"
        },
        "item": {
          "id": "da25032e-8331-42d9-bdee-e356ebafa394",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "84e06413-89f7-4120-9939-58be79b054df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7334c6f7-7eda-4a82-bc66-104a8ca808c8",
        "cursor": {
          "ref": "c475e362-681b-49e5-879e-f5ab1d7b3ed7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f3132238-3de0-4115-b551-102d6c2d5c6d"
        },
        "item": {
          "id": "7334c6f7-7eda-4a82-bc66-104a8ca808c8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d9edddc5-ec2d-4236-b8d9-ec3d652d508d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2092614b-3f8f-4fe3-b55f-1b2ad4f782ff",
        "cursor": {
          "ref": "54b43d8c-0834-4e68-b667-2e6df97c9a13",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "15286bf4-5e33-43a5-a22e-2e66cf0fa380"
        },
        "item": {
          "id": "2092614b-3f8f-4fe3-b55f-1b2ad4f782ff",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5a29ddd5-d44b-4765-9530-00a24e67b841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea4e4a3-cecc-46a1-ab84-e2f577a3d668",
        "cursor": {
          "ref": "ccc899ba-93f3-49c4-8d11-2c91f198d0d7",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d023533c-3976-4890-90ce-a65be9861a63"
        },
        "item": {
          "id": "7ea4e4a3-cecc-46a1-ab84-e2f577a3d668",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "95708ad4-0ab3-4c3c-b5da-1244587eab28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "621f7d75-e896-4621-ba8e-bbbe8a1d2553",
        "cursor": {
          "ref": "6f946663-6e1f-475a-a1ac-fe8f8087e188",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "06f0951d-23cb-4f3c-b91e-21d258ee05b2"
        },
        "item": {
          "id": "621f7d75-e896-4621-ba8e-bbbe8a1d2553",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bb77df5f-5b84-449d-bb61-6ef98d1c3a0b",
          "status": "Created",
          "code": 201,
          "responseTime": 9620,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "70010754-9e78-4c3a-b51c-5b7c88ded800",
        "cursor": {
          "ref": "96496d7f-97a9-4f65-a0dd-ff4ff40914a2",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4626b74e-daa5-4ec6-b158-088e94eefef7"
        },
        "item": {
          "id": "70010754-9e78-4c3a-b51c-5b7c88ded800",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "721d6d57-3977-4209-baf3-e3499e6ea3dd",
          "status": "Created",
          "code": 201,
          "responseTime": 8779,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d0f1d7-0d0d-4819-9753-fc0aca05fd08",
        "cursor": {
          "ref": "f0318b51-330f-4585-b129-42054fd290e8",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cbb2058f-5779-4309-abcd-641d2d45df30"
        },
        "item": {
          "id": "72d0f1d7-0d0d-4819-9753-fc0aca05fd08",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fd61476c-a6dc-472d-96c2-be9cb0e02093",
          "status": "Created",
          "code": 201,
          "responseTime": 9182,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c64a9c-8e1d-4373-aa8b-7e55577d927b",
        "cursor": {
          "ref": "32a12049-955f-4316-ab15-3677a321f5d3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1b184e36-bcf0-4781-af47-6105557b9d07"
        },
        "item": {
          "id": "c9c64a9c-8e1d-4373-aa8b-7e55577d927b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b2d7188c-1db1-4537-8e61-7814eee97ec8",
          "status": "Created",
          "code": 201,
          "responseTime": 8673,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6d19f5-c1c7-4a1e-bc96-3a6517076701",
        "cursor": {
          "ref": "d0f86a31-09cc-4683-a9fc-257ca8fde009",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7875323c-90ba-4331-8900-3843727987d6"
        },
        "item": {
          "id": "5e6d19f5-c1c7-4a1e-bc96-3a6517076701",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "78f3b7f5-2773-4563-ac30-f0cb0991a7ce",
          "status": "Created",
          "code": 201,
          "responseTime": 8634,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-07-01T00:45:06Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-07-01T00:45:06Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ecbfb68f-f4ee-497f-aab7-e3c69482664f",
        "cursor": {
          "ref": "093b4b09-9818-46ac-b3a9-6b2115ed2917",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "856fd2bb-261f-4354-a637-c2a51f75e4c0"
        },
        "item": {
          "id": "ecbfb68f-f4ee-497f-aab7-e3c69482664f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d5ce39ae-14b1-42b3-b384-eaa23e9dc023",
          "status": "Created",
          "code": 201,
          "responseTime": 8538,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad83604a-5912-4d8d-ad4b-60a43ac0920b",
        "cursor": {
          "ref": "5f7faf59-4da2-45ce-8e92-42588325f37b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ea399c59-160a-4229-9c03-1a966a4f09e5"
        },
        "item": {
          "id": "ad83604a-5912-4d8d-ad4b-60a43ac0920b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b83f2d0e-8b43-4594-bbc7-233912593840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d073e2ce-70bf-48ae-9f50-d48c3f582c13",
        "cursor": {
          "ref": "7414f747-1df6-4ab8-9112-a83e903827b1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9d37b6c2-8fb7-4f12-a123-57af79511295"
        },
        "item": {
          "id": "d073e2ce-70bf-48ae-9f50-d48c3f582c13",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1936ba94-a087-4487-9a56-947d38c7ba22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cfcdb6-9fc9-488b-8193-7675da8550c6",
        "cursor": {
          "ref": "e2401b7d-8176-40bd-9def-16dcd3b53bc8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c4ad2488-2f31-484a-873e-a73c07cac0fb"
        },
        "item": {
          "id": "75cfcdb6-9fc9-488b-8193-7675da8550c6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a8201fac-f10a-4cc8-aae6-e02a14940a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009ec683-cf38-4ea8-9e5f-2eb6c9b2c0e1",
        "cursor": {
          "ref": "09657594-394b-4a3b-9a26-18c84888171a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "21cf2a8b-2009-42f5-8ffe-da4512c64267"
        },
        "item": {
          "id": "009ec683-cf38-4ea8-9e5f-2eb6c9b2c0e1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "08baf1ef-53a1-49e1-9041-a7191976b90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c85c410-8589-4b44-8ba0-fdc99e40c25d",
        "cursor": {
          "ref": "24e39453-c596-45b9-97fb-c58d7c93803f",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7a9d9908-a518-4706-89e7-433d74e65355"
        },
        "item": {
          "id": "0c85c410-8589-4b44-8ba0-fdc99e40c25d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8ff06901-5c6a-4b55-b529-bfb09b845009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23d56c3-e147-413e-9dd8-80f079366a3f",
        "cursor": {
          "ref": "ad0e2441-ea7c-4ac2-856b-f9074ee17da2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ab2818ac-5b13-42c6-a010-8819d7a6f1d9"
        },
        "item": {
          "id": "f23d56c3-e147-413e-9dd8-80f079366a3f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eb6b0f81-7894-49e4-8d53-4c3324a08f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c9294f-6609-4324-b833-f7b8180c0142",
        "cursor": {
          "ref": "dd4a9781-6d5d-4cb0-b1ba-89bcb6b90a9c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e7ea551b-ffd1-44d2-a7cd-0dd03d3e20c0"
        },
        "item": {
          "id": "c6c9294f-6609-4324-b833-f7b8180c0142",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "04f19071-f901-4d8d-b947-a2524fb6d35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336f6a59-5f40-412c-9f60-97198691d9e8",
        "cursor": {
          "ref": "2e024658-2476-4d42-86ee-4a1a1f914ddc",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ea7e56b7-a37d-4c79-9bc6-23d93c00f202"
        },
        "item": {
          "id": "336f6a59-5f40-412c-9f60-97198691d9e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a15f270c-02cc-46fc-ad7d-4cd2aaf88e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e01a4b0-6018-4308-bcc3-f83b67ebdbdf",
        "cursor": {
          "ref": "7f170c39-fef4-48b0-bfe7-d13b4e754430",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "209042a2-c7d8-4c5e-ace2-3e4034ce5e05"
        },
        "item": {
          "id": "5e01a4b0-6018-4308-bcc3-f83b67ebdbdf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1d9d962b-585a-4233-9776-f2908c1a5d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb30defc-21f3-4623-982b-0da17d868f3b",
        "cursor": {
          "ref": "5a1b2f29-2579-4500-a530-fd2c28f924bb",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e1bf5d61-e2d4-48b7-a007-dca3d9b94644"
        },
        "item": {
          "id": "bb30defc-21f3-4623-982b-0da17d868f3b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dfbae7b3-2a26-48ca-a71c-4dc6d35b11b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8700e3fc-c2c8-4ef6-ac05-3b032e94e43c",
        "cursor": {
          "ref": "e4128b30-97f2-48e8-aca0-3965a7b0d406",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e6f7a1b9-2b80-4873-b26b-8a3f2361cdf5"
        },
        "item": {
          "id": "8700e3fc-c2c8-4ef6-ac05-3b032e94e43c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "47f5b927-6c5e-4f63-bce8-44ec7d5592e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1247f0f7-15e9-4c45-b73d-47a257e60306",
        "cursor": {
          "ref": "fd0fca8e-1229-432a-b302-4a590c726414",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d4e26e46-9656-46a9-b547-b7385c32ded9"
        },
        "item": {
          "id": "1247f0f7-15e9-4c45-b73d-47a257e60306",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f93e1a24-e9a8-4497-97bd-feca86eb4b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01d6211-e930-468a-9f1f-36c6bfecc50d",
        "cursor": {
          "ref": "ae7823d7-3887-4b2c-a74b-df6b457518e6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "87b37bab-95f2-4231-9daa-3b7840c75aba"
        },
        "item": {
          "id": "a01d6211-e930-468a-9f1f-36c6bfecc50d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4ffcee98-d416-4eb3-a4ca-743052781630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abd8088-aa9a-4cc8-a1ec-f1d9ae2e8e81",
        "cursor": {
          "ref": "68386fd9-9899-41c7-bb4e-16567fcbac1e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "69548e96-abda-4e9c-a7f2-79c184c555d6"
        },
        "item": {
          "id": "4abd8088-aa9a-4cc8-a1ec-f1d9ae2e8e81",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "93ffe843-2d4d-4ecf-85be-bc371dcf85b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da09e4af-e874-4a9d-8658-17f68d4699a0",
        "cursor": {
          "ref": "aead24e1-5f2e-4c36-90b8-90d87076ca36",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "639a50c5-98be-4aa2-8474-1bf8e20340cf"
        },
        "item": {
          "id": "da09e4af-e874-4a9d-8658-17f68d4699a0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "40c39954-a2fd-4f7f-8a95-afb79af352e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda6ed17-bbcb-4fa3-bde0-c83e4170cdac",
        "cursor": {
          "ref": "404f4180-f2fc-40db-b807-734f40351b50",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9aa65bf8-944c-46f9-b729-7dc87bacbf72"
        },
        "item": {
          "id": "bda6ed17-bbcb-4fa3-bde0-c83e4170cdac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "21c3e7c1-ef8b-4582-a724-0b5d8d3906b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be2308d-43f5-4ab9-9347-a5a0eff413e7",
        "cursor": {
          "ref": "e02828ac-41c3-4f6f-9710-9e2c54281546",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "de1e838d-08ba-4d1c-bfae-041ff96d6f30"
        },
        "item": {
          "id": "7be2308d-43f5-4ab9-9347-a5a0eff413e7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c0380a67-90bd-4135-961e-a93f8c9a12f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10957644-0dad-436e-8853-9e0b36ab050a",
        "cursor": {
          "ref": "c4601098-e624-4cbd-a534-455616f9892c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8f6baadf-bfee-4527-9852-170cbff31756"
        },
        "item": {
          "id": "10957644-0dad-436e-8853-9e0b36ab050a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c74e375f-b51d-4c70-b6b9-7b8508f164e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70afb1e-c1fa-4cc0-aac9-613fa2378d9f",
        "cursor": {
          "ref": "88b8e40d-320f-4a11-8148-e7e875f5339b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ed250df5-4945-429d-b132-9a41f9e86674"
        },
        "item": {
          "id": "a70afb1e-c1fa-4cc0-aac9-613fa2378d9f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "728f52a8-8b4f-4ef7-856c-cdc5d047b989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610e2640-360d-4173-a1eb-6ae4cbab8291",
        "cursor": {
          "ref": "ee5eaf7f-a3e0-4d75-9d58-a1ab34c121d3",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "869095c9-54a7-4c2d-9649-37f22325385f"
        },
        "item": {
          "id": "610e2640-360d-4173-a1eb-6ae4cbab8291",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3e3cd6bf-a001-4723-a47b-42df099a8988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d8d5d9-f8d6-4db4-b33e-8fadc1535612",
        "cursor": {
          "ref": "76780798-b75e-4bb0-9909-bba3ec87d61e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c4096fb7-f88e-4c00-ae3f-62efe0f78190"
        },
        "item": {
          "id": "d1d8d5d9-f8d6-4db4-b33e-8fadc1535612",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "25bc68b1-8efc-4296-b4c8-0004523f05e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2689bca-acd5-4ee4-a785-038aa01fd8ee",
        "cursor": {
          "ref": "ef780d07-a3bf-4a4d-b663-5b2171d6aa3f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "86aed912-dd1d-4e6a-8bc4-51160173b3f8"
        },
        "item": {
          "id": "f2689bca-acd5-4ee4-a785-038aa01fd8ee",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "72e83ff4-3920-4760-aca7-eb7a8f68f11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e2feea-1a9d-4b56-9c28-5d051c65ba9d",
        "cursor": {
          "ref": "f0f5b544-56e9-4d8e-8bfa-8490d58d3064",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7cb8a8f8-b393-4e1e-ab4c-15b289e89949"
        },
        "item": {
          "id": "40e2feea-1a9d-4b56-9c28-5d051c65ba9d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d6f43d05-fa37-4345-b0be-58baaa3d82d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7546011f-ace4-47ee-8bec-e18b5f6daa84",
        "cursor": {
          "ref": "3a9cebb4-988e-4dc7-bcad-12f0f8bb3049",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d5d5945c-3918-4203-a305-25ba01089a6f"
        },
        "item": {
          "id": "7546011f-ace4-47ee-8bec-e18b5f6daa84",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3f05fc70-ccbf-4559-8a07-8b083d788444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cacbf92-452a-4a5e-aac3-64327d8f2b3b",
        "cursor": {
          "ref": "2fa342b2-543a-404c-b8d4-a712907a2355",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e8fc19dc-a197-483b-9d59-9ecadbafb60c"
        },
        "item": {
          "id": "7cacbf92-452a-4a5e-aac3-64327d8f2b3b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a27136c0-1ba8-4a02-a264-35c6eaf50356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0326335-6495-4e14-b24c-3fe4c1371da3",
        "cursor": {
          "ref": "10f9ca80-ac69-4981-af9e-0b2699e4e302",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "46352c77-f4bd-4506-8e15-4fc9122aee14"
        },
        "item": {
          "id": "d0326335-6495-4e14-b24c-3fe4c1371da3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c9358b9d-1b94-4eb5-a897-271c7c6bc925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099a189a-4dc4-4392-8085-c478d3df5cc6",
        "cursor": {
          "ref": "309f6647-96c6-46b6-95be-181795505032",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4c082440-83ab-4473-afb7-93a1b7613828"
        },
        "item": {
          "id": "099a189a-4dc4-4392-8085-c478d3df5cc6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a79f5114-b71e-4609-b243-ada003c1707b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c194442-7642-41b6-8dc1-b51e9cb96358",
        "cursor": {
          "ref": "54e07a76-43b4-483b-824e-bd6647213b76",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "39cb3dbc-8f58-444c-a30f-70464e56e565"
        },
        "item": {
          "id": "3c194442-7642-41b6-8dc1-b51e9cb96358",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "56f9e7ac-a275-4166-9c95-828594687e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262a1e52-fe4f-4069-8142-51432a123932",
        "cursor": {
          "ref": "2dd58d88-3736-4bb2-ba70-8e5c1cf31f5d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "736811c9-b5a5-4d5a-83b7-5e7045771b4b"
        },
        "item": {
          "id": "262a1e52-fe4f-4069-8142-51432a123932",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "161f303f-92c7-460b-8f71-ba38b52d7b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f73e69-d4d9-48b4-a38c-438740e392c7",
        "cursor": {
          "ref": "90fe2ecb-e13a-4e40-8fc5-64bbaabe371a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "756ece5f-08a8-4222-bb96-ece51d2a40e9"
        },
        "item": {
          "id": "29f73e69-d4d9-48b4-a38c-438740e392c7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b29f2238-d766-4248-9e53-acd0c2a177fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75fd22f-8ce9-49b5-9c73-e6594a107c96",
        "cursor": {
          "ref": "736c5cdf-852c-4ce4-8cc3-e47cc1589c14",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a8ff365a-7a8c-4ccc-b443-c6b4d83beb91"
        },
        "item": {
          "id": "b75fd22f-8ce9-49b5-9c73-e6594a107c96",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b37f9594-e68a-4b90-966d-8126d6ab52f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fab4efe-3526-450d-8c23-2af225a4c3e5",
        "cursor": {
          "ref": "c08c17af-edc8-4316-bf1f-535b3939a15e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b3a51984-e5cc-453a-b855-273cfac7e56d"
        },
        "item": {
          "id": "9fab4efe-3526-450d-8c23-2af225a4c3e5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "82dc6e6a-59b3-4b99-acaa-92e54d12f6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1967fd2f-f61c-4b51-8822-3aeda62b0d2e",
        "cursor": {
          "ref": "447529a9-cb30-4fa8-ac34-f7e36aea3b74",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0c2e2cc2-117b-4126-b1ae-569f38347f48"
        },
        "item": {
          "id": "1967fd2f-f61c-4b51-8822-3aeda62b0d2e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7c187c2b-13b3-4163-82f2-113c025a9d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f03c0d-dbc9-49a9-a34f-c67fe576c63c",
        "cursor": {
          "ref": "20d3f932-51ef-41ca-829c-03912a933b06",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c37e7c2c-f3e4-4dd3-9c3f-0396c3ac3fe8"
        },
        "item": {
          "id": "25f03c0d-dbc9-49a9-a34f-c67fe576c63c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bfeebbb6-f5a5-4a25-bd26-f81a164ec35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9038362e-9d8f-498c-8a25-6d655757df0e",
        "cursor": {
          "ref": "68be5033-fe70-455d-a3bc-926134e149ca",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7c1df7a6-81cf-4f58-93fd-d396e3a8143d"
        },
        "item": {
          "id": "9038362e-9d8f-498c-8a25-6d655757df0e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "061e1228-b9d9-44c1-8b8e-33a35439e929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66f1a11-394c-4d8c-a5a8-924da8aac6f8",
        "cursor": {
          "ref": "8a92f6a4-9378-4eb0-8296-850ac8cedc48",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "89319086-9564-4b12-982c-b508a976025a"
        },
        "item": {
          "id": "f66f1a11-394c-4d8c-a5a8-924da8aac6f8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "04810aee-6fe0-4acc-abfd-fad8493cbeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2840ee7b-728a-4b47-be46-d05595bd445a",
        "cursor": {
          "ref": "71ffc0d8-5e6f-4ee9-a6cd-2ffd494f0120",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "dbf62097-6623-4e78-80e6-eda3c73cb4c9"
        },
        "item": {
          "id": "2840ee7b-728a-4b47-be46-d05595bd445a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b242e354-78f1-45c2-aaf9-3b86ba50c62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a0ea8a-1123-4494-b139-bad33b105695",
        "cursor": {
          "ref": "7ea31c05-3bfc-4ae7-87f9-d9390957ef1d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3ab8bdab-ca40-45a1-98f6-ce7c0b55bbae"
        },
        "item": {
          "id": "97a0ea8a-1123-4494-b139-bad33b105695",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "db56846d-cceb-4ff8-8997-575782b38f7c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ea6ec1-a2ff-4690-a247-d814c1d1ff11",
        "cursor": {
          "ref": "52dc2e77-3024-4c72-8709-8f5025bdc31b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6ec4fedb-e09a-4d02-ab77-1ab4ee3d4f25"
        },
        "item": {
          "id": "f0ea6ec1-a2ff-4690-a247-d814c1d1ff11",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e24a3d29-fdaf-4e15-b694-5e00d7b60351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1744314-93c2-4458-b7a6-fa52b22c5c04",
        "cursor": {
          "ref": "61e7a2c1-500e-44f5-b51f-0878909a84e6",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1ac7404d-a3b4-4b7f-9a6f-ce1b4efb1247"
        },
        "item": {
          "id": "a1744314-93c2-4458-b7a6-fa52b22c5c04",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6862f37b-3c0e-4a2a-997e-ceb59a09757d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68378d83-adfa-473b-9dbc-02ad70af77e3",
        "cursor": {
          "ref": "1c846581-f30c-4654-bd81-b8cdb4bb45f8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d8dbfed4-aaaf-4d8b-957c-1d7c7b6f9a70"
        },
        "item": {
          "id": "68378d83-adfa-473b-9dbc-02ad70af77e3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "615bf061-d2e2-40cf-b086-c34d87ced682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57eae7dd-8bcb-4128-a36e-d3f6ba706b8d",
        "cursor": {
          "ref": "4dd60372-ce18-4ce2-9cc5-ce2f8b4d445e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a1265b41-c6da-47af-88b4-1fd60a2c4ab3"
        },
        "item": {
          "id": "57eae7dd-8bcb-4128-a36e-d3f6ba706b8d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "38265180-4dd8-48ef-8492-1a07aee26c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ecac8d-ffdd-4c55-a0f2-506c060774fc",
        "cursor": {
          "ref": "dae8a243-e872-49de-b436-a647bdf5fa8b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "afb7a9cb-d3a6-4742-b02a-750f519840b0"
        },
        "item": {
          "id": "31ecac8d-ffdd-4c55-a0f2-506c060774fc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "80370f04-6c6a-4923-9c31-300a10855009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24edd81-9b37-40e2-87c0-127548654e4a",
        "cursor": {
          "ref": "c9f78844-e5dd-4864-9ca0-86f56bf052d9",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c98e27ae-063f-4b24-bf53-e92085ba0ed8"
        },
        "item": {
          "id": "a24edd81-9b37-40e2-87c0-127548654e4a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f39094c7-ec6c-4623-88d5-94ef8f8265b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe24d26f-bb3e-4ab9-88c1-6196baedd520",
        "cursor": {
          "ref": "94bb445d-2d00-49d8-9aa9-fdf41411bff6",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5ccf862f-c6b6-4e1a-a3e0-1d4f27374718"
        },
        "item": {
          "id": "fe24d26f-bb3e-4ab9-88c1-6196baedd520",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4baa97bc-990c-469a-8b90-922a38b86751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef360073-53fa-4ee3-b215-5e5d81dc2428",
        "cursor": {
          "ref": "ca94707c-317c-4ec3-a53c-ffd763ea4206",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "551e9128-6e54-49ca-bd0e-ff450d27a895"
        },
        "item": {
          "id": "ef360073-53fa-4ee3-b215-5e5d81dc2428",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "465c89e9-d562-4045-9ce2-7600b2f88a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f4b349-9e86-4a4a-bbbf-178bf833ec54",
        "cursor": {
          "ref": "091213e9-96b9-4e29-a94a-8fb1a56a2ea4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5de86f80-376a-4c2b-ae31-7b6236dbb28b"
        },
        "item": {
          "id": "56f4b349-9e86-4a4a-bbbf-178bf833ec54",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bc96a51f-9f3c-44e5-9adb-6c7b8df2f0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b983e56b-1a4e-4976-93ee-31cd42f8e9d6",
        "cursor": {
          "ref": "ea8fc2ca-d586-4509-b205-3ac19b0725ee",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b8395c46-ead1-431e-bcbd-471934932544"
        },
        "item": {
          "id": "b983e56b-1a4e-4976-93ee-31cd42f8e9d6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c008f3b1-4fda-4b23-bd6d-e9428f7a809c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea726093-5099-44a9-9616-b88855fd85db",
        "cursor": {
          "ref": "ebf5d363-b3db-4c3a-b7e2-e895349de7fd",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "01a7110c-3013-4e74-8faa-5e630c6e96e1"
        },
        "item": {
          "id": "ea726093-5099-44a9-9616-b88855fd85db",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2bf65c77-053d-4e9c-9e22-ff16e61e4cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdbd47f-a048-4cee-8886-2a70abc1c446",
        "cursor": {
          "ref": "713153e3-f7cd-4d49-8be1-ced10295fa59",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "03241fdd-6882-4de4-810d-1b712b3d550b"
        },
        "item": {
          "id": "6cdbd47f-a048-4cee-8886-2a70abc1c446",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "adad5300-9fa1-47c0-b1ef-0e61570164d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315a1922-0088-4a0d-ae16-e6f5a58385a9",
        "cursor": {
          "ref": "b48a20ac-59ed-4c77-9539-79983aea1566",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0494b0a4-9956-480c-9221-f94041c6e7cd"
        },
        "item": {
          "id": "315a1922-0088-4a0d-ae16-e6f5a58385a9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b9023ab7-533d-4138-b0a1-9334291ce4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a321ec15-7e79-44b9-ae78-1cdfaff3c9af",
        "cursor": {
          "ref": "d214e384-918d-4b17-aed8-919a9d60f284",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f1b1d562-93d3-4b11-8cb4-dccff968a62d"
        },
        "item": {
          "id": "a321ec15-7e79-44b9-ae78-1cdfaff3c9af",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "690a7f7c-5218-4f36-b660-df40a62fca46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064f4df8-3a72-48be-a94b-2aa0e31d2332",
        "cursor": {
          "ref": "61c73f64-e04b-4e3a-9699-faf0e3c52d0c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "03613bd6-9c93-4a96-827c-41ff3a0eabaa"
        },
        "item": {
          "id": "064f4df8-3a72-48be-a94b-2aa0e31d2332",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "306d0efa-dce6-4a6e-bf42-ae7530bece24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aed5cc-884f-4e60-8ff5-257ebd34f8a5",
        "cursor": {
          "ref": "8346575e-87b6-418d-aac0-01a2846b5ee0",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b1482ad7-0314-4bf0-8902-4fc8d6dab4d2"
        },
        "item": {
          "id": "45aed5cc-884f-4e60-8ff5-257ebd34f8a5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fb1f6c53-54d0-4702-8fd8-60db10b9570b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f96b3cd-7a12-4100-bd55-10491e101343",
        "cursor": {
          "ref": "41407737-ccfe-4e1f-b272-7e03b0d2c197",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3337b5bf-c4e1-4fc8-a54b-30bfc88a5dd3"
        },
        "item": {
          "id": "6f96b3cd-7a12-4100-bd55-10491e101343",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dc7c61bc-8d9b-48ab-b245-df446aff38d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c27fae-4393-4d8c-9f8b-f765039a3f56",
        "cursor": {
          "ref": "d4aef169-29fd-4c9f-a50b-e245f14e0e40",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6e0f10ce-8926-44d9-96e3-670b20cfe2cf"
        },
        "item": {
          "id": "d4c27fae-4393-4d8c-9f8b-f765039a3f56",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0ab341cc-ff1b-4035-b1b7-7ddc8b84c9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8890b84-6ce1-4e55-af21-dca5195028f9",
        "cursor": {
          "ref": "df05a46f-494b-43a2-940d-cb97b1195cc0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "50090b36-7b37-42e5-81ab-05a9339043a2"
        },
        "item": {
          "id": "c8890b84-6ce1-4e55-af21-dca5195028f9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2ca60509-072b-49c3-bb71-2a4127c9a02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc01bb8-9535-491e-bb5b-4eaa3dd9df5e",
        "cursor": {
          "ref": "8e4012ac-7f30-4c50-a013-e4c83851b7b2",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8e6651f8-1fcd-4249-89b6-23dd86bf9f3c"
        },
        "item": {
          "id": "ddc01bb8-9535-491e-bb5b-4eaa3dd9df5e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c6fb0bfe-0b2e-46d9-a996-048c4d53d4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867d856b-ad8c-42df-9753-25bf30e1e157",
        "cursor": {
          "ref": "ac32b664-b859-4fc8-8511-8a3c190ee7ae",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fc6da224-bcf8-4383-85fe-b2411cf72084"
        },
        "item": {
          "id": "867d856b-ad8c-42df-9753-25bf30e1e157",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "46cf3fff-cede-44f4-88ad-fb090bf81412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a9adf5-ec9f-45d7-98d1-0952d8ca6365",
        "cursor": {
          "ref": "68c6c4a3-f470-4efb-a22f-080057f96a57",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6f0a09ec-8ee3-4cb7-80c3-64312a5bd667"
        },
        "item": {
          "id": "f5a9adf5-ec9f-45d7-98d1-0952d8ca6365",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "31af05f0-8103-481a-b9a8-b551f6d43384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f57bb52-1e02-420a-996e-e1d231e033ed",
        "cursor": {
          "ref": "47293f0e-1a5f-44ed-8e37-92bf404690cf",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c932244a-b2da-4658-9701-e00d6166b4d0"
        },
        "item": {
          "id": "6f57bb52-1e02-420a-996e-e1d231e033ed",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb08cdcb-9352-4a51-9221-0fd5519c9555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a955cc-a010-44c7-857e-d11a9170074a",
        "cursor": {
          "ref": "7c8ae39f-bfff-4228-9b0b-b0e1d86b8622",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ae745306-d411-4ee5-88e9-aef87e7075e3"
        },
        "item": {
          "id": "09a955cc-a010-44c7-857e-d11a9170074a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ed2e5950-2611-412d-ba1f-7fa7bc1ff044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257555d2-b3c1-4e50-98d2-4d69373e9673",
        "cursor": {
          "ref": "cc5f5110-5413-44a3-a8c7-f63cf31bee72",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b6d509ad-5c15-4849-9bf2-12ffe7de0c1d"
        },
        "item": {
          "id": "257555d2-b3c1-4e50-98d2-4d69373e9673",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "065b8e7a-d836-4748-b449-28b86681e529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae81a8f-03bf-4f27-9114-4ca2f715078d",
        "cursor": {
          "ref": "cb87f114-c5d4-4e2d-8bc3-ac2371daa908",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b661be76-9d38-4e9d-87f5-c4f4b4cb003e"
        },
        "item": {
          "id": "7ae81a8f-03bf-4f27-9114-4ca2f715078d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a4ace160-49af-4222-9b52-761b5606c870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291f7a67-72c9-44ce-910f-ef8b08090adb",
        "cursor": {
          "ref": "d0209870-84df-4c07-b24d-e66cb7d5caea",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0b0c4565-303c-4ea2-996e-b9227f0dc596"
        },
        "item": {
          "id": "291f7a67-72c9-44ce-910f-ef8b08090adb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6fafd3be-b2f5-45a8-ba5c-ec34eda00647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ce1602-0bcc-467f-b125-20d0fa8d7f9d",
        "cursor": {
          "ref": "8edf541f-bffe-4b04-9e96-677f0d8d8678",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9b177fdf-e418-477b-9f56-76253addb841"
        },
        "item": {
          "id": "52ce1602-0bcc-467f-b125-20d0fa8d7f9d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "176b26a9-3a6f-4995-ae87-1316a8cd78d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212ba51e-aedc-4f78-9008-95f08c94d644",
        "cursor": {
          "ref": "53d793a4-9708-43ce-94a7-9cc7b5feb118",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2c91484f-4d00-4f23-a047-2518446c61ad"
        },
        "item": {
          "id": "212ba51e-aedc-4f78-9008-95f08c94d644",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "32572279-ecb9-4050-8587-d6d35555840c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb309b9-4d50-488d-9d5d-29907206db31",
        "cursor": {
          "ref": "1350518a-f500-47bb-a3ea-9fc912c3ef14",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f3409621-50a2-43ff-8773-92b1c9683b4b"
        },
        "item": {
          "id": "3bb309b9-4d50-488d-9d5d-29907206db31",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e85158a6-e8d9-4c2d-bab8-6aabbadcb3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaa7599-e3fa-4418-8c78-045441b39e41",
        "cursor": {
          "ref": "2ca55c06-08df-46b2-94ab-536f7f784e67",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0eba97a4-d3d3-40d2-af83-1a4ffd712996"
        },
        "item": {
          "id": "7eaa7599-e3fa-4418-8c78-045441b39e41",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0e0c4658-52ff-4f9a-97d8-7d0941c4d0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3984fd-8cd0-495a-83d2-b22975a3564b",
        "cursor": {
          "ref": "dd8b29c9-b683-4024-ae28-541165d7975b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bc327ec5-4d50-4a61-8c45-85af2b0f69ae"
        },
        "item": {
          "id": "de3984fd-8cd0-495a-83d2-b22975a3564b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7fc631f6-5a05-41ec-bcd3-6f36c97fa823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442e5551-3fee-411c-b3a7-cdea4eb4587c",
        "cursor": {
          "ref": "db0a17f6-b502-4f71-bf3d-43a707cf1530",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7d22bb6a-4a51-42d2-b030-39aef2c9801a"
        },
        "item": {
          "id": "442e5551-3fee-411c-b3a7-cdea4eb4587c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a7df899a-1864-4dd1-980d-23b2e04976fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343fae94-1496-40e5-847f-0aebbc3a878e",
        "cursor": {
          "ref": "130ad4d4-115f-4ef9-8d30-e6c0ffee5217",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "31ed5ed9-f136-45a2-bc4d-87eedf22fd3a"
        },
        "item": {
          "id": "343fae94-1496-40e5-847f-0aebbc3a878e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e6af7847-67f1-4cb5-b3fd-18540f005a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4241f3b7-dd5e-4aa6-a4f1-6330bea644b5",
        "cursor": {
          "ref": "2bf3074b-87c6-4da1-b060-3b53879afde0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fb22c651-3651-4e4a-8fa7-7478e76a7a0c"
        },
        "item": {
          "id": "4241f3b7-dd5e-4aa6-a4f1-6330bea644b5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7bca68a0-7965-4847-bac0-e5d6386b71d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f16a859-22da-4f67-8951-77aa83db6213",
        "cursor": {
          "ref": "fcb85a37-054b-48fc-87b9-19b8f0e1c3b7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3fa5b337-ccc0-4b5b-983e-799486483cce"
        },
        "item": {
          "id": "1f16a859-22da-4f67-8951-77aa83db6213",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "df5b65ff-dab2-4f67-ab69-aed1b84b079f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dada5fe8-16b5-4759-932f-4d71a83f0859",
        "cursor": {
          "ref": "1cd716b5-a508-428a-9c46-a545bcb4e7a4",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0afb81ac-c64f-4827-8532-5f290df30d63"
        },
        "item": {
          "id": "dada5fe8-16b5-4759-932f-4d71a83f0859",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "613c907c-0eba-4e94-8965-4d57eaaf8472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85435e94-3d1f-4631-babd-42534e2a57dd",
        "cursor": {
          "ref": "32b3c394-27e0-4ace-afe7-11d26ca99ea6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "997ddb47-1360-4f7d-a61d-a0435e9c49d6"
        },
        "item": {
          "id": "85435e94-3d1f-4631-babd-42534e2a57dd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ccab7db5-21a6-4ac9-badb-17d7f82933d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961548b4-737a-4164-b451-d5122fe064f4",
        "cursor": {
          "ref": "a6d5c865-a7d1-4a1a-9916-3b80a177a518",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "15ea679d-d43a-47cb-8962-1126df264492"
        },
        "item": {
          "id": "961548b4-737a-4164-b451-d5122fe064f4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c3c6d0c9-7753-470a-9e5f-81c559bc0bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5f27e9-648f-4912-8047-a4fd8628581c",
        "cursor": {
          "ref": "41554ab5-9d64-46f4-b80e-9859f640c980",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4d518b59-b041-4e9e-936c-b2eaff95f53c"
        },
        "item": {
          "id": "ee5f27e9-648f-4912-8047-a4fd8628581c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e4c24da0-660c-452f-b255-aba3ad7ad6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eba44a-2bfe-49f1-b1a3-b80cbab40459",
        "cursor": {
          "ref": "50d16702-9f9e-41dc-8c15-056a740b4def",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8bce2b47-0159-4ec8-be0c-1e20c5083dfc"
        },
        "item": {
          "id": "c5eba44a-2bfe-49f1-b1a3-b80cbab40459",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a76155f4-1e65-478a-9bab-564d32da7c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508b07bd-ea9c-45b7-b8be-8c7dc11bc13c",
        "cursor": {
          "ref": "d1e5c705-d94e-465c-b67a-4df58ab6a0c1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ac76787a-3c74-4e6a-8307-149ed69acac5"
        },
        "item": {
          "id": "508b07bd-ea9c-45b7-b8be-8c7dc11bc13c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f85c92dc-463c-4875-bc16-bfe6cef29804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a406c7-9694-445e-9374-739d8d5c77e2",
        "cursor": {
          "ref": "868001a3-ebea-4b8d-8c27-e11d257510bb",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0c50f341-945a-49d5-bb5b-c4b75274504d"
        },
        "item": {
          "id": "86a406c7-9694-445e-9374-739d8d5c77e2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "97f6e0a8-836f-468f-8d09-5e5d418f412b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab8911b-2795-4c6a-b7ac-656f8b25c58c",
        "cursor": {
          "ref": "e98ae47b-0bb4-445c-80e2-aa4e19d8e7e4",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a45ee79d-3eac-464d-abe3-e448a250355e"
        },
        "item": {
          "id": "aab8911b-2795-4c6a-b7ac-656f8b25c58c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "810519aa-793b-4b98-9f69-39b421c04454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0c513e-559b-4540-91f3-6d4afc3ae34f",
        "cursor": {
          "ref": "cf683188-28e7-4ec1-81c5-f105905a7f30",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fd705e54-dbd4-407a-ad18-ccced4b58f29"
        },
        "item": {
          "id": "ad0c513e-559b-4540-91f3-6d4afc3ae34f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ccbd5f1f-dd4e-4cfd-87ef-ece1d5efa9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5edd3c5-0c8a-487b-aaba-c70e32e102ef",
        "cursor": {
          "ref": "9a3f0060-85e9-4ec7-aef2-25181d434990",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "942bdbb7-ddc8-4496-83cd-fa18f2c10af1"
        },
        "item": {
          "id": "b5edd3c5-0c8a-487b-aaba-c70e32e102ef",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3eed4fa6-0cbf-44ae-b83c-e4dc30c7835b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006980cd-5b93-45a4-8dec-82c87a4a13d0",
        "cursor": {
          "ref": "a96d6c95-826b-4adf-9668-59302829c260",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dc352545-25ce-41e5-b653-ab0243520bbf"
        },
        "item": {
          "id": "006980cd-5b93-45a4-8dec-82c87a4a13d0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9eb8ab61-8bc7-4801-91b9-5613e75d3594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2f800c-1cf6-4732-8533-732920c991ec",
        "cursor": {
          "ref": "0a3a0fdc-4b20-41cb-b4ba-dea56a759e8c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0b3d0f6b-0cab-4108-9de6-6dd82e29301c"
        },
        "item": {
          "id": "8e2f800c-1cf6-4732-8533-732920c991ec",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "03cc9c3b-b8b5-4012-bd01-2cbe747e70b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d1eb3a-1e4e-46ac-bb27-1d58dc98b42d",
        "cursor": {
          "ref": "f207f158-92b8-4772-8245-63e7642e31d4",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c259d399-dd1d-419d-98d7-930cdfb0cb7c"
        },
        "item": {
          "id": "f6d1eb3a-1e4e-46ac-bb27-1d58dc98b42d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "da88d16a-0602-4111-aaa3-b8618c4f3935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ee5e20-f468-4208-a1a5-3e22700f4022",
        "cursor": {
          "ref": "488101ba-4ede-40ec-b207-08b7cb3406a9",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cd652d70-740c-42b8-98f6-cdcf109328a6"
        },
        "item": {
          "id": "66ee5e20-f468-4208-a1a5-3e22700f4022",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fbd414dd-e2c3-49c1-8c81-72285c76f779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8bf862-c613-49dd-8ca3-85133545b876",
        "cursor": {
          "ref": "9d058b77-2a0b-4900-8318-f9e56b7e617a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6b0e5877-55b2-4154-ac24-d82fdee7329d"
        },
        "item": {
          "id": "fd8bf862-c613-49dd-8ca3-85133545b876",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a7196280-f379-4ee9-9e5c-a1ba6b71ebea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0afb776-6fee-4e92-8cbd-7029a9f71cee",
        "cursor": {
          "ref": "754152c7-141d-45b2-af06-f09eade354a4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "90bfd971-5157-4cb0-93d0-ed874dbea1d4"
        },
        "item": {
          "id": "d0afb776-6fee-4e92-8cbd-7029a9f71cee",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8ecea8c3-faf2-499a-ba82-87c673c6fed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b28c578-4cbf-42b5-a980-ddf549f42fe9",
        "cursor": {
          "ref": "6cf60832-a23f-41c2-be92-21f2422ee98f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "905c077b-e3d9-465b-b9d5-c7da0e17b004"
        },
        "item": {
          "id": "3b28c578-4cbf-42b5-a980-ddf549f42fe9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d412f143-76aa-4c1d-971a-81067b9517ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338bb4cf-4e58-4a35-9720-33db0aca3ec3",
        "cursor": {
          "ref": "a597f048-f7ae-4724-98ca-557bc823f974",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6580d3dd-d806-460f-b42d-031f2707a43b"
        },
        "item": {
          "id": "338bb4cf-4e58-4a35-9720-33db0aca3ec3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "247bc3ba-0d49-4cb9-89dc-91e5668ff44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e214b9a3-2d9a-44af-b2f2-0d8a62f9336e",
        "cursor": {
          "ref": "53e1ea14-a199-4bfd-8ccc-75fe0a09c683",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "51bbcb2d-1090-4223-b23a-2f32cbf61d23"
        },
        "item": {
          "id": "e214b9a3-2d9a-44af-b2f2-0d8a62f9336e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bea40c99-0909-4dd3-b5a1-7362ff70b365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe51c37-1105-4664-a106-d4e4199b8b64",
        "cursor": {
          "ref": "aa797010-8dbe-473d-b2ff-94e72a03abc4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7a5e5e2f-91f9-4dd8-8b02-f9f3267ebe1f"
        },
        "item": {
          "id": "5fe51c37-1105-4664-a106-d4e4199b8b64",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e466e425-d98f-4c12-92d9-785ec8bc9c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee45704-e0b1-457f-8131-ae2a18feacec",
        "cursor": {
          "ref": "3d41e548-30ba-4a6e-a255-f0ef3392ca87",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6b97e71b-85d7-4499-80d2-20802ac72ba9"
        },
        "item": {
          "id": "7ee45704-e0b1-457f-8131-ae2a18feacec",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9e2e89c1-7e7c-4dfd-9e5d-e3f2b6f0bb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2b6238-60ad-44e7-a3d9-eafc9b2cb8dc",
        "cursor": {
          "ref": "0ddaf95b-0cd1-4fe6-a220-858f4c8316b4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3fbf7dde-1987-40cb-8c7b-e0f33c8964eb"
        },
        "item": {
          "id": "ec2b6238-60ad-44e7-a3d9-eafc9b2cb8dc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "60598656-ca52-49c7-8553-f707739a7302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cf810d-a26a-4e49-a84d-204752300ad1",
        "cursor": {
          "ref": "168120f8-46b6-4db3-9add-c8325335d2b7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6286eed6-d8fe-4d96-9db7-ba555f624015"
        },
        "item": {
          "id": "54cf810d-a26a-4e49-a84d-204752300ad1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9b09b812-898d-47d8-9694-95c92d5cb82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957a60e2-1735-48b3-a43a-09031fcad9b5",
        "cursor": {
          "ref": "87c46a1e-f0f2-4017-a486-cc421db9122b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d68578cb-4b5d-43a6-93d3-0b7b00d5a7b2"
        },
        "item": {
          "id": "957a60e2-1735-48b3-a43a-09031fcad9b5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "abc9f692-87a5-4bb9-9cd2-741d5e8e8a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c8a223-2044-49f8-98fc-d59ca8ad3d45",
        "cursor": {
          "ref": "57ba0ef5-903d-46b4-869a-2daffe57592f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "90005b81-12b8-4d57-b4f3-4a201bac1986"
        },
        "item": {
          "id": "60c8a223-2044-49f8-98fc-d59ca8ad3d45",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4902f871-050a-4b92-a0c9-740efc5b5109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2226fe-277e-4a69-b4e3-c50809f07b1d",
        "cursor": {
          "ref": "a308adbf-68e4-4979-b65b-8ded703ec991",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0d8dd69d-cd7f-4ac8-84b7-a9696af8a490"
        },
        "item": {
          "id": "cf2226fe-277e-4a69-b4e3-c50809f07b1d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "928e7489-457b-4c29-b76b-9338a98118c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9fd111-b4fa-45a8-8ed0-bfebb0a559f5",
        "cursor": {
          "ref": "31f57bfb-ffdb-4491-a8e5-8159cf83b60a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "61693b69-e331-4b81-8050-c879d70ddd00"
        },
        "item": {
          "id": "0d9fd111-b4fa-45a8-8ed0-bfebb0a559f5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9d9e9954-1d8f-4750-9218-aed7ac8a4974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8502f45-628a-4e81-81a2-ff5c0005943e",
        "cursor": {
          "ref": "44f5253e-9221-4180-94f5-08f859c433ae",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bdd3bc23-fe06-4976-98f8-dc5c5dfb220c"
        },
        "item": {
          "id": "c8502f45-628a-4e81-81a2-ff5c0005943e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d5cb44bd-ea9f-4a39-a800-2d3f20dd2fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a53e2e-0d14-4f84-b609-bc4d8ce71585",
        "cursor": {
          "ref": "a3212ae5-ac14-4792-9b55-f5746ed4a67d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0874331e-8ef4-49f4-9bbc-d59292cbaf7a"
        },
        "item": {
          "id": "77a53e2e-0d14-4f84-b609-bc4d8ce71585",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3772a645-44bd-41da-85b8-e7fd0c501842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0189e239-7c03-40a4-8f51-df15361d8118",
        "cursor": {
          "ref": "13b95ff2-7987-4068-bf79-0c32b612d73d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3cace173-d503-46d5-bbbe-a26255954ac8"
        },
        "item": {
          "id": "0189e239-7c03-40a4-8f51-df15361d8118",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8407b50c-6183-4100-a853-0b9848907309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdde88c-abaf-43bd-90d5-fea5d97a3baa",
        "cursor": {
          "ref": "070948c6-5589-4535-8aff-f8ab244f405d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "32d881d4-d397-4a96-8fbd-04f6fb5e3148"
        },
        "item": {
          "id": "5bdde88c-abaf-43bd-90d5-fea5d97a3baa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0ffed843-6d66-42fd-a1d0-b64eda367a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ca1727-1d98-4fdc-bbd9-6103437cb745",
        "cursor": {
          "ref": "9ec89f48-ee91-4181-bc1f-38213f04015a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6368df8a-93e7-4cce-ad3c-d1b934e6ff57"
        },
        "item": {
          "id": "17ca1727-1d98-4fdc-bbd9-6103437cb745",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5cfd380b-fe4f-410b-a852-54518e9a0cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce6bc24-ba0f-493b-bfd4-b2ca83a678ed",
        "cursor": {
          "ref": "4e044929-8bab-4eac-ac7f-1f13db7700fa",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5e475c4e-10ed-48bd-93b1-2292c92e004d"
        },
        "item": {
          "id": "7ce6bc24-ba0f-493b-bfd4-b2ca83a678ed",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2503c7eb-048a-4c55-8871-ab25789c3625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172c5e77-aa5d-49eb-bf1b-e20764ce94df",
        "cursor": {
          "ref": "55fac836-15be-4211-867c-d623c00ea5b6",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "660d4651-344d-42a5-a406-461d7c6c2f21"
        },
        "item": {
          "id": "172c5e77-aa5d-49eb-bf1b-e20764ce94df",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "095a6113-913b-49d9-bff4-010c6a1de621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a6ffba-882f-4aed-8e8f-afa137d87ea9",
        "cursor": {
          "ref": "513528d3-cb5a-46b3-b71c-2855b04afd26",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bbb22212-009b-4ed6-969a-271eb3c417ba"
        },
        "item": {
          "id": "86a6ffba-882f-4aed-8e8f-afa137d87ea9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "935189df-9d51-483b-96a6-1fabf0397004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b521473c-c2de-44c9-931a-274950b4bf66",
        "cursor": {
          "ref": "580a0558-d8aa-4478-a385-e2cd8fb0eb8a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6f1a6923-c9ac-440f-b417-3bf1497f4a02"
        },
        "item": {
          "id": "b521473c-c2de-44c9-931a-274950b4bf66",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9a55e1a6-1a0e-4482-b3eb-09267feea50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d7746d-b8a6-4337-a4a6-89c2a5a15939",
        "cursor": {
          "ref": "beffaae5-2b43-46c7-8d54-cdef2fa0f6e2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cc6cb939-f18a-43c9-9794-e18ec26a32ec"
        },
        "item": {
          "id": "a5d7746d-b8a6-4337-a4a6-89c2a5a15939",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5a239c11-4b80-435f-8f7b-49d5c967dee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb31507-82d7-4b9a-aed7-dbbf4c260b1a",
        "cursor": {
          "ref": "1d37cf29-0c45-48b8-a6cd-2b4c3e56c17e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a7e91c6d-d960-4b22-9351-ccbe4547f8b0"
        },
        "item": {
          "id": "bcb31507-82d7-4b9a-aed7-dbbf4c260b1a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "60347fa4-264c-4768-a3f6-566136206103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303f0ee1-5822-4184-a8ee-e702d1517313",
        "cursor": {
          "ref": "5b6f541a-d235-4914-8a6f-0320d7a84d0b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a8f539a2-7f94-49ab-b13f-2fe7e5d4d2c7"
        },
        "item": {
          "id": "303f0ee1-5822-4184-a8ee-e702d1517313",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "77e3f7f1-db97-420f-951c-b1d1928cd650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a7d03f-341f-4132-9a3f-8bc07ab6e549",
        "cursor": {
          "ref": "e469d054-629b-46da-abf6-f66309d95f31",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6ea1ca68-a61c-4c5f-8d36-852c7f967477"
        },
        "item": {
          "id": "39a7d03f-341f-4132-9a3f-8bc07ab6e549",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e7cbf077-b265-4464-86e2-b3f5cbc3844c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a2df97-dcbe-47af-b63d-1efd8f06605c",
        "cursor": {
          "ref": "25fc5d65-5384-4899-96de-113d6616d0c8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7aacaa27-ca64-40d7-a79c-e34c2d3557b0"
        },
        "item": {
          "id": "85a2df97-dcbe-47af-b63d-1efd8f06605c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "de596e83-6715-4597-9144-46dfbaba9747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d74912d-ac58-4eec-83d6-d9531418bec8",
        "cursor": {
          "ref": "3edc3e90-d560-4b0d-8d1f-00c53644eeee",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "82d28c25-047e-46f1-b752-3a33d32ad1cc"
        },
        "item": {
          "id": "4d74912d-ac58-4eec-83d6-d9531418bec8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bc7abcbd-e2dc-4a20-bdd0-b0e5a18439a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9358b0-fd8d-4720-9227-dc7e5b758e80",
        "cursor": {
          "ref": "40c1e496-7439-4d77-8df8-be49e00e7994",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5abe2959-7dd7-4c67-a2a9-75f3e489dc0e"
        },
        "item": {
          "id": "1d9358b0-fd8d-4720-9227-dc7e5b758e80",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0c954081-4945-4621-af93-0595a4d4b87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fe427c-6365-4372-9e8c-6e6393ffdd64",
        "cursor": {
          "ref": "ffcf8dc5-6b13-406b-94a0-e1410d61c800",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5732b59d-d015-4a78-b435-47e4fa2cf445"
        },
        "item": {
          "id": "35fe427c-6365-4372-9e8c-6e6393ffdd64",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e22aebc3-0b0d-4463-81f5-89544d588221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab93968-8f68-4e8c-8b09-bd11f82115dc",
        "cursor": {
          "ref": "e2d3e0f5-07ce-4a51-9ac1-374c0c16ecba",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "eeab7012-0c04-46a3-8e5a-0700597b4699"
        },
        "item": {
          "id": "aab93968-8f68-4e8c-8b09-bd11f82115dc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a2349914-473e-4d0d-9d59-ac6019e1f292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d52c56-df17-4af2-bbbb-f6697f3bcc8b",
        "cursor": {
          "ref": "be64d225-99de-4ed6-81ea-1def92d8303d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "156ceaa2-90e1-49c2-b50a-a1d980a5987e"
        },
        "item": {
          "id": "c0d52c56-df17-4af2-bbbb-f6697f3bcc8b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5c89e511-bf5a-46b9-af72-7926de2b6e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc61e40d-46b8-4cba-827c-599205c40d31",
        "cursor": {
          "ref": "11c7cfb6-d763-43c6-a90f-38c0f646057c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "40caec60-275a-41bd-b796-6d58ecffd6f8"
        },
        "item": {
          "id": "cc61e40d-46b8-4cba-827c-599205c40d31",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8adfb5cc-06bf-4d20-a3fc-a63c28463b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d70fe3-a43f-4f62-99ce-454cddde9ffa",
        "cursor": {
          "ref": "aa5b6d46-6f56-461b-89ba-e4ee3717a9e2",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d6844102-b8af-4c9f-bf8d-296b2464935c"
        },
        "item": {
          "id": "e9d70fe3-a43f-4f62-99ce-454cddde9ffa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4205242c-f9b8-4761-a26c-7031595c418d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614e6757-89b2-4172-ba31-daec19c689c9",
        "cursor": {
          "ref": "0bcca2f1-0bf3-4d26-b3a7-c3d25b57ac43",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7066d9d4-b281-41c4-966f-7293463946fd"
        },
        "item": {
          "id": "614e6757-89b2-4172-ba31-daec19c689c9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "06d24a51-cffc-472f-92ed-afbfa200c5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fce35a-b146-4ece-97a4-ec9bf4991524",
        "cursor": {
          "ref": "2fa1f4ad-e1ac-46da-b65f-172885334f95",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "01ac3a79-7683-4ee8-bdf0-c6a11b63e642"
        },
        "item": {
          "id": "58fce35a-b146-4ece-97a4-ec9bf4991524",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "02b31fef-a9c1-4f6f-8f68-3a83fef4660c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3221a9-1910-471e-853e-cabb4d4bd6c8",
        "cursor": {
          "ref": "d8f32daf-a177-479c-a00a-de437ccc8e7e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e70ec354-5a58-48ae-9bde-8f4d8719b37c"
        },
        "item": {
          "id": "5f3221a9-1910-471e-853e-cabb4d4bd6c8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "64bf3706-936f-4a90-a289-13333adaeb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b839462-169c-4ce0-925c-3c9f4c8b896a",
        "cursor": {
          "ref": "8171e447-e78b-41e3-b631-616897d94b19",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "351eafc8-b840-46e1-b4bd-dfae05698d08"
        },
        "item": {
          "id": "7b839462-169c-4ce0-925c-3c9f4c8b896a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "65474b77-04bc-472e-8df1-4700115af3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18107495-3a08-483a-bfed-acae2dd1e2fc",
        "cursor": {
          "ref": "ca19d6d1-6ecc-4985-957e-6e956fe372bf",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a0853694-89b6-4177-8dff-ea0ff6608f57"
        },
        "item": {
          "id": "18107495-3a08-483a-bfed-acae2dd1e2fc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cac4f80e-0b73-4b6b-9185-446c726b227d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59566760-f961-4bd3-898a-4989cb2b49ec",
        "cursor": {
          "ref": "1ce180e2-f3d2-4229-89c8-1a327de68751",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dd504134-a33b-44e5-81f0-7affe70f1d8c"
        },
        "item": {
          "id": "59566760-f961-4bd3-898a-4989cb2b49ec",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b4f0f90e-1fde-4cf7-8db0-83de365a3e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11923ce1-0333-41cf-800a-944add5e98d5",
        "cursor": {
          "ref": "078c1b7b-285e-4d18-8210-fe5a3374720a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ef89fc11-65a7-4dd3-83f2-bb4b0a974d63"
        },
        "item": {
          "id": "11923ce1-0333-41cf-800a-944add5e98d5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ab43e0d3-4cc5-4543-8d11-77247f19e61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40c9c80-4684-4656-aeb4-68251f7b66ad",
        "cursor": {
          "ref": "4f87c1e8-8fd7-44dd-97f6-82f88f4ce6f7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "81f431f7-c62c-48ea-8757-3408563d5d1b"
        },
        "item": {
          "id": "f40c9c80-4684-4656-aeb4-68251f7b66ad",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "04eb34bd-1f08-4101-85fd-455209bb8d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378705a6-8aa2-4991-8742-5b6abf2f9f80",
        "cursor": {
          "ref": "c24de303-3139-4d6e-b552-80cb7fbb4e5f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3bc1eab2-7c49-4a21-b851-365d3b0c2e8f"
        },
        "item": {
          "id": "378705a6-8aa2-4991-8742-5b6abf2f9f80",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7da2966f-8468-4524-8dd9-906c5bf699e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e134f7-330b-46bc-84ed-6a05c25e3692",
        "cursor": {
          "ref": "e657b9ad-9fdb-4e8f-a388-ae7e89ff2829",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "78401d20-9388-4090-b4f5-8fa9a0c11640"
        },
        "item": {
          "id": "73e134f7-330b-46bc-84ed-6a05c25e3692",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "00a8de95-3ddb-4ffd-8ee6-2c5b32705098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba04673-2894-4374-81da-6a9ead22e5a0",
        "cursor": {
          "ref": "1bbd0699-491d-4572-92ec-0273938cf1e6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9c702af2-0791-49a4-82d0-ab7dcea5fe72"
        },
        "item": {
          "id": "eba04673-2894-4374-81da-6a9ead22e5a0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "33c7b070-fd17-4786-9f96-ef14b5e9daaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a722ac02-5e8e-4342-8e8a-124ac4380e0b",
        "cursor": {
          "ref": "ab30e716-da97-4d7f-a61a-647a80aacdc1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "095557ac-b479-4038-8aa5-abca1d4baf7c"
        },
        "item": {
          "id": "a722ac02-5e8e-4342-8e8a-124ac4380e0b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "712f5b2c-15fd-4a1d-9529-1e081d7fc06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982d9f91-25a4-450e-899d-cc6dfc039d9f",
        "cursor": {
          "ref": "f1b758fd-bd67-40be-a24b-d7e650c3f8a8",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ee0fbadf-2832-4818-9d08-f928dc26d653"
        },
        "item": {
          "id": "982d9f91-25a4-450e-899d-cc6dfc039d9f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "220c0f11-d954-443a-b37a-ff7a31b26ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c88aef-90f4-4a55-b6c0-d0ddfbcf4f44",
        "cursor": {
          "ref": "a394164d-05d6-4922-a232-b2a711bf1319",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "903415cd-faef-485a-8445-4a336ed05f63"
        },
        "item": {
          "id": "b9c88aef-90f4-4a55-b6c0-d0ddfbcf4f44",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b187c2eb-f949-4f26-863d-189939a8e188",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bfb1e9-71de-4d25-9daa-95c63d1c8389",
        "cursor": {
          "ref": "9e6d81af-5e84-414d-8969-1fc8a735723b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d93546d2-1066-42b7-a22c-660c7a57d25b"
        },
        "item": {
          "id": "54bfb1e9-71de-4d25-9daa-95c63d1c8389",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bf2e4529-8c93-4168-833a-10f8dc56b670",
          "status": "OK",
          "code": 200,
          "responseTime": 2247,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8b1d0a-3b00-41fb-9186-8b575aa6c7a1",
        "cursor": {
          "ref": "9b83ee8f-f94b-4928-9a02-ced80771a32b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "600ec005-d057-4522-96a5-cdbf0058f1c6"
        },
        "item": {
          "id": "eb8b1d0a-3b00-41fb-9186-8b575aa6c7a1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "54d58bce-99c9-4cd3-8332-45d650764b77",
          "status": "OK",
          "code": 200,
          "responseTime": 2925,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1759d601-841c-4f35-a514-5f01d9d5b8ef",
        "cursor": {
          "ref": "6160c1b9-ab45-446a-b996-40992a87629c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "de851c97-93e3-4d95-b7aa-da96803b507a"
        },
        "item": {
          "id": "1759d601-841c-4f35-a514-5f01d9d5b8ef",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c218e6b8-62b1-4243-80be-7fc1c74b34b3",
          "status": "OK",
          "code": 200,
          "responseTime": 2580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58db2ce-3618-46bb-889f-b9c42d6231c4",
        "cursor": {
          "ref": "fbeb7d67-8069-4c90-a37d-13d18502193b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3d1b1577-f1eb-4e25-810d-df55d365203a"
        },
        "item": {
          "id": "d58db2ce-3618-46bb-889f-b9c42d6231c4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "df7f7164-e157-4117-a6bc-b00268819fe2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58db2ce-3618-46bb-889f-b9c42d6231c4",
        "cursor": {
          "ref": "fbeb7d67-8069-4c90-a37d-13d18502193b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3d1b1577-f1eb-4e25-810d-df55d365203a"
        },
        "item": {
          "id": "d58db2ce-3618-46bb-889f-b9c42d6231c4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "df7f7164-e157-4117-a6bc-b00268819fe2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f6db4b-a804-431f-8c78-b0a91bee8068",
        "cursor": {
          "ref": "7052c5ea-8fd2-46dd-96fc-83275871ba03",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2d7effe4-2561-452a-8c3b-19e5bcbcd1c0"
        },
        "item": {
          "id": "16f6db4b-a804-431f-8c78-b0a91bee8068",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "237ce367-a393-484b-a3aa-b25b229df726",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e70ba21-b474-4577-902a-47c250324f4e",
        "cursor": {
          "ref": "2ed0b0c2-2293-447e-9a34-9c9c7cfb41d8",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b55b3813-7ec5-490d-87ea-1a17fea7692a"
        },
        "item": {
          "id": "0e70ba21-b474-4577-902a-47c250324f4e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1b280592-e751-4ed8-b885-6693f4602de9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}