{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c546f392-1d86-4cf6-b1d3-1c8e66cb1612",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f8b34779-6a86-42d1-9fc3-01452618a32b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49a5f907-9937-4abc-8355-c3d14b2ac3c7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "948a17c5-3c32-4d13-9a0a-d71a2b8de940"
                }
              }
            ]
          },
          {
            "id": "cd9b3dba-a187-4b3b-a3ae-1fec19a102ba",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9863e783-7431-4f03-a2d2-efcab265bd8c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bbc51076-9dff-4382-bd88-c45b10646a78"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4ac31f08-ab36-4716-860e-e014b83a12ea",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "67ec3934-b28b-4ca0-8688-6fbbb8021d15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c77de9ed-9805-4e76-87ec-7e94b800241e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c805a275-d70a-4130-8863-02d583a206d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83b2b344-3492-4416-954f-b13736857d6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90da3dc2-6b43-4d2f-8f7a-803f90a9eb2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4219ea4-662f-4612-a17f-d596885cd071"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92426874-b1af-4cba-b6eb-dc3260e4a908",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91037c1e-e46d-4d3f-8623-f77e7fa8b108"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14c2eb59-e376-4566-abdd-70acab171fe5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7f4c207a-4d22-4be7-ba1a-825239359481"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de9254f3-cacb-41c1-bd86-b38fcc2ca391",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c79b389-2cd5-42b9-8237-d4a80206f7c2"
            }
          }
        ]
      },
      {
        "id": "47a2ba0e-a044-4407-83a3-3faa3b8ce57e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a258c80a-9ece-45eb-af10-149433526935",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d026740-3277-4766-823d-fb7f8e136e53",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f947ea17-ee00-4954-9d8d-8ace5fa77598",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5e73b1-1d46-4912-a7a1-44f36c2ad4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf02924b-f8a8-4a6c-b4b8-c58afbf0371d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19540d9-52ca-41eb-ba3d-c060357f5a6c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2e9218-3497-4d17-af13-f1f750be2835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0a69a64-4d50-41bb-a56a-0b45e5c303fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676abaaf-8d8e-4d63-a161-48558ea7e020",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bb3c9a-89da-4bd4-8508-80d21dabbf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da5fd342-b7be-4a6d-a9a3-88b85409229a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3096990f-5caa-4eb2-adda-9766bdcfe7e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34c6e10a-685e-4ec6-b1a4-7b4920e76aa8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19564ce1-80a0-4694-923d-b250ebbf2bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d9acc90-371e-4b0e-b605-f858ff38c632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d05d40-a039-499d-973f-5acc2fb287a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1261707-2e6b-4733-ad57-4b24aa44dda0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "161894e6-152a-4fe7-83b5-78f1ac7f1053",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e1143ad-55b0-4c38-9c52-2a5fe9794a98",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d578313-a406-4678-95cd-a6ea3a4a9450",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bbf0700a-f342-4405-96dd-bac0a677a2fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb5a1ec7-58b1-4b42-9cfc-cd604d6de1fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a03377b7-3643-4434-ac88-bfb59741246c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21e568a6-6015-4966-b532-0ea50505df4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0ddf0db-67f1-48dc-b82f-45b1c118a760"
            }
          }
        ]
      },
      {
        "id": "8651e284-631b-4474-87d5-e7cd17e7c0fa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a34e83c6-58ad-49d7-9655-8f93224ef3b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bed43265-4abb-45eb-889c-cd429126c2dd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b3817062-f982-458d-81f1-a6636ad4e14b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e9f91a-ad5a-41d0-8ed3-ebfc9be9c11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df9a6f6-8408-4618-b330-f50ed1bd82c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f6f102-0924-45e5-911c-4a02dffcac03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd201a69-9536-4024-b97c-db355d2048b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a25bce-f221-46ce-ad11-ab1a53cf6629",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703d87f7-2f68-4746-b63c-6a1c1ceae1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0114c5f2-c9a3-4f6b-a855-1f2cac8ad571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350d419e-36cf-4edf-93b4-d50b2dd466bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ad3b64c-0d75-418f-93ba-b43d0d56de1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd714a6e-5cd7-4f31-ad13-c84ec3060394",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a5e9c2-feb5-4b3d-8885-8662e46e9052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab89d99-bb11-4dc2-aea2-3d85d30a1472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f2c681-1550-4603-a576-56ae250eb9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8b6e311-7c0f-447f-bc71-a0807d927b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f740c954-0803-495e-ae95-afc0ef941463",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745ae7d4-6892-4aba-9653-bd943c181c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7956948-7f7c-4f56-9f78-ce65eaadbd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061c79f6-d0d7-4353-bbff-225b6ab75b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85b9d529-5324-477e-b36c-271987c185b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac0ec2a-816d-43a0-aa9e-9a87aa3c244a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d446c7f8-bcbb-44ed-8eb5-47f842006b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9523b711-ed47-4920-bb76-c1046a75ca21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394ed86a-095e-49d8-9fc9-984061850c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac004279-43a5-4ee3-beb4-7f32ec944bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6503c8a2-3a5d-4cb3-91c6-b92102e6391d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a733c8-f6c0-4a43-8466-ba3d77ecc7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6856e323-ba3c-4326-adb7-4fb08f94d75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4abc34e-4617-4c15-a073-311155123002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55f14148-d37a-48c3-a5fa-b91378aa80d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6656438c-3d35-4a5e-870b-edf53cb924c6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7325121c-ed54-49c3-a4dd-f69d0b099897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c9b125-10ad-4e6c-a6b3-94dd48c9a0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8450a879-3d89-4bec-9050-6515ba4b17f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa038845-86ce-4e37-89fc-306a5cd9b566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da043a7-e878-48cd-b481-87b48c7b5ba5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2434a4d-14dd-4bb4-bf0c-4ad698a3075c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa53e55-7bd7-4fa4-af0f-e0832eb9f483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d26f04-271f-4669-930b-0ca803b1af6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e61c82ba-9260-44df-b826-b52c07e7d703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2b6fd4-d2e4-4d9c-9cf6-63c607e1c8eb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6703bc-3353-41f5-a28e-3f994ac36c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef63d4c-c8c1-4a4e-8f35-a5452c602d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e349f3-9aeb-4307-b971-26d7508b61e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae90c59c-c51a-45fc-b60e-2a6b1557a364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baf55db-4f3f-4c88-b209-4f0f2ed0eecd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8723f0d8-4e6c-4753-8d32-77daa041e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053f1816-7def-4d22-8f3f-9f08fc879a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd5d251-6706-44d3-abe3-4a7cbe60148c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60a5b55b-c46a-4a0f-932d-d9656044490f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66254b7b-5542-4dc4-b68a-1a7887a28e72",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc7d6de-232f-45f4-8b62-e4a986f0638a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d809a02b-991b-43ab-b6a5-f30c4667264e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb80a174-26a0-4cd6-857a-315b4a7ea9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6efa0e11-6d2c-46be-a394-01aec78571bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b177173-d5e9-4812-a29c-7341ab2c27a6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2081e33f-3165-4a52-844c-58dd4a950119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4933b8-a3a3-4276-881a-625acfe062a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0c5e47-7e5b-4c38-82ad-aae98cdc36ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0597b956-6ddf-4173-9f94-091a554a26c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c1524e-749c-435b-b021-de719fdedc22",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d94bc3-a1f0-4da3-911f-db44e561be39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caef2b31-f7e1-4f8d-b063-613b9af9fb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc937e7e-091d-4ec5-935a-c0e710f61ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "996b6143-6617-40d6-af5c-519725edd4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6c340b-5b58-4807-a376-e54fc69ad034",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1b0eed-e09c-4da3-8a8b-72de7294e8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaceec35-8429-4768-ae9e-08187e5edde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef29afc-3d64-4cba-91c7-74321bbbbd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6164b17-2283-4c71-b96f-059b9910a14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f703ce-d435-49ad-b66d-c5e96e22cb36",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f63bcf0-be45-4227-b61b-f7ea70d34362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e32c96b-e025-48fa-ab2b-2d97d12f3127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c33f05-fb8a-4860-acc5-1eb6b3d77780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "637aec77-1645-4cee-b188-c80721ba6220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4748f332-004a-4827-8c53-8da60c36506c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8915607-93f9-4169-9580-d1d1af494461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47306383-cabb-4c16-a373-efd04834cee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bb10d3-9526-4363-934e-a8023375deac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c665a801-181b-459e-88ce-3ad789c312b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99ff3e1-86aa-4fba-bc6c-29076f0bccbe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f1e831-6b18-4976-acd9-ec30159e8a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6a3269-4dee-4c3f-89d8-d4810f43722c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8353d100-5d28-4dac-9bd2-a7e68cae94a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79943429-d03f-4dd4-9cb7-7e4d300af12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c49add1-a8b1-4628-89dd-c187f43d93a6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22b3b36-418c-468a-9f90-00a48f1f5437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b7a59b-974e-41c7-bf1f-28b643bb8296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac182e32-7604-4ab7-9f1a-f183c0310900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76b23dc-9ec3-4e9a-a3f2-adb0a94e6cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4553a2a6-bd0f-4e71-bfa0-1340fe37604f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2d260e-621a-474c-a8da-6663c55d2f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7117038-9921-4e46-9fd3-676f45fc2cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af70359b-397b-4dc7-a95e-d51fa4b5411a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07ff049a-a2b0-4c69-b49f-6ad04dec5da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c291a96-1262-4085-9341-c41a94ae3959",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea091ff6-626c-45c2-8693-83845813cc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758adfcf-8f0e-4416-84ee-c00af86ecff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30741690-eebf-4b4a-a612-57eb0dbfcfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d84eade4-f1ad-4eb2-887d-37b2fc5abeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2450d36c-bc79-4ef2-a503-96fd5897966e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b6b691-994a-4d3b-81dc-c550147f926a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f247639-75ba-4dfc-8803-eaf75ce569de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5797fc15-a29b-48a3-97d1-be8de870eca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f840f46b-07ae-4466-8585-0c3ea9c81c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cc60cc-93ed-4ee5-9dbc-a128b7e34904",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1358df85-3361-4c49-bcc1-cde86f633ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19627d63-cee0-4822-9d03-ad33b4be27c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa7bfa6-bfc6-4162-90fd-3800d65bf889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2cad42-a920-4449-ac20-fa93f169f98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a334344-966b-4f7c-9895-e2f7277baf46",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6eea7ee-1585-4b55-a791-dbe8e042aa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9040e296-a994-4af2-be55-162a0f16c082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ce3bec-a53f-4840-b742-175097636622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b87dbf1-9894-4d8f-bfd2-88ee1ed742fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ba3bc7-1519-46b9-b837-637b817ca5a5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef70140-44e6-44e5-ad93-d1c4a2d2f9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa7c3a7-afa8-49b8-bdb4-1cdafd04062f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f413b7-09df-441b-ac47-4c7dd03585bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d38937-4fa5-44e5-a2dd-d502f69ac284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca218bf5-f8d4-4a48-99ec-9e8424783b2c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44bf039-921a-42e4-974f-20cf06c89c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c909c0-3d9b-4d9b-81ab-129e23bd29a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fb120b-65dd-4947-8ab8-f398825def62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36b1f7eb-b3ae-49ec-a68a-90d35a92d941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13940a2-4f4d-4a8c-baa9-97f6422b5a68",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56eb4261-3aa3-45d8-ba70-a421f1cd082a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65added8-920f-43e5-9e64-7f47a3de8885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913c2df2-795c-4f07-a079-02f5fc87bc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae58ed7-4e28-4ce7-9f96-401b67e9f822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1b45d8-5a8f-4cee-88c7-b652cd91fe38",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7ec217-79d3-434c-af1a-022ce5ddf1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d6fa28-8470-48ee-ad29-34a15f17b0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091f205d-aa29-4525-8510-a0a4f7281ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f65d9a1-c186-4891-b81f-0428811a6a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e8f6d0-3954-41db-aa14-b8de6e0fef5a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc0127e-24e7-436e-a04d-85b5de17bac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71078de0-766f-4f8b-89fd-6dfe97402f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c84bdb1-d916-4ec6-8fb2-e6010497965c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da1f222-62a4-4f13-943e-4a7deb5456fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54da963-ece8-4443-bae5-d2e7eee67e08",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e52a98-051b-450d-b085-dfe02571b657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661880df-2b1d-473a-9944-e81ce9a78331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84d4e69-b8fd-4e7c-834a-e10d701bf70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "639cdc46-9efb-40f9-ab9b-1d8b18a1f549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7aa69df-cc00-4bde-a5b1-45186abace51",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7cd012-1042-479a-b6e2-2fe9a9792077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb1bc33-3d5e-446b-a9bb-9a3302f8577a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33195e8-17af-43ea-bde8-5e06d6ca13c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaef10bf-620f-4060-be48-b522b62b3ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358ff9c9-8706-4c41-8680-ae09c4d5c4a2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a008953-e554-419d-a85c-cbf1c7db4518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b0c3de-877b-4866-aec7-dbfa6db5d0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f6ba72-f20c-47f0-9026-1898f27bf5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7893f661-b75f-4f57-bc0c-51b69ae5608a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec82107-dc45-4580-a3cc-3608429c0703",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c840c822-d0c6-4a0d-a90e-43d0f94d8561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62548e6-8e01-4c6a-b039-817712c26785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fa3688-5660-4b9b-9032-e0991c710143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13880140-378f-43b1-be36-ab514cb1476e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4affd3d-53f0-469b-885d-9ee61e04b118",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79a7cf9-1f9c-4f75-bbab-0ab20f0f4670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e948584-820b-4842-9683-ef8e9b08c62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90017df0-2855-4342-ac96-abc7dde295f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae966a1-381f-4758-9f8d-f5529e59fa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ac2add-bc27-4070-98f9-6fa5c04935bb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ed45a6-01c4-4e81-8f1b-a20bfb71df2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91917715-4938-4bd7-8c98-21d8357b81df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57410cf0-d2ef-4fd8-a38c-2cb06029a96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f475038c-d6fb-4c56-a226-d2e1e32cab0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de01aaf-b877-4d0d-9d70-ad0dbcbf1c3a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1653aaa4-5dda-4a0b-9f10-2a7f123a1627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346f8e97-78c8-45d4-a427-b0cda980ec20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa579e5-441e-47f6-a38d-006e5e0c5476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f37f4966-4fa0-4b3d-a442-ecb3a24fac44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4d608f-bf1b-48f3-9326-4c11def98dae",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe59ca4e-e4e3-4813-833a-c244a632b95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "468f5487-ba52-46d6-93fc-6cd65a378750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcf6d4a-017a-4c27-8a82-9476b698921e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "010b39cc-3d53-466d-b41d-9fad1b897f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c7f716-4f39-4f1d-a050-5808509e71c0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d053e1-6b78-4e3e-b400-598268ccdf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9898e5f-5d3b-4be7-bd94-1a48a0e2aa55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0f6c1b-c5d8-43d9-a6f8-9da2f5751abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "345373ee-a9d5-4e9d-b24f-af170a6cb172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bee2487-9c6a-41bc-af8b-7d16f2932ba8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b477f780-623c-4573-adac-ce542c657f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f19c9c-ef4c-48bb-b98d-0f30c1f9a297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12a4539-f6bf-4c94-8a99-14b4d0104bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73f683a-fdd8-4845-b95a-8ef34c8bcc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c99b2f5-1c48-456e-aafb-d35bb226dcd2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b7b67d-5c19-46ba-9f44-632736c384e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4672759a-7774-4f0d-bd27-927c6308963c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406747f5-b21e-4739-abc0-740376343237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "982abb15-f313-4f80-9f69-f675be2c589e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acdf248-6108-4ea6-ae64-a8484ac193c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18aef08-b5f6-4ab8-864b-79ca93e87d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21101013-7834-4cbb-99c9-c45a670d7b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5ce6ed-1c14-4c5d-a02f-15e8a0fecf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "024961f1-00e7-414d-a178-28a0cd8124f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c85a2aa-6ba1-411d-ae06-805b2ccb1608",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932c7383-659b-49f6-ab53-469abb0871f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba13658e-d0e7-41c6-a99b-c479548edcd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63864d34-4f47-4a9a-9c08-d910159d729d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5884cb4-7aa8-4b17-b2bc-153652008c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a92268-8a68-4210-bba5-fb8041574aec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6288a87-b05c-4242-a33f-587393002463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7e6bad-bf7a-47fa-9e5b-a5490b5579fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a45adc-f508-4510-8aae-24af69f09e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "42b30377-75b2-48ea-8813-6aae2141cbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e19217-f847-4a95-a0fa-2946b61bcdd9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877579ea-980e-464d-a88e-28742108025c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330bbf79-bdec-41fa-b33b-7416d8d62ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb5af7e-9e79-4b39-96bf-4f7b24a4abd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "725127cc-3b13-4d89-8532-cf4220d84811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532d749d-6718-4984-a7ea-e1a2f66ee125",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ba05f8-5ff5-4ed5-b8f3-085ce7ccc48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8486b918-6356-4bef-9dcf-3c684fea0e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2beeae9e-89ec-459d-b70c-1bfea96abdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b143635b-deb9-4ee7-b5ea-72940b403ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f011eced-6867-45c5-9e6e-d54d64d37802",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf673077-5bb5-4861-8290-6d60714c45ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79ee323-4869-452b-a3a6-2a34c09b79da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b86a2a7-a60c-4bb5-b4e3-57ceede85b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfd8f2a-bcfe-4bca-9c49-1de35b1c6f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d9eaa8-ad7f-4325-9ecd-ab6fdfba6eec",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616d110c-db8d-4c6a-ab77-9047f87ef2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2754d04-5c92-4368-9528-71b09eaec418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7349034a-3a29-4544-8ca4-03583dafc7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a17251c-7f05-4f8c-b25a-feaaed9c4d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e2c98b-7003-4a22-bef7-d5365f6336df",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b440e55-e920-4639-9b9b-688d9a416864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb90e3e4-da41-4f72-827e-2be5b5622429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180e7339-2b8b-4965-8d9f-1348ecd3681b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "807c44ec-eea4-467a-a9af-c5179e669bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4728b6d2-4043-4824-8a4c-a2a535b0bf0b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b14e305-3ca8-46c2-bc53-995c5d3b9dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae4fe72-594f-4718-bd4e-94695e795c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677b5388-c6f9-4b08-881a-22299d0e9bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "847cf674-9403-421b-9657-268c74ac0563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bef2cd-4ce2-4a8e-86ce-c743e80b177d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c841dcb3-ef93-45d1-b05b-01721d11294c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1a5b23-35be-4830-b2c4-2da023847f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff63693-fd6a-45f8-aefc-578e02ef36c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f86356c-fc31-468c-ab1d-4dc4477c735f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a6f66d-02c1-47bf-b801-2dcb3fbc0aca",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea56205e-c49d-41aa-b81a-b60ac07be2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8b89a8-33fc-4d97-9ec8-3cfdd83c2e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe96fcd-5bc0-4d1c-b55e-26d4b3dd9cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33b6d47e-6431-43fe-b1cd-0363d9669684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acda1543-88b7-45e8-9afa-11a89fd6e14f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b45c500-e85c-4b4f-88b4-ee10aec5a0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da137500-aa94-48d3-b388-f0e38ae96b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b23998f-2c7d-47ee-8d15-ebb2f02df245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "41f69049-c42f-45b0-b184-68988843e503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff2026d-8de6-4af3-b754-4eb8eb4d4825",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfd5c88-dbad-40aa-a9c6-15e6caa4e8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603f15d5-cd54-48cc-807c-90ac77b47e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196640d5-18be-453f-9d39-3850ea089f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1586c3e0-5696-436b-9ac8-faa284172d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2530fcea-2877-492e-b288-4bf875f5b0dc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583a8485-3716-4028-9ec9-270c4657a47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187e0cac-ab9b-4704-b63a-311c0b639a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41838a79-1657-4337-b4c1-6d0b2c1eb36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "520c5ca8-a9f6-4e0c-996e-70ed5f90a6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a600eb93-90db-4ab5-bda8-0a4baad08f8b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76ebb8d-d8e9-4f3d-a62c-cbbfe6741e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43403e0a-d8dd-4082-a1d0-a85482f1e09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a223b4-f944-41ef-b8dd-d128f85c01b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3696434-be9f-485f-be8f-14bb91d72e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31051af3-25a6-4ea7-a5a4-a87538595e0e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c1e332-63e5-464d-af08-9b8ecb94a3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b9b04b-f85a-4d86-8227-af8a6a111c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e890281-ab22-48b8-b522-5b71a6cd542c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e65bfa-1e8f-4b78-8ad4-e3b3fa6df4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570a0548-c019-4b27-a8a5-0ec7dbe128d1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882e23e1-2003-4c92-ba0d-99f8509cf7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3db6c5-4ee6-493d-83bc-8d9a05f885c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8889abe7-7ff6-48a5-a4bc-dffd8fe7928c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c47adc17-daa3-491b-a4d5-103db6f6f297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0af132f-2f86-4f6a-a07f-bd90073cab4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e4d507-f365-48e9-b39c-42eb73445953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a580fc-7c47-463e-a8a9-81ca1d1157d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4980280-2619-4610-b306-8139a609861e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dce73b-704c-45ef-bda4-b62e62e630dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f98d617-5659-4f9b-b8e6-5d5533032797",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903cd6e1-bb5a-4068-be15-2b132c097eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010373c5-ee23-43ad-b1c3-89de989ea567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ece6d0-f1de-4ab2-a70a-21d97df52b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f36083b-4d3b-4b6b-af74-4f7213cd5a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bed840-c47a-4139-bfa9-c840eb5738d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13f3dfc-2b43-41d0-a31c-ebc3bbe062ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcea160c-d0ff-421d-96d6-9881a5714efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dc5601-06e4-4031-b479-2aa25161986f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e27c160-def2-4c39-ab14-2c61c7573529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb848ea7-2586-47cb-9a56-03e2f33b1dde",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb105daa-3d9c-49a5-ae15-fdaccaca9fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbb5d00-f719-4742-aba4-bf9dfa665a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f86a62-0681-419c-b02a-0c32ae55c7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83d688d5-f577-4007-abba-6171d826a23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8510eb0-7eb9-46f0-adea-e905b4b5434b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581d43eb-e235-47d3-8b60-c0b57a873dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d597262d-989d-42a5-b0d7-f630b6180aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca79b80-a259-48ef-ba70-4b499124b95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ff1ff0-7d32-4cae-a05f-06d9f19a5ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ba0148-8ffd-4875-90c7-7d4bbcba5d5b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93f4c59-b4f6-49bb-9efc-70ac2731fb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430f93b0-4b4c-48aa-972e-f9be5cad2f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc205125-a70a-4843-a61c-8878c19561a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc78815-db4d-4021-a82c-d4b3e8372e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8d1a67-f97b-43d0-be5a-674f74ea9bf0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64d464f-77c9-487a-8bcc-da3ccb2258f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0f0ab3-52bc-4649-8d22-2d44d5783049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d204600e-4427-4864-93eb-894ff532867c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a769eb-0673-4f73-a299-448c84cb27c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407adb27-ceb0-4ca7-a5af-c6a571748016",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d9c95f-e560-4af8-b404-8ea624581c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a57dcad-ebad-449e-b71e-fa596471ddb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10191ed2-58f6-4b31-9649-359e83443ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27cc7a91-d9a7-4edd-92d7-56afaa096c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffe12e5-c3cd-4671-8f5d-01db02a541b1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbfca5c-bf50-4b8c-a689-2b55497f6933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1828b8e-9c37-4910-b2f9-ad3943812470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dc0543-41e8-4b78-a794-69f56ecaf200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48ed8206-c5d1-4183-ab8d-2ed56f2be01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6668b8-12ed-4c8f-9ed8-e052d00a4701",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b79996-2aad-4e91-9450-b0a425380599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ff9b87-cd12-42c9-ba91-6559ed91c383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0542a9-5216-4136-b39f-9c6b2531d473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ffb2565-3e3c-487c-90cf-1352dbbe356b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bfbc6d-0e6b-4625-b403-dfd13d94145c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b12559-78b3-4760-a4d6-6ef4350b674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f21d14c-2e70-45f7-82ae-1dad2ec90bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2713fc5b-fddc-4edc-9088-5d9f207d2304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3db8937-1a2b-446b-ba83-57859a3f6299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea47e86e-c2b0-469b-9cfa-188befef0035",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452a3e15-8e32-422b-bd65-a5843fcd5123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3473d354-1165-4ab2-b041-f279e4c3bef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15121d3b-2d09-4a3b-b764-2ce9d0bcd345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3179cf4d-3562-4850-8acc-9a813162e7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1fdd3d-3149-4916-9407-9e93fda49542",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c221177-9e80-4243-b9d4-1035836fced2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc656e0-5be0-4494-a656-952fff8bf20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be976c68-b4ca-4791-8bbb-313d22c7c177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e19652f0-99cc-4407-97bb-bc57d6e2323e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d848de6-5ec0-4301-a47c-ff7577feabf4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e359589-30e6-463d-b86d-b7706fa4e693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff60408-53d1-4ea3-9270-d5b524b37afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5ef472-8c9c-4b95-8f68-d6df6eb9e4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1df70c94-4e60-496f-a874-0bdbccb180e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd97a373-95f9-4386-8f80-10d30aa35d08",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58c0c89-3371-488d-9df6-177036d7daea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a919b8-7876-4d92-874f-03b122393e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9585f8f6-e056-4b3b-8c19-b5a4c4e281e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceaf8afc-6bed-4455-bdc3-3447103888bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28828bcd-f028-4800-88e5-06e00b5a884a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268660be-c79b-4853-8db3-2584aac961cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c668e27-a78c-4a85-bbfe-dd3b238314f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdc2027-674d-4ce7-9903-4ea9ecdb1f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de065bda-090f-4bdf-9784-0fb7b74279d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecccf3f-9aa2-444c-bab1-01408cdac16c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f2ee2a-eae4-43cf-9d37-400cdc4e9fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b7bfd5-3f69-4c53-9a6f-1708b6eaaa3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6fbc8a-7d73-4d96-809b-444341b9bcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea578a7a-8965-41bd-886a-5beb1666d77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55b58a0-a8e2-41ee-8e5c-c5a48666f24b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c932ac14-dffa-4867-9aed-a7219c026ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbe8396-8fdf-470f-9f4d-dbe4812b5b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ae8b56-a935-4fa7-9898-02bdd65be1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d10eed-d554-4536-a30d-1bf497a27628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01313a8-bedd-4480-8f74-8d53a40aca51",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d2dc40-9172-4fc4-b5c4-0fc9d74e9588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d248da4-ca2e-4372-a3b0-4794fa3348a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc54e97e-1b91-47ce-a0d8-4b952807cc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1937c3c-3b14-48a0-911f-9a214d19c10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d9d141-7991-4765-88ef-e8bddfe5db14",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaa0a58-57fd-41ef-abb9-cf0cae1963fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e295625-273c-4d83-a06e-fd7fa6a3384b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e5f8b1-ea19-4d0a-8613-52529ab30828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f14e867c-16f6-4e78-98fb-720f74d51b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1e2c2c-85a0-4dd8-b734-4b796a8a7ab1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14c49c3-72e0-45d0-9edd-bfe6b34477f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38c8193-4d99-4dac-aefa-06508fe131e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58393fc2-4ad5-450e-b881-749ef7f54e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "379f2534-bf0a-4cfd-9e85-07c700dd981b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15891163-fc9f-4951-a0d2-2f2d624adaf5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b1eece-b87b-49ff-b727-a90b41144e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45aacb5f-9e6b-473c-8cc4-b5657facd2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6de9cb-fc9c-4842-ad62-be7138a79f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "623fa7e7-dd98-406f-b270-8cefc070371f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb83d18c-b82b-4506-8d9f-90d898546ced",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdf68ec-ac41-4166-9fd0-402e782496d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee424c8-6104-44cc-8e8b-460c0b772f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a55f178-d0f7-4f10-b500-4afa26d9ef8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f44c62f4-88a0-46d2-97db-0ddb6ef3eba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdde8ae-38cc-4513-8625-bd2f44601bf1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f156266-95c0-4412-ba2f-c1d9647c24ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34234194-e21d-4390-894f-8573576eb3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73dbf14-c6d7-420d-878c-08f90b5244da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cc57c8-d58d-4676-a3cc-dcde755bbf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384c0cc1-8592-47ba-b514-a1803b0e4d40",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6660f6be-2978-49da-a523-ef60d3b3ff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bbfcf8-763b-4c12-9321-88dbe5f53497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8e1f6c-b608-4e82-a1b5-d1a5229c6993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4de321-1cd5-43d1-9e49-c055925ef27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4d5281-1b41-4dc4-92cc-349f075e6409",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff74dc6f-d3c7-4fa0-ba77-5f9fd0f98033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e74cc8-8039-46aa-becc-6b22db0b01f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094babb6-4782-48e6-9e2d-aca840044b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f96b46-c4f6-4bf9-bece-9c806657eb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ab1e87-6884-4f8a-86e8-b92f0f798ad3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37721315-f77a-4f54-adfc-0dd34442918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f625059e-9eff-4d49-b5ca-9e8622420944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72362f0e-cc6e-4dfb-811f-7e4995b584d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb918bfd-24a3-4d15-af83-b74b0c9fa128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9946b770-36bf-4f7f-aa22-f01429d2892b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305ac870-1426-40f6-a4ba-aabcea8d7e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4cd464-b06f-4d90-be27-0f6b10cc4275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340a1f61-3812-4384-b761-5109f5c93dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62385f49-2455-4257-852b-2c5e807d8374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5ed1e5-1c78-40e2-a45d-5f9bf0994ecf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e816e15-8294-4faf-bab2-e0d438fd9140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780346c6-99be-41b7-b5ca-92814baf76ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c851d10-e372-4e5f-86f7-a481a0dcf575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9eeef324-e2b8-4aa6-b55c-e0e7f560c130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fee0cc-02de-4f57-b4d7-52dc32d78812",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8931ad2-d637-4eeb-8f0f-cea9642d597b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577eb52d-e903-4947-83d1-f7364203bb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9762973-a1ba-44c3-934f-397cd66a0f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5292028f-34f5-4b51-bc40-b44896fee52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f223b0-c4cf-402c-83ac-b0b7309468c7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459beda7-15f6-4b4a-b40c-12db2f0e3ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52e42bd-42d6-4f74-8b97-116d7f142f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820d1738-6bd6-4473-a3d7-984bcebae1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf02ebff-010a-4b59-afe3-091c7c45f76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3217ae61-f541-4ac4-8865-57ebedf11a51",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99e5763-d3fc-4e7f-980a-1daa9707a3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958bc86f-fa92-4964-9e46-a3adb2926208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13fe943-12ac-4b2c-ba24-9694b7aba18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e681439c-1a8a-4819-841d-3ea414c26556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d699a5-b924-4d44-90c5-463ef504c629",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78266f63-5417-481b-abc5-f03c6cb2f6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d543da51-48f4-4a90-a623-046e8f270b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fa6705-2505-4b9d-aa30-9bae8f8ae0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0efd52a2-73ef-4a4d-be92-1cc104855543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317a742b-a8ce-4e22-9f18-1b14e297bba7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172dbf25-7a24-4556-a5a8-b3d3886175e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8eaede-257d-4856-8cf9-b84b6a45437d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8c8e0c-7db0-4ca1-bdfd-10a4ecba6bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbc5a54-755e-4ffb-8f6a-72d7c83ce3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d730216f-134d-4fbd-b785-c4adc9aa4065",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff1824f-bd09-4085-8a3f-c8521f7e12c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f37a70-2d98-495a-a4d4-aabcb7e66694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064f30e8-1c25-4db3-b87b-9948f34f83dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f540f9e-927e-4bc5-a67d-e5cb74a0dd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d059f98-d146-4fd5-aa26-9e559ba2f0a0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680a71bf-e8b6-4ae2-8f15-efb19fbfa488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "55bf68f6-2314-47fd-8bc9-7215a8d5f9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ebf9ed-105b-46a5-98b2-456c0e3ab1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5eda7300-ec9c-49cb-98ca-1f4acf0b355c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab40f7f0-8935-40f0-bf4e-c2c923290567",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4d51fcc-1ba3-4ccc-9061-51d6e7d33022",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8a3b05-0217-4caa-ba6f-f3209202ff40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b246234d-8ef6-4884-a86c-df6480cd0f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b60867-40b2-4f0c-9f4d-3c76a5a21cbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c63b8b6-1d41-4e60-a3bb-cd11fe6dc4f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a659b472-0732-4923-a539-172649ed37b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed79e3aa-f5bc-43ee-8bb9-64bfaf010069"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "feb7095f-8751-4a31-806e-7944ec59ae90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4e8424d-8994-4b99-9eca-97ba02d163bb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a39f376-881d-48ce-90c9-2f9779b974ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a71a1a4-5ce1-4b7b-91cc-c9bdf425cb84"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "191cf0b6-570d-4c17-a26c-bb8a9dc545fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0f4135e-d1d2-44b5-a0b8-ae3398bd84a5"
                }
              }
            ]
          },
          {
            "id": "9741b722-ddc6-44a2-9bb6-7b9f8f38e850",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae1af286-62f0-4e44-9367-20b5116c9761",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6f6408be-2be5-423a-81f7-141e675d5b69",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6af29b-d7aa-4999-9484-ec1521434ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0287c7b0-2172-4611-a4a0-71a6a18f6050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b387ce-fa6c-4698-8093-0477d0854dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5145794-89d6-4fc0-a117-bd4b77c18bd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d6fd3da-01f5-455a-b519-e337fd581e94",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e91380b4-4542-4c86-b5b3-57ba651607b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1606c8fe-7a73-4872-a8e8-fc52a00c15f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24d1febe-24ac-4757-aff8-e3c3e352cf02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7834ebcb-4fab-4971-bdf9-60fa070da30d"
                    }
                  }
                ]
              },
              {
                "id": "020cccca-c831-4eb0-b3c8-1ce71deff8b3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6b1cc6f-a0b8-462d-a130-c6636baf073e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a370d80-5166-4486-83e3-aaa39dd8e04d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccaeca5b-8e3a-461a-bf71-a65fb6c13df6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a3332c6-0636-48ea-921b-30d4ac9ab120"
                    }
                  }
                ]
              },
              {
                "id": "547e093a-ad2e-4966-9100-2e170088d8bb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b35e05b8-8fb2-43b9-935c-e10833095800",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "527c840d-9a5a-4fb5-afff-382236f51a89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88c9e4e8-2747-4b17-aca7-fb2229f09c4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d71afe8b-b7c6-4a9b-b11f-aebcf438f3f1"
                    }
                  }
                ]
              },
              {
                "id": "f422085a-9a16-40b5-b213-5cc5d8dc34c2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7396a6d0-7c19-440c-8a8d-5d26e3004d85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6bb893f-5e88-4c4a-b85b-73bcdc5a40a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00bd4e9f-8c2a-4400-a512-2cbc0b836fbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d50bbf27-0139-4929-b396-e5e904e0585c"
                    }
                  }
                ]
              },
              {
                "id": "b0181a7e-7b2f-4ea8-a6b4-06290c049b9c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "baa99f45-f540-49ff-9dfc-f9a36f309419",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9e042ac-8146-4136-95d3-f8d76608b13b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1431a27f-8bf8-477a-b8f2-6ef8133944a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fadf4bb8-253f-4658-8b2f-05b949e64e28"
                    }
                  }
                ]
              },
              {
                "id": "ed5c96c5-8614-4fd9-9fcf-4fa2aa9dba20",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a289a2fe-18d0-4650-b5c5-30884a74f04c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "487b20f1-ca95-4d79-85c0-f04b389452eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "107c1fea-5bd5-4db3-8d81-567593d264e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c2c96d95-abf7-45c5-a094-a19418dbb611"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e85cc1ab-8e84-4d75-b260-4d0a4d7663dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "beaf72c1-9bde-4a9f-84af-1fd92151723d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0225cc07-bc77-44b0-a0ae-032f2e082b48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c86075a2-0bee-45bf-90ac-c61dae3e566f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6ef2214-94b7-4c0b-b46c-e711ddaab722",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6ba4841d-c044-4ba6-ba1f-2a11a3c18dac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efa16600-537f-4b18-b713-e851ab1b09f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4d2b42f-9fdd-4910-b9d1-25b7fc047023"
            }
          }
        ]
      },
      {
        "id": "235932db-0485-48ba-9364-b385f16ea37e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d70c2e9b-0fc7-49cc-bd46-59026bb8f0e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7ecbda5-fadf-4c08-8378-eb3ac3747713",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7b3ca7a1-ad28-4d7f-bf6b-2d1a577ee3dd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81eb6dc9-68cb-4766-a248-ee9d6ae8a5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d849df58-ffc9-49e9-b8d4-035bbb09d3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1cb4cf-979e-4404-b566-9657aac09633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8e1c97-ba58-4ef9-9fc2-240c12ba54bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f24b470-3fbe-46cc-864b-a5481e3831ff",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb7412f-9253-4371-9f24-c8303ddb0d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbef58b-44c6-4de2-9fe1-4061407ca47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b042d8-b942-4ea3-8664-25a77466009d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27730217-64ca-42b4-8454-b527fc151892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c065f8a8-dcf8-4a90-a56d-13111be8e094",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a73ae0c-7638-4379-a9b1-c94be61b4c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f965a8dd-9f84-4b3b-b548-5ad930484a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a3fb9e-5116-4b58-803f-f1d114770953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c483dac-4660-4465-b95e-4461b38e9089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd3ab8d-f768-4853-b99d-12d7c0e709ae",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d09afb4-3a90-448d-96be-de8cb42c22bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1610c7-0cf7-40a0-bb22-871259b3f86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5eafd99-5752-4c3c-a2d5-4febd7ead29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7ad99e-c575-4690-9e0e-ad84f8627f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad464753-a84a-4f97-b4a3-b2b2374ef2c4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79a0dd3-c10e-4539-ae28-749be4c760bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95239c30-17a9-41db-9b30-6fd77b2f2ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f486cd79-141c-492e-9f32-ef9fc7a5fed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76c79596-9924-4499-9204-332d7fd90d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1583dcf6-98d4-4cc1-8740-2553656e67e6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c006f774-b6a4-4a9b-b6ac-56480f306568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cea51a5-4658-47e5-b4e8-89343d08fa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c49e4f-7ae4-4d80-9405-3d789f059b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f077bc2-0476-47b6-99d7-c6e495164945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e581ce-de2c-4ed4-b693-9108cc442bcd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1076efd-480d-490b-9770-18901588fa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22322fb-1b16-4dc6-93fc-ee707c2960f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06244ca6-e8e9-4e2d-aeb4-09e77b682c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "71945850-3a83-4e16-bd27-7632bb0b0c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f706cf-4cd6-4b46-b3a2-9ccaf992be7b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbc7593-9787-4512-86d5-e641e61ce79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e0a372-ecd2-4e15-92f9-7a2c23f8ac33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dbaeb7-c825-4b61-921d-19c033f8c94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "876751f7-ff8e-4c66-8c71-1553eebb2c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4bcedd-7e7b-43d8-96e6-448a2eb41c3c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d20550-d705-4bb7-81af-776a3abf1261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4400f4-deef-40c8-a9f4-9de7fc32c748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6ebfb2-98b1-4362-86df-f8ed1de8dd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16fc6107-8e7b-4778-b8f5-40291a268262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1463dd33-80ea-41d0-8327-a167d2ebbfe6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1cbf7a-ba0b-4dc2-9f98-7a50155a581e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3f5345-3db2-468b-9297-6f9c29caab19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7afe17-d832-4760-ba65-c7ed690cdaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5450cf73-1f99-464f-95c0-2f5d57a39ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878f4306-a076-453a-aebe-737154c6c1bf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7bacfd-ef0b-4d20-bf61-99066b7075db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1491496-675f-41a8-b83b-aa48f342ee24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41622d77-a75f-40f0-baf2-9e22487d476a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b668c79c-4510-4365-a432-bfe03ea24f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5aa065-817f-41c5-9bb7-57a5d862707b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3048f03-262c-46a8-b3eb-36f112592aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d4fb18-4d6f-4be1-8db4-8b2e01751f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76180a5c-bc27-489f-a82a-57bc250f485d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0881fc31-e521-4505-b168-fc40256f8171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7458c78d-b8fd-48ef-a99a-f7326a2ed058",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac88f607-e2ab-4e69-9573-2170c469386e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031263ad-0890-47ae-b82b-e49ebba700a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e79dff-f7da-4770-9b3d-a5248d06a386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c18dc266-ed99-4f86-b7c0-44ae978eb89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627fb118-0629-4b98-b5df-cada061e2d0f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ae0f37-f32d-4b90-ad6c-c323d86ac938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b4d173-a779-4b48-a1df-d73536b35a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c639ce-c3e3-436c-b8ce-6be72a6d5eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "98543996-0e75-4f63-b931-1fb61e71a203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1358cb19-e2c2-40f1-88fa-ddb9097e9f5b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23e91bc-1ec4-4d27-94bc-d979fa5459da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6cec2c-94d3-441e-b232-5b901815d5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d3bbc6-33c9-4476-aedc-1e45f338ff8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b470bbc-60d2-48bd-a41a-99da643307f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bff7f4-b99e-4fd6-9bff-31557bbd96a4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f36c18f-9746-43df-9842-4a6533786a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9405fe-d43f-49f8-8c89-7c82242467c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc41cdf-d970-4fea-aca7-aa00ffdb7c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0368260d-517c-4648-9ad0-b8c4136a84c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9856390c-5c66-42e9-bbf8-f40042389de8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7eda31-c239-4524-8701-47be70404e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ad0afb-08ff-4c5b-909d-5e3b67cde56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1487ba98-d08d-40c1-b3f0-0d261266f98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "513c22f1-83fc-491c-bfdc-9bb560c04894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecc5220-b35b-40eb-ab78-d25d3c10fe5e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7337151-3477-46e4-9206-4444da86f4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65ba534-8c8b-4849-ab24-0b6382090c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4143574f-15bb-4697-ab7a-b801c00665a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8afe0acf-5b1c-4e7a-9513-b322ab0d95a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6e7874-7a44-45a4-a1f8-cdd95aa7aeb2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a765156c-4c43-42ee-96dc-29eb08c63005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924fbadd-07eb-4ebd-ba40-de39dfcd9939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f04721-2ea7-4a4f-9a4a-1da2f036915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "784a2ea0-bc9b-4678-9b0c-5a85db38c8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81897116-63d9-457b-9013-5b7fcf544a0e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb319ca-2117-46e5-90e3-6d8166912029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180cb0e2-bcc8-499d-a944-08e52bed4a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e74856-1b54-416c-90da-2c3ce42dbf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0edd5d2d-04de-4fcc-b8d6-fbea302e2926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292c28a9-f497-49df-b81e-8a0fff1d4264",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e21904d-60da-47d6-970b-52f22646a2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8fd65b-545a-4356-b540-1a5ed06907e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6890da51-4a51-41b0-b899-0133abdb57f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97f9d8cd-4386-4ded-b431-7ebc19eea5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27f8c7e-e3a0-4984-9e81-1084206f6dd2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4eaa89-b0e9-41a5-8605-0660ac46ded2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f942fb-91b7-4792-96d9-fbeecd6a8186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8b2ff9-041e-4e2b-afe2-cb1b820b9266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff93540-aab1-4ca2-8b7f-24d7174066fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b72a65-3528-400a-bf85-c7e9fd363344",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a04d00e-46e5-41c8-9e66-48ad77930fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e21cae5-8a81-40de-9221-cbcc74936d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370576a7-47c9-48d1-b542-552d7167cee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ce1f35-70c4-44d9-bc11-27fe048a7c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efea0e35-05ee-4565-bded-36380d244bc9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3797d9b-a515-4f83-b734-2a692728e00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943d3d46-3d80-43c4-9539-6823e8fac7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2fb220-4127-447b-b12b-883407fa740f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70513b1f-4fb2-4bc0-b217-988f69f835a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6466297-c7c2-4fa2-a168-bf5df0c4cbb2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1138646a-eb1c-4d69-8568-6fe1a82dad15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1f6683-d5ec-46b7-86d2-5d01b147b584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bdb154-45d7-4346-be7e-a167455597cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f93a718-7688-4d7a-bdb5-ab0ffe94f421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4496c17-e556-4b85-be48-e0a1a6ffcfa6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3e63f0-e617-4038-a71d-c877ff178da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3244cdd9-38bb-440a-81c7-2d697009819a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666f4e31-dbd7-46df-9b44-f1e985cab5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a333f658-a196-4b5a-891d-1206d97dc7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ccf672-508c-4075-b24f-c5bf7b3816e8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e94d4d-f1b6-411c-9d5f-a293c2d6886d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5886990f-f210-4a93-8255-e053bcf37723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b736dd-769c-47a0-81d4-a051973a1274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24a3dd6-33da-41ae-be19-fbc817dfb22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef85447e-19ee-4197-ad1e-15535c544f10",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1365c58f-d65d-4726-a302-f7564fc245fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bc3b25-ad04-4b29-b49a-8b30298067c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9b39a0-2049-4a22-bfac-0c2de14e74e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6faaddbd-d399-43ae-b11e-52b5fed736ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610c8b7d-b0bb-42c0-8d70-858f462a4819",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa075679-083d-4efe-a58d-979a596413dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292f9023-c859-4db4-9fa4-30edb6b52996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75b8f81-05ab-48d3-a66e-13a1a38efb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0d9381-6045-4932-8af2-61f50a77ea85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7652756d-e54c-4c52-8cb7-2847f7c166b1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc5e9e9-1984-4720-b630-4541dca31fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfdd465f-542a-4a55-8773-e98c9c2bf14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69589c5-2a0f-4fd8-905f-e550530f3e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea68f82d-76d7-4aaa-ab44-a068d0b1f7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7dd7d8-7be4-4f33-8c4c-4ed0fd28143a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20334d9f-060a-4e79-a237-b78bdd5e4978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1d648b-4b1f-45bd-99fa-d45aafb4479d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d746116d-0f30-42b6-a5d5-a60440e4e239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0e1fcd-0629-4364-ada4-b0b34b0f5a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50eb7d71-644d-400b-b029-3c5397266080",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd2c374-97a4-4983-81ed-925fbb1e7c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f86b84-872f-4e3a-8ab6-60ee0ecaf3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bfd6e3-775f-4283-b501-4c79e18e0ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0b7574-a22d-452b-8206-89d879334dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b3557c-d398-4211-b37e-90aa89633d33",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a1ef49-9442-4490-8890-b8db59bdc108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b2b6e6-c476-4f3e-8422-193d40f64e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843d2f02-d0fc-4da9-bfe5-27461dc338f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0131ff6c-ea26-4aa6-9108-c0cf40f0940e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8c5c27-4352-4b4a-878e-a5049f356bc8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6351972f-554b-40c5-a936-54123a278fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519925b3-0a54-4227-bade-f09cf3748b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b472024-8ff8-4742-95c7-3e692914beef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f943847f-ee39-49b1-af2a-0f5074d9b28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cd20a9-ce1c-4d69-842a-2f9d42631c52",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397368e8-a388-42a4-a69c-3b23bbed39e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbc6ba9-cac5-4828-b86f-b05e382863d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb7bc89-94df-4061-8dcb-16ef6cf49654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9eeed36-853f-4b26-894d-2bd98d006b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc37771c-1097-4e1a-a2ae-e0da5b56c365",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d096d753-182c-4e53-880c-30a2102562f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae6489e-8785-4658-a0a7-4c8d52a9ef07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42acd934-c177-4d7b-a8b5-bc0e3196eb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e87d12da-fd6a-4bb9-8cb7-90e92fac8413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb574ad-c2a5-403c-9ea2-fa39c3a1d4fb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3c6dc7-397a-4b52-83d4-ac11c7906f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff121192-331b-437d-9f2e-23092da77841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d288871-c0f5-4c1b-9377-eebc219e91ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "320571f3-4f47-4695-b008-b35ed975f519"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef734e8b-5252-4525-b0ca-772322cc31b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f91bfd9-5b53-4e4e-b837-6640f6edd2af",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba114a4-611f-461f-8768-8c8605d4cea8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5eef8308-1891-4f30-9414-8f944d85728d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a64222a-085e-4b9b-af56-130d5b7970c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "490f4371-7c36-4b85-be7a-e4a346294865"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cbecb9a-7a34-4716-84ef-2b4c6ec5a0bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4056ffc-8fd0-496d-8e56-19e248592b55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfb54673-5a03-4759-a621-45424cc7e958",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35e23585-2ce9-4deb-b94b-cc1c856fa0d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75204753-8ced-4fe6-ad73-843bb673fcd2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "da9e8240-9c98-4270-add1-6819104c3499"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "545db2b9-9b04-49f4-a7f4-335ccbef1145",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b758e73-c67d-4bd3-9c18-fcec8027656b"
            }
          }
        ]
      },
      {
        "id": "c1127d48-ed9d-4286-8152-649888455ded",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "37389c3a-b2c1-47da-86b1-c077c915822e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f873113a-3939-494d-9f53-d7e83172e1cd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dddb5910-9bc7-4585-8561-75503566c3f5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54610bab-20be-4b0b-9b53-403f0ba5635a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203d719c-5393-4ddb-92c5-89e8b7f6a3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4a5896-c9fa-4228-9191-9034184b7274",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2e93c9-32cb-429e-a8b6-c6a3628a0b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e5684f-6a42-4b11-b389-d3615c88a6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246b0c03-58f1-452c-bebb-40899e6c45d1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c7871a-5982-4e3b-8360-97041b95869d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e9dd24-d258-423c-88ca-eb1563b24e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1158194a-709e-4dda-91f7-b8057cd84921",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee12417-df4b-469c-936d-881a1331390c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b96b4b-2126-468d-8f7a-660e69342eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2201f9-ec1a-4aab-8050-1e552bfdde13",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099e0f95-9a13-4e24-8acf-ed99e766a35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0560b544-014c-4789-8374-1bb4d6f4b97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697ba3b8-8c6f-4728-bda5-f547bf0678e7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e30d1a-da38-41ef-babd-eb80d63409e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c35e4e6-c1eb-43b8-91b6-b66cb65d1d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697aacbe-8e32-471b-9c1b-fdcaf037348b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9165bbe5-710c-43ae-b870-db1ee22aba93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4b7a0d-155e-4fff-9778-98a147eebe41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3ccc29-8688-4771-aa49-f60d89017512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11dd6fe-7dc8-4ca7-bcfe-27c2ce56728e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b25362d-48a3-4e0b-bd19-4ec5ce766175",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec11d85e-2501-4070-91c4-1d419621b797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d644df6e-01d7-49e8-a45e-ace090fbb258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598ae08f-7b6c-4fc6-9e74-e5852903d8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6d7d32-b4e7-4425-9e24-1c5f37e24a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aed8512-cce3-4b73-a096-2e68e22e348d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e50ce1-09b1-41f3-a0e2-c827e25a4bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f8c4eec-f1aa-40b5-8f93-0bcfd01f9d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332c6647-770d-4d2c-ab1e-0e0d4f0f4dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5970888d-a025-4fb3-82e0-8abbaf7859ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738a1185-1137-46fb-a3fa-3ffbae7a8679",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0426d50c-1f3d-43f4-8d66-990916acb343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5787b677-8c40-4e86-ae3b-6b6db60f1e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce55f4a-ffb6-45fb-9ef7-cd723d5adfd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ab5133-1e99-4009-bbe6-64a3dc8959e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9c9283-76e0-4767-9c57-20735e1c6efb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95991299-a6c4-49c6-917f-120ccc56c4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dedb63b-4d9a-40e7-8ab7-5a1a221345c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8703fbb-7e77-4f7d-982e-bf37d1ea6be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255f5819-1f94-4993-82ae-e7e554170703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49505293-83d0-421a-ac08-9c97a21734da",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d1f68c-da2b-44ea-a8af-2788c6967e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc15ee1a-5323-4678-b0b9-768d586c32f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de0ac85-a5f2-49c0-8faa-ce96ed507bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0896f1-bbe1-4e82-b743-2a3004af2ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8473eed-c408-43b3-a744-def9bba5d2c9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9749b9-67a6-4fde-a073-51268c70c13f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86e1e48d-71f1-4bc4-9c4c-b1c548825425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4755db3-42a2-4141-ac9a-f46308d703bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17eb38a4-6bf5-4455-b17a-71060929bd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f90e509-52e5-45b5-8af7-99a84f86a5ed",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbe7bab-b2a4-41fb-b282-0e5338d9eaad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96cde9ed-d88b-4e0c-bbdd-e786883318a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4928653b-ebc0-4e43-9027-b929b1880878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d6c623-c8ed-4394-8eb9-31b0debc8bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d924506-42d6-4f64-8679-6785dbc97b3c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fe4a2e-1755-4238-b8d4-fffef8e7985b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2208cafc-c318-48fd-a3c7-e38b699e45c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c16b416-91fd-4b90-b120-7af6321d074f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27690b8f-931a-4f93-8f90-ff7bfe620b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4d0fea-9f3d-4e8c-a010-349c50d65eae",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3c9b9d-7bb0-4bc0-a4b3-d5ce764c28f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f3a4e1b-a630-4b02-86e3-285e32c6eb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88866f0d-c26e-430f-84fe-572496e4a15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3711dc-7c9b-4af5-ac85-5ebf5c3d42a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f72193-66c2-4b08-a61b-a125a5bf3ff6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fda348-51af-4717-9207-fe071d42c2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0005c0-22e8-42ed-ac24-a58c08e5fe97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142d7bc8-2e68-4cd5-b36b-c8126196e1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427ade14-28fd-4c68-bb9e-f1a5a5619906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fcf81a-7462-4c6e-8a60-6b9370ba7f3e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d29b783-70c6-42bc-a986-e7dc7cc85a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b617845c-8850-414b-aa0a-0cc286c22c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6befb36b-0a81-4c39-9dc3-816d59553092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5badd7e1-a6b6-486f-994e-b54666210bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3caee82-8b51-4c5e-b32e-af04c15b696d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caaec51c-6901-4598-a434-20cbce4f56b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952630d8-5a80-43ca-82ab-e98f38f61d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98c56ce-bfb2-41c7-bbd8-578540779a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3d33ef-ad9c-4908-8746-b86a01e911e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d51e808-25ec-414d-9a5b-fff6c7888719",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5745b8-b225-4235-86a0-5ee3415cd82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428c6906-a548-433d-ab48-ce1767ab8f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf371ae-4f22-480e-8413-384b4d303672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73309728-3a60-4741-9f91-47c138034086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b23eae-ee34-4f49-a38e-d7ae8bb1aa72",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d583cfce-3d83-483e-95bd-4b1c8d7eac6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461dc808-8902-4fbd-a202-1ddebca03872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d347e1-26e5-4abb-9a07-5e935c0a5162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3891d3-8ca4-4676-beef-7f533d824983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1798f16-845d-4850-b0f5-8965bd60dc0e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4234ba-8f25-4f6f-a4c6-b72db436d7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008c606c-b9ed-4462-aea2-35c6d9923e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9a2152-84f3-4549-800b-61d4eb1b93f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0ba798-2edd-4693-9ead-799636078e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6609f1a4-bfc5-4059-9927-4ca7265ecdf3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a833829-878a-486b-baa3-b828b9a60f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35aa0ce7-5085-4e11-8e66-d17fa85f7ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ee9b5a-2c1c-4884-83e9-d4d09a2e9f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670b3dd7-a06e-4e54-ab52-8d2c3c30a29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3b5fb8-8b19-4e33-93df-c0f9dbb1fff8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4715a37b-903a-448f-b083-8391c06f28d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ece4e8c-7943-405b-a218-38b5907eba0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea275809-ee46-47ba-a5db-608180ae7a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b86de64-456a-43df-9a24-61c25bd5533d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b45f49d-6d4e-403f-acdb-d272c083437f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7502e4-9920-45eb-8ea6-742be8f69b6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a29e33fb-df08-40ac-8344-24b8fbb2ada3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59620f32-9986-4ea7-8407-b2f5a82cbd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63240cd-5448-4093-8441-0267058676fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c63888-a9ab-42dd-a8a8-5eb601e701b6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c332051-7360-47a3-a365-ea7149bbfa0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70eed7c6-99ba-4de9-978d-3e09d9b5d073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e3fd87-b312-4e55-b512-78e57f0c1f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308e0d20-e76c-4411-866c-341ace3b2110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee6fcdd-0176-42e7-97fd-73a52daed4e6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8738e1-5d09-4c22-8071-1d4a13bae2e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5877038b-cac5-4c79-9e1e-b65c217e609f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bdf897-51e8-44b0-ba6f-6e7fbb7e98a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156e44d6-9af7-4a38-a882-60e3330df3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a9f604-fcb1-47c8-b64a-30a48fc5d730",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3db41b-8cc8-45f2-bf72-7b9c9a15be61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7700a1b8-3aea-4b1b-8025-f92f48e06496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4cfd15-f5c5-4f48-9acb-0581c471eb33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e91fba-06c8-4d19-93bb-f3db7ed77a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3030d8e1-395c-40a9-a7cc-e35f244a2686",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe21abe-5cd7-43d9-a130-28298c959e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1429364b-e51a-45d2-9883-f608ef141fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a5314b-ba54-4653-873c-1c6e54b79f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2478966c-ad0d-40ff-b83d-258c3bcb9be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e538cfa-90a5-4723-8c41-3bab2aaf7f53",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97a851f-ab66-4dbb-9470-7fe7532cfcf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13eba485-3035-484e-9707-41ffcfcac04f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16d190e-6894-4c8d-a0b8-00d8dade48d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668d0504-9cbb-41fc-9d7e-3374d2a5eaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749020cf-eb3f-47d6-952d-ae69dd5800b8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bf82ba-663f-4290-a5e0-e9ff5c1c69a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c7d12a1-6a9e-40ae-b50e-5a47bc90c117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0df6fe0-de9b-4af6-a166-03bca787b515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9051c971-7134-40c2-9a3f-568c74d40bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a196129-cce1-49e4-afc6-4fa7532ae1c2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970cce17-5118-4c76-8f24-1c48c3fe1971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d58e35fe-0f87-4a98-a985-0c816cd23585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8853c74b-fb4d-4ebd-b7bd-c1d2d8982046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259cb5a7-ca24-4d11-b6da-da1641746afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b97fe15-4467-44d7-bcb7-4d6ae44c9b02",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73954739-fbc8-46f2-98c5-c71b59ea2273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31b1423-995e-4269-82a9-4ca88115a2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b532b58-a0e7-4075-9fa2-b149eb4a2849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febf6523-8bf0-47b0-9527-495cc665cb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa37b15-9965-490f-8bce-6c9ff3457c6f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5526c58-383f-40ca-8b42-8006939cba14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a126ecd9-9a21-4adc-8d41-c5dd55de5ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea0978f-76ff-4264-9e4e-551d4964542d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c749fe4d-6b68-43ed-a3b3-01ab88029171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d12256-8075-4dc0-bcdf-634f8bc102f1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8422966-08cb-41d0-b1d4-96e213e69ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b72fc2-3b0d-4f69-bccb-d83daf03f66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cb796a-c5e9-4dfc-8eac-62723ebb66aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134b3649-3d54-49bc-a3aa-8a1003f5543e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2017a1f-fe9a-4caf-ae37-4f00581567f6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354c9c78-2864-4f5d-a959-84b9a9ab0c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679152be-b3a9-4407-9b15-db37c587bd9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "534f6e5d-c958-4c1d-a37a-b8cf46944baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec7f3a7-b9ee-4407-a8ee-4013950af855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb332f77-b4db-4dd3-8023-ac9df6c6a239",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3701b3d0-7a81-4a24-ab2a-739a95a430b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf350a8-e207-4902-b2e1-da0add491faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be5d32e-fee0-467a-85c8-d663acd09f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4217ac-079c-4eae-97a8-106de4e2c24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd0710f-67a7-489f-833b-d7e68919a610",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35db204-3f19-427e-b6ab-a1c1eee305dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385f025e-d38f-4cd0-93d7-fc37c2d016e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5768b8-0fed-46d6-ae89-b39980e852ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aceba64-b53f-4450-aba2-466d92f5b474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7750dd-d5dd-40ae-bd2e-55cf9e3488c3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54533333-a70e-4232-baaa-d3c9e536fbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6dc6969-5599-45b4-ac19-21d7a721b82e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e33793-5a4c-4abd-b25c-12b7d8c482e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05491bb2-0d59-4979-80e3-162ad0e1783f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1cdcc3-2106-4cf8-8c2b-5b7d35649e10",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6254448b-1058-4987-b91b-65b52d704094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a9f585-2de9-4007-a7e5-c7bf49483e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0867a70e-5468-45a0-a7d0-9acf499a24ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1010e2e-f235-4fe3-a92e-40b7ad9da6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c90f3e-0a65-47a7-b8f5-7ca723b9f05e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fad87be-1639-4d2d-9d0b-5a47292fdd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6c187b-0b08-409e-b9e5-d9d89264811c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d659e6-d6b4-4eee-9553-2973172506d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfff121-1457-4e5a-a078-be355bbb1527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf73987-5a78-44ae-a060-364c4178dc46",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db48cb7-e5cc-4170-92d0-856309a499e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9678089-0e57-466f-91e5-778666c3c963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d94b5cd-61db-42ea-ba0c-7b779f6a2e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb388d8b-6c59-48de-84e4-712cc2091106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88960fa-bec8-4575-a23d-5bdd6c450134",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433aea0f-3085-41a0-a5af-88651877fdbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d13585-ba39-4702-b25a-26a581645066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b56d093-162d-4855-8d96-8155cc4efcf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b51c7a-a2f0-4642-8114-67152fd81074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7352cf56-fc9f-4f1f-b8a2-e878724986cb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0362fe75-6b6d-4e6b-a481-22e4c69e5a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b69afb-6686-400c-9a79-278af7932c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bc5bda-228b-460e-9ac7-2c4b8c399382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434a0382-7829-415d-95b8-6693dc695a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3442b0c7-c7ff-4d1d-9be5-3d832270b679",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c73119-2ebc-4e55-a1a6-c134843aa769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26adddfe-5a67-45ea-8393-f7ece9651db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90337a91-be70-499c-b1ca-b0b043b7f640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28598feb-3f15-40ff-87a0-7901fef0d9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da9d6d0-a8af-4aba-bf5f-b9ebd20148b8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f86a9d-1f4d-4ec6-8e37-914382ffa5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c3cafd-c78d-402c-9c7e-373c8024bcf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da73f64-1cee-417d-8db4-54148f16774f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ede844-b7f4-43b6-b837-20915953c0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57da06a0-ca27-453b-bda7-8d64f682c175",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dfecf2-02d3-4875-9249-dda6f74dbecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53eade6-5857-458c-a69d-772629138ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ed3009-a8c5-4df1-a5ee-4471420bfdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6801d8-abfa-411c-a663-d4b53b896587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f6eeca-5385-4c6e-bd4e-a3469fc85c9c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0274ed6b-5bde-45e1-88db-7009ab247e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af659cc2-249d-42e3-8d1a-e178d2291a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12602128-c258-4816-80a1-1626757846ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e6cdd6-fea0-46d8-b95d-5817f87f55ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f04e5aa-2ef5-4c91-a622-853037e247b8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd112e8b-8ee2-4912-a1bc-5663c4ab5b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cd3f38-4568-49c7-8229-f83c10e835da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86865cac-d233-4c4a-a0c5-c81cffcf1c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d706a514-b9bb-4392-8c36-73107ceb8259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca2b8df-b7f8-4860-8cf5-e4a829e2fa44",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de792c2c-b0dd-4313-91f6-d86f021e6afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9fb515-5869-414b-84da-bae771f642c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300f416e-c8ef-4818-a1b6-34e05924e95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09de723e-e574-46b5-9ef1-5da9b89838ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204c8001-80af-420f-b15a-000893371a16",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19685063-b1cb-4853-a384-6f9bfd913f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6381c53-5781-48aa-85f1-f6610f977bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23250a3-c3c5-424c-86ce-aaba93c223e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845c2108-e5d6-41b8-a2a3-fe83cb9e74c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65937221-aa28-4103-aea2-220adf2eb4ca",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9407d2f4-86ae-458d-b16a-468ecae805db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7677a8e6-aa76-473a-89e2-d5d177f9b293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3268a87c-4f81-47b3-9c6a-04523051e6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88369be-55aa-439b-ac7c-fdb18f9436df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5174a14-2501-4f45-852b-18036e99ac6d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1444024-8265-4639-9783-42cd6865db36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe84600-2ef9-432d-a25d-c6bade79f994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784b5a5d-a4bb-414f-8322-966e5d0f7799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a820d1bc-75f5-4023-a232-fafe76afc2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0a5396-a41f-440a-be71-a8592644ce70",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6856e7a-27ff-43bd-831f-03fac20b60b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a37d71-48bb-4038-9a07-8d94fb31702a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f22f61-7e29-4747-b481-b65c3e34e76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7524a6-f5bc-4364-a279-420b135d5cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0957c0-482a-40bc-845a-70f3328df7a6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6cf118-e681-4e2c-bef0-2189d4152fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44392288-db95-4a6c-a372-70dfb45efba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16296ea-4bef-4476-9592-b1bfd02c1ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8baa10ad-b96d-4c5a-a3ef-03adc6336c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb43ccc-e368-43d6-adc9-c78e2410610b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fdd128-1821-4cfb-a091-7870573a6b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13cc8b3-148f-4c1d-87fd-554253ac0e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806cec89-76a0-4ba8-bbbe-81c35b3ef6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d135b8ec-ebfa-4f21-bf77-99cb749f76cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572f1755-5396-4afa-8cf6-29b1d6182e13",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1461eb-a844-443b-bb5a-a01d59745a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e1dd3d-e3b4-4621-8ff5-7e2c2224b59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c01d321-b846-48eb-8bfb-7ebdef035f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87848a7-de89-42cc-b164-3b94b3036638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f98019-3eec-469f-8ecc-cc3b382c62eb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361e6f7d-cd03-46c7-9d76-e6aa6b3e5df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ed6fe4-404a-4287-af1d-2f7b0e22b2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5617dc2-0ebf-4519-8b2c-9d1cf4923f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c8ecce-3751-4f9e-b5c1-75fab88bb5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f0c113-406d-4eb9-91bd-f6fcf647cb56",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a2957a-1278-42b8-a974-6635da0d5708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722bebe0-22ed-446d-bb48-70f5628946e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad4c56f-2c89-4869-8bca-50744341ccb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7c0d56-a292-452d-861c-37415918fa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0800d69a-e090-45f4-8d44-6c40b49abb89",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f738c58c-d09b-45d1-b4ef-d708fa882f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb064420-e333-4ea8-8925-fd41f32339d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87fc379-2764-44a1-adf4-6ba753b7cef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f21164-4157-418c-8edc-a4c35913c69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d05bda-9c94-48f7-add0-5bc4777427a0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dedec8-4136-410d-b2a4-003ed78f8ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29314238-fc2b-469e-951d-c4f070a1735e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef6a10c-2098-4b59-a65c-c190bd6e3e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d436eb-7fc2-4ec1-adb4-5ce03058ca10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ea60ac-9ec0-4c2d-b678-a873a9273d90",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7456ef-471b-4f61-b3d4-415e12b222f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7a87e4-dcfe-497f-9a8e-548f267dd897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56879b72-adb1-40fc-9697-bab9193de2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d724b942-237c-4d50-92f3-b6ea613f8a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cbdfc4-af50-48b5-ae7d-d028d540b489",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f13f259-31f5-4751-98b9-901572d3077b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99a4dc0-385b-49c9-84ec-e77c66f58737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71775079-7b04-4a22-bf27-74898d009e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6bfa91-9395-4772-adec-21a6f93cc39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6fe8ba-5f5e-4ea5-a74b-d5ae5fff8af1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d182f1c7-7a23-4119-a9b7-ee8900b0bbdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f45e1d6-2971-48d8-9234-d5d2f3472676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e668551-b175-4906-a7e3-00f968e2a652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f46a7f4-d72f-42ef-8d5a-948e5236922e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8928db6c-9279-4013-9af8-32fd998b6b70",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85ba5fc-673b-42ee-800f-f356dfd2c259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d556dde-9ace-4e7c-9766-3ca8ee23de1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda43ade-9133-4f81-ad09-e6de8c876716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17721b61-8569-4c8f-84f4-2d52c0611194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8489b9-2717-4e00-b7ff-f5ac33ccf83a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dc87ad-f98f-4ae9-89a1-d33087a543e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f94d177c-b1e5-4628-bb82-3b19c0572525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177d4d1d-58fd-47f8-af0a-1e7b0da90ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfdba72-5f27-4617-b157-03ed0617f70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc7a9b2-b742-4317-9d10-7557470a2fda",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a264903e-5f60-4742-a75a-9f223dca071c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c51bba30-5f04-4212-ba35-2dd99aaec75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a671fb1-5494-495e-b4c4-846316b75bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207cbdef-6679-4499-b74b-81c7aaceee0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068b2478-128b-4fd2-b06f-1601b68084de",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1499e0d0-ae80-49ae-885a-22c8cbbb644f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56091442-3cbe-47f0-8ea8-d6460008901d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15796fa4-0ddd-49f4-bf53-086610263521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb413e1a-660a-40ab-bf3b-125b2941aed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3a8441-7afe-4771-b8ca-8059030bb481",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69e677a-052d-400f-9828-83014f6f244e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "834d418b-6bb2-4cff-b100-cda897b3c8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3b33a5-f072-4f6f-a921-9f0d49d2c612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bc23b3-8a06-4da5-876a-5ace75311267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da36b3b7-de63-4941-8d8c-a8ca7042fbc9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a18818f-231e-410b-8efd-4abce370e8db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55220a8f-23b0-4c39-b16b-b5b6ff1dc83d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3eed074-4339-46be-8896-4a6edc14a05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f2ee75-687d-4ecf-9d53-2414a3d57ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171c551f-6bb9-47bc-b504-cf0ac47b1320",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7f7738-a68c-4c32-94e5-f1254363a375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8839e0e4-4425-4976-b00e-79ce9b6446a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1511fb64-2889-487f-8c72-d7087bb400c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212b74f0-b7c0-4b7c-b4b3-ae7df1236ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249fe864-bb28-460d-b312-1fc25728d618",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888a7f19-3cb2-4b9a-8947-63075714cec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a14031-c079-4f31-97d3-90101e7df7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42df96e6-ce0a-4d10-8eda-a39c7c1bf56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38af482-706b-46b6-922f-a7bc6868031b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bdc16e-4e19-4d9a-a12e-8d6eada4958f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f653977-7019-48b3-b1ef-1a859cf75dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86d2b4fa-fc80-4c6d-babb-d3f18025fc5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccb0ab9-d71b-48f1-a86f-64b81dab9c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28251557-295d-4449-a397-48756b1d9ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c68f74a-2f73-4d06-b725-7a7feb0f702f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cf8468-e7b7-4a70-bc0d-cc45631c9f4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c0c0020-2f2a-47f0-8927-c9462f8a5cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae4f8a9-7b70-4770-89c9-f7702fcf20b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb7c5b7-168b-4d2c-af5f-4570b0740936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fdc47e-7a13-4bbb-9919-96149a1a761f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66cfde4-e287-4f4e-aae9-eaa687271a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7af91c9-4212-4599-81e4-297c64e5dee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de4cd66-5ce0-484e-940c-be64f33d3829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0734be06-6c7a-4d5b-8c7a-72c4de5ffee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27869708-50f4-499b-88bb-048c44e1e966",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64da9d47-0ffc-4aa0-8bb6-1b554ef63674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d504e2cc-91ba-4e69-bb99-d1a9e1940be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80fd145-b96e-4c97-9d4e-2f1d1134c05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1456041-c2af-46f9-9369-17c7d1604835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2024cff8-a792-4eea-a7e3-5cadf520602d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091b2d11-dce5-4a01-b533-c835ead279c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56074ae2-5ce1-4dce-b242-c038953e2f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6367bb-ec98-404c-8c39-4b1d8932ec30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750d8688-3c20-4d53-a69c-a5e580fa4d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1204cec2-6695-4d87-b994-302305616aaa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7359cab-90e7-4fd1-9926-321ae3793bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f7c39c9-2e1e-4ee3-b113-314d1beb308f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0528e328-83e5-48fc-a5f8-cf3fb31721d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03af3a4-b8b2-4f20-9a77-60fef389c6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff10143-431e-4975-9896-fcf4c1c76381",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6486f5f7-a57e-47b6-a744-545957c51404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90097a32-8ede-4250-8149-71fa654b6701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca844bc7-c0d2-4c65-872a-a200eea0d232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6ce2af-a3eb-4f31-8c68-e56b6e5acc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c76a05-2e16-40fd-865a-6a93fa8dcf3e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3556082-142f-4f64-8aa8-21ab83595aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe32325-3cb6-4ae8-9d5d-a755539a7369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496a0903-5bb6-4a97-9e7f-58c77c27d76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1fe876-b367-4ed1-889a-bca5e485047a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6953af52-6321-4822-b1a7-43602815a6de",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cd49cd-66b5-44bb-bf69-5cadbcfcc8f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f7d000b-3316-43fc-9e81-dcb17c9d9a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91037a09-52e6-4e42-b546-ecf406aef36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2911a645-e237-4a4f-990d-a3cb7b20b495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a77abbe-7984-40ca-b364-6c2a7e17d519",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d369128-9690-4067-9e4d-02ba6d9af2d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f95c7b55-3b97-4675-872b-f52e8a25fd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47b6377-7478-41cd-ba4e-89a7eb9ed632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fdd98a-1ca5-40e4-9306-51e4f60660f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eeb56d7-0f05-4fb8-888a-d4a4928c8731",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13016577-ea5b-4f67-9d71-5b152783a37c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb35ed0-5134-43d1-aa88-ad23f575bccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eeb4072-22a6-4606-b5e0-a42d85703060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7aedc5-de5f-410a-80bd-55da427308dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765075e4-3380-4fcf-bfb0-1329da06b6ff",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cdea62-70e0-46f3-a33e-a0ba7a9ad6d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a081de-eec4-4321-92ec-0d7d96510328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad09eb11-fcf4-412d-b045-5621cbe78c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bfb2e1-6f80-42fc-ae7e-1066a33b1ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d736fcc1-9494-4dc8-bccd-4aff843eb3f5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bba087-48d1-43dc-ad4b-14bfcdeb3d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a80612d-d5ca-4327-98a4-7f9e75aa44b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50118639-d1da-4f24-95e4-495091d9d299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90f3afa-1f0d-4303-8f5d-73f9db7e7846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943dcb36-73d2-4089-bbf6-e7e231aaacb7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec8738e-2d78-4950-9d23-47265cf1eede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86fa43d-af4c-4f33-a036-d123ccf1f841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd70c5ff-216e-489f-ae59-28c844aa22ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53412169-4841-471a-8697-6ab1aaf49d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c042fe-61a9-427c-b1a8-e6c12374353b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2223a4f0-84ef-465d-a6e2-1be6ca2362a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b36e55b5-e996-4e31-ab19-dcbdc29442d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe9f2c4-15c5-4ee0-9abc-ee3689f76da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586d130e-27b1-439f-80d0-1130b6992602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b694456b-f7c9-4cd4-a203-c9fa5db2dfd6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56ab378-1e7e-473a-a81e-8960d3f8af64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea8a3a2-428b-447d-a50f-29e258ba33de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaced5f-9234-44db-8c74-f19dd1202c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0859d2-fdf9-425a-8bb8-6cde762020b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28897044-05cb-4052-87f4-ca0c6e3b11fc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7da1de3-8a0e-481d-a1f9-26895f6af650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a9944eb-ba98-40d5-a937-834317e7e6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c145df-5145-46b1-879e-0f033515400f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de32dd6-9990-4269-ba00-0bd2adceb7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1e9776-13fc-4776-b140-bd175404169d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ef7690-f413-440d-872e-9835cb2400f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d21b4e-ae6a-43ab-aff4-ad46740bc3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e63568d-eef9-42e8-b8d1-8acc2b5894b7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9664424e-3283-48ad-9c95-36fc43406d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f39653f-a517-447c-a191-20ef78004d85",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e011e530-fd5e-4087-87b3-42a36f751c35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bfc0ac5-2b16-4f60-8dc5-3e0617e0b413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e72f749-0189-4edb-af74-6ccdc20850f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744312cd-451f-49b2-b61b-1ffa3624d622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f32aad-a3f5-49d2-9858-8572e19edde9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbbe049-d0ab-40bd-aab6-0a30377aec18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d60148-bcef-47d2-a0a0-d5d82c437e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f376b314-b856-412a-8fbc-c4c48739440c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff8e79c-ec26-4398-b115-6dfb41cac4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87af9e5-b385-401d-8d44-a20bca54cfde",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4535ffb2-39c0-4ac6-90be-fc8ae5925f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8662bb62-82d9-422e-b1aa-1e48005434bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaec4f7-7145-4739-a020-c6aa12c18d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43a8412-13f9-4170-9136-3797034d8c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc99ea7-a966-40e3-9320-c25b03a19e5e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3b9bc8-7ab0-466d-85e6-1a58943f828d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57162b5f-465b-4411-a88a-fa2c7988d52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488fa73a-2cc1-4a60-b574-3bfe19ba18a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863a8210-721e-42d9-8de2-738820282a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7735b9f8-51a3-44ce-9fa2-44f1846a7980",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcecc6e-5ed9-4a10-8639-0e63a386668b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37913f0b-338c-4ca4-829b-7eeb302da160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d926eea-e2ab-4b6d-8133-4bc1e9da56d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf36c21e-eccd-4e1d-90be-e3e4836bc52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a94ebcc-1833-4ba7-bd4c-abd8a28f0402",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792d80c4-2b1e-49b6-9059-4e741803935b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "669e5536-b274-4ad9-91ad-09c08e3b9895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5b6ed7-7d7c-464e-8e21-8623ac11ebd6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b75751-c2db-4c05-a575-c7d057a4fbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e763ffb-a5c7-4755-a2dd-2327b5b2415b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b6fcda-d79b-421c-8d47-73861bf22fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc537cbd-27cd-4cd0-a734-5ba3c8fbcb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997604e0-e5c9-4140-a7ca-31df29bc2ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba63fe8-1ffb-4f9c-96a7-22975699fe45"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "761d8844-b515-4184-8948-0ea9087a86cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fa0a22f-ae4d-46b3-8078-0dd715694607"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18972ac4-7aa4-411a-b47a-04bd2c7a77eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a945ae65-7b0f-4d25-903a-124675712d85"
                    }
                  }
                ]
              },
              {
                "id": "d832e8d0-28d2-4326-b6eb-90764e800248",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8cb7eea-1810-4ddd-ab32-f2dd85d5f48d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e544f817-2a94-4ff5-ba74-ded9311b3843",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "80153dc8-4a8d-4a3e-9955-7c7f2eb33590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d894b39f-1630-4e63-8c8e-c4c83f507956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2328b887-a1c2-4ca7-ada0-bb0043c1dfc0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e8e344d-5486-4f6e-ac53-44d65b6b63ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4a450a4-baef-4202-8210-7db99c097a61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a97566e-82b6-4e00-8786-559ee81f3d7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e39fe23e-0355-49af-95e0-ba4b4845e23a"
                    }
                  }
                ]
              },
              {
                "id": "1fc7daa2-82b9-4aaf-ac78-0ce374e88a07",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "51a852fd-96a7-4b47-b8bf-a6162161e849",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b14d4d0-9e48-4746-9472-55ae57bdc7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "96da1935-2081-4bf1-8a91-aeeecd27045c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38564962-523f-4ead-8df9-ed92ab32e6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5609937-a25f-4f72-81f1-30f869f8344a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2e1c02d7-7516-408c-a4c5-3a6a0c0b3461",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f7c4303-e82c-429a-be42-1f1f8ee6a4a1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35342d84-f94e-4d8d-ac50-6ca4b165d3d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cb9bf219-d515-46e4-b63d-a777b42195ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0b5594c-cd95-4fc9-94b5-1d1d08eaafa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd5f9a57-a00b-477b-a296-7cb28e2f3554"
                    }
                  }
                ]
              },
              {
                "id": "484dec71-5ba7-4e3f-ba13-c0f634b26f8d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d8c3b14-02ac-4841-a803-a648cbb824b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5f46cef9-6d8c-42b9-be69-9cb80aff8457"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bd41353-4dd9-49d8-a835-b0420bfdc4a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68d252f8-1247-472e-8f86-508277a9db0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecbdf224-ad3f-45ad-b9ee-df9eafa7b40f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fc6fbd49-bd52-4dfa-8e47-58487913e707"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d12ae6e-d43f-4f72-9a67-469fc04e35a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edb78cae-6ea2-433e-a313-01f60f7a5c25"
            }
          }
        ]
      },
      {
        "id": "fe12df43-d59a-46f4-baff-24468beb8383",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8cdcc837-d9dd-431e-8f74-b67a305e3f2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6fc4b1c6-7037-4e42-9eeb-8883b76ca94f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffdf3c25-84d4-4f1a-a917-4bb85b507287",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51e80b0-1f1a-4713-9d5d-27a8ee40d55c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "35c4220d-11e1-4064-9091-fd1a2af1b224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167b26ea-0e21-4ce4-be99-4960c8a2cb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a51de8c7-f0af-4b9e-adce-2cb6986735bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a62446c1-6ed8-4c8f-a880-086ceccda2a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c295b55-2609-4b4f-9455-b4b83580c665"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1624ef0-51d7-4f8f-a7e2-a4535fe4cde0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6304e4d2-09c0-4286-a794-f86dbcedabca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fad76f9-c1c2-425b-9a4b-f08e28a20c26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fe0f52cc-3351-406f-8ddc-75fc84da3c48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "229f943c-5f85-4fee-9703-67e58dfdb649",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9bbb69a3-5434-4af7-9129-237d12a0701c"
            }
          }
        ]
      },
      {
        "id": "40a690b6-d9fe-4495-acd6-c513f39c5aed",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9d453da6-2894-4b1a-bd84-28964a998e12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b67762b-a2e0-45a4-95ed-ee0b80098148",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e017e954-6e34-41e9-99fb-a96415899573",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e962e638-61fe-4070-b547-bfebb329f3ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e1fc04e-679b-4f79-9316-c989705b526d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc121b70-5036-41f4-a69b-5e0a61942e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "418a40b7-ede2-40ba-80fe-b1460c8f01d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "527a74b2-021e-4eb9-a64e-9d36cb09795e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdc1e7dc-4a4d-4b5d-ba4f-9f304a5f14c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a53df3a-e0f0-46d4-b384-9183eea49558",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f8be527-4faa-4439-bd10-f71be00b8182"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42298563-d7d8-48f1-9b55-20d7f97f91fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ca5cb5c-c078-471d-9553-94062abf70cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bace97b0-0f0a-413c-9e1c-942ca1d62cd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e797bfe-bb41-4365-b72b-be75a49d37ce"
            }
          }
        ]
      },
      {
        "id": "ef78e922-ee71-436a-b5ac-eaf00e0162dc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ba3dbce8-9b47-4422-97ee-a5b0e4026994",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e74034aa-df29-4b2d-bc57-b030ef9a9a43",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23ff397d-4bb4-4d38-8306-7e2cccb90dce",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ad052d-4391-43b2-82ed-a26e10921907",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c152498-1634-48b1-9b0f-46fc48f8dd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545145de-70a4-4051-88f9-d19eea123d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c49065a-6879-4959-87b0-e753bb498fd8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd00e4a2-b94d-4cd4-9e78-b999aea4aa5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c79bdbe-9292-49da-9122-f10f6c8044c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c89da06-c569-47da-8e90-4126461a5291",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca24b1b7-e286-4cda-a5b2-ba1daf0fd715"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f834f8e-4ff2-48f5-9633-faa82842df2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "58bf7ef1-e918-4690-9cb0-719de6e6f5ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0430f26f-1723-46a8-aafb-350fb79ba2a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e4aba10-7b24-458b-bc52-05f5d6867ba7"
            }
          }
        ]
      },
      {
        "id": "7f6504e5-63dc-4a27-9921-232b976896e9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05e051e5-61fa-4af5-b97d-d6f1e69eb80d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8b1ecd0-08a0-4cb0-80d9-0d4957c798ae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "012ceb79-5347-46da-ad0d-1dde5e8fb03e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37cc68e8-a89a-4035-a4af-52d05783454b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7799922-7fa4-4494-9d6a-16ffa929837a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.15476190476188,
      "responseMin": 6,
      "responseMax": 10216,
      "responseSd": 704.7726892474409,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722645560134,
      "completed": 1722645596707
    },
    "executions": [
      {
        "id": "f8b34779-6a86-42d1-9fc3-01452618a32b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5efd8f5c-f0f6-461c-bcf8-bde061e36f87",
          "httpRequestId": "64032b80-1280-4ae5-91d5-4fd5768d9f97"
        },
        "item": {
          "id": "f8b34779-6a86-42d1-9fc3-01452618a32b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e9759dcb-a30b-447e-8491-674d8e0af07e",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "cd9b3dba-a187-4b3b-a3ae-1fec19a102ba",
        "cursor": {
          "ref": "572c9a79-1784-42ce-a3df-4b62e891498f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "79ca26df-b057-4842-9488-02ea728e4964"
        },
        "item": {
          "id": "cd9b3dba-a187-4b3b-a3ae-1fec19a102ba",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7e699dbe-e25b-4de4-b7ae-02e21c345b37",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "c77de9ed-9805-4e76-87ec-7e94b800241e",
        "cursor": {
          "ref": "f85c3047-a024-4877-b846-fd45f375aa31",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ea74e4c7-de66-48ac-872f-01a8138b94ef"
        },
        "item": {
          "id": "c77de9ed-9805-4e76-87ec-7e94b800241e",
          "name": "did_json"
        },
        "response": {
          "id": "6bf0b195-046b-46a8-ab97-f8e7526b9ade",
          "status": "OK",
          "code": 200,
          "responseTime": 297,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f947ea17-ee00-4954-9d8d-8ace5fa77598",
        "cursor": {
          "ref": "9cf85d6a-0cd2-45ea-950e-90624dd17c98",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce1206b9-c94d-4d57-ba93-e1c7bd250977"
        },
        "item": {
          "id": "f947ea17-ee00-4954-9d8d-8ace5fa77598",
          "name": "did:invalid"
        },
        "response": {
          "id": "b1fca983-859c-4286-9616-50157d24f6ee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 432,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f947ea17-ee00-4954-9d8d-8ace5fa77598",
        "cursor": {
          "ref": "9cf85d6a-0cd2-45ea-950e-90624dd17c98",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce1206b9-c94d-4d57-ba93-e1c7bd250977"
        },
        "item": {
          "id": "f947ea17-ee00-4954-9d8d-8ace5fa77598",
          "name": "did:invalid"
        },
        "response": {
          "id": "b1fca983-859c-4286-9616-50157d24f6ee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 432,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19540d9-52ca-41eb-ba3d-c060357f5a6c",
        "cursor": {
          "ref": "fa949a94-1631-428f-bf14-40d95b2f53d9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f62a4862-d623-4945-8888-7ae1b0cd8b67"
        },
        "item": {
          "id": "e19540d9-52ca-41eb-ba3d-c060357f5a6c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "70dc65ac-efea-4e1f-8c38-0f5cb990397c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676abaaf-8d8e-4d63-a161-48558ea7e020",
        "cursor": {
          "ref": "e267cfd7-9e6e-47ff-80cb-ef6f551e621a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6c9fb530-14f5-4027-9d63-e0ecf7fa9745"
        },
        "item": {
          "id": "676abaaf-8d8e-4d63-a161-48558ea7e020",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a218ef16-1c53-4c8e-a770-5d6553547115",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c6e10a-685e-4ec6-b1a4-7b4920e76aa8",
        "cursor": {
          "ref": "61a40167-f900-43b3-afa4-e561f403006f",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b2146f56-7a62-416a-9472-be47870073c6"
        },
        "item": {
          "id": "34c6e10a-685e-4ec6-b1a4-7b4920e76aa8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "09d09261-0a06-4ef0-b9fd-38a9b336b653",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1143ad-55b0-4c38-9c52-2a5fe9794a98",
        "cursor": {
          "ref": "2dc1608f-e8f6-4d93-ac1b-a5b26e98fd70",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "868ad0ae-a096-4700-bb2a-bce8f758d290"
        },
        "item": {
          "id": "1e1143ad-55b0-4c38-9c52-2a5fe9794a98",
          "name": "identifiers"
        },
        "response": {
          "id": "22dcc98f-e4fb-40f7-8ce8-bb33d57e1c28",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3817062-f982-458d-81f1-a6636ad4e14b",
        "cursor": {
          "ref": "01b95267-2087-463c-9678-fa6ee5d2cb6b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8274837d-48e3-4710-b8ed-e4edcd2cac06"
        },
        "item": {
          "id": "b3817062-f982-458d-81f1-a6636ad4e14b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "65c47f3a-2aae-4d04-a975-387529786a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a25bce-f221-46ce-ad11-ab1a53cf6629",
        "cursor": {
          "ref": "13cca649-3e30-4d91-bcf7-df268579a595",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2d524805-76a1-43eb-b391-5fb165c0d2fb"
        },
        "item": {
          "id": "17a25bce-f221-46ce-ad11-ab1a53cf6629",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2ceada0f-e152-4338-998a-a4ff7c9b757f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd714a6e-5cd7-4f31-ad13-c84ec3060394",
        "cursor": {
          "ref": "d9596e4d-8f6e-4639-a50e-fd9439eb05b4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8fa0fb32-42c7-4a48-9d81-83191fce8fb7"
        },
        "item": {
          "id": "cd714a6e-5cd7-4f31-ad13-c84ec3060394",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d0787199-30f8-4ba6-b8ff-8d7dbbc154ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f740c954-0803-495e-ae95-afc0ef941463",
        "cursor": {
          "ref": "5446264b-a467-4ab9-8908-cea44ae5afa1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c5e8b586-b184-4212-93b3-57d2b38c2315"
        },
        "item": {
          "id": "f740c954-0803-495e-ae95-afc0ef941463",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "06fbba66-412b-4857-bd02-be33e6d10e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac0ec2a-816d-43a0-aa9e-9a87aa3c244a",
        "cursor": {
          "ref": "9c51681a-df76-44ab-99bc-94dd94250589",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c8ab9189-aa6c-4e52-8816-af2adfe85b0a"
        },
        "item": {
          "id": "7ac0ec2a-816d-43a0-aa9e-9a87aa3c244a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "126859be-bdba-4f05-b93a-15090e1e8fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6503c8a2-3a5d-4cb3-91c6-b92102e6391d",
        "cursor": {
          "ref": "2c922b73-c5db-4b03-894d-02b91aabaf5d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1bcf8551-6ef4-4270-992e-7076625e06a6"
        },
        "item": {
          "id": "6503c8a2-3a5d-4cb3-91c6-b92102e6391d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cb08c619-552d-4c22-83a7-53aa2ab3ab48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6656438c-3d35-4a5e-870b-edf53cb924c6",
        "cursor": {
          "ref": "1dfd4b35-66da-438f-aace-be30be53bcb1",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "da54e056-a687-45fe-ad3f-e92f25903533"
        },
        "item": {
          "id": "6656438c-3d35-4a5e-870b-edf53cb924c6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5824a415-1879-43fc-948c-c5f9f023f027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da043a7-e878-48cd-b481-87b48c7b5ba5",
        "cursor": {
          "ref": "4624dcc2-6f9a-4f55-986c-5ede330eed98",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "41b4801f-fd02-4288-8ef3-1399f70a7e2b"
        },
        "item": {
          "id": "6da043a7-e878-48cd-b481-87b48c7b5ba5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9433a710-2ced-42d6-93fd-0a56e2537f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2b6fd4-d2e4-4d9c-9cf6-63c607e1c8eb",
        "cursor": {
          "ref": "2c0db202-ecb5-4044-b8de-7451a34fc8b7",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "108fa84d-96bb-4c42-ac8b-64cfb754dcbd"
        },
        "item": {
          "id": "4d2b6fd4-d2e4-4d9c-9cf6-63c607e1c8eb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c1eec428-3a70-47a2-aaa6-c6e76e0bbbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baf55db-4f3f-4c88-b209-4f0f2ed0eecd",
        "cursor": {
          "ref": "ba754aff-c98e-45ba-a0a4-dd5e69fae235",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ad183d09-263a-468e-b5f5-cbb1ddfb100e"
        },
        "item": {
          "id": "1baf55db-4f3f-4c88-b209-4f0f2ed0eecd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e3de11bf-feb8-4c13-8842-b02fd73e2473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66254b7b-5542-4dc4-b68a-1a7887a28e72",
        "cursor": {
          "ref": "07d50702-e2a8-4b01-9ff2-910355b1ba60",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "51ce036f-7928-4978-85ac-63ec88b7324d"
        },
        "item": {
          "id": "66254b7b-5542-4dc4-b68a-1a7887a28e72",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5903a19b-31c1-44fc-a333-5d3315a708ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b177173-d5e9-4812-a29c-7341ab2c27a6",
        "cursor": {
          "ref": "c910867b-18be-4eb3-b342-ab79ce54b285",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "12648f3f-8466-4bfb-8bb3-60b21d5b183d"
        },
        "item": {
          "id": "4b177173-d5e9-4812-a29c-7341ab2c27a6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8ec392c7-e05b-4ccf-aa96-c615568937b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c1524e-749c-435b-b021-de719fdedc22",
        "cursor": {
          "ref": "29690b39-3927-42b8-846b-dc24e81569ac",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "598bcf98-ccef-4157-aa69-ac74e574c461"
        },
        "item": {
          "id": "e4c1524e-749c-435b-b021-de719fdedc22",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ca42a745-8354-42fc-bd4d-ae01e9201e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6c340b-5b58-4807-a376-e54fc69ad034",
        "cursor": {
          "ref": "e3efd406-6292-4be0-bcec-a7ba4040b0c0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1aa39902-b074-471a-ace3-03584b7b3bd3"
        },
        "item": {
          "id": "ba6c340b-5b58-4807-a376-e54fc69ad034",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fec91cea-0d28-4849-8b6c-69ce7fe82294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f703ce-d435-49ad-b66d-c5e96e22cb36",
        "cursor": {
          "ref": "8cada042-6265-4448-b1d6-4f4505013ea9",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6f36c3cc-9e27-4233-9fc0-8c5f59f60c20"
        },
        "item": {
          "id": "b1f703ce-d435-49ad-b66d-c5e96e22cb36",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "db073207-f611-40e2-acd9-38079337937a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4748f332-004a-4827-8c53-8da60c36506c",
        "cursor": {
          "ref": "bda9a8f2-3d14-4953-98d3-88b105b49c9d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b120fdf5-95e0-4866-beb3-02ea8188077c"
        },
        "item": {
          "id": "4748f332-004a-4827-8c53-8da60c36506c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1f4d15c3-3bb2-4cdc-98cb-6e7d8304f04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99ff3e1-86aa-4fba-bc6c-29076f0bccbe",
        "cursor": {
          "ref": "a4a875f4-3901-4fee-afc4-9669806f75a5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "992d02f9-b63c-4442-9ba0-cdcffabe8137"
        },
        "item": {
          "id": "a99ff3e1-86aa-4fba-bc6c-29076f0bccbe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "44497da7-275a-4a3d-a996-1fe507041aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c49add1-a8b1-4628-89dd-c187f43d93a6",
        "cursor": {
          "ref": "76130937-c027-4a4e-8c9d-ee2b29837a7e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "054b8252-0356-487b-b59b-6fadcdcf4de8"
        },
        "item": {
          "id": "0c49add1-a8b1-4628-89dd-c187f43d93a6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1720f476-cd11-4670-bf67-b9d45fdd410b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4553a2a6-bd0f-4e71-bfa0-1340fe37604f",
        "cursor": {
          "ref": "0afaad4f-c7fa-400c-895a-1deb51669a72",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9405706e-7c64-4ae2-9386-42d8a5feb9a6"
        },
        "item": {
          "id": "4553a2a6-bd0f-4e71-bfa0-1340fe37604f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "badc49f4-1e44-4feb-97cd-3b622d650b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c291a96-1262-4085-9341-c41a94ae3959",
        "cursor": {
          "ref": "18682cb9-ff4e-45f3-abb3-f704ee0095bb",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4e661338-4cc5-4f0b-a208-651905459f81"
        },
        "item": {
          "id": "5c291a96-1262-4085-9341-c41a94ae3959",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "98a6af21-0816-4661-abd0-7d82c1212110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2450d36c-bc79-4ef2-a503-96fd5897966e",
        "cursor": {
          "ref": "3903f7e1-a3ab-43f6-8cf1-c6e8a0444463",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4cf123a0-2dd3-4259-b998-c057b1ae758c"
        },
        "item": {
          "id": "2450d36c-bc79-4ef2-a503-96fd5897966e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4cf62da3-f458-4cc9-9fea-dfa6bc5df06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cc60cc-93ed-4ee5-9dbc-a128b7e34904",
        "cursor": {
          "ref": "12eef971-ff61-4bb6-b64a-db60539fc1c9",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "538cdefa-070a-449d-8fcf-0f55a255b322"
        },
        "item": {
          "id": "b3cc60cc-93ed-4ee5-9dbc-a128b7e34904",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ec5fc45e-0430-401c-ae4f-47fb8aa515eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a334344-966b-4f7c-9895-e2f7277baf46",
        "cursor": {
          "ref": "1ebfe767-719f-414c-98d1-72848a9b0a60",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c3e8083b-a814-4a3f-ac5c-e08fdc0fed3b"
        },
        "item": {
          "id": "6a334344-966b-4f7c-9895-e2f7277baf46",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bc72331a-fe83-4fe8-a3bc-13f334fb7e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ba3bc7-1519-46b9-b837-637b817ca5a5",
        "cursor": {
          "ref": "f69efe1f-6caf-491d-8755-3020e302139d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fc31022f-ab10-4fe9-83a3-ca0ca51c9d34"
        },
        "item": {
          "id": "55ba3bc7-1519-46b9-b837-637b817ca5a5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e8bdc7e9-77f6-4f9e-b5b9-3e469c0d9ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca218bf5-f8d4-4a48-99ec-9e8424783b2c",
        "cursor": {
          "ref": "694a9262-a6fe-4e9e-b0fb-54f19aea3a8f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "09dc2492-ac71-4444-80e9-5b70f5d757e7"
        },
        "item": {
          "id": "ca218bf5-f8d4-4a48-99ec-9e8424783b2c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "05a59663-f1b3-4afe-afb7-7d9a88dd5c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13940a2-4f4d-4a8c-baa9-97f6422b5a68",
        "cursor": {
          "ref": "80b4ce40-3c7c-4a44-9549-a354db952127",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f247d40d-5f6f-4a98-8e17-87c5d6be5495"
        },
        "item": {
          "id": "f13940a2-4f4d-4a8c-baa9-97f6422b5a68",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "abde0935-14c4-4e67-9578-524b6d8bee09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1b45d8-5a8f-4cee-88c7-b652cd91fe38",
        "cursor": {
          "ref": "db4285e1-f6f1-46b0-b074-e2fbf57c84aa",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "05b4ef8e-e029-4476-adc3-a652c78f398b"
        },
        "item": {
          "id": "8e1b45d8-5a8f-4cee-88c7-b652cd91fe38",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1ecfac1f-fd10-4337-9667-7eef1f82975e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e8f6d0-3954-41db-aa14-b8de6e0fef5a",
        "cursor": {
          "ref": "a9c9cc28-e3b1-4863-98c3-a1b5b7f37b04",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "18530768-586f-4d89-95da-dd7e2cd662fb"
        },
        "item": {
          "id": "38e8f6d0-3954-41db-aa14-b8de6e0fef5a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7ce19da0-26e0-4204-8b56-a30495a042c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54da963-ece8-4443-bae5-d2e7eee67e08",
        "cursor": {
          "ref": "d1474daf-656a-43dd-96d2-6da9655f89f7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8ebefb65-ab15-422b-bdef-e7efd3d31954"
        },
        "item": {
          "id": "b54da963-ece8-4443-bae5-d2e7eee67e08",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "79552d18-67a4-4c9f-bed4-081d1e0c2fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7aa69df-cc00-4bde-a5b1-45186abace51",
        "cursor": {
          "ref": "4c888632-a0ba-4951-b262-a0ae3220130e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9de4a767-9be7-4def-a3b4-a2952cc46539"
        },
        "item": {
          "id": "f7aa69df-cc00-4bde-a5b1-45186abace51",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5638a8bc-9769-4bbe-afed-26d3a77ab268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358ff9c9-8706-4c41-8680-ae09c4d5c4a2",
        "cursor": {
          "ref": "e84ace69-f56c-4cfc-bba3-75c622ecb580",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c75c0574-f7cd-4aaa-a227-cd0a1bf3ef4c"
        },
        "item": {
          "id": "358ff9c9-8706-4c41-8680-ae09c4d5c4a2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5141cdcf-93aa-4478-b2ea-d71aa066098a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec82107-dc45-4580-a3cc-3608429c0703",
        "cursor": {
          "ref": "618a67fc-1e8c-427b-908e-1dea72c1c09b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bad28a0e-6586-484d-a074-2dfbd112b622"
        },
        "item": {
          "id": "bec82107-dc45-4580-a3cc-3608429c0703",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c23beee4-133e-4811-853d-52d080ca0b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4affd3d-53f0-469b-885d-9ee61e04b118",
        "cursor": {
          "ref": "cdb84c13-b617-4b58-aeb9-dc26ff4048bf",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b9aa917c-64da-4f75-adc8-57c5acaffbd4"
        },
        "item": {
          "id": "d4affd3d-53f0-469b-885d-9ee61e04b118",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3bfcc850-28d3-4c22-80df-be84bd6caa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ac2add-bc27-4070-98f9-6fa5c04935bb",
        "cursor": {
          "ref": "74d6f318-4bb3-4d37-8b6e-fe75d688206f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f70259e4-d391-4718-b1c8-4e78142403d9"
        },
        "item": {
          "id": "a3ac2add-bc27-4070-98f9-6fa5c04935bb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f3c77ca2-f667-4dc3-9490-11c888ed4c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de01aaf-b877-4d0d-9d70-ad0dbcbf1c3a",
        "cursor": {
          "ref": "4593ff2f-1c67-4d55-a01d-fd0763e7c7bb",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0e6ef75a-4c44-4ba4-9405-ae00ceda73fd"
        },
        "item": {
          "id": "3de01aaf-b877-4d0d-9d70-ad0dbcbf1c3a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ff9b5c2d-61e5-4234-bf4f-6f583842ae89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4d608f-bf1b-48f3-9326-4c11def98dae",
        "cursor": {
          "ref": "19e08edf-53fb-4f7d-8fa7-1b2f6c7cd931",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c83c80d3-ad7f-4099-99ef-f763dd4d97bb"
        },
        "item": {
          "id": "ec4d608f-bf1b-48f3-9326-4c11def98dae",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "245568f3-1e54-4f3a-8fb1-6da407c8ba7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c7f716-4f39-4f1d-a050-5808509e71c0",
        "cursor": {
          "ref": "c2390751-e2a3-4d59-85a3-2269d8a2afcf",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ce863eba-2457-4ec1-90ea-dc6dc9436091"
        },
        "item": {
          "id": "d1c7f716-4f39-4f1d-a050-5808509e71c0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1c5b342e-dddc-46a2-b342-37553a8bd679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bee2487-9c6a-41bc-af8b-7d16f2932ba8",
        "cursor": {
          "ref": "a9dacd9b-8258-4c6c-b64b-5b1769bfa80b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "efc901bf-4f45-440a-94b4-a4154da9ddc4"
        },
        "item": {
          "id": "3bee2487-9c6a-41bc-af8b-7d16f2932ba8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bfd45c6b-986c-4199-a35e-6a7d46b9886f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c99b2f5-1c48-456e-aafb-d35bb226dcd2",
        "cursor": {
          "ref": "76881aa3-d5b4-440b-8f0a-d774654f431d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "645c48d1-7429-4e95-a1f5-fdc230425ff2"
        },
        "item": {
          "id": "6c99b2f5-1c48-456e-aafb-d35bb226dcd2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "de5192e4-ef04-4653-8c21-b4c5772730e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acdf248-6108-4ea6-ae64-a8484ac193c4",
        "cursor": {
          "ref": "4988a59f-2223-466f-8b83-17ccd12218b5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "becbdfa6-4d7e-4014-b00c-494abf34ea59"
        },
        "item": {
          "id": "5acdf248-6108-4ea6-ae64-a8484ac193c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "91fd5afa-f1bb-4421-b6ef-546e369d523b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c85a2aa-6ba1-411d-ae06-805b2ccb1608",
        "cursor": {
          "ref": "dffe732d-06b3-4fbd-abd2-aca4aaeaa32c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ee8a9aff-c256-4aab-8be8-7233831d0e89"
        },
        "item": {
          "id": "9c85a2aa-6ba1-411d-ae06-805b2ccb1608",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a58ee36c-3ad4-496c-9849-6da8dad4ac37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a92268-8a68-4210-bba5-fb8041574aec",
        "cursor": {
          "ref": "489a6abb-8f1b-429b-8d3a-b243afb37390",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9c46e7a7-39cd-4b5f-96da-61b7b72ef2a6"
        },
        "item": {
          "id": "90a92268-8a68-4210-bba5-fb8041574aec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "558e68cb-48a9-4556-96dc-592eb4b03a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e19217-f847-4a95-a0fa-2946b61bcdd9",
        "cursor": {
          "ref": "87c0a97c-d084-4974-89c0-72db7a9a6e26",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "16fde3c0-ff06-4153-9bb3-4de429bd9521"
        },
        "item": {
          "id": "06e19217-f847-4a95-a0fa-2946b61bcdd9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c787026b-3169-4ecc-8cb5-c2e2d4408928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532d749d-6718-4984-a7ea-e1a2f66ee125",
        "cursor": {
          "ref": "60cd0992-7339-4004-a56f-71ae3ac0cdf6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6d3f4245-13cf-4c08-a655-1762dd8459dd"
        },
        "item": {
          "id": "532d749d-6718-4984-a7ea-e1a2f66ee125",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "40007c7e-b642-4f66-bbe1-b3e5a0645cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f011eced-6867-45c5-9e6e-d54d64d37802",
        "cursor": {
          "ref": "01c23b68-b717-47da-a78a-0094a21a3316",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "982e10ed-2299-47b5-9d98-6924c8e243a5"
        },
        "item": {
          "id": "f011eced-6867-45c5-9e6e-d54d64d37802",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ca2bf152-2908-4547-adac-f06dfb5e0f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d9eaa8-ad7f-4325-9ecd-ab6fdfba6eec",
        "cursor": {
          "ref": "20edb9dc-0ec0-43b0-88c8-5171baeefe01",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "edc7ce28-54ee-4a6f-b6e1-e48b51126284"
        },
        "item": {
          "id": "42d9eaa8-ad7f-4325-9ecd-ab6fdfba6eec",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6c6a2405-f1d2-4a6a-9dcc-4a8be7eb1ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e2c98b-7003-4a22-bef7-d5365f6336df",
        "cursor": {
          "ref": "05cb4aa7-d597-4152-ba3a-61fc7cd1bd76",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5f0fa968-74cf-4ad5-a523-07dbf2000829"
        },
        "item": {
          "id": "70e2c98b-7003-4a22-bef7-d5365f6336df",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4ac73c83-211c-4dce-b133-de7e9f74ed7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4728b6d2-4043-4824-8a4c-a2a535b0bf0b",
        "cursor": {
          "ref": "e6963feb-30bc-4e73-b016-c4147de7b573",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4f4eabf0-e189-4ec8-8ce6-645d2d65bcf9"
        },
        "item": {
          "id": "4728b6d2-4043-4824-8a4c-a2a535b0bf0b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fef38990-d8dd-459e-9bc8-e2cd764250dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bef2cd-4ce2-4a8e-86ce-c743e80b177d",
        "cursor": {
          "ref": "2976b0e7-38b8-4fd8-921e-73bd3cc4ae49",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e5647d7e-b523-42ee-baea-df213b6953b2"
        },
        "item": {
          "id": "39bef2cd-4ce2-4a8e-86ce-c743e80b177d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "35081a6e-711e-42b9-b5b9-51053eca72d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a6f66d-02c1-47bf-b801-2dcb3fbc0aca",
        "cursor": {
          "ref": "8f732ec8-f3f4-4e8f-b0df-33e75b8d4f1c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3948f7a6-c2f8-486f-b40d-46e416048e88"
        },
        "item": {
          "id": "50a6f66d-02c1-47bf-b801-2dcb3fbc0aca",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "658938a5-471b-4651-95f0-f17c47e8b526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acda1543-88b7-45e8-9afa-11a89fd6e14f",
        "cursor": {
          "ref": "19baaad6-302f-45d1-8bd6-03a7bff9fc53",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d909bc73-6359-4e63-8c8c-e05fd3d3737c"
        },
        "item": {
          "id": "acda1543-88b7-45e8-9afa-11a89fd6e14f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6f75aafc-49c6-4a4f-9484-f3a3e8aad4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff2026d-8de6-4af3-b754-4eb8eb4d4825",
        "cursor": {
          "ref": "b379e956-2293-4b6f-9fa0-c8e569ec37aa",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "12d5320e-8575-43fb-adb8-934d5d5a6aa8"
        },
        "item": {
          "id": "7ff2026d-8de6-4af3-b754-4eb8eb4d4825",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "36306abd-288a-4210-bb7e-00a77740172a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2530fcea-2877-492e-b288-4bf875f5b0dc",
        "cursor": {
          "ref": "41b3e92c-4336-436f-b396-35ea5bfaa979",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3204db31-af73-4763-a168-d7b058c6f267"
        },
        "item": {
          "id": "2530fcea-2877-492e-b288-4bf875f5b0dc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ea33b46e-65a0-4517-861f-1f38ed278768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a600eb93-90db-4ab5-bda8-0a4baad08f8b",
        "cursor": {
          "ref": "0dcffd1f-9080-4d85-8042-dde642b39cdc",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9a53211a-cf22-403c-ada3-404400bff935"
        },
        "item": {
          "id": "a600eb93-90db-4ab5-bda8-0a4baad08f8b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "70d30320-0499-4141-9599-ecc9f307602f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31051af3-25a6-4ea7-a5a4-a87538595e0e",
        "cursor": {
          "ref": "82ad4a74-2892-44f6-8357-0b294c349580",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b36e4a17-36ef-4fd1-9798-bbb87e5866dd"
        },
        "item": {
          "id": "31051af3-25a6-4ea7-a5a4-a87538595e0e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f05ee2fd-9471-403f-aaa6-5cfabc4a0971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570a0548-c019-4b27-a8a5-0ec7dbe128d1",
        "cursor": {
          "ref": "aa1ecaa6-1fb2-49fa-8bff-4242c8f2264b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "be6ece6e-2789-483c-965c-201532433b24"
        },
        "item": {
          "id": "570a0548-c019-4b27-a8a5-0ec7dbe128d1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "20bdd0eb-b217-47f7-a89e-0af3f62966ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0af132f-2f86-4f6a-a07f-bd90073cab4d",
        "cursor": {
          "ref": "c7401f85-3ca4-472e-9584-dc2a6681fcf1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "20b9cc93-fb5f-4f23-af8c-016776e717bd"
        },
        "item": {
          "id": "c0af132f-2f86-4f6a-a07f-bd90073cab4d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "49eb63bc-ba2b-4cb3-a4b2-76bb1b00ae73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f98d617-5659-4f9b-b8e6-5d5533032797",
        "cursor": {
          "ref": "7c87f710-9784-4419-b301-dc7d333fa4f6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7ea3cab6-f80e-409a-a88e-78512b520ad6"
        },
        "item": {
          "id": "7f98d617-5659-4f9b-b8e6-5d5533032797",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "38bd3cc8-8b01-4ea8-983c-91b214e295c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bed840-c47a-4139-bfa9-c840eb5738d5",
        "cursor": {
          "ref": "cb9d7e3a-6c7d-415b-83be-01f03c0e5b1b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "841d94b2-ac80-40ca-832f-ea6f5b48fdbf"
        },
        "item": {
          "id": "f1bed840-c47a-4139-bfa9-c840eb5738d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "441f8aad-2857-4768-ad02-ccd86649a4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb848ea7-2586-47cb-9a56-03e2f33b1dde",
        "cursor": {
          "ref": "519f34e9-6fde-411a-9729-6764b0c982fa",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "851e29ba-8a28-4290-9f27-da605dcef007"
        },
        "item": {
          "id": "fb848ea7-2586-47cb-9a56-03e2f33b1dde",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3555dcb4-4d6f-429a-adcd-ccfb324260fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8510eb0-7eb9-46f0-adea-e905b4b5434b",
        "cursor": {
          "ref": "47d256f2-8ce8-4f25-8c35-fb19b9b6c363",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8b8c984b-ecf6-4ea9-802e-da6e5e6a782f"
        },
        "item": {
          "id": "e8510eb0-7eb9-46f0-adea-e905b4b5434b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1ca74345-73ee-4d64-8847-d78dcd48b87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ba0148-8ffd-4875-90c7-7d4bbcba5d5b",
        "cursor": {
          "ref": "72f27aa9-c15c-43bf-bc34-0ef442e5d505",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3604c59d-7871-4a7e-b296-af6a9ad4688c"
        },
        "item": {
          "id": "d3ba0148-8ffd-4875-90c7-7d4bbcba5d5b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "14e6fd00-3db6-4fb4-ad08-01c101b92f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8d1a67-f97b-43d0-be5a-674f74ea9bf0",
        "cursor": {
          "ref": "38f7ed2a-7791-4636-b83d-ca04e687e0ce",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e3b053ab-3692-4078-bc62-ce062c486f63"
        },
        "item": {
          "id": "3d8d1a67-f97b-43d0-be5a-674f74ea9bf0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e3756c57-d4c0-45ba-9a05-d4eb1d533fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407adb27-ceb0-4ca7-a5af-c6a571748016",
        "cursor": {
          "ref": "43c6e031-d54e-4746-9536-2186ee521f59",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b2a9567f-9fa2-4b41-8e90-59f6ee285331"
        },
        "item": {
          "id": "407adb27-ceb0-4ca7-a5af-c6a571748016",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "102084e6-8292-4cf1-9149-de1514fc69f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffe12e5-c3cd-4671-8f5d-01db02a541b1",
        "cursor": {
          "ref": "79c969d7-40bf-4d2e-85e6-c96a46207804",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6e3224ec-edad-43be-98ad-a2e537001c68"
        },
        "item": {
          "id": "9ffe12e5-c3cd-4671-8f5d-01db02a541b1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "14b23163-fd09-4f93-b689-3f26b56b9a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6668b8-12ed-4c8f-9ed8-e052d00a4701",
        "cursor": {
          "ref": "bf345d5a-9c49-4f54-a59a-dc1cc02fceed",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "10f8b3ee-ad83-47d9-947a-0a4f60b347e9"
        },
        "item": {
          "id": "fa6668b8-12ed-4c8f-9ed8-e052d00a4701",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ae895dc2-03e6-4d93-b29a-da58cde3f3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bfbc6d-0e6b-4625-b403-dfd13d94145c",
        "cursor": {
          "ref": "57fcf84b-274b-452d-9326-d6b8243d1bc0",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1f911a6c-534e-4378-8f90-5141be81a948"
        },
        "item": {
          "id": "31bfbc6d-0e6b-4625-b403-dfd13d94145c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "27ab27b6-1e3d-407b-8c3a-c5363e5b8d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea47e86e-c2b0-469b-9cfa-188befef0035",
        "cursor": {
          "ref": "26d90d48-cae3-4416-b031-db8ec14d3a48",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8bbd112c-fdae-45b6-b7c5-e2117ad9563b"
        },
        "item": {
          "id": "ea47e86e-c2b0-469b-9cfa-188befef0035",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8a8a7e8e-1348-4fe8-9688-19bcf37d7a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1fdd3d-3149-4916-9407-9e93fda49542",
        "cursor": {
          "ref": "78a88dea-ed0d-4c98-9cea-5395f5524070",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "32f61c8e-b975-4e53-827f-9920d402b2e0"
        },
        "item": {
          "id": "4f1fdd3d-3149-4916-9407-9e93fda49542",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c530af95-2088-4b4d-811d-215184f7ff25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d848de6-5ec0-4301-a47c-ff7577feabf4",
        "cursor": {
          "ref": "c0d4d1ac-4758-463a-b39c-07ce7ded7ac0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "310079a6-06b4-4f8d-b321-233eb0ad171b"
        },
        "item": {
          "id": "7d848de6-5ec0-4301-a47c-ff7577feabf4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "815ea7b4-92ff-4b82-b684-8e3e2eca76cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd97a373-95f9-4386-8f80-10d30aa35d08",
        "cursor": {
          "ref": "0197ecfc-b915-439d-929c-61fb9b781251",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ff950508-7f2e-49a7-9baf-89fa70b599a8"
        },
        "item": {
          "id": "cd97a373-95f9-4386-8f80-10d30aa35d08",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9cd54e3b-d4cb-4368-b93b-df52972478fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28828bcd-f028-4800-88e5-06e00b5a884a",
        "cursor": {
          "ref": "b1bfcff5-7d3d-4c2f-a6d7-5b89211d09d7",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1206084d-a2fb-4558-b308-8b2938719e46"
        },
        "item": {
          "id": "28828bcd-f028-4800-88e5-06e00b5a884a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9caa3bb5-482a-43d1-ac22-3ad0907f254f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecccf3f-9aa2-444c-bab1-01408cdac16c",
        "cursor": {
          "ref": "028defc5-0846-40c0-987f-a15238457115",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aeb55e7d-d170-420c-9b07-fbfa55bcf6c8"
        },
        "item": {
          "id": "7ecccf3f-9aa2-444c-bab1-01408cdac16c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "42f92862-6c74-482f-951d-4b7219ecae42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55b58a0-a8e2-41ee-8e5c-c5a48666f24b",
        "cursor": {
          "ref": "58241123-6419-4941-8d81-fc9d77c1de09",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c7213245-af2a-411c-a6ff-33793009b343"
        },
        "item": {
          "id": "d55b58a0-a8e2-41ee-8e5c-c5a48666f24b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e61b7c1e-fea8-4dcd-9146-253cb2efd7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01313a8-bedd-4480-8f74-8d53a40aca51",
        "cursor": {
          "ref": "cc7368e7-3d80-4614-81d1-db6a8d3033a6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a25e4cec-9edd-4cdf-8488-2630665eed6c"
        },
        "item": {
          "id": "e01313a8-bedd-4480-8f74-8d53a40aca51",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5ae931a5-4f69-418a-b3fe-7c55fddee93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d9d141-7991-4765-88ef-e8bddfe5db14",
        "cursor": {
          "ref": "220377e2-e7d9-434a-b076-19bf36132922",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6bc54b42-0f31-404f-9746-4c61a6b6967b"
        },
        "item": {
          "id": "00d9d141-7991-4765-88ef-e8bddfe5db14",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2dd96d37-e730-47e5-8129-c77480ed7ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1e2c2c-85a0-4dd8-b734-4b796a8a7ab1",
        "cursor": {
          "ref": "e61d5c73-35d3-4a56-bd4f-e767f25a3afb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1237eb81-9213-4fbb-8918-45fea8133725"
        },
        "item": {
          "id": "7b1e2c2c-85a0-4dd8-b734-4b796a8a7ab1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3d1c7bca-c319-44c4-8838-ab53184f7e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15891163-fc9f-4951-a0d2-2f2d624adaf5",
        "cursor": {
          "ref": "b93397c8-6309-436d-ba75-f023d4428ad7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d3990757-865e-4206-9317-e4b75845044d"
        },
        "item": {
          "id": "15891163-fc9f-4951-a0d2-2f2d624adaf5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9b1b188c-72b7-4f98-9693-0bfc99cba85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb83d18c-b82b-4506-8d9f-90d898546ced",
        "cursor": {
          "ref": "3b7dfd67-c1da-49b7-95f2-c7f0141ccf1d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "05915935-6dff-4ff9-b2b3-642f75f4ea01"
        },
        "item": {
          "id": "fb83d18c-b82b-4506-8d9f-90d898546ced",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "10aca22d-ce53-4498-adf0-c76cfdb988f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdde8ae-38cc-4513-8625-bd2f44601bf1",
        "cursor": {
          "ref": "abf6d6da-f678-471f-a04d-5867c54f1f61",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "54dea445-b007-423a-ab36-7766ea8ad394"
        },
        "item": {
          "id": "6cdde8ae-38cc-4513-8625-bd2f44601bf1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1078bf5d-993e-4fec-891a-3ffbc503bda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384c0cc1-8592-47ba-b514-a1803b0e4d40",
        "cursor": {
          "ref": "2d293112-96b8-482f-bb80-8b8c72ea61fd",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a7b8f7c6-f3e0-4c9f-833e-4922f1925f2c"
        },
        "item": {
          "id": "384c0cc1-8592-47ba-b514-a1803b0e4d40",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b4b7b254-df64-414d-93cb-f72ad63c8bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4d5281-1b41-4dc4-92cc-349f075e6409",
        "cursor": {
          "ref": "d9ab16c1-5c63-48f5-bc9d-32019f143d84",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a01ef5ae-b912-4fee-8627-25dfeaa3bef5"
        },
        "item": {
          "id": "3b4d5281-1b41-4dc4-92cc-349f075e6409",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "81d24d7a-8782-44fd-88ad-b3d9b05b330d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ab1e87-6884-4f8a-86e8-b92f0f798ad3",
        "cursor": {
          "ref": "f7dac177-680c-4e77-9589-f2bb301a5fe0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "deb8ac2b-dc5f-44a8-a298-54afd26d610e"
        },
        "item": {
          "id": "71ab1e87-6884-4f8a-86e8-b92f0f798ad3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8b4adb65-efb4-4b3c-868e-8d9c77fa28bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9946b770-36bf-4f7f-aa22-f01429d2892b",
        "cursor": {
          "ref": "946535a8-e249-435d-8250-773914ab55b0",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e1d86630-2183-411c-b9a9-4238d67d1cc0"
        },
        "item": {
          "id": "9946b770-36bf-4f7f-aa22-f01429d2892b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "48e63e96-4326-4c83-8340-bfafc48b956e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5ed1e5-1c78-40e2-a45d-5f9bf0994ecf",
        "cursor": {
          "ref": "95fae45f-dda8-4d5d-a6ff-583a0abd2be4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5dd3ae76-5a74-44f2-b1c0-cb95a3fede17"
        },
        "item": {
          "id": "7c5ed1e5-1c78-40e2-a45d-5f9bf0994ecf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "93371b99-e3b4-41bc-aa30-e14e6a7a2954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fee0cc-02de-4f57-b4d7-52dc32d78812",
        "cursor": {
          "ref": "3e61227e-f181-4e8e-874a-ea28a60d1eb6",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6d8deda8-5650-46ab-b61e-6786a6ece1a0"
        },
        "item": {
          "id": "06fee0cc-02de-4f57-b4d7-52dc32d78812",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8f84ef1b-6521-46e4-8c27-e2c3112fdfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f223b0-c4cf-402c-83ac-b0b7309468c7",
        "cursor": {
          "ref": "4d28f2bb-5b26-49ac-a6ad-eef34b1d8983",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "679d1cfa-ef72-498e-9c86-f01980bf2560"
        },
        "item": {
          "id": "98f223b0-c4cf-402c-83ac-b0b7309468c7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b90c9c8b-b4c7-450b-b013-b4e84ce0f166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3217ae61-f541-4ac4-8865-57ebedf11a51",
        "cursor": {
          "ref": "f62955eb-bd87-4243-ba62-957c1354a645",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c82c5140-c801-43de-bf24-e616c4171a8c"
        },
        "item": {
          "id": "3217ae61-f541-4ac4-8865-57ebedf11a51",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4d458691-a570-48b4-b814-a41a774ebe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d699a5-b924-4d44-90c5-463ef504c629",
        "cursor": {
          "ref": "3618a0bc-5b09-447a-8fca-284482d5866f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2f502696-462d-4e75-bab9-65bf273aea21"
        },
        "item": {
          "id": "72d699a5-b924-4d44-90c5-463ef504c629",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8a3105f3-37dd-4364-a6ab-74d7ed1f215a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317a742b-a8ce-4e22-9f18-1b14e297bba7",
        "cursor": {
          "ref": "90373f81-825c-4b46-a38a-179d66631bde",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "71d6df80-5303-4d24-866f-9932cab08426"
        },
        "item": {
          "id": "317a742b-a8ce-4e22-9f18-1b14e297bba7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "697f4fca-400b-4886-ba7d-73f535c71378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d730216f-134d-4fbd-b785-c4adc9aa4065",
        "cursor": {
          "ref": "5af54c5e-dec6-4e86-b85a-8f18dc72cbfc",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "441ba63e-c982-47c7-995f-e8681fb4068a"
        },
        "item": {
          "id": "d730216f-134d-4fbd-b785-c4adc9aa4065",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "22dc2dcd-5974-4857-a8a9-8492b270d89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d059f98-d146-4fd5-aa26-9e559ba2f0a0",
        "cursor": {
          "ref": "57b6d22b-1600-45c3-8c11-0e5d0f2301d6",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8ee7f26c-fc3c-4a4d-bfba-f726b189a204"
        },
        "item": {
          "id": "9d059f98-d146-4fd5-aa26-9e559ba2f0a0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "301901be-b88a-44d2-9b10-147b5b6d4ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d51fcc-1ba3-4ccc-9061-51d6e7d33022",
        "cursor": {
          "ref": "126f4fba-f9b3-43a7-a6b5-0d4dc77381e4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ea8c880a-5689-4d2f-a2b0-849195431527"
        },
        "item": {
          "id": "b4d51fcc-1ba3-4ccc-9061-51d6e7d33022",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "46d91c31-0401-473c-bdc8-041938b93d5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6408be-2be5-423a-81f7-141e675d5b69",
        "cursor": {
          "ref": "094403e3-81b1-4122-9f66-af17f401d6d1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "63bbc640-06c6-4ef8-8fa0-c773020814f5"
        },
        "item": {
          "id": "6f6408be-2be5-423a-81f7-141e675d5b69",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "fad14cce-36d1-4b2f-8320-27dc5ed79d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5d6fd3da-01f5-455a-b519-e337fd581e94",
        "cursor": {
          "ref": "43a41bc8-1a1d-4fe7-aa08-1a1321ee4983",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "04263ac9-4fd3-4d5f-8f65-57ae4c2e9247"
        },
        "item": {
          "id": "5d6fd3da-01f5-455a-b519-e337fd581e94",
          "name": "credentials_issue"
        },
        "response": {
          "id": "df96c3d6-c588-4dd0-a1fc-c2861783b768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "020cccca-c831-4eb0-b3c8-1ce71deff8b3",
        "cursor": {
          "ref": "3616a618-dbb1-4c92-83f3-34725bd49071",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b38e206a-502f-421d-a1fc-e383ab473423"
        },
        "item": {
          "id": "020cccca-c831-4eb0-b3c8-1ce71deff8b3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8a35bfe4-f074-49f6-b825-70923b7f4656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "547e093a-ad2e-4966-9100-2e170088d8bb",
        "cursor": {
          "ref": "2f234aaa-a5ab-4a4f-8254-c02380a81806",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f122ed66-4a28-46b8-8e42-7f24c58608e4"
        },
        "item": {
          "id": "547e093a-ad2e-4966-9100-2e170088d8bb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cc854d39-def7-416c-b2ad-082292a79dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f422085a-9a16-40b5-b213-5cc5d8dc34c2",
        "cursor": {
          "ref": "bb64f7a8-ca98-4bae-bb72-be165e63c09f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fcdc9746-5216-42ae-a7f8-19fa26fb86c7"
        },
        "item": {
          "id": "f422085a-9a16-40b5-b213-5cc5d8dc34c2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "958dd738-c86a-45cb-994e-3368777841e2",
          "status": "Created",
          "code": 201,
          "responseTime": 10216,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0181a7e-7b2f-4ea8-a6b4-06290c049b9c",
        "cursor": {
          "ref": "4fa265c8-7ec6-4fca-8a9d-27d9044d34a7",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "089d749e-c931-4508-b2bf-f09a1b4327cf"
        },
        "item": {
          "id": "b0181a7e-7b2f-4ea8-a6b4-06290c049b9c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c7c6cace-f952-456d-b0a8-394ca20d9e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ed5c96c5-8614-4fd9-9fcf-4fa2aa9dba20",
        "cursor": {
          "ref": "3d47acb7-7ca8-4ee9-86d1-a90b17ab7f80",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cbca2a91-d65f-45eb-b04c-f049bd4e1891"
        },
        "item": {
          "id": "ed5c96c5-8614-4fd9-9fcf-4fa2aa9dba20",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8756729a-7ad4-4c73-8727-219779283d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7b3ca7a1-ad28-4d7f-bf6b-2d1a577ee3dd",
        "cursor": {
          "ref": "9d0c0708-ee0b-4701-b389-8b77d04ff9d0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cf626275-0705-413e-baf8-53946ad6f4f0"
        },
        "item": {
          "id": "7b3ca7a1-ad28-4d7f-bf6b-2d1a577ee3dd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "654c0a54-aefe-4ca7-8f4b-e08a1e8ac9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f24b470-3fbe-46cc-864b-a5481e3831ff",
        "cursor": {
          "ref": "cf18ce71-a10f-44b5-a211-86a708ac7892",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "83f301a7-d290-45a3-89a5-e4db47761978"
        },
        "item": {
          "id": "2f24b470-3fbe-46cc-864b-a5481e3831ff",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e50f1e5d-c3a3-4f48-98c9-2fdcf93e4af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c065f8a8-dcf8-4a90-a56d-13111be8e094",
        "cursor": {
          "ref": "d75415ad-9fd0-42df-969b-85648fa49d79",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1fe6891e-ae4a-42a3-a5fa-78a4771abdf2"
        },
        "item": {
          "id": "c065f8a8-dcf8-4a90-a56d-13111be8e094",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "042cc200-460f-4a0c-a36e-87b3bc112d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd3ab8d-f768-4853-b99d-12d7c0e709ae",
        "cursor": {
          "ref": "04402686-8574-4dba-93a1-209bcb11a93e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "96651418-baca-4ff5-959e-60592e8efcec"
        },
        "item": {
          "id": "6bd3ab8d-f768-4853-b99d-12d7c0e709ae",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5d2feff5-4be7-4477-9eb4-de024c32766b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad464753-a84a-4f97-b4a3-b2b2374ef2c4",
        "cursor": {
          "ref": "61f692df-4690-4fef-925a-55c18af4c0ae",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "110e7ef4-0d4b-4366-accd-2294c7d19591"
        },
        "item": {
          "id": "ad464753-a84a-4f97-b4a3-b2b2374ef2c4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3ecd68ac-16be-4703-b116-c871b27cb6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1583dcf6-98d4-4cc1-8740-2553656e67e6",
        "cursor": {
          "ref": "af884d2f-2691-4dc9-bfdc-46f520aaa639",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a67f2dde-a88a-4d1a-bff1-c022e1d74bb2"
        },
        "item": {
          "id": "1583dcf6-98d4-4cc1-8740-2553656e67e6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a851026d-5658-476d-a267-bf4c6262711c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e581ce-de2c-4ed4-b693-9108cc442bcd",
        "cursor": {
          "ref": "92fa0e7c-f6bb-41f9-a1ba-138e9fbb5f99",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5a74c900-f155-423b-832e-9ca15f1e18fc"
        },
        "item": {
          "id": "14e581ce-de2c-4ed4-b693-9108cc442bcd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b25b02cc-c173-4eef-a89e-0b3421942bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f706cf-4cd6-4b46-b3a2-9ccaf992be7b",
        "cursor": {
          "ref": "e66cf066-89e3-4dbb-8912-89526c09afd5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c425548c-773b-4806-afd4-9bff67b95a16"
        },
        "item": {
          "id": "83f706cf-4cd6-4b46-b3a2-9ccaf992be7b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "88317eaa-3500-4405-bd4d-71fb6105d1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4bcedd-7e7b-43d8-96e6-448a2eb41c3c",
        "cursor": {
          "ref": "31260a86-adc4-4155-95ea-64682e4e9baf",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "918fa978-6422-498b-81af-8edb096d6949"
        },
        "item": {
          "id": "4d4bcedd-7e7b-43d8-96e6-448a2eb41c3c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "009ff4bc-1047-4ab7-86f7-52fdf976134b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1463dd33-80ea-41d0-8327-a167d2ebbfe6",
        "cursor": {
          "ref": "06f2c994-cb89-46ef-b08c-b69cdded53f1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0eae8186-ea43-4d53-b558-ee717b067dc1"
        },
        "item": {
          "id": "1463dd33-80ea-41d0-8327-a167d2ebbfe6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1cc06e06-18c8-4c24-9790-29af30bf8ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878f4306-a076-453a-aebe-737154c6c1bf",
        "cursor": {
          "ref": "c29c153d-e01c-4fa5-ba4e-7a84a2725c82",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "07e0f68c-711b-409b-be9d-aae0aed1bcef"
        },
        "item": {
          "id": "878f4306-a076-453a-aebe-737154c6c1bf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e2bf11fd-f3cf-4840-a4be-bbb13d13383f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5aa065-817f-41c5-9bb7-57a5d862707b",
        "cursor": {
          "ref": "a7a3133d-c191-411c-86f8-fbaaac81ca09",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ae80fdb2-62ef-4bf8-9673-f216065fd721"
        },
        "item": {
          "id": "5b5aa065-817f-41c5-9bb7-57a5d862707b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "96d926c6-417c-4577-a9f9-1228ed08bb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7458c78d-b8fd-48ef-a99a-f7326a2ed058",
        "cursor": {
          "ref": "5ba49d1e-10fd-4d8c-9578-51d4d08cdb93",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7a5de2f7-f211-490f-ab40-5ae324b474f4"
        },
        "item": {
          "id": "7458c78d-b8fd-48ef-a99a-f7326a2ed058",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "839e6ea4-8baf-44e8-bbf2-d617225e991b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627fb118-0629-4b98-b5df-cada061e2d0f",
        "cursor": {
          "ref": "c00f5034-84b5-4ce1-93e3-b90d232d54cb",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "40556b80-f535-4c8b-ae0e-b2491dad43a2"
        },
        "item": {
          "id": "627fb118-0629-4b98-b5df-cada061e2d0f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5a478790-bd53-4c3c-952e-3e6aa89bb144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1358cb19-e2c2-40f1-88fa-ddb9097e9f5b",
        "cursor": {
          "ref": "0aaee66e-2dbe-44cf-9aa7-c3469c2ea676",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e7e0e672-b467-48f2-916f-426c054839bc"
        },
        "item": {
          "id": "1358cb19-e2c2-40f1-88fa-ddb9097e9f5b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ec066c92-445e-4caf-8338-8a7f2eea1e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bff7f4-b99e-4fd6-9bff-31557bbd96a4",
        "cursor": {
          "ref": "cb4b9bf6-609e-437a-94fe-42921faa91fb",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "369bff03-d13b-4e92-af96-4adee567d019"
        },
        "item": {
          "id": "d2bff7f4-b99e-4fd6-9bff-31557bbd96a4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b596a9ac-7150-4e8a-96cb-229064d71300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9856390c-5c66-42e9-bbf8-f40042389de8",
        "cursor": {
          "ref": "a68dffa7-7ed8-4754-9724-c3ada0cb4608",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "845be7ac-86ab-4bc2-957f-b26519e14dd1"
        },
        "item": {
          "id": "9856390c-5c66-42e9-bbf8-f40042389de8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5653ea4d-f1d3-4694-ba5a-36a0a73824e7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "1ecc5220-b35b-40eb-ab78-d25d3c10fe5e",
        "cursor": {
          "ref": "f12e62d0-9195-4f22-a3c3-8ec07159a0ac",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b284e842-9fa3-4939-ab75-4aac78739834"
        },
        "item": {
          "id": "1ecc5220-b35b-40eb-ab78-d25d3c10fe5e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "35308fa3-ac87-4341-a2d1-71a7322b745a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6e7874-7a44-45a4-a1f8-cdd95aa7aeb2",
        "cursor": {
          "ref": "9a57643a-1585-423c-9df2-b8786f34c597",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "24d08ea2-93e7-4d18-8fe0-68be4c91862a"
        },
        "item": {
          "id": "2a6e7874-7a44-45a4-a1f8-cdd95aa7aeb2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fb29580c-dfa3-47d2-9c0e-05e17d2e7e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81897116-63d9-457b-9013-5b7fcf544a0e",
        "cursor": {
          "ref": "e4368839-9425-450c-9373-fcf22b346c92",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "45a1d90e-4c28-4fa6-9164-52b3abaeb98c"
        },
        "item": {
          "id": "81897116-63d9-457b-9013-5b7fcf544a0e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "db52e546-757a-4782-80be-0f55ab5d2be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292c28a9-f497-49df-b81e-8a0fff1d4264",
        "cursor": {
          "ref": "d187a9a5-4341-4678-b34a-994b62ffbb22",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d9c31d2e-8f54-4e4b-91c0-0181d09ec095"
        },
        "item": {
          "id": "292c28a9-f497-49df-b81e-8a0fff1d4264",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4863576d-e575-46d0-a916-666cd87be645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27f8c7e-e3a0-4984-9e81-1084206f6dd2",
        "cursor": {
          "ref": "0fec672f-a7d9-4f0d-ac02-fa244cf93e44",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ad6220a5-2c26-484f-8d1c-e859aa81ea74"
        },
        "item": {
          "id": "c27f8c7e-e3a0-4984-9e81-1084206f6dd2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2fd96f91-b113-4dab-847b-be6f33ae5c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b72a65-3528-400a-bf85-c7e9fd363344",
        "cursor": {
          "ref": "44153471-7ba7-4690-ad40-910c236e082c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bea911c8-4813-42ad-a15b-5394bb0ebd80"
        },
        "item": {
          "id": "f8b72a65-3528-400a-bf85-c7e9fd363344",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "12088de1-e4d4-4bdd-91e8-d9a87a7a3c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efea0e35-05ee-4565-bded-36380d244bc9",
        "cursor": {
          "ref": "10acd93c-8420-477e-a446-4ed2ea992c75",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "269d9c81-6946-42fc-9b93-e02573699d66"
        },
        "item": {
          "id": "efea0e35-05ee-4565-bded-36380d244bc9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "080d0313-8374-486a-a3e0-aae7d2e5c8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6466297-c7c2-4fa2-a168-bf5df0c4cbb2",
        "cursor": {
          "ref": "8768ccf3-35d1-48ca-bfd6-05f1658f7479",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ece6add8-f8f3-4d05-8442-f4311c5a916a"
        },
        "item": {
          "id": "c6466297-c7c2-4fa2-a168-bf5df0c4cbb2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "456cb1f1-14ce-4c58-9261-f9d704f05cd8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a4496c17-e556-4b85-be48-e0a1a6ffcfa6",
        "cursor": {
          "ref": "68e49ad3-53db-4e52-993c-ae303b6eb045",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ac1232e4-0c6e-4692-9326-8baf574aa749"
        },
        "item": {
          "id": "a4496c17-e556-4b85-be48-e0a1a6ffcfa6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bde5ae4e-1ea9-417d-9aa0-44ac27b0391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ccf672-508c-4075-b24f-c5bf7b3816e8",
        "cursor": {
          "ref": "b98de044-b746-41d9-ac35-9a868db0ab2f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "540f2aec-af8c-4077-ae83-27235f17fcfc"
        },
        "item": {
          "id": "79ccf672-508c-4075-b24f-c5bf7b3816e8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4b9239da-1173-4748-8b03-3a2f94fb5ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef85447e-19ee-4197-ad1e-15535c544f10",
        "cursor": {
          "ref": "446e2155-d422-4a91-b24f-7fb59606cb2a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9fecd2d3-504d-45cd-aad8-85148daa37cf"
        },
        "item": {
          "id": "ef85447e-19ee-4197-ad1e-15535c544f10",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7a3d9942-df79-4f35-b70b-bbdf38f41090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610c8b7d-b0bb-42c0-8d70-858f462a4819",
        "cursor": {
          "ref": "184d81d5-2575-47d8-adc3-f46e8b125a32",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e14853b1-d756-4000-9d4e-8c7f32315c28"
        },
        "item": {
          "id": "610c8b7d-b0bb-42c0-8d70-858f462a4819",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "db72fe29-eb24-463a-aec2-97a63c90a573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7652756d-e54c-4c52-8cb7-2847f7c166b1",
        "cursor": {
          "ref": "ec071e00-fbd3-4fe5-9518-61d45109e1fc",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9ebf9f47-da28-4a93-a692-5ecdaf4c1529"
        },
        "item": {
          "id": "7652756d-e54c-4c52-8cb7-2847f7c166b1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7fdc03c0-d086-421f-9682-23a943f0b8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7dd7d8-7be4-4f33-8c4c-4ed0fd28143a",
        "cursor": {
          "ref": "a7e4c433-6718-4cd5-843a-58a40ae46ca4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5af1d50d-0a2b-4f44-86ad-46718def9592"
        },
        "item": {
          "id": "fd7dd7d8-7be4-4f33-8c4c-4ed0fd28143a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "43304a21-72ca-4c36-b95c-4f956d528a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50eb7d71-644d-400b-b029-3c5397266080",
        "cursor": {
          "ref": "55156183-9e55-49ff-9c7a-830666281ba2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "39986631-a250-457d-b144-f67b404fbe6c"
        },
        "item": {
          "id": "50eb7d71-644d-400b-b029-3c5397266080",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8b123a68-3843-4570-9052-a9def0303f46",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "58b3557c-d398-4211-b37e-90aa89633d33",
        "cursor": {
          "ref": "018ce9a3-ad7c-4440-98a7-1e7e21ada383",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ef9ee595-290a-45d8-b68e-60cc6b434ff1"
        },
        "item": {
          "id": "58b3557c-d398-4211-b37e-90aa89633d33",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4c6a1728-bd9e-4435-8ff8-9bf8da382e8e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "ff8c5c27-4352-4b4a-878e-a5049f356bc8",
        "cursor": {
          "ref": "9d5a099f-7785-43ed-b698-78e5e244eb33",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e3c7d902-677b-47d7-a65c-e3bf40f4d49a"
        },
        "item": {
          "id": "ff8c5c27-4352-4b4a-878e-a5049f356bc8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "306701cf-44e2-4fd6-a5f1-8e7296e14e8d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "10cd20a9-ce1c-4d69-842a-2f9d42631c52",
        "cursor": {
          "ref": "1550096f-9929-48eb-b9dc-5c43ef2b65df",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "951573d6-d02a-4367-93a3-f7b8f34a3bf9"
        },
        "item": {
          "id": "10cd20a9-ce1c-4d69-842a-2f9d42631c52",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ec555163-6e14-46f3-9e93-adc2699874c1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "dc37771c-1097-4e1a-a2ae-e0da5b56c365",
        "cursor": {
          "ref": "372d9fdb-ee60-4be6-8e96-0dc7873dce5d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5d102d31-c580-422a-a268-678689df1a69"
        },
        "item": {
          "id": "dc37771c-1097-4e1a-a2ae-e0da5b56c365",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "039715ce-040a-4a17-b20d-856ed99a827b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "1fb574ad-c2a5-403c-9ea2-fa39c3a1d4fb",
        "cursor": {
          "ref": "7aa7c5fb-f8f1-4b2f-9f0a-8d3e7425e8bc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "aa4eafc4-dedc-4380-8304-8cf1d5af7bc3"
        },
        "item": {
          "id": "1fb574ad-c2a5-403c-9ea2-fa39c3a1d4fb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c6a6eaa5-354d-4e4a-b166-edcac202349a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "6f91bfd9-5b53-4e4e-b837-6640f6edd2af",
        "cursor": {
          "ref": "3e879098-c7a9-4137-9693-3ad99b42ad83",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0749461f-9e2c-445d-893b-73d129941515"
        },
        "item": {
          "id": "6f91bfd9-5b53-4e4e-b837-6640f6edd2af",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "10f628bc-f304-4bb5-9df8-d4e25736a5d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddb5910-9bc7-4585-8561-75503566c3f5",
        "cursor": {
          "ref": "dd07a619-aeda-4b48-b6ca-9fb53a5f8680",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a3a30c3c-ec14-41f1-8dc2-c893e9837778"
        },
        "item": {
          "id": "dddb5910-9bc7-4585-8561-75503566c3f5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e8c847c2-2180-4a57-b5f8-6fde17e89bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4a5896-c9fa-4228-9191-9034184b7274",
        "cursor": {
          "ref": "21391550-c1fd-4676-9765-95dba8e1681a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "31c35f24-97ca-4041-acdf-606c19665c78"
        },
        "item": {
          "id": "7b4a5896-c9fa-4228-9191-9034184b7274",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3995c47e-6704-4389-b867-976db4db19ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246b0c03-58f1-452c-bebb-40899e6c45d1",
        "cursor": {
          "ref": "c274567d-8aa3-4789-9012-e4de84dfa37d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "57fd26e5-72bd-4489-800e-bad201ad4287"
        },
        "item": {
          "id": "246b0c03-58f1-452c-bebb-40899e6c45d1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a30df935-2ce4-4446-ac96-c193110b1b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1158194a-709e-4dda-91f7-b8057cd84921",
        "cursor": {
          "ref": "627486a1-3cfa-40f6-843b-e562097eaa89",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "08dfda6c-f22d-4590-99e8-e43110672b38"
        },
        "item": {
          "id": "1158194a-709e-4dda-91f7-b8057cd84921",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4a765c91-1600-4e77-b81d-7fb3afa341f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2201f9-ec1a-4aab-8050-1e552bfdde13",
        "cursor": {
          "ref": "209832f4-828a-4e96-bed6-36b8c6f18f18",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1cb3244f-e3cc-4388-a1f0-b0e0b6a25160"
        },
        "item": {
          "id": "0e2201f9-ec1a-4aab-8050-1e552bfdde13",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "87520c73-197e-4a89-b4f5-6c447c825376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697ba3b8-8c6f-4728-bda5-f547bf0678e7",
        "cursor": {
          "ref": "29e74303-8261-469d-8068-66bf4ef048f6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "50a88764-ae3b-4d42-90a1-972cb3d8ad37"
        },
        "item": {
          "id": "697ba3b8-8c6f-4728-bda5-f547bf0678e7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8c8f50ba-c69c-42dc-a54e-e9f3f287bba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697aacbe-8e32-471b-9c1b-fdcaf037348b",
        "cursor": {
          "ref": "bdf12a8a-30cd-4b2a-a5e0-299ce2de9f36",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "023376c4-e2fc-4fef-8608-3a32c2ff28d3"
        },
        "item": {
          "id": "697aacbe-8e32-471b-9c1b-fdcaf037348b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "089ea563-0872-4d78-b2f0-e8582a570c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b25362d-48a3-4e0b-bd19-4ec5ce766175",
        "cursor": {
          "ref": "eb12a264-ccc5-4c37-8686-d7a8dd6d72ce",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "20ff40c3-83d2-4419-9e21-044e9331f361"
        },
        "item": {
          "id": "3b25362d-48a3-4e0b-bd19-4ec5ce766175",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0f631bcc-96b3-440f-b19e-b214eecf4594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aed8512-cce3-4b73-a096-2e68e22e348d",
        "cursor": {
          "ref": "b83f1f65-bee3-46b3-ac46-bedc297db986",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1771cd31-d040-475f-809c-dbac9881dc56"
        },
        "item": {
          "id": "0aed8512-cce3-4b73-a096-2e68e22e348d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1e0fce2a-8638-4b16-acd1-5c34b7f6d682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738a1185-1137-46fb-a3fa-3ffbae7a8679",
        "cursor": {
          "ref": "39a8c69c-b8ad-495c-b9d9-45c3c1b8dcb6",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1eeb439d-c23a-4d6a-a146-1391ecfee91a"
        },
        "item": {
          "id": "738a1185-1137-46fb-a3fa-3ffbae7a8679",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aa8c5be1-487d-4a10-afa3-3cce6da10cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9c9283-76e0-4767-9c57-20735e1c6efb",
        "cursor": {
          "ref": "d3eb6881-03de-48b7-abee-d506c213fb39",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d68e2b3b-e4ed-4d4a-9783-3adc33445468"
        },
        "item": {
          "id": "3f9c9283-76e0-4767-9c57-20735e1c6efb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b2f19b86-45e2-49fc-ad0e-0137703171eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49505293-83d0-421a-ac08-9c97a21734da",
        "cursor": {
          "ref": "6a06add9-910d-42fe-8cec-e0aab1320cc7",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "039ce66c-8abd-4fdf-acfa-2665bca63f8c"
        },
        "item": {
          "id": "49505293-83d0-421a-ac08-9c97a21734da",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4668116f-8816-4145-837a-df261a8ce633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8473eed-c408-43b3-a744-def9bba5d2c9",
        "cursor": {
          "ref": "2c72e85a-5e10-4bf8-9e4f-3df0a2f12d0d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "df1f6935-e9ea-4ce3-b12a-2b572e09fa9f"
        },
        "item": {
          "id": "d8473eed-c408-43b3-a744-def9bba5d2c9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "820d9893-f50d-46cc-ada6-7be6590b919c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f90e509-52e5-45b5-8af7-99a84f86a5ed",
        "cursor": {
          "ref": "d4e6a4b6-c0ac-499a-9c38-11d4c66d4e3b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "443f1b85-125e-4b35-809e-9dca828f8674"
        },
        "item": {
          "id": "3f90e509-52e5-45b5-8af7-99a84f86a5ed",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e824cca1-f2b1-4d97-a06d-1076e289ef1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d924506-42d6-4f64-8679-6785dbc97b3c",
        "cursor": {
          "ref": "d631f72b-6e6b-4fd3-a2d3-ff3c267419a4",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eebbbec1-d765-4bd6-9541-32e30e483e1e"
        },
        "item": {
          "id": "4d924506-42d6-4f64-8679-6785dbc97b3c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bf4e89ce-84eb-4550-b114-1138f3cc1919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4d0fea-9f3d-4e8c-a010-349c50d65eae",
        "cursor": {
          "ref": "7e86e607-7928-4d65-9690-ea3ee30dcc83",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e72272e3-c9ee-4c7a-848e-f31b83e5d184"
        },
        "item": {
          "id": "2f4d0fea-9f3d-4e8c-a010-349c50d65eae",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "41463ef2-d3ab-4a6e-a919-60365c7539e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f72193-66c2-4b08-a61b-a125a5bf3ff6",
        "cursor": {
          "ref": "dcdf4e34-4eca-494e-b621-6fcf8f4f4dab",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "36e4d706-2e66-4c56-9d60-9ac9507374cf"
        },
        "item": {
          "id": "45f72193-66c2-4b08-a61b-a125a5bf3ff6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "190b0888-34e6-4d09-b045-2b7fe6e96ba2",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "88fcf81a-7462-4c6e-8a60-6b9370ba7f3e",
        "cursor": {
          "ref": "ede181b4-449a-461b-abd2-251825af9adc",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "58b159d7-94c2-4f9d-b611-e5dd19087517"
        },
        "item": {
          "id": "88fcf81a-7462-4c6e-8a60-6b9370ba7f3e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3b5917c5-997b-4443-b384-c84a003b8054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3caee82-8b51-4c5e-b32e-af04c15b696d",
        "cursor": {
          "ref": "d01893a8-e47d-4132-bbbb-9c2f21c25c67",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "63d11dd2-0f86-4c16-8c0a-c948982d562c"
        },
        "item": {
          "id": "f3caee82-8b51-4c5e-b32e-af04c15b696d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "310d6162-d5da-410b-9a94-fe51bfea9f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d51e808-25ec-414d-9a5b-fff6c7888719",
        "cursor": {
          "ref": "5ea764b7-6c5f-483d-9ee5-eef75305fd2e",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4a4239a2-5299-4409-822a-fef0089f5b3f"
        },
        "item": {
          "id": "0d51e808-25ec-414d-9a5b-fff6c7888719",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aa112afe-26aa-4f96-ba9b-6160547e281d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b23eae-ee34-4f49-a38e-d7ae8bb1aa72",
        "cursor": {
          "ref": "6ed47b07-0324-4f13-a145-72be22372870",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4d67795e-58eb-41a1-9937-e2753b164660"
        },
        "item": {
          "id": "f2b23eae-ee34-4f49-a38e-d7ae8bb1aa72",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b03136d1-57e3-4c64-91d7-fb64f34974b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1798f16-845d-4850-b0f5-8965bd60dc0e",
        "cursor": {
          "ref": "5b9c2e0f-1383-4d7d-ae4a-49d96bbb3148",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b6231541-3f1e-4231-96bf-0ff9293ea2a8"
        },
        "item": {
          "id": "b1798f16-845d-4850-b0f5-8965bd60dc0e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "60e4ec47-fcff-4f95-bb75-f0df35182e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6609f1a4-bfc5-4059-9927-4ca7265ecdf3",
        "cursor": {
          "ref": "e9cf3eb3-a86a-45a9-a7f2-a546eb963796",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5989b312-337a-4309-a906-7985f97c791f"
        },
        "item": {
          "id": "6609f1a4-bfc5-4059-9927-4ca7265ecdf3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fe89cf4c-d728-47a5-b92c-3f2a173b323e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3b5fb8-8b19-4e33-93df-c0f9dbb1fff8",
        "cursor": {
          "ref": "dbe5e4e9-cc5e-4124-a59f-ad8a8a605b61",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8fc88336-b234-4c99-828a-e8cfdf8ebc4f"
        },
        "item": {
          "id": "ad3b5fb8-8b19-4e33-93df-c0f9dbb1fff8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "72bc3292-eb76-433e-9bb6-0f1986cab72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b45f49d-6d4e-403f-acdb-d272c083437f",
        "cursor": {
          "ref": "de5ae883-f815-418f-92f2-7fb32835403b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "47d81f49-fb69-4a76-ac25-478a6e5f82ad"
        },
        "item": {
          "id": "6b45f49d-6d4e-403f-acdb-d272c083437f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dc46c048-679e-44cf-9e24-ffc49a2a31ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c63888-a9ab-42dd-a8a8-5eb601e701b6",
        "cursor": {
          "ref": "b6465f17-7539-4ebf-88b4-0c956019fdd3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fd5194db-39d9-4bea-9922-c86f80a2062c"
        },
        "item": {
          "id": "29c63888-a9ab-42dd-a8a8-5eb601e701b6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0139ed65-4e6b-4a7b-9068-4f59e2618e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee6fcdd-0176-42e7-97fd-73a52daed4e6",
        "cursor": {
          "ref": "d29d9cf2-2e8a-4dbf-b816-afa29a4a9d7f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8877e0c4-b8b3-4e80-9f49-9c23276a15da"
        },
        "item": {
          "id": "2ee6fcdd-0176-42e7-97fd-73a52daed4e6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "60b8c7f8-ea9b-42dc-9607-7cf9ef7793d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a9f604-fcb1-47c8-b64a-30a48fc5d730",
        "cursor": {
          "ref": "b7b118ab-49ec-452a-bd6b-8df3711457d3",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c0ae0a31-ecb2-4e6c-92ae-f59922472322"
        },
        "item": {
          "id": "f6a9f604-fcb1-47c8-b64a-30a48fc5d730",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "830c09ff-9294-46f0-9ae1-ab37ab1e640a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3030d8e1-395c-40a9-a7cc-e35f244a2686",
        "cursor": {
          "ref": "880e75c5-c1c7-47a7-b742-db8e60b0e90d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bfa3087b-fde6-4195-a268-55313ed94736"
        },
        "item": {
          "id": "3030d8e1-395c-40a9-a7cc-e35f244a2686",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b5b4fbb2-6b0e-49bf-a9b7-6a16be1f6a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e538cfa-90a5-4723-8c41-3bab2aaf7f53",
        "cursor": {
          "ref": "bd52738f-15df-4734-8681-6320a36f027c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d53803ba-e81d-409c-8d17-67b30e9df40c"
        },
        "item": {
          "id": "3e538cfa-90a5-4723-8c41-3bab2aaf7f53",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "548312b3-4523-41e8-ab13-1748eac344da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749020cf-eb3f-47d6-952d-ae69dd5800b8",
        "cursor": {
          "ref": "aa72d4b4-8b2c-44e7-8105-b5eb509668fa",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7faf7ec0-43ba-4490-bd69-4c2aed69326a"
        },
        "item": {
          "id": "749020cf-eb3f-47d6-952d-ae69dd5800b8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6ce53b20-82fc-4770-8eef-641899ea6228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a196129-cce1-49e4-afc6-4fa7532ae1c2",
        "cursor": {
          "ref": "99121cb0-880b-433d-98a5-0e0356ff6c6d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "71130edd-3d19-4acd-9807-5b5bb70042e6"
        },
        "item": {
          "id": "9a196129-cce1-49e4-afc6-4fa7532ae1c2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8cd0d25b-9104-490a-89fd-c30fde5b4c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b97fe15-4467-44d7-bcb7-4d6ae44c9b02",
        "cursor": {
          "ref": "036ca9ae-3945-4756-8a1a-f53df2d1e593",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fdb104b9-d5d5-4cd2-b90f-38c939779e8e"
        },
        "item": {
          "id": "2b97fe15-4467-44d7-bcb7-4d6ae44c9b02",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0a1ab82b-4640-491e-b2f4-cb72580d77e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa37b15-9965-490f-8bce-6c9ff3457c6f",
        "cursor": {
          "ref": "38cd1b9e-38d3-4d18-982b-887485c6b5f0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5df35f4d-acc1-4194-9fcb-b8ce2cf98fd4"
        },
        "item": {
          "id": "cfa37b15-9965-490f-8bce-6c9ff3457c6f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3d1fd864-6527-4aa2-bde5-85e28769997d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d12256-8075-4dc0-bcdf-634f8bc102f1",
        "cursor": {
          "ref": "ab8a930b-e5d8-45e9-8e54-5d9bd4ba8915",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dbaa0c35-77ec-426b-a4d4-20f145a3789b"
        },
        "item": {
          "id": "34d12256-8075-4dc0-bcdf-634f8bc102f1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6c695ffe-bde9-4274-bdba-3c28247405b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2017a1f-fe9a-4caf-ae37-4f00581567f6",
        "cursor": {
          "ref": "6dc9caf0-4d90-4f73-a62a-00b812f72fc2",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bfd1fe3d-7e42-4142-b9c3-7c51794a8209"
        },
        "item": {
          "id": "f2017a1f-fe9a-4caf-ae37-4f00581567f6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7bdd263e-7aec-4fd9-906c-e220ed6844c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb332f77-b4db-4dd3-8023-ac9df6c6a239",
        "cursor": {
          "ref": "5b3dab30-3e8e-4058-b2aa-bcc5ac89ebd6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e6dd5160-0954-43e2-99ad-20f26cf110d1"
        },
        "item": {
          "id": "bb332f77-b4db-4dd3-8023-ac9df6c6a239",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4b9e4c2f-792a-4755-b2b1-4ace3b51876a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd0710f-67a7-489f-833b-d7e68919a610",
        "cursor": {
          "ref": "a2624828-6f6e-4030-86ad-9ab5ddb4ee16",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "72c3c741-7537-4e08-b54a-27e7e5ffa2ca"
        },
        "item": {
          "id": "7cd0710f-67a7-489f-833b-d7e68919a610",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d706fc98-0960-40e9-a608-2bcd3567972b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7750dd-d5dd-40ae-bd2e-55cf9e3488c3",
        "cursor": {
          "ref": "dc393559-e9fa-4863-a4a7-14a2f699fa95",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ad86a417-92b9-482f-acdf-979fe4041b3d"
        },
        "item": {
          "id": "8b7750dd-d5dd-40ae-bd2e-55cf9e3488c3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "65002a36-f840-45ed-b8fa-892f393f5488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1cdcc3-2106-4cf8-8c2b-5b7d35649e10",
        "cursor": {
          "ref": "5df8ced3-c41b-467c-a1a3-587e49f242cc",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "70a4542c-67c2-4564-a25d-ad464574b9ed"
        },
        "item": {
          "id": "4b1cdcc3-2106-4cf8-8c2b-5b7d35649e10",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9cec8efc-9243-4668-bf61-62c43604da5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c90f3e-0a65-47a7-b8f5-7ca723b9f05e",
        "cursor": {
          "ref": "b8194059-b9fd-4cf5-9a00-150c4962f1fc",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8533a1ac-422d-4ed0-a1a9-fa7f0528fabf"
        },
        "item": {
          "id": "d5c90f3e-0a65-47a7-b8f5-7ca723b9f05e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dd874f8b-0694-4b6e-8a8e-cd0b44a8e6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf73987-5a78-44ae-a060-364c4178dc46",
        "cursor": {
          "ref": "e3a67f9f-9dae-4bad-b8d4-cd75b1ab0947",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8e20688d-ea6f-4572-9888-34a6b6242f7c"
        },
        "item": {
          "id": "adf73987-5a78-44ae-a060-364c4178dc46",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "eb6f3274-8d20-4215-9bf3-aa87f26dc44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88960fa-bec8-4575-a23d-5bdd6c450134",
        "cursor": {
          "ref": "d5ceb09c-529a-4788-91ae-cce619fdb9a4",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7d7d9df7-4551-4250-989f-01b377f449c2"
        },
        "item": {
          "id": "c88960fa-bec8-4575-a23d-5bdd6c450134",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4686e50f-344b-41da-9735-099f0d1ee4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7352cf56-fc9f-4f1f-b8a2-e878724986cb",
        "cursor": {
          "ref": "10754761-c8b1-42a1-8a5b-96bc23c1bb3b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ce34dd18-7e33-4d29-b22f-97af4a421d6d"
        },
        "item": {
          "id": "7352cf56-fc9f-4f1f-b8a2-e878724986cb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4fca553b-cfc6-48da-a2a8-5d4283b908d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3442b0c7-c7ff-4d1d-9be5-3d832270b679",
        "cursor": {
          "ref": "5021e16e-dd08-4350-b6d2-61fd41da0254",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "284a6e7f-881c-456f-92b0-5b97e3348de7"
        },
        "item": {
          "id": "3442b0c7-c7ff-4d1d-9be5-3d832270b679",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c6b3a272-57a2-45aa-a0a3-2b0a3d851e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da9d6d0-a8af-4aba-bf5f-b9ebd20148b8",
        "cursor": {
          "ref": "40bc0c2c-a8d8-4b79-9c05-1f01ceee57ac",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4358e796-5606-483e-80eb-87fbc5875562"
        },
        "item": {
          "id": "3da9d6d0-a8af-4aba-bf5f-b9ebd20148b8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4b29db22-d33c-4803-8103-17f609088d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57da06a0-ca27-453b-bda7-8d64f682c175",
        "cursor": {
          "ref": "60426a2f-81f1-494a-a35f-fe97ae1e9068",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "462d2dc6-6a8d-425a-bc9e-377efc87fcac"
        },
        "item": {
          "id": "57da06a0-ca27-453b-bda7-8d64f682c175",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2f954758-4781-4d4e-859a-45cd9582d984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f6eeca-5385-4c6e-bd4e-a3469fc85c9c",
        "cursor": {
          "ref": "f2637fe2-dd1a-4ed1-b6d4-7ee174126c82",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a8fbe6fa-103d-4ea5-b093-b1b7256edf89"
        },
        "item": {
          "id": "26f6eeca-5385-4c6e-bd4e-a3469fc85c9c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5b43e40b-a2fd-4a12-9b95-9c63f60f36f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f04e5aa-2ef5-4c91-a622-853037e247b8",
        "cursor": {
          "ref": "a0cd622c-fbd6-4915-b01b-d5df09cf37e5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "efaf860b-052d-48a4-aa7b-e1eaa13afc84"
        },
        "item": {
          "id": "9f04e5aa-2ef5-4c91-a622-853037e247b8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ab28b331-7c97-4120-b561-b7c0bd6ab516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca2b8df-b7f8-4860-8cf5-e4a829e2fa44",
        "cursor": {
          "ref": "9fe79cd4-ffa8-45cd-9e29-aaafb8506673",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "39dbb503-c31e-46d5-b154-8ab032334dfb"
        },
        "item": {
          "id": "7ca2b8df-b7f8-4860-8cf5-e4a829e2fa44",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "af359572-e0d8-4a89-acc4-6ded2750049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204c8001-80af-420f-b15a-000893371a16",
        "cursor": {
          "ref": "9562ff31-8e7a-4b0f-b1b2-a27812a3303b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f6f41d00-e853-4759-a45f-0a8fac0d01ee"
        },
        "item": {
          "id": "204c8001-80af-420f-b15a-000893371a16",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cf2b3bce-0cd3-476f-8a2c-5af38671c83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65937221-aa28-4103-aea2-220adf2eb4ca",
        "cursor": {
          "ref": "683b96e8-3298-4050-aa88-3821b0a6b867",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "02301f81-3ae1-4130-9e75-3d03002f68ee"
        },
        "item": {
          "id": "65937221-aa28-4103-aea2-220adf2eb4ca",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "519a6866-dd5b-4f10-9d56-11b74cd4b341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5174a14-2501-4f45-852b-18036e99ac6d",
        "cursor": {
          "ref": "d1ae1074-debf-4b63-b54f-971929c2cbba",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1e126de0-0b2e-40c4-b71b-66b50a6ed521"
        },
        "item": {
          "id": "f5174a14-2501-4f45-852b-18036e99ac6d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8ae26d0e-2c84-4e4c-b9fd-2e80a4caccf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0a5396-a41f-440a-be71-a8592644ce70",
        "cursor": {
          "ref": "b6534a33-29e4-41e2-8929-0a69ed13fd5f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "54ef4cb1-e15b-4a81-8b7d-7f88494ea1da"
        },
        "item": {
          "id": "0f0a5396-a41f-440a-be71-a8592644ce70",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "85deb5b7-07a0-4675-b2c2-e1240618707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0957c0-482a-40bc-845a-70f3328df7a6",
        "cursor": {
          "ref": "538fd160-56c9-4434-a0d5-d772672dbf8f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2cc6920b-2bdb-489d-b35b-c37526fe876d"
        },
        "item": {
          "id": "8d0957c0-482a-40bc-845a-70f3328df7a6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bcc724df-e3ee-4ba5-ae68-a121d418facf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb43ccc-e368-43d6-adc9-c78e2410610b",
        "cursor": {
          "ref": "18ca984b-c110-4e20-b5ad-2c9b2b2dc302",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "70caa178-e96a-4b76-9b43-a3d25df6bb5a"
        },
        "item": {
          "id": "3eb43ccc-e368-43d6-adc9-c78e2410610b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ee02c01c-de44-4a8a-9ac3-c24bc5ed9f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572f1755-5396-4afa-8cf6-29b1d6182e13",
        "cursor": {
          "ref": "dc25e1ab-959d-4d3e-957f-5b2170337aea",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "df954895-4911-4ba3-97cb-0761b1dd8a55"
        },
        "item": {
          "id": "572f1755-5396-4afa-8cf6-29b1d6182e13",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bdc057f1-e50d-4996-9f71-72648a567d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f98019-3eec-469f-8ecc-cc3b382c62eb",
        "cursor": {
          "ref": "48541f85-0e72-4612-b4df-bf59e5449108",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5a29bbfb-66ed-4d9a-ad61-0f3f809a6a8a"
        },
        "item": {
          "id": "e6f98019-3eec-469f-8ecc-cc3b382c62eb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "55f79ce4-f6ba-4db4-89c4-fbd3961757e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f0c113-406d-4eb9-91bd-f6fcf647cb56",
        "cursor": {
          "ref": "83df91aa-29bf-4664-98b3-7bd7842ef657",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6b658441-2264-40b6-b35a-2993c7a8d0b9"
        },
        "item": {
          "id": "04f0c113-406d-4eb9-91bd-f6fcf647cb56",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "63ac247c-8159-4d78-ab81-3ca277d1e80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0800d69a-e090-45f4-8d44-6c40b49abb89",
        "cursor": {
          "ref": "7bfcb319-4be2-4c12-8345-dae866b62835",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "586fb9e1-b42b-46e6-a7aa-9fe41454dec4"
        },
        "item": {
          "id": "0800d69a-e090-45f4-8d44-6c40b49abb89",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "35b0c011-3768-4d92-9dfd-374a2fbf233c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d05bda-9c94-48f7-add0-5bc4777427a0",
        "cursor": {
          "ref": "c53149be-8239-4a56-afc4-81c39ee1a428",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "23759bdf-3b51-4f3a-9c7b-172f1d383bb2"
        },
        "item": {
          "id": "08d05bda-9c94-48f7-add0-5bc4777427a0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "feeca2d3-fe19-481b-81d5-a13ddce5bf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ea60ac-9ec0-4c2d-b678-a873a9273d90",
        "cursor": {
          "ref": "9ad205bb-54c9-4056-8eea-af192d9f0805",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9d79a4a3-2e34-4f01-b3b3-094de9b5af86"
        },
        "item": {
          "id": "e1ea60ac-9ec0-4c2d-b678-a873a9273d90",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bac66cbe-5f3f-447e-87f8-7d4ca775c0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cbdfc4-af50-48b5-ae7d-d028d540b489",
        "cursor": {
          "ref": "05236cbb-fd39-4c96-bb51-72be9b331933",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "87f0cf89-f271-4719-8b3f-f12e115278f3"
        },
        "item": {
          "id": "01cbdfc4-af50-48b5-ae7d-d028d540b489",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3db191a2-cebe-49af-86c9-a4fa446df434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6fe8ba-5f5e-4ea5-a74b-d5ae5fff8af1",
        "cursor": {
          "ref": "c5e0fd5c-751f-45bb-87a7-ddca2c9b6283",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f52eadf8-c334-4728-ac5f-c9ab27590e63"
        },
        "item": {
          "id": "dc6fe8ba-5f5e-4ea5-a74b-d5ae5fff8af1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "987da89d-4f2f-45f2-bdb7-c428cc222708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8928db6c-9279-4013-9af8-32fd998b6b70",
        "cursor": {
          "ref": "30eaf5cd-165a-480f-bbf2-f5eb7a3ac788",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c01f6eb8-48bb-44ac-91c5-929464ff089f"
        },
        "item": {
          "id": "8928db6c-9279-4013-9af8-32fd998b6b70",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e4ecf764-f10f-45a9-8c3c-975aa13cbbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8489b9-2717-4e00-b7ff-f5ac33ccf83a",
        "cursor": {
          "ref": "2660a52d-ebfc-4d5c-b651-b9a5d8ffe62c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0fd0e3ab-8a5f-4ec0-be4a-9a1df7c3a67c"
        },
        "item": {
          "id": "4d8489b9-2717-4e00-b7ff-f5ac33ccf83a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4103e0cb-2810-445c-bfde-3163357b133b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc7a9b2-b742-4317-9d10-7557470a2fda",
        "cursor": {
          "ref": "e687a563-e9f9-4922-9126-cda294fd963c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d86d8f4d-e2ac-4a5e-90ca-2cfaec531f88"
        },
        "item": {
          "id": "7bc7a9b2-b742-4317-9d10-7557470a2fda",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4b3286c1-1090-4f7b-a988-0241b829e13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068b2478-128b-4fd2-b06f-1601b68084de",
        "cursor": {
          "ref": "5e86d5af-4318-4444-9aae-e7a05ec52914",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a7a65bcb-b1e2-4f58-b054-02eb698f4538"
        },
        "item": {
          "id": "068b2478-128b-4fd2-b06f-1601b68084de",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bf581827-f1f5-407b-9b05-2c371eafe06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3a8441-7afe-4771-b8ca-8059030bb481",
        "cursor": {
          "ref": "0a42757f-1f9c-49fb-90a2-0b8b43462770",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d31258a1-c12e-438f-a430-53da93c19fad"
        },
        "item": {
          "id": "7b3a8441-7afe-4771-b8ca-8059030bb481",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "55bc2416-1464-42a7-9ccf-1385bd52ead2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da36b3b7-de63-4941-8d8c-a8ca7042fbc9",
        "cursor": {
          "ref": "69b6278e-3e3f-4b37-8030-3bd091effc4f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7ab22262-ecd3-4d7c-a10e-cf2cfd1d5223"
        },
        "item": {
          "id": "da36b3b7-de63-4941-8d8c-a8ca7042fbc9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cfbc8482-9b1f-4a49-9dd6-b20cb7e0d6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171c551f-6bb9-47bc-b504-cf0ac47b1320",
        "cursor": {
          "ref": "8c9f033d-5630-4f2c-aace-7d65070b921a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d9192bb0-8e82-4c62-9dc9-196377d8a96d"
        },
        "item": {
          "id": "171c551f-6bb9-47bc-b504-cf0ac47b1320",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e579e897-9355-4321-a0d3-3e636b7e6d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249fe864-bb28-460d-b312-1fc25728d618",
        "cursor": {
          "ref": "b88f1860-f36b-40a2-b63a-06cb59f19635",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4ba94505-7fc4-4596-9918-e6ff65b499fc"
        },
        "item": {
          "id": "249fe864-bb28-460d-b312-1fc25728d618",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "67844567-52e2-4f59-8637-0812fe81cf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bdc16e-4e19-4d9a-a12e-8d6eada4958f",
        "cursor": {
          "ref": "80476eae-c083-4174-9746-370fa57226c9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d9b85b37-8e3d-491d-8444-61d2db91e5af"
        },
        "item": {
          "id": "f7bdc16e-4e19-4d9a-a12e-8d6eada4958f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "28c423d2-341d-43a4-96e4-821d0ae4c657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c68f74a-2f73-4d06-b725-7a7feb0f702f",
        "cursor": {
          "ref": "90b1fb1f-31be-45f1-8262-5de6ac410c34",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6c6dee22-9ee2-4cd3-86e9-ef40cdde95d9"
        },
        "item": {
          "id": "6c68f74a-2f73-4d06-b725-7a7feb0f702f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ce382a94-d8a3-4403-9123-62bee5bf602d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fdc47e-7a13-4bbb-9919-96149a1a761f",
        "cursor": {
          "ref": "c927c342-5da0-4071-8898-2c60a88c0e48",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bcf89ec8-ae72-43d0-b694-3ca6ce0b4b5b"
        },
        "item": {
          "id": "37fdc47e-7a13-4bbb-9919-96149a1a761f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ea7b6697-9530-41cd-95fe-ac332239c82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27869708-50f4-499b-88bb-048c44e1e966",
        "cursor": {
          "ref": "537050a7-1920-4bdb-af4a-9f7b1e4eb9b4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2eed5f61-5363-4a01-8ff7-ccc5bb7dd449"
        },
        "item": {
          "id": "27869708-50f4-499b-88bb-048c44e1e966",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "15fabda4-45c8-49d4-8c8b-53ddbd8a60d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2024cff8-a792-4eea-a7e3-5cadf520602d",
        "cursor": {
          "ref": "ad07a479-b124-43d7-9d58-665c8f131b6f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "653f78b2-30c0-4c75-a363-5108cb402351"
        },
        "item": {
          "id": "2024cff8-a792-4eea-a7e3-5cadf520602d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e379b0ca-dcd6-4b6d-a318-426dd4abc1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1204cec2-6695-4d87-b994-302305616aaa",
        "cursor": {
          "ref": "9c0e3ab4-9e71-4b32-ac9f-543fed733a79",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fac294cd-758d-4a0a-a6db-ba1c62d5f657"
        },
        "item": {
          "id": "1204cec2-6695-4d87-b994-302305616aaa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9b8da386-1ca7-4d95-b38b-0eaa22290005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff10143-431e-4975-9896-fcf4c1c76381",
        "cursor": {
          "ref": "d52dffa1-cc3a-421f-974e-39eccf619deb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5cf53120-161c-46c5-a18b-125d6db12658"
        },
        "item": {
          "id": "2ff10143-431e-4975-9896-fcf4c1c76381",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ed39f32a-7604-42bb-ac48-4378cad83c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c76a05-2e16-40fd-865a-6a93fa8dcf3e",
        "cursor": {
          "ref": "4e53d80c-bf11-4a74-9717-8e284d836fe1",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fe5e44d0-fbb4-4f4b-acc4-835bca59152c"
        },
        "item": {
          "id": "60c76a05-2e16-40fd-865a-6a93fa8dcf3e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a392ada9-33a4-4603-a622-139af3c52b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6953af52-6321-4822-b1a7-43602815a6de",
        "cursor": {
          "ref": "b0d83860-b135-4e31-bc6a-10f8173f50f5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ec827a31-cf32-424f-bd31-a72da0bfebed"
        },
        "item": {
          "id": "6953af52-6321-4822-b1a7-43602815a6de",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cae824ba-a27b-4d3f-99df-64632d86c782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a77abbe-7984-40ca-b364-6c2a7e17d519",
        "cursor": {
          "ref": "a532b633-d177-4085-8d12-17400baaf705",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2d48b194-d4b8-4eb5-9273-26d9c5fd3736"
        },
        "item": {
          "id": "6a77abbe-7984-40ca-b364-6c2a7e17d519",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4bc3bf3c-4333-4402-a7f1-f1ae2cd3b7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eeb56d7-0f05-4fb8-888a-d4a4928c8731",
        "cursor": {
          "ref": "8640da17-b5f6-4dd0-a857-70309c5698b1",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "85989b5c-1264-482e-9f93-5f085a224858"
        },
        "item": {
          "id": "5eeb56d7-0f05-4fb8-888a-d4a4928c8731",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b6a532a5-b9a4-4fcb-915f-9ad4722a47ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765075e4-3380-4fcf-bfb0-1329da06b6ff",
        "cursor": {
          "ref": "e337b523-cd63-4b33-aa1b-050a36d735be",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "41e36d75-6e7d-45bf-8f93-d126636e9f1f"
        },
        "item": {
          "id": "765075e4-3380-4fcf-bfb0-1329da06b6ff",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "157b9e79-d85c-4d53-bc14-d8e6d411c8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d736fcc1-9494-4dc8-bccd-4aff843eb3f5",
        "cursor": {
          "ref": "4adba1a9-3213-42a3-8283-4258654f2601",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "25f957fb-705a-4d16-8761-988deddcec86"
        },
        "item": {
          "id": "d736fcc1-9494-4dc8-bccd-4aff843eb3f5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5852b78f-791e-4c6d-9dc1-6bccdbe9c269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943dcb36-73d2-4089-bbf6-e7e231aaacb7",
        "cursor": {
          "ref": "67746ef8-2397-48c9-9431-2b0987b64dd1",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "237e5879-0ce6-4707-a272-dd554bece1ca"
        },
        "item": {
          "id": "943dcb36-73d2-4089-bbf6-e7e231aaacb7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ce9a07f4-e0a9-4924-a85b-3bf54ef9e3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c042fe-61a9-427c-b1a8-e6c12374353b",
        "cursor": {
          "ref": "1a1f6b79-8f13-4f9e-abf8-8efc31a5a094",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "77d059dd-d025-46ea-8376-29b2a09a3974"
        },
        "item": {
          "id": "62c042fe-61a9-427c-b1a8-e6c12374353b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "121a47bf-26ad-4db7-a95b-376050f7baea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b694456b-f7c9-4cd4-a203-c9fa5db2dfd6",
        "cursor": {
          "ref": "913e330c-74db-4566-aac0-ef8b49d2e28d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "be0d208a-72ef-46ce-aad9-ed0b3197150c"
        },
        "item": {
          "id": "b694456b-f7c9-4cd4-a203-c9fa5db2dfd6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dd26c4ff-e73a-46d8-8571-6823f9be6241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28897044-05cb-4052-87f4-ca0c6e3b11fc",
        "cursor": {
          "ref": "84465360-18c0-490b-8ba7-9629ed69eb70",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "da3b34ea-17e0-4cea-9ab3-ea979815efdb"
        },
        "item": {
          "id": "28897044-05cb-4052-87f4-ca0c6e3b11fc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "14f12dfa-992a-43d1-baa9-0cbd6915d27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1e9776-13fc-4776-b140-bd175404169d",
        "cursor": {
          "ref": "403eec53-6c0e-4468-aee3-54fb32d16b58",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "168dd24f-423e-4f28-8481-5e082408f8b9"
        },
        "item": {
          "id": "bf1e9776-13fc-4776-b140-bd175404169d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4b592941-ac51-458c-a4b6-f6b1f496c3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f39653f-a517-447c-a191-20ef78004d85",
        "cursor": {
          "ref": "9f8ba26a-046b-43cd-9cf7-2218f99e49a7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4511411a-0645-4714-b723-d318c8c6d061"
        },
        "item": {
          "id": "7f39653f-a517-447c-a191-20ef78004d85",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "229f209f-28c6-4d47-a08e-a73a461af8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f32aad-a3f5-49d2-9858-8572e19edde9",
        "cursor": {
          "ref": "ab490587-c3ff-439d-add7-19e163e3510a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7148dad4-ba09-44fd-8d97-59b89f176a53"
        },
        "item": {
          "id": "56f32aad-a3f5-49d2-9858-8572e19edde9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d27b70af-6529-4a48-892c-d41e5d75cca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87af9e5-b385-401d-8d44-a20bca54cfde",
        "cursor": {
          "ref": "dd6a1ab6-73a0-46d4-9eed-44e677bf61da",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b915dbe9-d459-4bca-a7a8-332c252ce284"
        },
        "item": {
          "id": "e87af9e5-b385-401d-8d44-a20bca54cfde",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "14af62a7-2c85-489f-9b43-a1e3e59851ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc99ea7-a966-40e3-9320-c25b03a19e5e",
        "cursor": {
          "ref": "de855ebc-9e7b-43ef-af62-8329242d2fe0",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0257d906-a926-4757-8581-74c9b588fae4"
        },
        "item": {
          "id": "bbc99ea7-a966-40e3-9320-c25b03a19e5e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dc9ee4b5-eefc-4677-9a58-ad5e59d0177c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7735b9f8-51a3-44ce-9fa2-44f1846a7980",
        "cursor": {
          "ref": "4624b44d-fadf-4e79-9d24-d73fc60d849c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9c6c9fb2-0b2e-4680-a883-87cd2b3feb52"
        },
        "item": {
          "id": "7735b9f8-51a3-44ce-9fa2-44f1846a7980",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1d349d4f-fb7e-4792-8d61-843d8a6aee50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a94ebcc-1833-4ba7-bd4c-abd8a28f0402",
        "cursor": {
          "ref": "dd7ece6c-0e4d-4189-9854-27cc95ad0831",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "929017ca-ce8d-4139-96f8-e753c505c6a5"
        },
        "item": {
          "id": "2a94ebcc-1833-4ba7-bd4c-abd8a28f0402",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "354f4e19-0227-4019-9d2e-934902d0bb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e763ffb-a5c7-4755-a2dd-2327b5b2415b",
        "cursor": {
          "ref": "a90d4e70-3561-47ff-b542-ccc600c0afa7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ca07cc56-5ef4-4c1c-82c8-8887d285701e"
        },
        "item": {
          "id": "9e763ffb-a5c7-4755-a2dd-2327b5b2415b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4de04f81-56b7-42fa-92e6-b94f644f1d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cb7eea-1810-4ddd-ab32-f2dd85d5f48d",
        "cursor": {
          "ref": "8a37de54-bfdc-4cfd-919a-11644466c7e3",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d166968d-534d-4592-a830-a7aa4755581b"
        },
        "item": {
          "id": "c8cb7eea-1810-4ddd-ab32-f2dd85d5f48d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f3362431-966f-4d39-92b0-e46e0e3e7e2c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a852fd-96a7-4b47-b8bf-a6162161e849",
        "cursor": {
          "ref": "dbc8fd63-4126-4115-9303-90317877f4b2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d69d140d-0677-4e78-87fa-e4c578ff77c0"
        },
        "item": {
          "id": "51a852fd-96a7-4b47-b8bf-a6162161e849",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4dcbf69b-3932-4a20-b614-06079fbb2139",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7c4303-e82c-429a-be42-1f1f8ee6a4a1",
        "cursor": {
          "ref": "d947f233-7653-489a-9bbc-7732a9c94b30",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0445eeb3-8f4e-4776-a289-5e534972a523"
        },
        "item": {
          "id": "8f7c4303-e82c-429a-be42-1f1f8ee6a4a1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ff32d7c8-957e-4bdd-a277-e397789a43fe",
          "status": "OK",
          "code": 200,
          "responseTime": 2394,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "484dec71-5ba7-4e3f-ba13-c0f634b26f8d",
        "cursor": {
          "ref": "8e67714e-368a-4f80-9103-295eda253784",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b4de8bad-0775-4203-9e5e-5e651fd1754d"
        },
        "item": {
          "id": "484dec71-5ba7-4e3f-ba13-c0f634b26f8d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e82514e0-69f4-4df3-83ae-a156face6f1b",
          "status": "OK",
          "code": 200,
          "responseTime": 3875,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdf3c25-84d4-4f1a-a917-4bb85b507287",
        "cursor": {
          "ref": "06e366f6-cbee-4766-9b33-31e22cebb498",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "730c1054-fefa-4450-b000-9ece522fdaa0"
        },
        "item": {
          "id": "ffdf3c25-84d4-4f1a-a917-4bb85b507287",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afaf4b03-d26f-4211-91b7-298836a70bfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdf3c25-84d4-4f1a-a917-4bb85b507287",
        "cursor": {
          "ref": "06e366f6-cbee-4766-9b33-31e22cebb498",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "730c1054-fefa-4450-b000-9ece522fdaa0"
        },
        "item": {
          "id": "ffdf3c25-84d4-4f1a-a917-4bb85b507287",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afaf4b03-d26f-4211-91b7-298836a70bfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e017e954-6e34-41e9-99fb-a96415899573",
        "cursor": {
          "ref": "6c293a74-17ae-479f-8a78-667c13892bde",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "17edad12-d9fa-4baf-8ca4-57fce4c62caa"
        },
        "item": {
          "id": "e017e954-6e34-41e9-99fb-a96415899573",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fd528cd4-9841-45cd-a2d2-58c3ebbfb95a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ff397d-4bb4-4d38-8306-7e2cccb90dce",
        "cursor": {
          "ref": "6602cad7-7a36-44c8-8068-9f4eaa628211",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eaf63db2-3bcf-44fb-8f70-c13f412c46ac"
        },
        "item": {
          "id": "23ff397d-4bb4-4d38-8306-7e2cccb90dce",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "539266c5-5b60-421a-b9d1-c6d7f1b37201",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}