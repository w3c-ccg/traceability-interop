{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ec549b68-a532-414b-9f36-210b01391332",
        "name": "Clear Cache",
        "item": [
          {
            "id": "698eafdd-534e-4f85-ac81-6fa192cbda9c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9cee2982-fd57-4fda-943e-dc49e95cae5b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8e88cafc-cd74-422c-8379-8f3e399b71b0"
                }
              }
            ]
          },
          {
            "id": "c0a10024-2ef4-4b9d-ba34-4c6334a72342",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "722b790f-4392-454b-8f25-1b8869c6a25a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "78e7efef-e4bf-46ac-a301-ced3f8084e98"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "35436260-a7f2-4bca-a4a0-75f006779862",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8728c1f5-497c-487e-913f-ad9d2268d7be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "63958d32-3f66-4114-83e1-1cc7efb99444",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bccb07e4-7f01-4d77-a7c3-f4b3aed8da18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86a980b1-7b56-4d03-9b15-bf2ab8f70f36"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c53d5f26-b54c-486a-940c-aa445badf4fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "031224b8-ff84-44e7-ad89-fbc407f323df"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7167d5c1-29b2-4b66-9dc4-819d39f8f21b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c78b783-9ddd-4737-be83-e30bcdd06a58"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b730b1cf-aadd-4c5a-937d-65a98b2e9961",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9b4c2673-d31a-4b3c-a12d-73d0f8c8e576"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da65ac49-f2a2-4fd5-8058-9fec447f61ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4854cff8-d397-4e11-a872-f817d5984476"
            }
          }
        ]
      },
      {
        "id": "114677ea-5b75-4243-9926-154387e0ff47",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d429d4ea-1188-45f8-a3ce-3ab79d98a4f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55f06bb9-80c9-4942-a890-31e3912a2629",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40f255d2-bf2e-42e2-8d31-d2209d32646c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d183e480-76af-4980-a35b-f193202eea01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15ac15d2-f5e1-42ad-9763-e7399aab6ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b3d043-62cb-4bde-ad2a-0c1cdc01892f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7476be2-239c-46b8-8942-8abeb044ce7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "287065b7-9e77-4c75-83be-d1030f91258f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f8abe1-52ff-46ac-9645-8b45ca53a4d5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27cc3a6-7304-4ce6-871a-9bec0f8c419d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86df43b2-2d68-4a4c-9d87-13e9703a34e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1702e4d6-f64d-4533-ab3e-26798b337e71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b8351a2-5284-4501-a412-4a53f893374f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcbb21b-3d79-433d-8bfb-6df9c26cb063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed43d11d-0aa5-41a1-9749-d6ed91d9a9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd52d24-c4f8-4aef-84ed-6a1291e99b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66eace69-382b-499f-a2d1-05029552d57a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c7202469-ec05-4c53-88dc-4db58009ec9c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16cff633-c929-4b25-8507-1fb1a3d44cad",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cf93a96-2e0e-4c2c-93ce-7b0451073acb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dee5d29a-c495-4a21-b9fc-37403542ec0b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1aa9dc8-c4fc-4550-a8d0-2b3ce114a480",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c34e0fed-3ea6-460b-bd72-f2b1731db4da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efced5f5-21d4-42b7-83e2-ace6b46d34b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3381cc61-3d4e-48a1-af88-5bc0bc2a68d1"
            }
          }
        ]
      },
      {
        "id": "4041d0ed-ae50-4d13-9677-b64b42bfb12d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e52bb189-1622-4241-be16-e7925225956c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c82c45d-d613-41ae-a407-f888c9a75102",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d4461d0a-ef7a-45b8-b49e-5f8f04aebafb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f101bf-d505-49b3-8234-2920d1815f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3002a466-f9d2-410e-a226-bc9ea092d2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e8cbd8-c949-4888-a07e-81eb3320bfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63ccc4ae-9401-433e-b7c4-86b759c6bfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbb1e0b-a0db-4b40-b5a5-bd9719b41a9f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8965a8-098e-423a-9c53-c5f11ef75742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbe23d6-ef6a-4dee-909d-e9d1be3ec70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b1afa6-fb71-4fc3-91c4-fcae185acd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "341a5239-97a6-4c08-b847-e64c10e6b052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc6e5ce-2887-4a4d-a7e2-23a9d3727967",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d617ce-efeb-4da1-ae99-0f0453a823a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a9d95a-6e90-47d3-89c2-65b272b1cebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6851734b-e5aa-4326-a374-7fab2a3ecb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21898ec0-562c-4c78-93bf-1afd38b5d3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f125fee8-052e-43f8-9682-e9c8dc032474",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644b6298-3bc5-4bcb-83d2-427da6e4c3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580bc26e-3e35-4ade-8b54-faa9dc21fa7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e162a78-429a-4be6-aadd-cf39cca91386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d6706b2-4953-4ab2-bdb3-e33cc58d5142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36eb6588-d24b-4cf7-918e-0aac30852009",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b74064-0a14-4d41-8e1a-153118973cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4015c1d5-ea9d-4a75-901e-d20438040f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c7309a-78ef-4549-b7d4-994dc4e2bb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d3beedd-d202-47d6-b6a3-27b0d370a421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de233b6d-7b11-416a-899f-257e748e863d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f407e00-17f6-4810-abc3-701ca0cac1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a23232-6e14-4187-87e1-075c3bf3134d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eafd993-4f0c-479b-b16e-c123950a0c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b20d4295-7b0e-40f6-a5ba-e1cdf66eacce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c4db6c-ce84-4431-b97a-b31ec41012b5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2429fdbf-30d3-4ba4-bdf2-6b047ede504a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc2995e-d7ff-4030-9eac-42b0871d80c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45607a7d-0488-40fc-97a7-d5005eaaef3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19789327-247f-4cb2-bb95-ad3a1b50140e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f70e013-3294-4ae5-8480-f44af5333daf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34829499-a0ab-45c1-a3dc-78f4ea2365ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae831e06-b609-4458-a8dc-dafab22cfd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c4f884-fc03-44e9-a6e5-78aedf2c26ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "192654c7-da99-4758-8ce2-8a3cfaf9de4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9d2c3f-d8f6-4a35-8fce-dedfd4ae643e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a535369-5b8f-41df-b50b-e3e265affd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a90d61-e269-4db7-a848-d463cbafaacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fa7aa2-f747-44f9-9b29-e203aaed2118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6656c936-ff28-4a51-8811-2e32ae78d6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79753fde-6327-41ad-8f72-ba79372b29ee",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d15a9c0-33c4-4c95-b127-2fb89d2e5a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8956bfc7-cfa8-40d6-8249-a6c51c4b622f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2a7611-34e2-40f9-acd0-634176b1a7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90c79bed-ba63-41ac-aeb9-0c9a900c7bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821aeca5-b19e-4e36-bb9b-f937131305bb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c78ff8-8a18-446e-a123-d7bf620a662e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d522c97d-3142-4d59-aafc-116ecd942a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8633ef03-ea2b-480c-ae77-bc399cf54472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bad7b17c-a18c-4cb9-a29b-618989b8272a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128a9895-9287-493d-933e-f9e44370403e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cbcb13-a9cb-4b21-8e1d-f829878b8f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49271189-9aac-4090-8304-83e0b76d41e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ff1bcd-afb2-4fcd-970c-2c54026cc730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b37c61d-7d3d-44e0-87c3-478623bc5db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c04af65-85bb-4da2-b234-c2ce743bf382",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5490620-4ac0-4222-8383-d0a2ae642ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85318ba1-cc71-4f28-b3bd-ef2b3f66ead8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1378e8cb-8db1-462b-a06c-9782d67a601e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d68b9686-a60e-4f04-ae3f-230c3d8e07ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba670a0-c93b-42d5-a14b-88bde3bd0262",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f060c520-e73f-4b92-83c0-21a4aa6a5d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8563e151-bc0a-4c0a-a745-04e37b7356a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cf5039-63bf-46a9-894f-40604591b06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ce8a8ef-5f39-4403-9cd8-2afa220ff562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df90056-5ae3-4f8d-80a5-785461c22e40",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eeda7c5-573e-46ce-ac0b-88424216796a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbe3e2e-8c64-4219-b5d3-d21cebb0ee37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdedd91-f4e6-4d01-8e29-6adac0c0ca0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebb831f4-7725-4862-9ec4-5e73cb6e5f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42e546d-3b16-4fcc-b03c-ec36063142b1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36125ab-3e06-4258-aa6e-e10bdae07a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb84e21-f577-41c3-9c3b-4e0cc0f9bfad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0755909-6c10-4931-a18d-4623f89fb649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd722a98-b3cd-4f22-b804-9ed4991f6d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e28f2f-fe43-4609-a848-d934f1fbf520",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37d35af-7d91-4460-87e1-d487da44856a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7b1a80-72d9-44b5-b192-70032ef6fe9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299fed41-ad08-4341-84e1-a9ad47792d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64cc26e1-94eb-45d3-89ad-371466328483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713775f1-a8d9-4a20-acec-f9dafc569de1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4857a5-fd43-4d6d-8663-6c70f592e071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584797d8-7037-4b1c-bd6c-93f24b516223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be9bbec-b95f-4752-a1ae-099196dd078f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "982448bb-d0e3-4d87-a7fe-d6f523a72647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e877d9-8c54-483b-92a2-bd48cb25d0fd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ebd94d-d45b-4ef7-94e9-d1f6255ec132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088a2c2e-a3fd-41a4-817a-6b6255eddab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85765fb-f07e-4b74-b024-2d4d44a03509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4deded-10a1-404b-8d99-a7abbdcd6cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833f7a17-ad84-45d9-90e0-14bb9698d08b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a40bcc9-9881-450d-ab3a-d64d705fa25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7229df29-4ef9-46fa-a78e-c70382f6d177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9025da26-71b0-47bc-bffa-803701c44601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8aa292-7b57-40ab-904e-1ca6b9303708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52311e52-e4a7-4c04-8764-3fe747ebb561",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc4d903-6065-4fd4-82cc-6e6c147e6d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7688b7-7147-43ca-9674-dc1fdc30df07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67690353-8d6b-4fba-8033-682c61ce11b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6618854-9a8d-4b90-a920-8d0de5f08a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa8d5ea-6a40-427f-9044-d90505a2b4c8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c236e5-0c1d-43e4-9a88-63f2028d4243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7aea276-2c3b-472b-8476-df7f1f5c9547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9036c2-fb40-40da-b4b7-bd2a1c3c97c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3de2982-5f2e-42d0-8fa6-3bcfc6eeb655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7febfd2c-baab-43ae-8518-487381674957",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efc9d77-e863-4fca-ba1e-399dbb13d5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c7f5cb-dcb0-4e4e-ae75-eca68cfb41e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb10b7be-1d1d-40f5-8d60-fadf77b13fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf76f780-0926-4409-be23-ac0605a13e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf609d1-6d5c-453c-a9ef-7be8fd74f633",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d738dc7-43b6-489d-89e6-ed6c890f5496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb12db2-1931-420b-b522-54db4c4dcae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a29ed5e-74cc-4148-aab3-faccdef61710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "617338d3-730a-422e-9f3f-91f158e903e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609b27d6-c901-4cb5-9378-cd433ab3c390",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0839fa9a-63b8-4e41-ba27-e569b74d1c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77743d93-607b-4af7-9de4-1ba3bb72f3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c662e4eb-d0d7-4e94-93bb-934771336fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50d0195-c73d-4e06-ba5f-6f438582a55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d089d561-b621-416e-ac2d-086283755ba3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a8514e-b50b-47f6-909a-c3ec7a9717b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757320e1-462f-46ad-a8af-e09b3496b1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b264c22b-ba9a-4d42-bea6-a1acba1c42ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90a11e00-7f36-499f-8678-103e020bd0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7679777-b9fb-47c7-9b0b-13971e9aa83e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03462825-9a43-4506-b869-1a7a6278cfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b806e7-3a4f-4447-8bd1-c029b617b819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42981c7d-bbeb-4b79-8f32-15e4494d1d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84430a2e-fb7e-48b9-8680-998027cddea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bf4cb4-9665-4187-bac3-4dae353ce042",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0147f86a-6cdc-419c-81b0-3c85e48fc7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed41a2a-193a-48ba-bf56-41d50d764a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df498e53-84b0-4552-bafa-e1400ba040ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f84d2901-3490-4ecd-9681-10a009b9306f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d9a256-c946-47bc-8bab-fb198ad6b70e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323b2258-6a58-4913-979c-ed85154a9a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3927c58-b91e-41b1-9b01-54079f38b6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5f7a8c-de55-4da9-aee6-6bc46ecd3298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08507c59-2de4-419d-b24b-8eefa9b06c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af95a0f4-cd2d-4860-8fcb-8a9722b826d4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234c474c-d57a-4104-aa8f-67030e1b5c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a653e88b-b2a3-4bca-a2ad-655535400747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700b611d-006f-45fd-89c0-34183701af29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c913c6b4-c3d6-4993-b062-3033e7b01c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991d9fa9-5526-488e-81cc-cc9ba703608d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dafd92c-80a8-4c87-808c-59f559ce43a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5521d84c-e395-44e6-90ef-5fa26ab5ce6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0f9a19-8b5e-4fa9-9abf-808b21397020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f18a625b-2974-4943-ba65-e372b56c72c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f6d300-959f-4960-8743-4503da4998c3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16820e82-36ca-40b2-acfd-6e3b44a007ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ae2e0c-6224-40ff-81aa-7cf1d7d2489c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ca206c-559e-469a-9ed1-244f2ed0c86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef97a88-0bad-45f0-adba-1277750bee7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6579df1-2256-403d-821e-a25c07a52a57",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a871b04b-9b29-4805-abb4-e6fb0af8f704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f91c4c-6b65-4424-9715-431ca8e08eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0371bd-3d4b-4a75-aa0b-e33b3e4d3d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2921323c-96b8-4444-9053-21b7a7de8190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f2f55a-eaef-435d-b659-abad1bcadac6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061d09ee-a1bd-42c5-a4f7-e32ab00b90c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050be3ba-9841-40aa-9ac8-25eb2082136c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9885e1c7-a922-47c7-a69d-251ea451503c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c03d37f5-d748-4022-aeaf-b8ae93f43565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459d1f27-11b0-448b-b18c-f65915568eb4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8bdbdb-b7ab-45af-8610-7153e06c0df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704783aa-07a3-4dc2-b6ae-bb0e493764f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f15bc8-feca-45a5-ac24-3fef9d7119ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5c916963-dec3-489e-8cd5-3460618678fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5885e61-420b-4a0e-bcb8-0dfd047bc9d7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58320e1-2695-4696-a75d-a39c389f9dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44db53fa-602a-4a01-9b14-5e42a029e342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd45f349-4d77-48e1-9285-31c22d337740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba5d9c7-64a7-43bc-9c2e-60661f21883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c961cf10-6090-4e2d-b1db-d9a0a3e134c1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efb23d1-0275-48eb-a443-a9be01539c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a4cd55-ef7a-491f-b616-7b8c9124ac6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23faea2-a5c5-4b67-83e7-ecb493d0161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f187214d-69f4-4f04-aeea-3a0893815ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f228ba88-145c-4b26-b69f-bd50cbf36903",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df04095a-04fc-4730-bf99-3d6906dfe4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d51a3f-da5f-4cb7-8b35-8c66db0a13e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491da576-12ed-41e8-9346-b61d96d73715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c684cfbd-f7cf-47de-85d7-645ffa33addc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe857b1d-7ad8-497a-b239-498217da68a6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c8db38-002e-49d4-bd74-c3572df4404a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acf353d-cace-4180-bb45-a5dcce185642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59bf81e-2fd7-4697-8e0e-b338fadd04b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cecd3df2-85e1-40f0-b91a-90e643281b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de80b423-3e31-4b78-98e5-f0822c6a5427",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a30895-c397-48b1-bf62-d6649909d90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8763db-6560-4bbc-9566-add1ecbe3db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcdc538-eea9-41c6-a91f-f697a5317cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75b51026-66ff-4a11-a8e9-dd9b501aa81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfe845b-57d2-40df-a96e-072461a52758",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb27dd8-c1cf-4573-9679-8869a3080743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146ac462-f49e-4367-9e0c-b39b4ba2ac07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c448b44-f95a-4058-96a3-de1a5ae13d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f37e68c3-7333-46cc-948d-1b0b6001a37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747b6bc7-3e1d-4ca1-bf81-f0cac99ad457",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96373d12-0c94-4913-9a62-de54d77b754e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da922c06-aeb9-43f0-8db4-fb1967258b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60520377-81b1-492b-83d4-f452dfb60aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c9639b-c922-4386-ac60-17db4a218085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b22f18-c076-4c72-b264-74849e2b42e7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d90858-7579-40c8-b682-0f6169ec7d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c963a0-6168-4901-bbe5-b0bb57262d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6bbd20-5640-44e0-a10d-043f5d411e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "188ff768-375d-4aa4-82fd-dae9ecc450f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bb2fb8-7b1c-4bf4-aa52-0211ccc76434",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375347a7-d9b8-4f9a-931a-6508c42878cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028608a9-551a-4a3c-85a0-2017d0c47890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ee830e-0f2c-4b96-aaf9-ef0b25512492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1f0da4-1294-49f4-adb3-a4b9919d5b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5f481e-5417-4c76-a1d8-21a7248ae0a7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fea34da-1500-402f-a74f-68e6045fe996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7e0a56-6060-4fa0-a208-6071bb6481d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ecf1c7-3e59-4165-bd66-717407ea40f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3df0432-7bb5-4f00-b353-21670782704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4053a51f-16ea-4248-9bc7-4899b252fcaa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea063bf-46e6-4254-9eaf-06d004f3a9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fff750b-322f-48fe-af47-b950580add2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef18a4f4-a1bc-4224-96a2-dd621edb88f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73717aab-6bf6-44eb-83b2-1bd7dd854025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6966a3-b07e-4c55-a4aa-1703fce952c2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70b0fad-514b-4477-9d7e-adc24f067af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551c6481-280d-47dd-8261-92d776ddc184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63afc106-b731-45a8-b0a3-194ffe6874b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ac1cb0-6434-4556-b5f2-539e6b96d874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606ee865-f84f-4a32-83b2-335f66ad6a0d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a2a0b1-bacc-4eee-bd1d-c89115eb8868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3a8ed5-dfbc-48bf-aa98-4ceb86faca12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd1f689-0b45-4c7f-ba96-23b700aa3bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d4deaa-fd9e-4572-8827-de73f4597056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a1b94c-3bae-41aa-a86e-41c2a8843469",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6326c2-4bdb-431f-b296-d243f062581c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c4670b-05f9-4d45-979e-f2085d24a8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5114c4dd-860c-42a9-91a4-53b2bca9888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59c674de-0eae-48cd-8135-3d02d6572d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da678af7-5fca-43e0-8d73-bd3efc033819",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb342c1-39de-4827-b51e-fecc6ba7e332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafcb53e-0d92-4f92-8323-d6a6e04dc8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6030ad47-79ea-4a90-b4ff-fe3e0ceda7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "157e7342-169f-420f-9977-da1dfa0eea46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e92e3a0-f2d4-4eb2-b6cf-b4e4c49ca9b0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f215aa6-9d47-4f0f-b251-cd64118c33bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df31343-26fe-460f-a830-5cfd9d59073c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a56479-578f-4286-bc5c-064608647bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed00159d-9f38-48c8-9c33-86516d1a1323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ff2e20-49d3-479f-8201-114d4510954c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5380a7e-1e2a-4d4a-9e8b-e57bf612bc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cae697f-dc4f-4fca-9136-0dc6236c6088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc10733-fb3f-457b-92aa-3ab4fb8aea2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67486c9d-6b21-4161-bfe0-24c1b6acd235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb948bf-dac4-4db8-8f5d-7180d4d002a1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed0c542-8b19-4509-9858-492bee13cfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f4a343-627d-4c95-b6c5-0ce7499f8449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3c89aa-0172-4ade-b3c8-3c4c6d1cf0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a628a8c-f0de-4c63-9728-bb8c1d84044c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364cf349-7d65-4499-9b66-30c677a0ed04",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fabe45c-7b88-404e-be94-edd3614ef686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2dd5a6-a5df-480d-8b0f-906fe26d3246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8935d7dd-d9d6-4ec1-b19a-cb623e6f24c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b44e204-aebe-42ee-8558-c9a2c6c7fd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a18ddf-73a5-425f-b7b2-bda9a32ecb41",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c415a04-cce7-4381-b60e-0b4653ce116f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba23b3f-7aaa-4f99-92a4-a84912d4e6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b438b56b-67a9-44fd-9874-77d0ff120ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af19ced6-5773-4768-a304-0c5431084196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e8cf63-8f46-40c9-97be-8ebce50b5289",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3b96c9-76d0-4e88-8c04-0f04d56972e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e9ccf5-ff2e-4520-8253-7d34cced4cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c41f35-da76-4515-b9d6-7a7d0d8c1cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e3e346-d651-4d86-bcd6-334ccf064250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cc262c-c370-48d8-be73-6413a3a096bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fd28f6-d3e3-49a9-9b31-433129c32427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ea9406-7f1f-443d-8ceb-c9955978e4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2db2e99-7366-4950-80f5-9dae1ca6685f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b40d8d-1b82-465d-9e34-513ad2a5ed05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2315c151-2056-4b32-a0c6-8062f0e74265",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460aec5e-6fab-48dd-ad35-c049b0c3d385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cbb777-a217-4df0-9f09-023428ecf537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20466a5d-dda2-480d-86b4-d1e6092881c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b41079-fe66-4424-9abf-4eb4078642df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d72d7e0-795f-4215-bfe7-eef5a41bbd24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51403667-da84-418a-96b3-a86a7cec5ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebab34f-138f-4e1b-9b44-0cb91bfcbc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee2d973-42a8-4686-b30d-fde347a10cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "881bd688-f32c-444c-90e5-7cfd25292723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb0aa8f-d891-475a-8d84-7326b4450e7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bb75d4-bc45-4a63-9cbc-980f15ac362b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b065683e-db32-4201-813f-d2bfd66d1af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0ce281-43cd-4794-ba48-ecf0c39fd248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a38183-2d1e-4d69-abba-698d92f69fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1d7015-d5e3-4f25-bd19-4c7ac42e8eb6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af67d598-b357-4b2f-8383-9d9f9f5ffb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389420f5-3a70-4f16-bfb6-9c256b604ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13e5f4a-c14b-447d-be1f-8f4c12d7826f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0ff79b-c995-4181-b9d9-66656cc8c535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519e2b3e-6caa-4cea-8e3c-8103b6c2a253",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16bce1d-0e63-4788-a085-fd23a5b2894c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc110cc-d0c5-4592-ba3d-ff594a534783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4874a13-f162-4abb-8518-abc1a7488532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b108f8-7d6f-43f9-bfb0-9d5e7d6e4c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ddea62-97e5-4e3e-bcf3-591295315246",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9880e79e-3cf0-4dc0-9658-e77bdf2ac042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b8f533-36c6-4623-a660-6ff4a446fe0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9771bf13-d7ef-41fb-89cb-0ef0f9a4a234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0060801e-d434-4a1b-b2ab-c3087691007d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfa6c37-6596-413d-be08-d5869475e070",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb99053e-d650-43b3-b14c-609afd760231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe5c5d5-57fb-4956-9602-eeba61797cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6412ec90-5d70-480f-b47e-9c5206315bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5dc0453-20f6-4000-9598-38b8aeae09e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7bd27d-fed3-455e-b027-dd8691b11a87",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379d250a-e046-44ad-9639-043c168dc924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e937d035-d70b-4d2e-8531-f7438d175364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5435259-b1b3-4272-a7d0-1a244356a305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7675ab-b251-4f36-b498-d566717a88eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7486384-d7b7-4351-a911-78bddddfa5b7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf40cfea-c3e6-43f1-8c8d-847c0004dd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b084c4f1-1c26-4fdd-a9c6-44aeff56d2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7531ce4-ff9c-4818-ac9d-b30a37f9b17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7dd0f87-227e-4dc6-bf87-c121295dc3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4a4177-0661-4f14-a20f-c252a99de43d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39094c95-8ae8-45e4-b196-c8b238896fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4deceb2c-91a3-4baa-bc8c-387eb1911528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee45fcb9-62ef-4db4-999c-993f2ec75019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3182eaa9-30f2-456e-be8f-d6cac4987ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084d4e6d-1f37-4cf3-ab2a-43f97226f454",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab79735-b737-41f3-ac25-98c04aa55dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf027de-0929-4eac-b82a-76673cd9850e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5463ff40-b0fb-413c-9ae0-26f44237c330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "84a188ce-b8c5-4f8d-9ca7-25caa84434bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fe635e-b9ed-4a8e-affb-93102fc17b30",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e529d467-cdcc-4caf-81dd-6c3f12d8b8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84b2196-4ecd-421c-9850-8ac0e174b22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7cce65-d836-4629-b7be-eee51c89ae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b5e491-0a34-4e1a-a61b-19dc9f66d521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05e4745-e3fb-4dd0-97a1-a42fb351dc98",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6548df4-858d-49a7-b268-635f37a3f9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d637367-265b-44d8-a175-9533ee14f7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef86ef30-5984-4433-b6b2-eeaea4f8f4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9786700c-583a-4de6-8480-61389ec0768b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4910335-3a66-4ec0-ab65-1d50e411e90a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26eff2c5-18e6-4473-9299-bd2f4c312a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c22cb6-b211-4fcb-a115-2b075816f8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d9a71a-3a5a-4967-8bc5-fd0565afc9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c27289-c996-498c-8c69-d7d4153d01da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2033c687-10fc-4b5d-8e6a-08eebb9ccc00",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151be48b-9317-4fae-aa75-9071f21804d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fb9753-0752-4a69-b6ca-f17e59519b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c379c222-e7ee-4979-b0b8-8d70eb66fd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3fed05-de17-4169-8a23-ccab78f6a43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5fc903-c35c-4668-aead-7a454cad242f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d1d756-2eaa-4092-8623-652d22cd5232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3081932-398a-4fd9-9cd3-1965d26be1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d0e993-8ab9-434b-ac53-f62021c6262a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "771fec58-9199-4a76-9cd8-0106efedc70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13af4193-d3eb-4ec7-8f05-fb5ae5698300",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c3272a-d50b-46c7-87db-369f8dbed299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7fc869-a148-45e9-b832-79138a1d64e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80a6a29-007e-4931-b5c9-e1ddeb1ce8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3166b7-171e-4b3b-90d5-9762be4c31f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b297ff-bafe-4f21-8f3d-6946f5ddf4e3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239615d4-bc15-4164-a2eb-e72f19bf82c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dad25f7-feee-4649-bb84-74e1054aa2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cbc816-95ad-4642-8870-fdf38caff35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b5cb7e-b2ac-49f0-b17e-aa5ca9830f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d508d2-b537-44a7-abf8-5b8d931d4b12",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de54c25b-0091-4901-9daf-0e842886dfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a89788e-4ce7-4d53-9d97-c71491e43cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bfe29c-4477-41da-b2d5-af6ece17efa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a18ebdb1-c3dc-41a8-8d69-c3d9783ac287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4967b3a2-8988-4831-a30c-5e117294d0e6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d95e187-15c3-4660-bedf-7c898c65bd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab2c7f4-fae5-406f-ba0e-8459bfc61745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e98acc-f0d1-4d19-a77e-136dc7383744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "841fb6c2-ca7a-48fd-b3cf-ca13cd8e579e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c1600a-91d7-40ae-aa0a-620fdd92aec1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b2296c-f13b-48c3-894e-7227fdc4f28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c003d1-6a95-4f30-a6d6-585eb5a97223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc72c23-7f5d-410d-aa74-4867af70dae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3fff48-5ff2-47bf-b0ee-704ab3dcb624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99e96a4-346f-408d-859e-e528b049cee5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f5a629-be4a-4e92-b696-bd96fe401561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b5ce84-69a2-46c4-ac8e-e9a2646a3f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78adbf2c-9885-4b9e-9cb7-321c1bd0a275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "766d4e6a-11b1-4c78-b5d2-36bc398ddb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a60d4c5-3796-44da-9b5a-78200255e893",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903d9dcb-076b-47cb-b4ce-65d76c7720dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e866ea37-9036-431a-aab0-c027994afd5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a75eb48-74b7-44f0-9d34-7f9517412bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b490b9fe-1f96-4f61-8e32-b3274fefe44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa084f1-4823-45f8-bf0b-b5563559a85b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346e897b-2b09-4d4d-950b-64565831a6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c873e107-92ea-4b0b-8d77-57f493dfb593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4b1cc3-3bd9-4f9d-a2bf-fdbd19b5302f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8f4e3e-0a1e-4ffa-a8db-4cd703f5f0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d431a8-8578-4775-bbc9-f12b0be503d1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d8c7cf-1b89-43d7-b786-36b8c7a47411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25feb48-7dc2-42c2-981c-e16a2f8a1f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2b593d-7a79-41a4-b9af-ed54af343c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a34331ef-9291-4dea-ba1c-2c3a83741119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d33af92-7a62-45bc-b501-e959ccd2f79c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08f0769-ba25-462c-ae28-62843c5604a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcad79d-6068-484c-be82-bb85b3314faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e86ad4-29a2-4081-bef2-1eff6705df93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3467b3-e86f-4b2b-b7b2-f6c5d0455b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8362b1c5-ecc3-4726-93a9-35fa5fe792ea",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62d72f7-d2e1-406d-94ff-e6462b8c0365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d791d1a3-a363-4fa5-8de0-549e99ca8f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01de39a5-6c3f-4f1e-b5ce-bc1aacebfafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56659646-1166-47c0-bdb2-968345c5b989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93c6b02-bfdc-4dbd-b617-4d44ae6f7e6f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed16f7e-40b3-4fdd-9c9d-81c2e53a1a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5926d1fd-8782-43a0-ab6e-b584414f710a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4165daef-31c5-48d7-aca1-9028798cb6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a83c5c46-8ddf-4f01-8bfa-43254f2e07e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f07a29-406c-4f2f-a87b-c469098b578c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88826b2-b52a-4aff-8b6d-dab451180b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16c3e86-2e72-48cf-8dc3-d8afcd6f818a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36632494-8293-4730-9360-e78b5901f4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92d75688-51b7-40e5-a985-ea9c6070bb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8948a68b-c54a-4b6d-a25f-f5b47f7c95a7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dde914-b51d-43ac-bd9f-aa8c0d899bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a533f63-400b-442d-9fce-73261d4f79c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e91ac03-a50f-4739-8087-e398ae37e2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "52bf437b-b6f7-4250-86e7-583cce95d0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309314cd-510f-4de8-bac3-d5086d9f68a7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5457da-bb9f-4ce2-8841-f16a9f449414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08e32ff-d62f-47fb-a9a5-5d538e38bef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc2593f-a93b-44e3-a239-0610fa526832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee8dee5-10f2-4cd9-a0ae-263594054051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d280c7-6308-40be-a324-98613e7524d1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce690a0-cfb1-469a-9b2a-456b3f1a2f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad6b8af-0e4c-43d6-8daf-3b1e52aeeabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa05f2c4-2634-46a2-8502-224e1009030d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59ab2064-db2e-4a21-b77e-c22aae8f718f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b89c82-0b0d-4789-a385-18cfb3052a40",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b728c7d9-012b-433d-a80a-fc9ba5ea0a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8855f2-1e24-45e8-8fc5-cc22b6a58cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb0b689-dd0c-4f6a-9a6a-0a8637609b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "141a54d2-392d-4890-b7f9-961b39c4a204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83014876-e501-45d1-9d48-d58a6dd3be4e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9082d3-f41e-493e-8a1a-f6ac62e8940f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b546af-5aac-4f66-9e26-16d5d1ea2f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6721d0-e9b9-4824-affe-2aaffd8faa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3426837-763f-423a-87ff-567ec1f9908e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437466a2-2a13-4d84-93db-b2a6fc7d1cdb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673e19b0-cb47-4123-8f4a-857ad1a791c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "438eba02-6672-4135-8a09-da7be311504a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470ad25a-0e8b-44bf-b9ba-bd6c9264d839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d09a8fa-063d-44b7-b711-5a7714e2c6f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e19db3b2-6687-48a9-b529-a477a8722a8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f71fd64-af6f-4199-9746-17c038ab9bf7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d01f8f-9c1b-4f44-844b-a92c2b79bfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1ec6fc9-b7ca-4f60-85cc-dbf40bc8e370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1305ab05-a8f3-4fa8-a916-14d72a6389be",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8019f86f-54c0-4ba6-a3c6-d105ce10c86f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c0b9af5-f38d-47ff-9cde-8e08b4dd7651",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6efe17d3-cf49-4a84-9c5c-609120a700db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc9fb566-4a37-4e24-9139-6257e5b7cec5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "205d461d-1ae9-4302-8fe8-8951fc7738ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "652e7cb7-d60d-4fad-9a95-52112d60730a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87a2a729-649c-47dc-b632-8dce337dc912"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "260f2933-f534-402b-af26-1e647a882222",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9cc680fc-767e-43c9-87ed-589233464602"
                }
              }
            ]
          },
          {
            "id": "9ceb246e-25df-4b3a-9c67-d4ee1744994e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d1b41afb-0284-4f0a-af05-1c6e7653774b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a762874b-6708-4b02-a363-9e05bb6eab14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1e5012d-88bc-4fed-a933-97616f9cd515"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcf6fd13-1829-4acd-b553-beb04ef1842d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dceb0f1a-3ef4-48a9-a450-774c43ba16da"
                    }
                  }
                ]
              },
              {
                "id": "399c07c6-460c-4835-87c3-82d4fb546af1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d1e6f06-ba8d-451f-aab8-4781f45d48df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac553b36-f628-4057-b1b5-4f9bd7f0a51d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a02a89fa-eb7c-4da1-a6a0-e9cdd5911a6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "439860cf-e944-4e7e-87f7-5e1bf327c281"
                    }
                  }
                ]
              },
              {
                "id": "cb151b44-7c4e-49ba-83ea-0f821a5a3f0f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1e6208e-4a5a-4899-a455-621fa9ef5ad8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4488f49d-feb6-46a5-af45-b8b7e978e3ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa94473f-1779-4d04-a5dc-71a245b928d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0f264be-8ff8-4729-b846-30d2e7da888c"
                    }
                  }
                ]
              },
              {
                "id": "0ae944af-1bd2-4905-84c7-96b915b18e3f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78a7d31f-085f-484a-90fe-3556c55cc23d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f5f52cd-6b4c-4211-a527-73595023a13e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac217e48-b2c0-4835-b2a3-154cb2ce8e16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fef0acfa-bf46-4836-86e7-fd5aa44a6f3c"
                    }
                  }
                ]
              },
              {
                "id": "94a8cb6a-551e-4e56-9687-0b2e11a28b5c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f39d78a8-ba1c-48dc-be23-0fee49f03dc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e81baf6b-191d-4e5a-b70e-2e7bfcfb9c0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2700cb8-a273-41e4-932e-621ff33f94d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "28afdf82-f11d-4dc3-920b-52c320b21425"
                    }
                  }
                ]
              },
              {
                "id": "f23ea248-c1ea-4a7c-95e0-020eee38e617",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e9ab320-5f02-440d-bbe4-45f4378e1f69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe55dd2a-fe11-461c-80ba-acb2cc9ee66d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "280d7ac4-2785-4f73-bae8-c6fddca20684",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "78b1c196-e930-4e92-904a-3b48090843e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e8b069c-a324-437f-a9ab-77ce034683af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "958e1645-9843-423b-b054-730c9128d199"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d14d67c6-a10e-4cf9-be11-78a792fcb07b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e24e5cc7-5b83-4428-9a28-d88d0f794e6a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64e85eab-7388-48fc-982d-f434ff11f585",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "28fc1e96-3711-4953-9bce-9a1d487f0077"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77bc0d1f-105c-4f90-af2e-8c20d9aa2789",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14428e5b-6261-4ba5-a990-2ced860bbed7"
            }
          }
        ]
      },
      {
        "id": "c1e72bab-89fd-487c-aae2-c8897d1defbf",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "580add5c-688e-4685-a6ac-53230b416018",
            "name": "Negative Testing",
            "item": [
              {
                "id": "800bc8ea-f3e9-4d2f-b89b-b93c9eeb7fe6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "173354e8-1b04-425b-a824-9dff63804cbb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8c0aae-4d80-4158-b0eb-d2edef019bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34127d7b-b9b3-4157-a7dd-27abbd15b289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816e0ca3-ab3c-4542-9392-8777cf1ed39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "91334dd1-8df3-4123-8e8f-4bd711a6a1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e949be-d6aa-4cd7-aff8-4f29524110cc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81252e03-1392-4754-9a92-ff5b6f97f471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d33b47-3d38-463c-af79-ce3c934ac212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c6dad2-1d2c-4d9a-94d8-21d798e60aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0078def8-01bb-4b28-8e93-d1151e93b3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c02bbb0-d6de-4fdd-b542-0ac5e9da43c1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cd03d8-a71b-4d41-bff4-e741131753aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c94be59-9555-4500-8815-23030ebabcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd2c070-1b22-4ca9-ad5a-b783d4ec7de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6611855-c4aa-41db-a80a-37af6d0de0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bef6ea6-e804-48aa-a385-5e360a9a5aef",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9c3858-c6bd-4415-8de5-d3b53ce83e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da300998-4c9a-4ce6-8018-69c38a001503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a600f220-d102-478c-b431-4b14437bb553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f90c89e-5a7a-4589-a658-0031c0ca5a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631eb946-e8f8-42b5-a1be-40163079165f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d24374d-bddf-41bd-b498-441621aa4758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882504fe-e2d2-4b5a-b0dd-a2e6d7e68c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a693456f-357f-440a-9169-4c20cf9ec172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34878c96-eccc-439c-9e29-b6e2424bfb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f3fc35-a8bd-487a-b42b-ef3f7386696a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b5c6e4-e549-49bb-9626-24aac8f794cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e467ac-7204-435a-86d0-45a755e704c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b4497d-5fc4-4d45-8031-70b4285bb70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48fd1f9f-94df-46a0-af52-2abc8cc719b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184f902d-7161-4842-b90e-81139d4acc8c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d2f6f0-f1fc-4b56-b22c-babed5ab80c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e387a79-1b2c-44e0-bf39-044238dfa0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82164a0e-e2c5-49ba-938e-fe0fbf95373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc438f0-f625-4fb4-bc3e-96a27720b4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2878dd-998e-4f4a-bc4f-1c1e4c122c75",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a650b4-6973-4b0c-bba3-38c2f9a6cb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599573cf-9ebc-40bd-b0a1-2e795d80df45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2270d95a-101b-49ef-84c5-2dfc2b435a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf100311-54ed-4cab-a084-5d029202e85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbcaf74-45ea-4292-9bab-59eaaf725f39",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684fa522-3777-41a5-9947-263d42ee37d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c028fff-fa0a-4c17-9444-276d33121df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc164c14-33d3-4597-abc1-1b979fb9fe93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f60fd76-6c46-48bf-b762-f41f882a2e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41797edf-9f12-412b-9161-a38c70c96813",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc8077d-19a3-4dc1-a7f3-55b5755a2d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec636ae-a0e4-40ec-94d7-188c044f2528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14bb5de-698a-4a57-92c0-0e0055df517c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a529ebfd-4040-4791-90ee-b1856098b3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1854a9fb-14b0-48b1-b5a4-1ae89807f06f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5170f586-ee61-49cd-91e2-b9ba7bae0e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80b7fc5-5597-45f4-aa19-3d07586291e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202f493e-c963-4bc1-b3bf-2450fa9b7655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7b07a821-8878-4fc2-8d95-abd8c449fbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c76fd9-e6d1-4ec5-96c6-bde89f09f331",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eadadd5-868a-47d7-b3e3-dc70e7434a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd49538-05be-448e-a586-40ce455f0399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44888aaa-df09-4d0e-8897-bc4e0d79bc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a74df6-25d4-40c5-ba83-895a8eab814d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8a5201-8c7d-476b-9ce6-4fc9215f12ca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94af5f64-a7c7-44d4-8fc4-032ff99dadeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdee60b-b1e4-4b92-815d-1b05f3f33f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07cc2bf-c382-49b4-8bde-dd1dfeaedcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bae997-979a-44d3-a733-6d27d64dbd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8a2b57-2078-4fb6-a814-1a57492358b3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8884a489-7d9e-4f5a-a4e5-e71e4a807efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5841a78-ed24-41c2-8f41-1887b1d76e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d0b43c-705c-4760-b3b4-e6af110b83f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "352e1fb1-444e-4dbd-84f9-ae9fa7b29308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c379f9f6-464b-4100-9b43-fcc7d888b71a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe47501-ff64-4aa4-a54f-d1c926ebfaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa91d3f-f264-4a4d-86da-c0ff6ae47e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e02edf3-aaec-4b1d-a26f-bebb7db662ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4935bcc5-395b-490b-86f0-a660add9008f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe750b0-e5e8-4f79-8ae4-1f254b09ce34",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954d7b35-f132-4134-80a6-b9e5899ad614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30696d5a-e45d-4945-bc41-6158384afcbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272ab83a-0c93-4d8e-ad62-98328181a2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf57a43f-37cb-472e-8df7-567cbf5d636f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb63dd8-54ae-41b7-89ef-4748279877b4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9857cbce-4541-4546-bd70-d3d915771be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3ee240-d04a-4294-8f92-ba537405da13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16c2aff-230c-4c6d-b83f-4000618b08ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d0b15d-567d-41aa-9921-84c60dcdb47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72d49f3-7d7e-49e8-a92a-033f84fcb266",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95f4441-44f3-4f4f-aab6-706f152bd3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04f562d-ee59-4a2e-93fe-fd8dfb6fbfa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480225cb-8e7c-4c92-be7a-02a494e6982b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a54db21-2794-4984-a0b1-32a6fea9ede4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ba1c77-85ec-4ba1-b2bf-d29848093041",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384db4b1-7197-436c-9fb9-7192219c1da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784739fa-081d-4855-9122-6e1d30263ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670da055-0a74-4027-b2d0-9669593c53fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "115633e5-21f8-4aa2-8b6f-19ef35aa375d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baff14d5-ff97-4152-9d51-cfbccb374daa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb6c48a-703d-41ce-8146-fd2ab9dd755b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629a55b2-8cf3-4e6e-bd4b-a8ffbea815cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5d05f5-2468-4fa6-8b18-e09411743eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e05b2059-06d2-47d0-8de6-ba9b01404cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b5e4a7-3e04-42df-b2c0-c852f0a00ce6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71afa2e-974f-40c4-97a1-b1b474e1f2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f443d76-6946-4b1d-aca0-eda866a87151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2110cc7a-734e-4892-8a67-f77506eb843e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83bd8218-a3ec-488d-8dc4-8e8878a6eaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff53b97-00a7-499c-b709-655fd5e63783",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1bce33-905d-4bbc-88e6-6a2f770d5de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91752a5-f88e-4387-873f-c344add0105a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb8252d-4b55-4fda-ac59-b2bd5194923e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da1f648-b664-45e3-8bc9-58733c255496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9ccba3-dd34-491c-9033-4762891d856f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea112eaf-c688-44f7-8ad8-2d65ad78a7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d43a3dc-4996-43e9-98ab-375e2641d50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776fa15d-6526-49c5-98ed-85e2441a73fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca63abb-c891-4b64-ae4c-2d351781b8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa8033f-f117-40c6-a185-d9863ae25ba6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c938b8-05b6-4346-9e74-d018b625907e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40aa86cc-055b-4df1-b1ff-4c0c3135e0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1c31ed-7b2e-45b1-943b-f92b8969c5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9813b95c-d350-4961-9c93-54dc904c368a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ade50a8-2bf1-4c88-9d38-40eb250678ee",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd72df78-437f-471b-b429-ee51c012b4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d3e58b-e74f-47d3-a64c-a6eee82ed35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a259c3-2fbd-41b4-914c-908850336879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c09d07ca-776d-4bd6-8d0a-784d7ec61e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa79333d-637f-4184-84de-f9fe65bc1b33",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c339e7b-473e-4846-8ed9-0ae610628252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ee7097-0f50-4e3d-8dad-87a791d36550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f1fe64-65f8-4387-9199-8d7861244dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "767895fb-8827-4da3-a27c-18a77a980b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdcd1db-edee-41be-84b0-7b5b0daf2620",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175dbc56-346c-4b9a-9968-2a93f1d55c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5e0d8f-0da8-4e66-b1bc-4e863882868a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14dd053-952a-40cf-94d6-f22e6b518265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77206ea7-365a-4aa6-b3ac-54af443f1de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c9f761-1179-40b3-9cd5-9c2eb38e7f32",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31de25e5-6f34-41a0-b513-30b7f61d2c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e2fba5-b44a-4283-a014-8ad78cc4a0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f3d2c5-9c43-4a35-825d-75bedc879dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19148544-faf9-4623-9d8f-1c443cf68ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02ddc06-1e3d-473f-81af-f025a4a53b4f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc459fb9-90d1-47c4-91f2-a62e628d6ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cca9022-0a6e-4be0-aca0-ad57c6df920e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff77dc83-f171-4e84-9ff9-91b4b2df6ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de9a378-a39f-4f25-99ab-401d65516715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fc1281-47c1-4aef-812b-6a2efa56c3b2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11230c89-c35c-469e-b5fa-fd7ce84b2a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3effe48c-5038-430d-99f2-19c7af559b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30817c72-4cee-41c9-bd39-e183668ed4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f884b9-aeb8-46fc-a873-29a69e123477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059082a0-f472-4094-8d65-c96d4c5fea91",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311158b5-5f74-4745-80b7-a429db2627e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e0dab3-57dc-4bb9-a095-4c1fdb5ecc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0378a5-4871-4e69-b76c-ca52542b7e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36b2cf8e-b999-4dee-a555-fc88288bb7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0619cb25-b6d9-4df6-8f44-75c0f5fbc8ac",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9d16c9-24da-4a9a-9b5f-c4372be8e2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d55a4b9-f7ad-4b27-bf26-557138ea16e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39e1a68-571d-4098-90ed-229aa8d43f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8308fc6-ed53-48e1-b077-f9e6d9327fcb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17776bcb-4509-4a46-bf9a-45a84d064b40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dbd1b91-6645-4b9e-961c-ceb025c9904a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b015ce9-0e9b-455a-bc2b-8aa05055efe7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "13a31b4a-88f9-46cf-a665-eb1dd0f561d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4c51b4-c992-4dba-9330-f898c42987a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8aeea59-f9b6-4caa-af89-7ca1a0bca733"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f39a284c-9ce0-4fc2-ac4b-37ef68cffb7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "183cfd4a-1940-47f9-9b0a-ab5db140b44f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30fa633d-dde7-4cfe-a85f-d83ff00698ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "577ba909-588c-4abd-9e28-4e954aa17ecf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "454b88aa-07c6-4b40-8e03-0f9022e79234",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "579bd7b0-077a-472d-a29f-7be3fe05ee62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "030a5319-89af-4b7d-b8be-6fb932b0c0d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c9c721a-c1ab-419f-adfd-ef7dc4c2edde"
            }
          }
        ]
      },
      {
        "id": "00880828-6cd2-4053-8c20-0a8bb80a08ea",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7a8f7883-4248-40dc-90db-ac3790954eda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4ea8eae-7c70-417d-860c-ca1149dbc3df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "af5750d1-732e-49d9-af32-d64dcf72c382",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffb5de6-7a3d-436c-b340-fa9472e4e62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60a074f-c957-424d-98b3-d60d63cfc52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d02c3ff-1454-4a57-bcba-fbe5b22bea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcabbae-6bb9-45c5-a06d-1b18715f4bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07068f8d-ac28-44ff-9f7e-197018e6cb99",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9de8f5-8018-4820-9bf0-9eb58b04b6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd676125-5b06-405e-9959-c1f37e3ac1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16426d2a-8b8b-4dc0-881e-4255d7c762d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb761f25-0d93-4c46-9b1b-2d9bad755dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9502512b-06f1-449e-a46e-71b87942b7c9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9954e0-6bd9-4f13-b1a8-8e794c6d52c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8132dcc-e661-43a8-b90e-9c03a6fe9a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e66434-2c1d-41aa-98ab-a5ff4b111068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e04de178-4c01-4d12-a9a2-096e65da2c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d4e95e-477b-4ae1-bfbb-51f3066eba2d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff32957-5586-482d-abe1-832923a0be4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d7fdb4-a29c-46dd-9dc4-1f76d83fecaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb21b8a-3c38-4c54-834d-7d23fb91ddbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58fd437b-d758-44ad-900c-f846c5496427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcb208f-d785-47bc-823e-8c4295262c0f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4d2ac4-3125-49b2-9dcc-1c8b5beea5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e60918-fff1-42d4-bbc8-7881da3491d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff32b6a1-b02c-4668-8c03-cb68aec686d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c89cf6-cefc-4fb9-bb56-428fe53caea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e2167f-b9de-465a-b9c9-e71abd0d264f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e5e7b3-59ee-4133-be37-fe7d954b3cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be064d3-29ee-4ca5-a391-99efbd1d9bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe15e228-999d-4d52-8f0b-d7c3d658fa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe71aa4-c058-4092-b175-25f64777cfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59a68f2-93ce-494d-95f2-cfb1b1f0de1d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2ea188-c131-4915-948c-6ca3a3e40c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04aac7c1-9e25-47fa-a70b-d7c2a54bc776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c79913-a8d8-47fa-b89f-b37747b43848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2bac72-5f5a-4a06-9610-17c40aaa2cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6221e51f-5335-4896-8963-37a44e4388f9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbc13f8-6c09-451e-8df2-44a483045675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62102a7f-4d63-4866-aad1-dba814b508d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58acd671-57a4-43fa-a314-9448aacb1022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "483fd29d-4306-4d2f-8164-98291e039ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2b384e-381a-472d-8161-b3041a188874",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099aa6e0-668a-4ae4-950e-6d369766753e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ef84ae-fd6b-477a-986c-8eed38619a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c90483b-83c9-4488-8536-da9e48809156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0dd508-baf0-4ac6-8d9b-4d17d2b3b9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fe22d3-5591-4a3d-91c6-dc42ddfafbb9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095de8a4-31f8-435b-ac3d-5d735bd253d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99d6fe2-f3fc-4051-a27f-24ba770c6cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b684b97-66aa-4bb8-bcbe-cb583f145c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4da9dd-f552-409a-9ddf-e89e696062c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284adf52-512c-4e1a-9625-33a8235463bd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e8f734-0693-4096-9fe7-b4ecb5eda44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d41d7b9-ff2e-416e-91cf-385329f21ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707a2b70-479f-4300-acc0-07957ce5b704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9928fafd-3e52-4bca-9c79-b78821a5fc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b791db4c-b498-4242-9d29-f6fe526c1090",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb17b15-bfbd-44d5-9011-2856aa1adce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461c540c-8365-4bed-8b1d-f1107df63d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b003857f-dce7-41bf-a426-215f856b2198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22524da8-8c2f-4758-b092-4130d8125ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ecbcd0-e106-4577-89b4-93dd11aec181",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87a7331-06d4-4fed-8f73-1ca8c85cc777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212802e6-caa0-4be9-a88c-d8b7b86611be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043fd1af-be4a-4ffe-b636-bcfd1d71e854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c040c7-e7f0-4671-b01d-e2bb87b02d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4584b7-8382-40e5-a9e8-003a590f61b1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe34ebcc-421e-4e05-be96-26931bc10f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976198db-706f-4118-bb83-02b7a11172fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b2ba55-fbf7-4a61-9b92-83291fe8ca96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "330183db-b41c-4d23-bea9-9605879703f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a837ed14-cc33-492c-a7cc-ad04421fa194",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca581a6c-0200-4293-991d-08dab0a9963d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9caf25d-d2c8-401f-86f4-d1553112ebd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ed3524-2b58-41a7-af8f-5a103d1d2fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f69da4f-f042-4233-ac9b-629c7b4d24a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc34332-4894-41e5-94ba-e52a1877fcc6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3630ca4-29a2-4469-889e-5a20f1adfe95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd2ee8b-5640-4599-b7da-e667f0bdcecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e6222c-c58d-47c8-85bc-43ad7fb36d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c67eb8-7615-47b0-89e5-27aed293bc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79142c3f-6d53-47ab-8cbe-29b5312206a6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592c3ead-d746-4c04-88bd-ab3e5358271d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0809965f-dbc1-475d-a662-6552f3f3e254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f9e8d7-3068-4e77-a1bc-2cba733f570f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a78d28b-2cf3-41f6-9838-a20d25e041a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4b291c-6463-4411-82bd-0f7ca6f63bce",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0862b512-3b7d-4370-9293-6d2298066870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd89d581-6f5d-4300-aea2-01cf9fd938f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d10ac0-25d8-4f52-8eb9-f7358c4062a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99202ce8-2611-4096-8e25-e04c595db0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5758118d-2714-4a8d-b188-0c96ef44073f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ad9379-9822-4889-abe9-b8254c825c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecc3ece-3ab4-4352-88cf-e51ff52b2f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63980671-6eb3-4f00-98cb-7eb7499f00c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb22b04-cb14-4f93-a492-aff161943999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98aaa6ce-dd4e-44d1-bbd0-c8e696e81e59",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfadd1a7-57e6-4e65-8790-18b444baa853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cdb448-244a-4edc-9e9f-8eec4358df60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f551a8-fec4-49ed-9a63-8814dce59ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9478f0ac-d063-4e13-be9e-c389eef48fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bb158d-e6e6-4e20-b6bd-137ebd2d19d1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988afecc-c502-4187-b47d-d5d448e7e8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b424f1-0dab-4958-a60b-c41611427bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3aad0e-37bd-4afe-bc2d-ea30b97f4e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2107768-fa6f-4a37-9d48-cf6244cf2b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c27659-6e28-47c7-a014-e1d93abd4769",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c108b9-1658-4cec-8013-e0676ed91cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661d5f57-46f0-4efd-a0cc-7b584f472069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cec291-f805-4508-ad95-9ccd628f11db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a28140bb-aa46-4c1c-86c7-60a2322190bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3e56da-4e22-4bb0-89bf-c424724c89b9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70372f38-0ac3-4d91-8d5b-32181c5f5f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781eb5e7-1041-4752-967c-79a149e2dd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e003ab4-b515-4518-b4b5-68c417e33071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "913b5975-174b-4ae4-a7a0-605315dd3084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5676a4-0c93-4884-a798-110698c97037",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad5d749-e0fd-40e5-bd2f-5c4e37521e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753a4cff-6436-4a38-a6c5-ded4006b1b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df608d44-081c-4e09-b6fa-5bf7f88cc3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26f5c2d0-3a3f-47d2-8d24-e7a5b853be95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ff14ff-ded2-4cdf-bd5d-b57034ee5e8c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2559daee-f3da-4a0d-8ff6-a44a03642d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62f99c0-987b-47af-bf54-49b912bffe2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065ccd88-e3d0-413e-9c71-11a792ddd592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb966ec-548e-4a9b-981f-7297bb312d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fba4e73-a139-4a32-a3b2-ea9ec520880a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad2bd4b-0fef-4d8d-b6d7-836890c60b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5504056f-4ac4-4be0-b930-6580e478a689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e186b95-f4d3-4568-a69d-428a157586e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "456b41c6-ab7c-4518-b6da-692e92f03515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a916aa65-acc7-45de-8395-109a9ed09910",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92a1f63-6309-4577-a0e5-05df4c0f6062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84cfe48-6383-4311-8b1c-032ff0ac6d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac5a0a0-8395-4e0c-9492-7d801d47e205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c75d553-b983-41c4-9e9f-e1967112942f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5890256b-03a7-45bd-ab29-8daa0917af0a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa04e08b-954b-4af1-a1ad-4d1c871342f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663e1c77-91e4-43f3-8897-8d8d841db57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c1e304-794f-443d-a520-322bf17e02a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b0d59b-d96f-4e55-82de-2020828ad3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5b99d7-17f3-41b8-9494-6b4dfe04b521",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da212a13-5048-4d3e-89e0-efc3006e9535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d916e4a-2a76-492b-aeef-679345180885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195d1d4e-a62e-4454-a902-23f62d33265d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0c327d-85f3-4057-81ad-6b4589c15205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81877cda-d4ff-41f5-8f2c-00d363b8a24c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7053f795-0ac9-486c-b7d9-c32aec2820cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df712c74-6725-40e8-bd5d-aa3af8346d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf64206b-19b9-4025-81c5-d03a8ea475fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8568e68a-984b-493e-9704-fd64c3844102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b1e441-ba7c-4647-b50e-482b42d765b4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d022d344-7517-4793-b1c6-15a719f0b0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a526cc-a886-4de8-bf08-afec8ca93177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fd33c8-e571-407f-8eed-d768c74485e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc8704b-dd8d-4c36-be00-3251085922de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73e8143-11cc-41d0-941b-4f8bfa7ad893",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390600fe-f3c2-4486-b7cb-4a6bd68090e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1fa961-f0eb-406e-8dda-37fcf0a12858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5735c0-84fe-42b8-8925-81d955beb213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c495f11-357e-4348-9278-3f0fc7c6bb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6810336-b148-4568-a226-cb2c68ca4b18",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a156a8c6-4913-44bb-83c8-7f2c0b9b52d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b5819a-a77b-499a-9c28-aea4f2184cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bf71e2-cbcd-4e57-9f94-ee99303d4bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8adcb19c-be0b-4f4f-9ca5-fc4a4d649514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027fd9ba-fbdd-4d92-ae1d-2be06143c307",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e99aba-dadb-4909-99cd-e8d7455133cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a01f38-c8a9-4d05-9cf9-942c5afc87ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcc5d43-4e76-4e79-9975-0d167aa8f42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfffe99-f963-40e6-bd0a-ce6c58437c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b475aee5-e063-4a30-8b78-19d7be0ba5c5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6234adc8-588e-4455-9194-943728ecae1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680dadfb-ad57-48ce-81ae-8b63c59a6ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23882a3-5a62-44c7-8bc4-11e36222b518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6086fba-304d-4e31-8117-16eced2531c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3754ebba-3aee-4ca8-bc8e-692dc0bdb4ce",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27158caf-8dfe-4924-abed-2304ab01a7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd314b11-e34d-4919-b75b-f810114b5a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3e280a-e5b8-4652-925b-180633cfd9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79e5a236-ce23-44cf-94dc-39ecfc746bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21948faa-fc61-4af1-9944-374bc6a26981",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac9d91f-f108-47c7-9ea0-e8541e878076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43df6d62-686c-43f1-ad9a-8772dea718dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e765aa0-292c-4959-8669-bef9d2c51476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "778be4a6-d098-477b-b504-72c6fd11cb98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "591f02c9-e82b-49f3-8146-f5d6659f5394",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0c21bf0-7666-41a8-9634-60926fc2d1d6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acab8cb1-c6cc-4bf5-94c7-c4e59084bbfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "980d1e42-acda-4eaa-badf-c0f96a43d08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2cb2bb-e22f-41eb-b8d2-665f82fa64bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93173117-e2f8-4aa2-8172-a134c38fd5ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf7ab097-db7f-4aba-8821-28865d38393b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ae0d720-dd25-4675-9a62-0676a438a63e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05b36f0b-0b43-495e-aef5-c45d2d9a70b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1d29081-9a84-4fb5-8a95-bff27d0efa1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9000ead2-c31e-45cd-99a0-a830ff63cd25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e8f24770-f68b-419d-a7ab-d8a9811a6054"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e635d71-97ca-4eac-a7c5-05a24f3b7635",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc67e6a7-0fa8-4669-94a5-1202953c28fe"
            }
          }
        ]
      },
      {
        "id": "5485205d-7f6d-44d5-a648-6c66663eb485",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bafc9120-9345-4ab1-8124-e40df7a7217c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e37743f4-a8f4-4e87-bca4-8900d25ce507",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b14edd8c-090c-4d7d-88a0-b746fbc1be22",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3b5116-c9fc-4304-b775-07571e721c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649b6548-f7cf-4abf-a4c4-5fafbc1ce14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3745cc-6318-43d1-9647-444f60dd3da5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae503c3-04a2-4203-b03a-b6226aefaa7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5375801-7630-41c1-b5e4-35fcf2644740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdf57ab-1db8-4290-9107-420a7bf50db5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a229fc-c834-4e85-9245-ccf862daebf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b18d1d8-c6c1-4f93-ae38-ebd9a57367be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e4baf1-989f-4db5-8375-a2990998b049",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3634bf-0323-4ad5-8063-00f1e7a2f1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8aefd88-077a-4990-93bd-d0b0893f75ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4365d823-d138-4838-90fe-c7e0b0b1b1f0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b5da30-0e63-4fb5-b9ba-a5431b1344fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852c46a6-e8b2-4450-97f9-ff94968d627e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97156d35-6af6-4be8-918b-8cd0a83f1fcd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab8c16f-0267-4ef8-a082-dc502cda8dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c4bf30-951a-4675-864d-01d48ec0eda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d48a7c8-5aed-432b-af17-d1c2d48a2e7a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fe4ed4-5d1f-48b0-9d1b-56aa28e07ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2c8459-387d-4d1e-9e65-03c351172e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8854d35-422d-4010-a7c0-821122dba9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c15130-d0ab-4e51-8078-365c93a26cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02232fc5-f578-4882-9b81-740d983af1c9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1733af3f-526d-46bb-9ece-af7e4fe2df04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4109635-55f8-4e35-b4cf-0c0a7336a9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4eb8cb-be42-483b-95d0-36ed09059023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0930adef-980b-4dd0-a0a5-c0461f88d470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87b3f22-e176-44d3-b428-c9aa1ebf7160",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c554da-467f-400e-92f5-1f40ad5ff53f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318298ca-93e5-4781-ac4b-15a07ad29320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81422b17-04b8-4782-ad96-1caba4bb88ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ef6353-7478-4e28-94db-f39547ae1969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3231599d-0a2c-415a-b5cd-dffcf64a358d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22efe02b-e14b-4181-8563-d76f0d50a597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d627cc6-6191-47db-834b-f35570f19c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988565d9-d087-4301-a2d2-c2a6692360a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315eb859-109d-428c-b4f1-7a42dc185402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d52a2aa-4de5-4855-be98-1b0aabf7b270",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a39f4a-7f17-4b17-950a-df262cd53c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf23bcc-377b-4920-a9eb-16b7a05fe1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29997f4f-d3c7-4b3b-8778-27f885c97a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353b63f6-9fd4-4046-bd4b-621f4ecaed5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49515e7d-2a2f-4971-8171-a59fc38de23c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2342a2-5e1a-4a1c-8de4-de9eb81b08c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e49c7ed-3587-4d4f-8972-b2655376d20d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854b6dbc-22c5-48b4-bff7-a4336c9c67d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054c8f58-783c-47d6-9195-6ba54f0f3a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed97518d-6f3c-42d3-84a2-957d42f1fb48",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5432067b-d4dc-4d51-aa32-3c157b947d28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf274ff0-396e-4291-9bf0-23f73e40f75f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944213b6-c303-4647-8d1d-f2c267b1d1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c69017-d1e6-46eb-bfe6-f847537a6a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5910359a-ba04-483d-bb24-301e0058fa62",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7265f450-8795-47cb-9c9a-cca70b8bd493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee19b62-f680-40eb-aaf3-59cf6fe58944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b8eb98-f01d-4a8a-be93-f2828e357993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cc8134-25df-4e8b-9cdf-734f4bc98c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53bb968-d250-46ba-ace2-c74f83706c60",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc1ae3f-4283-4b67-980f-ac8ff75f23f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38dd945a-444b-42a2-9102-46713ab8dd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebc5537-7efe-458a-bc65-2de66fb1f7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116b1df0-af5a-46f6-9992-cfda7ca93dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8f11eb-fe6f-4ac1-af2c-bc05443dc87d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ec6566-c810-4790-8ae8-c430a6c78b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa738ab-985a-49ca-92fa-9e7f308282fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f866b12-a5a9-4113-930a-0b5f7524d290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bcc6932-41eb-40fa-aa64-297b5612e9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044c3977-6926-488e-b695-5dcc61bbf9eb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04c4ed4-5491-454b-aaa3-d83f3951fb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab9ba93-a654-464e-bd58-267f0ededf4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294e4071-88e1-43c5-a3fb-9a643fba9a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d92eae3-605b-4e02-ae32-5b67c08a27f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad47ceb6-5029-49f4-8705-ce5b9a390b6a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78eaa4f4-9343-412a-8853-1e4d8b11ac4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec12cecd-447f-4b6d-babb-630126a287b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae361eb-589d-4f1c-9d56-44ef9bfe43d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112717a6-8850-4fc6-b085-850daf06db54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4b7a6e-60fe-4c77-8a69-2243ee864d55",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0158741e-0bdc-40d1-84a9-407a4af4de8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539dba8f-3835-4388-a9b7-1fbd8ce469c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fc199d-b2b6-4f6f-b44b-345274763229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d59d62-5d26-4098-8e2a-2467177923e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c019b74-2230-494e-87b9-5f4b2735f970",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d899c6-4f73-45f9-98f8-281b96033be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ecb4f8-a32a-414b-ac7d-1ea86fa2f7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6572b197-7378-463c-a65f-0f5dfdc83b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0c762a-f68d-453f-82e0-fd6b83a79682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d3a23a-de6a-4abf-aaa7-ddcb6b003ea6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99515040-53d2-462f-ac61-ede77e3f8784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bed254-ef90-4910-9d59-a315fb7983e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e365a96-4744-46f9-a85f-d44b969aadba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59929f7-4f0f-47ff-b28a-884b5abc7a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8749baa-0e82-4a41-9775-dfd3b56e5de6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c28012-5ddf-4967-a92d-2de26cd5b965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd708ba9-788f-4496-b18e-59c515acd43e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df029202-8257-4f42-8207-8b77114d64ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8555cd4e-8f06-4eb6-85c7-4b743a849c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3203105-0e57-49e7-933b-6a241f0525b6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68778efd-6916-4951-8987-dd070f5b923a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68077935-adab-4321-b88e-b5f062e3c486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6beb189-b98c-405d-9a59-3cd3875deae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7200bf-3a3a-4e86-8e5c-1d2eab2d0253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b32cd79-573b-4f3b-bd96-a04b6dd8e01f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3223ef9b-010a-4e3d-b870-9145c09c06c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ced6642-b770-49e1-a7ca-dfa81bd02dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e43052-90f1-4456-8870-a3f9c8af9789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fb2d2b-6602-4339-8616-22786b6ff8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f543bb-b006-4d0c-875c-0fb4f317e6d7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c8f4af-f904-4c55-8666-b46c8a3dc8cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9330a8a0-172b-4759-b1a4-a48531d5737f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf6ee90-438f-420b-8d24-c0c2980a616b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd7d680-f4e1-4cc9-805b-4815c77fdcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cffbc9-e86f-4601-b798-0831fb52d4bd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412c4c4d-005e-4620-b66c-98729f63e795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d3a01a-4c9c-48fc-9888-e6e7a1dc0e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c89ff38-a509-418d-9292-3207408715c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7adf6d-4037-403d-a209-6531196976bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92adb194-cd85-4449-ae10-27be84cfca46",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2fdd17-9819-43a8-b643-bafd458fcf40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "439873a3-e9c3-4d80-9b93-573cde7f0800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28608e19-9c3c-4abe-85f8-7da47185c1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdecf304-dad8-49bc-a589-7c42224d2da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ed4d45-8381-472c-82f5-ed1989576ced",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1537d000-f1e2-4cbf-a23a-d5f1c254114f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b306fee5-0db2-442b-92d0-11e054f6f603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa94d43f-36d2-4041-b8a7-8d50697e2f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f74a79d-6456-4715-8cfe-102eb4848e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce40e1c-9ac5-4e25-b441-5d6d3fe3ee75",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545bcca4-9db1-464f-bfc4-198ae53523bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bd6022e-bdc9-40af-a53d-a8c0394eb885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0f70ea-057f-4262-afec-bfa2d875faa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482916aa-e3b2-4a62-b823-238508468b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f74ced8-87b8-41ca-9662-740b4891adcd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb069dcb-f3c4-43fb-8497-08369097cac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a3ec52-34b2-466a-9973-cdde33008d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a860ffb2-86bd-40a1-92a0-3338e65a4913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda73ec5-7b39-4108-894a-0c23d27803cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a2aaa4-dfc3-4c8b-9fcb-91b7cd7ef6da",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044105dd-938f-4be7-bd2d-965786352ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ccfdc46-d5fa-4802-8ea4-6d236d0bcf6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331631fa-d191-4739-a99f-201741d8641d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692495ff-6c8b-4e93-9965-872e04b4558c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d647798a-3362-4181-9570-3db64f0914df",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b74435a-3bb6-44ec-ba34-9996866e3fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b74b5474-a5fb-49b9-9e37-8582cee19acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d22f329-e0ce-4db9-ba0e-45f853b2ba82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836b96d6-4a95-4f70-b260-8b725a27b24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1644b1-f2d6-4e4f-b2e6-d8f2cbdce48e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ff00cb-361e-411c-8973-4f744180728a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78385cf5-b5dd-487c-8f7c-a0449c100b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c980d0ed-c9fe-42b7-860b-926fcf11ecad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed2c6bc-0cbd-4191-90bd-68afc2a7e41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a740e02f-2c12-4aab-b96b-c9764d2cea00",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08fba6e-7cc5-4f15-b24a-5c1f79341352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8b116de-c156-4466-bc8e-6d8b94c244c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116a7edf-3450-4e75-bde0-bb3bc1c6c04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f4cb2d-9bfc-4648-9204-47387d003ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596a0ebd-dd09-42af-888d-5f52c1f59e92",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5618bc35-ec4b-4c24-a674-df1a83b2543f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7817ba9-5212-4bd8-8aeb-9a8edd8087eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82875c8-58fd-49ae-b710-95fcc9300ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e02d8bd-a035-4add-ac5c-edbc886a71cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e6cead-007f-4c21-ae98-651431555f0b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6470b052-8aa8-41e3-92ca-6b610f96bc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6564f46-a290-45fc-bb1d-ac11f3e7b28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf4396e-75f6-4faf-869b-4e854c681a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bc6eae-8355-47dc-a22a-ef4c806eda65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf75532-8fce-42b6-b93e-f4dc7278be79",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8691fd-c790-4f55-8791-8b0e463981d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490727e0-db9c-4555-b601-9318b6ab0b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f32f008-4f0e-45c1-8bd5-4e3be2643b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f450a369-71f7-4fe3-be11-d19e9fea2c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4abda93-2b8a-443a-b1a6-3feea3e6e6d1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2e2359-ad39-4f93-af80-c8a66719c77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de1d19c-598e-41ef-9150-806b46ff7771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85622a3-9cde-4ff6-b09f-bd58dbcb82b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e4894b-1587-47f9-b6da-6769b5fbfa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a3fe24-5e94-440d-83ad-32a4e22a00e2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08ec55b-01ec-4018-869a-febc0751a0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9b78fb-0741-489e-9f11-de9b1b6ced9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80072a1-0c90-483f-832c-686358ead12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069ab3e3-023e-4e33-a771-56e9d458079d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21a95da-e856-4e1b-9d84-5a2334110c45",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e51a9f-5270-4f37-80f7-be062fb800b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2284b8-000b-4e05-ad0c-e84f21dc899d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94de0c64-ef45-4e92-9854-8ec5f7a28a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5da844-7328-4844-ad2f-7f43f2633501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7963ed9-b6e5-4265-8500-f19888e56301",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a612f6-86d1-49b6-b6b2-a91a873d6be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f24702f-2c92-4f01-8323-4813050ac28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86a9ab7-c9c3-4453-9b84-f87f3104cfc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ad5da5-79a8-4a98-99b7-fd99655c9846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68ce8cb-31b4-40c2-9def-df09096d1185",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d850d6a-34f6-4251-86d7-47610979258f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3fa80c-813b-474c-af62-1adaaf6c02bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69181696-7550-4376-b32b-2f82e89eb3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da46859-915d-485d-a68a-60191a276cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c26722-ff53-48ef-8262-ada4b7e4a528",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953329c0-ef3a-4c84-813d-c2479844225e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b332eb-5e47-42a9-9328-a7e9087e11b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e705f16-a0b9-40d8-ae79-22a1251388f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3413dd72-55d9-4fb9-acca-9eda5689f72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566e40f5-739c-4f3e-a24b-204d2429fffa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d93e93c-634b-4c6e-a908-483da4a02703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c05a7a6-01da-4260-86d8-9f1f777aad69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caa828b-eaea-4d03-b62b-75eed2175bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fede0121-a680-4b0d-8d0d-38f39fd2db3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232a0e73-59a7-46b1-9267-68577b96c963",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6dda04-372b-41e0-8ccb-5aea686843b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2001e871-1568-4997-8954-d51ae8f1bbce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89775f3e-d075-41c2-9381-e857a8ac6919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db29665-a201-4932-aac5-9500af7486d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badb6388-b75e-4ded-a01c-107b97f97ff8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c938eb20-b50d-4319-99a4-be1eef2059ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e74805-cdfe-4d65-8340-2c8ddee7dfe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96df02d0-2e95-4a82-a191-4fb3e7b3f9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73b0a98-e460-47db-ae77-a14f3160ce1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2732619-c3e6-45e2-aa8c-1b25fbd5240f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846b5a52-fae7-4941-a26f-bc7c9d532d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecfe75d-76bb-4b69-8dc6-7c29393fbcb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea34277-9090-43f3-bf24-4f876571580f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf8ea6a-47a6-4d0e-b9fd-71892d25c70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3628e9d8-e8ca-493f-b757-3341623f3cc5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6f9272-2230-40f2-a012-f83c669578b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a90797-dd8c-4e2b-b9dd-845427f64a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255023a4-bbe4-4349-b0ad-64753cd0dc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854af082-ea2c-4501-b0ef-7cf352920de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d034d6e-f0b1-4a8b-8fbc-22e0c4dfc339",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fc746f-9d74-4248-9416-d86a631c27c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10906e39-f886-4fe1-8f4c-f090e63ddde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b26d1ce-61e5-45de-86ad-66ae86cdb145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa620b5-e987-4ca7-aa00-48129c7cc111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6cb2bc-418c-47f2-bc76-8414f7207b5c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b53330-e722-4160-83bc-18efe0b6edf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2451ddd6-385a-40c7-972d-2a7ecaf231f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aeadda3-bf3d-4eee-bb34-43e37a231e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b919b803-72e6-4a02-a488-072c7177dc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587712fd-a581-46d0-ad99-d3b05cddf983",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5143dd5-2a87-41e7-9128-0605776ba001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e353deaa-784c-4781-84b8-1035cbd751e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9f8028-8f9f-4a7c-9f80-ab9b78288e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a04488-3e22-4414-b7fb-8720d6b3ac64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d35c2c0-0456-4a60-a19d-dcaca238ff28",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f42ddf-5099-4d34-9a87-d5e4fbef09bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9555d4c1-c181-457c-95fb-37ce2fc70cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50973d4-191f-4866-99c4-b840aac3ec7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565dcd45-3395-476f-b80c-646ed0d0d805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0d903d-277b-47a3-bfba-81927295dfe2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812a243e-a451-4225-8362-286dfd6f3e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc798135-9ce8-40bc-9c2e-95d1dc1ab50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcedb688-e896-407a-9f55-f75a2c102071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c85f8a-024d-455a-924e-76af1eb364d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950c36ad-f25a-4fa1-b205-f72b5ca91425",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543cd67c-2d7d-4eae-b8bc-d3ecee0ba1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798f6abc-cbf7-4799-b872-f05b8181d1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f004b3-a79f-43af-9ea8-df536f568f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cd8af5-7212-4aa2-a713-4444966fc08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d849e1e5-0e25-48fb-9651-170b47d31ea4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9853f73-bd27-4e0e-be21-0313d1c0bbb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad8c898-e339-4932-978f-218d56fbe9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6194e06a-f2fd-43ee-b288-79541a2b1f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14a953e-b885-4df0-be2e-7a4e61e32d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b98a35a-13ae-46ac-8ae8-8e6401d133da",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6922004d-7d22-4694-9d37-532dd42be8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e028afe-12de-4390-9f7f-c34963d7a44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4718732-9fc8-4562-8d49-fac5237a3a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923d70c9-6b53-4670-981f-efef164f8ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d92d562-2cf6-4970-882a-ea1630809c45",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0f96db-f93f-49a0-bbb2-858ff500536a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59eca479-00e3-4258-a4ef-0634d060629e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d52e7e-e0ac-4ea1-b937-84fa7214760b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b858ffa-5d29-465e-909e-5410006d8a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c63d4e-8b01-4b89-9f8e-1b19fa939da4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d836296-b487-4bc8-bb48-ae6cf8497b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5401728a-0bd0-4737-9290-2fc949203125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91558d58-7e77-4a68-8799-c1c40381b764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7dcff00-ca54-4a15-9fbe-a45ac55e7e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237444e6-96e6-4d59-9b5a-0e9b5c9d675b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c07f035-8f61-451d-a5a8-45739e34bd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d324ab9-c725-4142-9420-5a93c0a444d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cb79c9-2b3d-421d-9218-8e0956f20e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9486231d-5b1d-4929-809f-9cfadf32b183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3876a2-b751-4a12-a607-256ca83f07df",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a594c2-00d2-4b8c-b37d-3ecc0d463183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37ee753-60c2-4e1e-9457-5afba7835552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6801da3e-b085-4404-b9dc-045e6aab9055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b87580-d69a-4768-a438-a01d6a850d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd429ed9-600a-42d4-9f1b-69090dc00d67",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4c03e0-8ec8-4cca-b67d-c1c806610d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf03e92a-8d31-413b-a9ac-ea27833492b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50e4e53-791c-4b84-a210-d4d8435348c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293e66cd-23f6-496d-9d4a-310829e11f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ec24f4-a980-4ece-9cb4-3872ed247cf7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d2fdc9-3e3d-4c08-b06e-81eddd295add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebce7ad-0ea5-45da-bc37-0676e2b3c067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89523f6f-48b7-4451-9434-1cc6546aebe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274ae370-0b3e-46db-a9c7-6ab767cf5f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24722e4d-1cc6-4e76-a5eb-56eb19a997f7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172ae837-0419-46da-944e-50aaabc3468b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7e415d-0264-4f8a-8e51-71768c0646d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f72448f-bc2b-45e9-b812-96012524e405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96ef203-f28d-4193-9837-4d4dc41b9c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1280f811-9c6e-463f-9fca-785a123679b2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f98e9ac-a16f-4bf0-a710-40dc1ce12ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccad31f2-f222-4a06-984f-fe5ba6c96c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f2bd45-edf0-4616-a34a-03fceb23e1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcf9955-b4a5-48ad-b3c9-a6e025f144ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad92143-ae8d-4f0d-ab0f-0a1cd77c32cb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65876052-42fb-4fa0-8eec-2318263ec511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff762791-642a-4d36-9e61-95b6bc34bc55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5c3ae5-f0bb-4176-b657-75c79a9302ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90a1901-4fd0-440a-b3b6-c4b91d8f6a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2012d77-697d-47e1-8a57-e3e757d487b9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47586af6-9a95-46c6-b066-9c690db9a1c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0212e0b-a1a3-4129-90c1-8b2bdf05f5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceabb689-1a83-4ff9-98bb-2a02e26c0ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbd5a11-aa5a-47b7-927f-3580a3a0d77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b59f68-8011-4808-86ca-d0f3ab5b79f0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c5ae27-a224-480c-bf3d-613c4d55af3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c96df56-9834-4b52-9cce-4f084ec3fedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15d5797-92e8-416a-a1a8-99156a416865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3b6340-047f-42e9-91b9-3c93671d4a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fe2bda-cdad-4b16-8afe-b56b2789a5be",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6091c6-1990-485a-9c69-3ea0f73ef843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1474e77-efff-4d83-8bf4-395f57cde08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644638ba-8140-40c5-b5c8-c33c7862571f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c509a51-e6f9-4490-aa51-e0d1046c839e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ddd943-cc7a-449d-bded-4f2f7d4afd84",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1dbf3e-7ee0-486a-a22a-a2871093de76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c72c41-80e1-4f57-8e6e-32b2e6bc06fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef1866d-6a2a-4055-b5b9-29cf2a33278a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea5342d-d689-4aa2-a39f-5866c94c411a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9d5076-5373-44a8-86f3-e8d66c5f4c72",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8252fa1-21ad-4e32-b824-6243bd5a70e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc99a13d-85c3-4db4-82eb-f7e0c18dc726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84aafca2-be6a-498d-9485-b6dc5c3384a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b370a3b-966d-40ee-93dc-2a2345f6b2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af074b47-8f93-4644-a4be-b924bd96cb0f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64499700-54f5-48a3-a34e-d849a12ec37c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7df4c0-27b1-4f4c-b82e-a597870d54b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56ea04c-ada8-4736-8156-d856cfa7431d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6a14bc-56ab-46b9-9ab0-fea40f57106e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0854278-8082-4ceb-ad8c-20149d2e774b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa87f8c-aac4-47a6-a3b2-96eddfa4e15e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff5a9c4-7b6a-41e3-9391-2a55bae9e679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3dc769-f070-46af-bb45-3ee99c100565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87eaf7f8-1bc3-4b8f-abc1-41272d26fa65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daf72db-0751-45a0-9437-5eb46bde74f8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d0940a-332b-4958-9008-58d942ab2571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "199b666a-1acd-4f16-a69c-91812f18e370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edf5d3f-e6df-490a-9520-6f47d746b1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f376aca2-eb5f-4959-bd9c-d4370701ea1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af930e13-b3d1-4ace-92d5-0d8a037a7d96",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a6f174-12a0-498c-b8c1-dc9c4000b437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c554a43-4e02-47d8-aef9-bbabc45dddc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8220a70b-502b-48c5-9e39-126e55c7f80e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd80bd71-58ff-4fd7-a942-4a4ae4a8f83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d31683-01d6-4c6d-9e87-24d729028c27",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30953a36-31b8-44cb-8c5f-99289d27444d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb18622-ca0d-4b0a-ba45-fa598ed448e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9560cdb5-fbdb-4f7f-ac13-bce4affd23a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a43427-7a02-4558-9a51-7e85848c80b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f24a4fd-0e2d-4e4e-896d-3825f4585ee4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b7ef88-0b68-43e8-8c0d-51399a7cd201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e4084ae-892a-4ee6-8315-68de956f6ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3530788-0f38-499c-990e-37dfde76f61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dd2945-7355-4693-aeec-c2b30664b620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd843e5-9e3d-4400-a66a-6923e47443da",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8b2a5a-0986-4c49-9b07-9c640dddae25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6434c2f3-fc1b-4866-9df8-d354e027e8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3472d65-ab6a-4d4e-8607-5de8064b419a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9043c1a7-ac32-458a-828d-fe34df533e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d64aac-d38d-4e27-ae15-f7fc23de893b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d30626-f54e-420c-8f21-0d80fed8803b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba365d3c-9184-434e-847b-14120a2f8163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b376b6c-6f50-4d87-b61b-c3ce6c835ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cc6619-c1a6-4b74-aed2-2ff1a8ce8ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f813034b-0e2d-4906-b120-0cc553163bdc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9af9f3-16b6-4e44-9a2e-8dfbba07d7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f27f68-3119-407b-be8b-31174be3e896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13eb3bff-7c4a-4307-8857-221741aa4ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f063090-e310-4497-bd79-705d70cb582e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ffb9ab-813f-4c24-ad55-6c111900826e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62820d3-6513-41dc-9918-1677b7269b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9841de8b-e8bd-4c22-b964-2898aef1397f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a21bb2-a587-4e4b-8e9f-c3bf5416358b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11e806d-349f-48ea-85cf-2fbfae66a8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fca8d60-179b-44ac-982d-e400aba88714",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344f5ff0-da27-4f7f-99b0-3ab8d31382f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0300fc0-13b9-47f9-9b9d-310de3409335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb167fe-0a8a-4cbb-9d74-dc79538b8ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6410431-7dbb-4a93-8baa-47af7185767d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df03789b-a9d4-4eb7-87bd-66b8a538d04f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd81a054-4548-43cb-a827-817445fbc3d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21b0179-8eca-4e30-b55d-ed27a1f5e1db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf85782-53b7-40de-883c-5026dbaae57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c8eb3e-d3d7-42ce-a414-85ee5ab5fe82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b041805c-bdee-42e3-b114-ef880e25d0a5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f3ccf8-7735-4a90-a654-7483d8bda47e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045c7d42-203a-4226-8891-0316c4536507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cd209d-956a-469f-8b43-e476a327b5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1faee3-863a-4af2-b367-2e4b89c05e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d192cb8a-8794-42ff-b677-5767573fd3c5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f528e4-d230-48c6-a924-a353cbb71049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c25fccc-591f-410d-a134-0cf7e53d0d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b62708-dd3e-4f03-862c-20551de46693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c1ab06-3094-4356-afa2-95cdfb30d780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ab5ca4-caa3-4228-8334-df1c325f8230",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b885c1-f2dd-4480-befd-35880c5973be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d9e798-8c9f-4acf-9fa2-89233d923ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af47fe8-a35e-42f3-acfd-c21d4033d120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392d4f6e-2f2f-47f5-9be1-f1dde03c69e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e91ed2-2ec4-41b0-9f87-cec9eca29803",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849a3919-58c5-4d34-a023-efad9df86314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977decab-d43e-4e53-8897-768791b22dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1f5e6b-276f-4a38-94bb-a13e36fadc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7338e752-5f52-47b3-879a-5c84fdfbeb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953100f3-459a-457c-8766-1c434ef027f9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b74c2fa-efdd-4938-8664-3c2a049d6fad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39655fa9-f51d-4e18-80e5-63ed45f9a78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c5d2cd-2fe6-4c41-8fd9-85e5b9077303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea5da44-1e9a-4504-99ce-2111e7b65394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560cf6b8-f684-4be5-a04d-8c6c867dbc8d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c363061-41bd-44d4-a317-72e88c380b85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3983b653-1094-4dca-a1f2-589afd326e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7501095a-2ec6-4264-920b-2130b66cacd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff816d0f-6edc-4655-895b-da473796eac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b797756-ac40-490c-a4e5-577d119ea1b0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90b10fc-5102-49fb-9f9e-52bfe54101a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff2d2f13-531f-47af-b0bb-eaf81c289d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d60152d-ee72-4573-859d-8a9c7462dac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc83d4a-1ac3-48d4-84ac-249cd28eb9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b416e24-8aa5-4944-94dc-bfa630f9d4e8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dfaf39-60a9-4cd7-963f-a831d6389ca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166dd2e9-1d50-474a-86b1-2e1fab11e7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf80fef8-0b29-443a-b479-7d236e233111",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1255df0-7063-40ef-9874-22dc7c48d583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3510b16-8086-4056-8958-0353d44e1ebf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac5f4c1-7427-4387-a5ab-b34cf253ad1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "274f2a2c-dfa0-4de1-9841-54ee87ea2d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e435896-5f06-45e0-89e9-a7007d7d3b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da52d7e-bcbc-40c3-a474-c048a784efd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddad1c1-8ed8-4753-849a-2019bdab38ac",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef49654-4f9a-405b-a91c-36e5c1d46384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a92476e-4f97-4dc5-b272-789374928f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d548f86-357d-474b-9599-e0eaa1878f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132cd0cb-9650-4050-aaf7-c5523de30add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b982622c-e1b1-4c00-b989-3e5b9ffbca5e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cd0b98-123a-4165-b03b-e4a9ea220ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77ca0c08-76dc-4c30-a5e0-b1e8be052e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225345c9-c2ad-43d8-83c3-43248af3c325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a03376-c9fe-4106-a42e-027834e569d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08c0a93-a130-4698-801e-0b6d556629ae",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f269a67-2ba4-4be2-a489-6675350ed75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d94cd206-97c1-44f6-afec-f27c85b770d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262bfa2e-9fb0-489e-b3af-523a01cbd969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615b9780-1bed-4172-af5b-d2ab5a758915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0989ca6a-94e2-4396-b235-b552ab5813d2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba7562d-8356-4bb3-a835-491669ab4f3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28e097fb-e91e-4b60-915c-ca3494e6cf58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751c62fb-a2cc-4f82-a14a-82e19d84fb18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0784a6c-f6d0-4b6e-892f-78e643af3bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142cb45e-ab47-40c7-b3d2-944e83b435f8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4045076-9f15-4181-beac-f57eccda0913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9515345-ff10-46e4-afbb-237539561a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b817db7-3e52-4f1e-a280-69f534659ce5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed51534-06b0-49e2-b96f-5d0a66fbc20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d6b0d5-1b2a-4030-8b6f-7e8518d6184d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47a668f-9b28-4107-bf91-cb948a88ec7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b619b051-fd19-476a-87e3-86ed71957aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6a343f-c6ba-4919-bc3a-1e5697e21b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e3d6ef-fd48-4f47-85a7-97a4df9fe5f9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b10bfcdc-9806-44b9-a4d3-ccb31fc1b46b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7652552d-2e56-441b-a514-dc9abb102e39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfdd029d-f3b2-4e11-a699-e778af2b7601",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c529fc5-e48b-4a38-925b-abcd4c19e10d"
                    }
                  }
                ]
              },
              {
                "id": "216442f3-a562-4bf7-b2ce-78eafb8d91e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96723f28-28bf-4401-9147-8d8bfd46bfe5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a597d030-baa0-4763-b3d6-aa2abb9da06d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "59ae9bdb-acb7-4486-b792-c09dd169e647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd5c6d5-60aa-460a-9f1b-82e704292b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca616438-0ad0-48ba-be46-95d4a6ec94d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34b7c324-ba88-46e1-81ca-a52857a1581f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be2a664b-fbd0-4ec4-b2fe-86eb028e8648"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60dead17-c0dc-4111-98ae-7bc4f4529f56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44d14aa7-fa12-44c5-a7ec-d799d51b5f4f"
                    }
                  }
                ]
              },
              {
                "id": "9ce9b35f-c8b4-4877-ac1b-3a6fb3688919",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cf8955ab-0966-45e0-a485-fd990fac7a54",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77e863a-a274-411d-a618-88275efe4cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "09702568-aea8-4d8d-8a59-f347b0d99246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7d2c1d-893c-4c81-9828-fddac8331975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1837fd3d-70df-40d8-926e-c076577d9653"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "99b846fd-cc09-4c92-8086-20501ae20cdb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46715ae3-3954-47c5-9f65-9009ad472dc8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ede8859-adf3-4964-b6f5-74a5018fd741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b46a2164-b4db-46c3-91ff-31864c904e90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8479c56-92b2-4bd6-b5dc-fd93d40b014a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd62e43f-9660-4ef8-a28f-b4c53596302e"
                    }
                  }
                ]
              },
              {
                "id": "ae1fda81-6ed6-4805-aad6-86edbd0026c2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81592e4b-b775-4961-9074-bf8a489d04e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6d0ea301-035b-47cb-833d-8e5e2b10ab54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd35aa41-655c-4825-9130-29bd03e50056",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f22fc294-d539-4790-87fc-96a2981d1302"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ffe8350-a325-47af-8ca2-38941fa8cbef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5de35e41-38db-4244-8e7a-af8a7f652015"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3fa061f-ef52-4d2a-bc20-b696940a65b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50d74f6a-a792-4e91-8c1c-bb72daeba72a"
            }
          }
        ]
      },
      {
        "id": "b05a24a3-943f-42f9-a8bb-4660669c1cba",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "df7869fd-060c-44f3-a52f-cc5eae21c612",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23d2325e-dd5c-4944-af9b-b964301fdb4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c43bcf41-1b0d-409a-810d-e1b9d628a2ba",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be640d7f-006c-4fdc-aa96-5b9e6618fec8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "933ae70e-6837-494e-b4c3-dfceed9910d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d416cf41-9ab5-49b1-827c-0246f15ac1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e2789da-364e-4e74-9510-5019d945b608"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a623655b-3c0d-42b3-9483-a823ed70fd04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7b7833b-ac8e-4508-85af-791d3ac8da86"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d5fc151-ce82-4864-832e-cfd29e46bae6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe0c2381-7193-4f07-93f0-77d5a4491bd4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "193aa2a8-fddb-4b46-9048-c4546a975d2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e9e8e72b-0b9e-40d6-8b16-4a4cdbde201c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed505995-d01a-4538-bdd6-0d306ed51c16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d2c659a-dc67-4aa2-a603-d38fade02755"
            }
          }
        ]
      },
      {
        "id": "6ee28fe4-dc9b-4ab4-9f14-831777333598",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "96024eb6-6628-4821-8c2f-75e4b1d5b229",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5309420d-bc1e-48db-a78f-5146ef20f470",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12b0485d-4a52-4c5b-b2a0-5b5513d77832",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a617f845-e9da-4169-ba25-a9257193f79c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a25b2cb2-72ca-45e6-9a44-94870f01c1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce72316-b776-443f-a01e-f69d216d4076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4269363-fdf8-4c6a-9b85-684412e6c3e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87a8e452-e54d-4dd4-b538-2bd9b3851728",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b437c28-2421-49de-83b8-92d9a0bbd919"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "738fe76e-ba8a-4cf6-9d3f-189029152771",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "591e2a40-a5ae-4ddf-9858-3ac838869bb1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad5a41d0-8a9e-4a9d-a69d-1d48486f4078",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "efe5d0f6-da64-4e2d-ba08-d8e0dc320c36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d27b37e0-89e7-4b9e-b8c3-22de1417daee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a93746e-249b-47a6-935b-ba7f77e55ce8"
            }
          }
        ]
      },
      {
        "id": "08e9d267-d9fe-49a9-a4f7-42ebd10a3d01",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4f191183-4c10-4001-85ff-175ec75b5c3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d87f0fc1-a41d-4b54-a14f-66a0ea6ede03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5eda3ea-4a41-486b-a19c-b34542f33ec0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdd17af-870d-4310-a66f-b48c6ad6895b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6f62635-549e-463e-98a9-6fd21bc15f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5462ee-45a0-4b09-9407-7431c1f1e7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5e0dd0c-324f-42ae-a525-68bf3cc14671"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bd63130-5dcd-42ac-adeb-0b2e051dddea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc0d49af-f7cd-4e50-9aa1-85a8bded161b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ed3ef02-15e3-49e3-82a1-4f662042f39b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73404e6e-9358-4c15-9df8-c0178fcd8b43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d92d82a8-b1fe-44d4-afcf-fa6fb4343afd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cfaf9df4-5f29-45b6-b5d3-1ee55e66764d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4099c5e4-68da-428c-ad19-07457ded3146",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67f9e26f-6001-4f61-97f7-1c7566f8138f"
            }
          }
        ]
      },
      {
        "id": "2d20cf9a-b0b8-4f5d-a55b-39a60f7358bb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91e2a99c-1427-4294-9291-e43bb098c95d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee446ad1-0420-48f6-8cef-680fba249ba5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d9d730b0-c1fd-41c0-8428-8c37f89c1d35",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3239c3b6-b283-40ea-8c77-d5502bb7918d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2842c8f0-5bb7-4cdc-b069-29ec52b88cc5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 80.24295774647885,
      "responseMin": 5,
      "responseMax": 4820,
      "responseSd": 373.4614929898149,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696725384005,
      "completed": 1696725418535
    },
    "executions": [
      {
        "id": "698eafdd-534e-4f85-ac81-6fa192cbda9c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c5732552-9966-4ee2-8337-e55438be78d2",
          "httpRequestId": "93f37db8-41ab-45f1-a381-dfe936f6d73e"
        },
        "item": {
          "id": "698eafdd-534e-4f85-ac81-6fa192cbda9c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "805fea9b-b744-4e5c-890c-32951a0a4cc4",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "c0a10024-2ef4-4b9d-ba34-4c6334a72342",
        "cursor": {
          "ref": "668f5c99-ef02-4e48-988d-23a498662924",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c811acbb-60d2-401a-b789-a672d083fdb1"
        },
        "item": {
          "id": "c0a10024-2ef4-4b9d-ba34-4c6334a72342",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "511683ed-4e95-4741-b867-a5a372e0c472",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "63958d32-3f66-4114-83e1-1cc7efb99444",
        "cursor": {
          "ref": "01c4546c-856d-45ee-a108-6b5f407b3445",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e5287d14-f80d-479e-955e-3580123f22b9"
        },
        "item": {
          "id": "63958d32-3f66-4114-83e1-1cc7efb99444",
          "name": "did_json"
        },
        "response": {
          "id": "8043355a-6f0e-4e50-8ed0-dfdcdb14829e",
          "status": "OK",
          "code": 200,
          "responseTime": 246,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f255d2-bf2e-42e2-8d31-d2209d32646c",
        "cursor": {
          "ref": "83377aef-6ef1-42b1-82b2-0f4e8cb136c1",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "426c3972-28ef-4404-8d55-fc1160c07630"
        },
        "item": {
          "id": "40f255d2-bf2e-42e2-8d31-d2209d32646c",
          "name": "did:invalid"
        },
        "response": {
          "id": "15386965-de85-4fdf-a9cd-42450b7904b4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 575,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f255d2-bf2e-42e2-8d31-d2209d32646c",
        "cursor": {
          "ref": "83377aef-6ef1-42b1-82b2-0f4e8cb136c1",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "426c3972-28ef-4404-8d55-fc1160c07630"
        },
        "item": {
          "id": "40f255d2-bf2e-42e2-8d31-d2209d32646c",
          "name": "did:invalid"
        },
        "response": {
          "id": "15386965-de85-4fdf-a9cd-42450b7904b4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 575,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b3d043-62cb-4bde-ad2a-0c1cdc01892f",
        "cursor": {
          "ref": "74c762b7-36f4-4cf8-bc19-e89b49893d78",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "174aa39c-c2f7-4744-8bf0-e99e9ab7c457"
        },
        "item": {
          "id": "f0b3d043-62cb-4bde-ad2a-0c1cdc01892f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "20130e7c-41fc-48fe-aa7e-645b77dbb506",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f8abe1-52ff-46ac-9645-8b45ca53a4d5",
        "cursor": {
          "ref": "2290eac4-a113-44dd-a287-12a029e9451b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4eb9071e-cd3c-4d1a-80e7-f9b69fe5e9c1"
        },
        "item": {
          "id": "86f8abe1-52ff-46ac-9645-8b45ca53a4d5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "58779be1-010d-496d-8992-0436d5daa7f1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8351a2-5284-4501-a412-4a53f893374f",
        "cursor": {
          "ref": "663f73b3-e149-426b-86cd-b3b69f7e2673",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "550b77f6-e9dc-41d7-ac0a-ec3941edf962"
        },
        "item": {
          "id": "1b8351a2-5284-4501-a412-4a53f893374f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "47196341-a4e3-4bb6-8fe0-9b6704b4eeae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cff633-c929-4b25-8507-1fb1a3d44cad",
        "cursor": {
          "ref": "994cc39d-329a-40a1-98ea-960be7bc3983",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8fca28ea-1384-4a37-be0a-3c5c00b8851f"
        },
        "item": {
          "id": "16cff633-c929-4b25-8507-1fb1a3d44cad",
          "name": "identifiers"
        },
        "response": {
          "id": "c8915d18-f4da-45c3-a071-68dc54f8cd36",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4461d0a-ef7a-45b8-b49e-5f8f04aebafb",
        "cursor": {
          "ref": "b865a1b6-6f16-40aa-867b-16a3136f0f76",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a8a99b62-51a2-4157-adcd-65a00e943e0f"
        },
        "item": {
          "id": "d4461d0a-ef7a-45b8-b49e-5f8f04aebafb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "95cde087-c69b-4a2a-9957-56605a486e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbb1e0b-a0db-4b40-b5a5-bd9719b41a9f",
        "cursor": {
          "ref": "d05e561b-610d-4fc1-9d21-73c9fd87c361",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0c94f4ef-3071-468c-a784-b845ad999b9c"
        },
        "item": {
          "id": "1cbb1e0b-a0db-4b40-b5a5-bd9719b41a9f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "50fccc8f-6aaa-423a-8e46-8212f7c67b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc6e5ce-2887-4a4d-a7e2-23a9d3727967",
        "cursor": {
          "ref": "6d8681af-840b-4e09-8cc2-ac0baf46b096",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1c1502d9-c5ee-4a76-a4ed-b964e375b83c"
        },
        "item": {
          "id": "3cc6e5ce-2887-4a4d-a7e2-23a9d3727967",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2e720c2c-a83f-4a63-9c2d-f7bc0ced14ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f125fee8-052e-43f8-9682-e9c8dc032474",
        "cursor": {
          "ref": "90adebaf-1ee0-4080-9291-931f417050c6",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "97db3f76-420e-4f86-98a1-e678a8b7c389"
        },
        "item": {
          "id": "f125fee8-052e-43f8-9682-e9c8dc032474",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "81ecfa64-5b6c-4eb2-b9ff-9746acae8961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36eb6588-d24b-4cf7-918e-0aac30852009",
        "cursor": {
          "ref": "f9c53c14-5ac4-4ee9-85e2-765aa230d82d",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "54bb4307-3697-4733-9ebd-6a658b0e6435"
        },
        "item": {
          "id": "36eb6588-d24b-4cf7-918e-0aac30852009",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6d34968f-8005-4a46-be41-0c75fb4e69cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de233b6d-7b11-416a-899f-257e748e863d",
        "cursor": {
          "ref": "01b6ba12-3d2f-405c-ac99-40f6686742e4",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "97d3f1f6-c831-4590-bd7a-e952cc457808"
        },
        "item": {
          "id": "de233b6d-7b11-416a-899f-257e748e863d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5270eed9-d87d-4b40-a8cc-d2a1e6ed5e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c4db6c-ce84-4431-b97a-b31ec41012b5",
        "cursor": {
          "ref": "bc195c96-ce3e-4457-863c-80666e5d3541",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d78b9b90-acb6-4fc4-a0bd-b472046299de"
        },
        "item": {
          "id": "f6c4db6c-ce84-4431-b97a-b31ec41012b5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bd809c7f-ac24-452e-9d6f-45c0498e09e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f70e013-3294-4ae5-8480-f44af5333daf",
        "cursor": {
          "ref": "67cb2fd7-a76d-46e1-af93-171b8c06562c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a1649275-4e1c-4682-b032-400cbbc8b093"
        },
        "item": {
          "id": "9f70e013-3294-4ae5-8480-f44af5333daf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a84e8743-7c4f-4b65-9826-dabd38df38b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9d2c3f-d8f6-4a35-8fce-dedfd4ae643e",
        "cursor": {
          "ref": "b564883d-d8b4-4eb5-9cdf-b786b2b03a2d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dc29f509-a062-49e0-8662-df1cc18bf9d4"
        },
        "item": {
          "id": "0b9d2c3f-d8f6-4a35-8fce-dedfd4ae643e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1ceedd8a-e109-4557-92c9-3a46e3d351a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79753fde-6327-41ad-8f72-ba79372b29ee",
        "cursor": {
          "ref": "4a1604e1-6d1d-4628-96db-df07b6e9f6e2",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "25335f0e-550c-41f8-9904-f3739253481e"
        },
        "item": {
          "id": "79753fde-6327-41ad-8f72-ba79372b29ee",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5d5e5ecf-9496-4c24-bd96-16ce2e0f4f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821aeca5-b19e-4e36-bb9b-f937131305bb",
        "cursor": {
          "ref": "a3f1aa26-7791-43a9-9cb7-cc28949ccad7",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "29339db9-f6e8-4782-abfe-22edf4bfc585"
        },
        "item": {
          "id": "821aeca5-b19e-4e36-bb9b-f937131305bb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fb73d9d4-cacd-43fa-81cd-f51e9aae8f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128a9895-9287-493d-933e-f9e44370403e",
        "cursor": {
          "ref": "9295642b-4122-4ca2-a4e5-3a3f957a6d3a",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a01c9ac4-a6b3-4a4e-afc6-18cd997be67f"
        },
        "item": {
          "id": "128a9895-9287-493d-933e-f9e44370403e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bfcefbd0-7676-4f15-91a0-9c38e6d71a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c04af65-85bb-4da2-b234-c2ce743bf382",
        "cursor": {
          "ref": "674f73f0-416f-4be6-8d92-3e548d313c78",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a07fc300-db14-4a86-b521-14e69af57545"
        },
        "item": {
          "id": "1c04af65-85bb-4da2-b234-c2ce743bf382",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "21857d32-6b00-4c0f-a100-642f6a92656a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba670a0-c93b-42d5-a14b-88bde3bd0262",
        "cursor": {
          "ref": "1be5e2cd-27fe-46d6-8df2-75dd445a9d6d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ac0c13dd-edb7-442b-8681-3b4c0d48efa5"
        },
        "item": {
          "id": "1ba670a0-c93b-42d5-a14b-88bde3bd0262",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "89e49e4a-05af-414a-8c88-15f2b2aa91a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df90056-5ae3-4f8d-80a5-785461c22e40",
        "cursor": {
          "ref": "85ea87ee-a624-4449-8aff-cfa75f5456a3",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "366a51d8-e3a9-4c76-8630-b91c6fa89be5"
        },
        "item": {
          "id": "4df90056-5ae3-4f8d-80a5-785461c22e40",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "86d37731-a90d-4b5d-9d9f-42adc839508c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42e546d-3b16-4fcc-b03c-ec36063142b1",
        "cursor": {
          "ref": "0a1390b3-dab4-4af5-bd1f-4290456e4873",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5a1b2175-1ebd-4a1e-a98a-dc6930e935e7"
        },
        "item": {
          "id": "a42e546d-3b16-4fcc-b03c-ec36063142b1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5bc280eb-36f2-471b-b6a7-2953e072f46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e28f2f-fe43-4609-a848-d934f1fbf520",
        "cursor": {
          "ref": "492c9e5b-9e58-44c8-8518-dab94407147f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "af99f66a-9492-48bd-80da-2c112a5d5587"
        },
        "item": {
          "id": "27e28f2f-fe43-4609-a848-d934f1fbf520",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d450f702-170f-4974-8a34-a66c569c5340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713775f1-a8d9-4a20-acec-f9dafc569de1",
        "cursor": {
          "ref": "b1432ec9-bb59-4b11-a570-f014a49fe21d",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e19622ae-0398-43eb-b2f2-45f11d8276f2"
        },
        "item": {
          "id": "713775f1-a8d9-4a20-acec-f9dafc569de1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a70df10b-169f-48a1-8f2c-bd1d604c130a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e877d9-8c54-483b-92a2-bd48cb25d0fd",
        "cursor": {
          "ref": "d5dd8368-f8b3-437f-9a93-b40a4a836c8f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "54b92c5e-5350-44d5-bd35-8864ca452cba"
        },
        "item": {
          "id": "a4e877d9-8c54-483b-92a2-bd48cb25d0fd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2df68fe0-e732-4435-8285-81f9104219d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833f7a17-ad84-45d9-90e0-14bb9698d08b",
        "cursor": {
          "ref": "bed33f89-c5a8-45be-a6c7-3e2abe37845f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3ec777c8-c8f5-44d8-9379-237cdb51d217"
        },
        "item": {
          "id": "833f7a17-ad84-45d9-90e0-14bb9698d08b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f00e00ec-8f3b-4ec0-8407-887e52dcdbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52311e52-e4a7-4c04-8764-3fe747ebb561",
        "cursor": {
          "ref": "f0e1cb22-75b4-449c-97f1-0e7be40bcf38",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b9b80e7e-b715-431a-aa62-718380a0855f"
        },
        "item": {
          "id": "52311e52-e4a7-4c04-8764-3fe747ebb561",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6ced6e32-39b1-402d-8984-1914ab4819cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa8d5ea-6a40-427f-9044-d90505a2b4c8",
        "cursor": {
          "ref": "634a8adf-92a4-4a6b-977a-eb2205c823f7",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e43d36e2-232d-422b-87a0-cc6fa4c0f5b6"
        },
        "item": {
          "id": "faa8d5ea-6a40-427f-9044-d90505a2b4c8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "894369ab-bbe8-4a28-a39f-50e43bafedb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7febfd2c-baab-43ae-8518-487381674957",
        "cursor": {
          "ref": "4ec39949-d625-4bf1-8139-6a29aeedb271",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d12f06b9-aa10-41f6-bd5f-b5f0360ddbba"
        },
        "item": {
          "id": "7febfd2c-baab-43ae-8518-487381674957",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "79548ff2-1429-4cf7-88b7-b3125139bc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf609d1-6d5c-453c-a9ef-7be8fd74f633",
        "cursor": {
          "ref": "ce2d18df-5b04-4770-ace7-6344fc93d100",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "27a56c15-1cc3-4c06-bb6a-e2e2b29c49f6"
        },
        "item": {
          "id": "eaf609d1-6d5c-453c-a9ef-7be8fd74f633",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1bb0763f-d0ce-4525-a4c9-1ff484867793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609b27d6-c901-4cb5-9378-cd433ab3c390",
        "cursor": {
          "ref": "49df4fea-4674-45fe-bca8-e147088d253e",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "32df4c5a-d985-4003-a455-c4fa03d7e69c"
        },
        "item": {
          "id": "609b27d6-c901-4cb5-9378-cd433ab3c390",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "613d1f6e-f6a7-4145-b79a-d342b6b09edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d089d561-b621-416e-ac2d-086283755ba3",
        "cursor": {
          "ref": "aafd2f2c-a6fb-4ed7-bf69-9c5613bd404a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b2051468-2ffa-4be6-854e-20a7739d0779"
        },
        "item": {
          "id": "d089d561-b621-416e-ac2d-086283755ba3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "46061d35-c87c-4af0-936f-d72c56686502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7679777-b9fb-47c7-9b0b-13971e9aa83e",
        "cursor": {
          "ref": "52527e09-eba3-4975-8a31-da22a7d3c77d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1f90ed3c-08a3-429e-9070-9a5619d90296"
        },
        "item": {
          "id": "d7679777-b9fb-47c7-9b0b-13971e9aa83e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6aa877a2-7ee5-433c-b53e-dbf6ba78832d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bf4cb4-9665-4187-bac3-4dae353ce042",
        "cursor": {
          "ref": "58e64f57-b397-46de-aa47-89e9a049b027",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a122ff61-97bc-4c62-8953-0b3154af8535"
        },
        "item": {
          "id": "d3bf4cb4-9665-4187-bac3-4dae353ce042",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "38ff7b57-38b3-4602-a5fb-e7664d6bdee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d9a256-c946-47bc-8bab-fb198ad6b70e",
        "cursor": {
          "ref": "9edb2691-534b-4db9-aa8f-94121e39a9d2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "408c1120-ffc9-40a4-8e6d-53f6decd2e28"
        },
        "item": {
          "id": "20d9a256-c946-47bc-8bab-fb198ad6b70e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3317a2da-0c2b-4db3-819f-68195dc25a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af95a0f4-cd2d-4860-8fcb-8a9722b826d4",
        "cursor": {
          "ref": "8a03ba31-05c3-44e9-85b2-f9cef51e75db",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "35431028-b9b6-40e2-a776-1b4456fa487b"
        },
        "item": {
          "id": "af95a0f4-cd2d-4860-8fcb-8a9722b826d4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "76578da3-653f-4efd-a29d-268115ebec8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991d9fa9-5526-488e-81cc-cc9ba703608d",
        "cursor": {
          "ref": "e1f4bf41-2971-4837-a575-3d0981baa4b0",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "829e1416-016d-47f1-a5ea-d673d9097d7b"
        },
        "item": {
          "id": "991d9fa9-5526-488e-81cc-cc9ba703608d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "23840e31-dd4c-4bed-81f7-6a8acbefb08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f6d300-959f-4960-8743-4503da4998c3",
        "cursor": {
          "ref": "2aba9079-0c8a-47d8-af15-8c546d00e03e",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "57b134c7-cb7f-483e-ad3b-ab35d6c4272b"
        },
        "item": {
          "id": "50f6d300-959f-4960-8743-4503da4998c3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "67d12924-479a-40d2-bf80-aff153ecb248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6579df1-2256-403d-821e-a25c07a52a57",
        "cursor": {
          "ref": "6116dd08-ecb1-4a83-b88d-5675b98d72ef",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e3afd7a1-db1e-468c-9522-e96aa0e235bb"
        },
        "item": {
          "id": "d6579df1-2256-403d-821e-a25c07a52a57",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5c83ff63-825c-4427-b635-64e10e9d8d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f2f55a-eaef-435d-b659-abad1bcadac6",
        "cursor": {
          "ref": "6c2a57de-6fdc-4e81-be0e-35f61d3cbac5",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bbf99ff2-a7a0-4459-8eba-e0970520ae7e"
        },
        "item": {
          "id": "70f2f55a-eaef-435d-b659-abad1bcadac6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ad94154b-9226-4bc1-866f-c194796fdf34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459d1f27-11b0-448b-b18c-f65915568eb4",
        "cursor": {
          "ref": "492b403f-afe1-4900-a251-1513ace51af9",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "39c02481-fbf5-4692-8047-17808683d08d"
        },
        "item": {
          "id": "459d1f27-11b0-448b-b18c-f65915568eb4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a5453822-01dc-4e21-b09b-4f21a3c9a471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5885e61-420b-4a0e-bcb8-0dfd047bc9d7",
        "cursor": {
          "ref": "f146fe10-7e08-4654-b060-7736c57595f0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "887e0efc-8ea1-48f6-9a2c-ffcb8d118bd9"
        },
        "item": {
          "id": "d5885e61-420b-4a0e-bcb8-0dfd047bc9d7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b6bbc7fd-381b-440e-bd89-706c486c81aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c961cf10-6090-4e2d-b1db-d9a0a3e134c1",
        "cursor": {
          "ref": "531a72dd-7436-41e8-8391-1e36de7fc03e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5e1cdda8-d65a-4483-9aeb-5063c363767a"
        },
        "item": {
          "id": "c961cf10-6090-4e2d-b1db-d9a0a3e134c1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e703a53d-43b8-4941-ae68-bb4f2dd61b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f228ba88-145c-4b26-b69f-bd50cbf36903",
        "cursor": {
          "ref": "6ad25e2f-6c55-462d-9b99-6e7be7f9da2c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6cbf746f-8584-4729-9e36-e0911682bc85"
        },
        "item": {
          "id": "f228ba88-145c-4b26-b69f-bd50cbf36903",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1a83a104-8a61-4f11-8bad-e4b0146a51d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe857b1d-7ad8-497a-b239-498217da68a6",
        "cursor": {
          "ref": "4c81c4e6-da3e-4a84-a89a-3fbc3e5147eb",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "361437a3-a39e-4926-aab0-a801cd7a2bb9"
        },
        "item": {
          "id": "fe857b1d-7ad8-497a-b239-498217da68a6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "02db25da-0d96-4fd4-8f2c-ee437c1eb5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de80b423-3e31-4b78-98e5-f0822c6a5427",
        "cursor": {
          "ref": "657f84b1-894b-4de9-aea2-6547ca5c8a4f",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3d69c060-6872-45ec-9a1c-0e7452db6516"
        },
        "item": {
          "id": "de80b423-3e31-4b78-98e5-f0822c6a5427",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "01c969e3-647d-40aa-b67f-289223c152cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfe845b-57d2-40df-a96e-072461a52758",
        "cursor": {
          "ref": "cb0f5bfe-cc41-4dc7-bc2f-bbf56911a35b",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1f9a94e8-8854-4daa-aec0-0aac87c043ff"
        },
        "item": {
          "id": "0dfe845b-57d2-40df-a96e-072461a52758",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "df55be66-feaf-46e9-852e-a9f8142e1850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747b6bc7-3e1d-4ca1-bf81-f0cac99ad457",
        "cursor": {
          "ref": "7aecdec0-0bfc-48df-98b1-b10edeb13b78",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6e1b1885-4067-43ae-97ed-5c9e9980e827"
        },
        "item": {
          "id": "747b6bc7-3e1d-4ca1-bf81-f0cac99ad457",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e8ce935d-f640-4cd4-8e76-a13749a71604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b22f18-c076-4c72-b264-74849e2b42e7",
        "cursor": {
          "ref": "dd838398-6124-4d94-b4c3-f476ae43b932",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4594b46c-2377-42a1-8dd6-47d1cf494339"
        },
        "item": {
          "id": "59b22f18-c076-4c72-b264-74849e2b42e7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "83a49750-af66-4814-a235-921676f7d93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bb2fb8-7b1c-4bf4-aa52-0211ccc76434",
        "cursor": {
          "ref": "b4c16d06-1017-42f5-b04d-3d4aa1dae442",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0b6cd440-5655-4caa-b1ab-3c3c4b8d6682"
        },
        "item": {
          "id": "19bb2fb8-7b1c-4bf4-aa52-0211ccc76434",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "66806910-a4e9-4721-afa4-f0054eb8c3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5f481e-5417-4c76-a1d8-21a7248ae0a7",
        "cursor": {
          "ref": "d64427ae-506a-4d71-8f8b-916ab3162184",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5728feef-01b3-4aac-bcd3-4c4843d47c9f"
        },
        "item": {
          "id": "7f5f481e-5417-4c76-a1d8-21a7248ae0a7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ddd9b240-9e99-4048-8391-39d24c572a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4053a51f-16ea-4248-9bc7-4899b252fcaa",
        "cursor": {
          "ref": "de379665-3a10-4e1d-bb97-3836fbc7cb62",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a9c968d7-55f9-433f-9c2f-cc855be763ff"
        },
        "item": {
          "id": "4053a51f-16ea-4248-9bc7-4899b252fcaa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "24d4a130-c0bc-43a1-a0de-f15f6f48f8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6966a3-b07e-4c55-a4aa-1703fce952c2",
        "cursor": {
          "ref": "ce888518-7b63-4f67-8660-8c8a93d53929",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4ebfa3ee-5ecf-4b0c-bc32-c4bc8237422d"
        },
        "item": {
          "id": "2b6966a3-b07e-4c55-a4aa-1703fce952c2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "111d7989-1eb6-443b-acad-f3883e084d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606ee865-f84f-4a32-83b2-335f66ad6a0d",
        "cursor": {
          "ref": "2dba0979-1485-436e-b676-572546ffd472",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2d424cb6-c037-4508-85a8-143f79eab331"
        },
        "item": {
          "id": "606ee865-f84f-4a32-83b2-335f66ad6a0d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5f1f67bc-82b7-48f0-983f-7f9c57d85c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a1b94c-3bae-41aa-a86e-41c2a8843469",
        "cursor": {
          "ref": "72bd0774-7e20-45d0-ad84-6fbc91fe6edd",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fe4ff78b-25fd-40c0-b20a-f05b6041bad1"
        },
        "item": {
          "id": "41a1b94c-3bae-41aa-a86e-41c2a8843469",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a549a65e-6519-4184-9bd1-7a2eef44245b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da678af7-5fca-43e0-8d73-bd3efc033819",
        "cursor": {
          "ref": "d1b97b31-0eb5-455a-a061-ec98ce8a0bbb",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3f069761-c0d3-4909-b3bd-b877fc35d19b"
        },
        "item": {
          "id": "da678af7-5fca-43e0-8d73-bd3efc033819",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0ef5ff31-82e5-4bc3-8032-e9bda54e659c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e92e3a0-f2d4-4eb2-b6cf-b4e4c49ca9b0",
        "cursor": {
          "ref": "c8c4fc8e-0942-4465-bb66-3ae3fd378637",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dee9ba43-1bb9-4185-9f21-8935b8bfe69d"
        },
        "item": {
          "id": "5e92e3a0-f2d4-4eb2-b6cf-b4e4c49ca9b0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6584a6fb-cbcf-4626-ac42-d205af6cc93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ff2e20-49d3-479f-8201-114d4510954c",
        "cursor": {
          "ref": "306193de-0283-4bba-97b0-ede9086a8d0d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fc265c9b-aa88-4503-b12d-428c49f5eed5"
        },
        "item": {
          "id": "d0ff2e20-49d3-479f-8201-114d4510954c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1ab29a15-8363-4c59-8393-fe9f2c4c07d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb948bf-dac4-4db8-8f5d-7180d4d002a1",
        "cursor": {
          "ref": "33fd7796-a1f8-4acf-b7da-c535e16ebebb",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3089c261-6370-4c63-bdb8-689013f0bd56"
        },
        "item": {
          "id": "fbb948bf-dac4-4db8-8f5d-7180d4d002a1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a1647d1c-ec92-4668-9cc1-3c38e2a81023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364cf349-7d65-4499-9b66-30c677a0ed04",
        "cursor": {
          "ref": "928d9a6f-9fc5-4b91-a79c-0ce2deb90094",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a355791d-163a-43ea-b2b7-c181a78a66a8"
        },
        "item": {
          "id": "364cf349-7d65-4499-9b66-30c677a0ed04",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "37763f8c-4b9e-4032-b816-0c7c0cfc024f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a18ddf-73a5-425f-b7b2-bda9a32ecb41",
        "cursor": {
          "ref": "6ee6ab4a-4a4a-4654-b039-621bdabc92d0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4c2fd41e-9cf0-4631-99ea-5cb78516ab6d"
        },
        "item": {
          "id": "c3a18ddf-73a5-425f-b7b2-bda9a32ecb41",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ee0c9ee8-8827-4a52-832b-bec270a6a0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e8cf63-8f46-40c9-97be-8ebce50b5289",
        "cursor": {
          "ref": "28266cef-a722-42ef-8712-0b9ae76e7c56",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c5545ac0-51c0-46f1-bf6a-1b8ed2257bcc"
        },
        "item": {
          "id": "66e8cf63-8f46-40c9-97be-8ebce50b5289",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8d935d01-340f-48a5-a31b-1532671221e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cc262c-c370-48d8-be73-6413a3a096bf",
        "cursor": {
          "ref": "74f12c54-c2fb-41cd-892c-884593ebfde6",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "818446c9-1158-45d7-bf04-1ded659bb030"
        },
        "item": {
          "id": "35cc262c-c370-48d8-be73-6413a3a096bf",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b7b2ad71-d87d-469b-9908-d05cc304b30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2315c151-2056-4b32-a0c6-8062f0e74265",
        "cursor": {
          "ref": "2ed56259-53b1-4353-b4f5-b52650cd33e0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a13065e4-af21-42b6-a0b5-cc375df45612"
        },
        "item": {
          "id": "2315c151-2056-4b32-a0c6-8062f0e74265",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "108c1000-1b4a-41e3-8085-63dbcf47a1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d72d7e0-795f-4215-bfe7-eef5a41bbd24",
        "cursor": {
          "ref": "6f1993fb-4f4b-44e9-a34f-3d81c7595d05",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "27ad441e-ce45-4e74-b5ae-fd96a7ee6e67"
        },
        "item": {
          "id": "8d72d7e0-795f-4215-bfe7-eef5a41bbd24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "de45c6bb-5a39-45b3-a46d-57268d341b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb0aa8f-d891-475a-8d84-7326b4450e7b",
        "cursor": {
          "ref": "7019ea09-5c4a-456c-9617-2243fb5e5949",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8e9f19b1-bab1-45b5-a2d3-d372165f1b60"
        },
        "item": {
          "id": "5eb0aa8f-d891-475a-8d84-7326b4450e7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c91a17ef-3bbe-4883-8df5-b4c9b4100508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1d7015-d5e3-4f25-bd19-4c7ac42e8eb6",
        "cursor": {
          "ref": "11a4e1a7-2131-41dc-920b-2bf3330519d3",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "38a0d3ea-1c6c-426b-a3ca-8d743a1fd1bd"
        },
        "item": {
          "id": "bd1d7015-d5e3-4f25-bd19-4c7ac42e8eb6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "abdd10c7-45f8-4f12-841b-ac7c1fd8a11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519e2b3e-6caa-4cea-8e3c-8103b6c2a253",
        "cursor": {
          "ref": "69a34d6c-5ca3-4d3b-9243-c6b24dbb9926",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1698a3dc-1152-4344-a1a3-f651a65218b8"
        },
        "item": {
          "id": "519e2b3e-6caa-4cea-8e3c-8103b6c2a253",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "122069f7-9097-4f89-932e-ebf0d92ced3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ddea62-97e5-4e3e-bcf3-591295315246",
        "cursor": {
          "ref": "f41d0fc3-d28e-4f13-9b93-2dba61846aea",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6205ac80-88b4-4151-9e79-7e0831bc3e30"
        },
        "item": {
          "id": "d7ddea62-97e5-4e3e-bcf3-591295315246",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "69271bd9-51ed-4eec-8dfe-2852c4cddd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfa6c37-6596-413d-be08-d5869475e070",
        "cursor": {
          "ref": "ca1af70f-2b5c-4fb1-9015-ffb74939ef10",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7f4b4b05-9fa1-4d4d-a2fc-132e63b02209"
        },
        "item": {
          "id": "7cfa6c37-6596-413d-be08-d5869475e070",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "520d0c10-a01f-449a-a783-d0dfb7474fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7bd27d-fed3-455e-b027-dd8691b11a87",
        "cursor": {
          "ref": "a597bebe-4a58-418c-a94f-d5f52f5906b9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e1e2f3e4-3f8e-48c4-96cf-f9cc8b400008"
        },
        "item": {
          "id": "6d7bd27d-fed3-455e-b027-dd8691b11a87",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9df0a609-4ea0-4560-b486-7c0d2b8461e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7486384-d7b7-4351-a911-78bddddfa5b7",
        "cursor": {
          "ref": "476a14d5-5f94-4b84-853f-2912b664ee30",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f18a4e05-ad3a-4f36-b17e-925114cef156"
        },
        "item": {
          "id": "f7486384-d7b7-4351-a911-78bddddfa5b7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5ea42275-2a24-41a3-ab5c-6c9e0db9b4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4a4177-0661-4f14-a20f-c252a99de43d",
        "cursor": {
          "ref": "f633fd72-c35a-4c6a-bfc3-c56ad60050ed",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "288daee0-e7ea-482f-8888-2a4a6ab3cef5"
        },
        "item": {
          "id": "3a4a4177-0661-4f14-a20f-c252a99de43d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "48a5bc48-7a45-4906-a5b2-1f12ecf4315c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084d4e6d-1f37-4cf3-ab2a-43f97226f454",
        "cursor": {
          "ref": "bf6e5e70-b200-4e44-811c-d72aae5597d4",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5e313fea-5e12-4319-99b8-1d4df7d74ef1"
        },
        "item": {
          "id": "084d4e6d-1f37-4cf3-ab2a-43f97226f454",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9b5413f7-c3da-4a6d-a52c-5dce9eb20856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fe635e-b9ed-4a8e-affb-93102fc17b30",
        "cursor": {
          "ref": "af432ff4-5978-47d1-b815-9429d423e513",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c4d6d0f2-6271-46f0-9f86-738a2e9368b6"
        },
        "item": {
          "id": "90fe635e-b9ed-4a8e-affb-93102fc17b30",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a625b0de-c5d6-43a5-8bcf-c7a04ac38b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05e4745-e3fb-4dd0-97a1-a42fb351dc98",
        "cursor": {
          "ref": "e3d9b29f-085e-4570-959c-4bc284be092f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a1f1f09b-ef90-4190-ae25-cf0d8cf791d7"
        },
        "item": {
          "id": "a05e4745-e3fb-4dd0-97a1-a42fb351dc98",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8782206f-6d59-4f3f-a88a-5f326fd3559f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4910335-3a66-4ec0-ab65-1d50e411e90a",
        "cursor": {
          "ref": "ecdda201-86d1-45dc-84a2-348e49f7232f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2900323b-06f9-45b8-8173-8316154e544d"
        },
        "item": {
          "id": "b4910335-3a66-4ec0-ab65-1d50e411e90a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "320efa66-82f2-45f7-afc4-8f5168246937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2033c687-10fc-4b5d-8e6a-08eebb9ccc00",
        "cursor": {
          "ref": "16df644b-739c-4050-ac4a-b749a53233bc",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "108c5392-bfd0-4d76-8be8-838f9a9e7fe2"
        },
        "item": {
          "id": "2033c687-10fc-4b5d-8e6a-08eebb9ccc00",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "037914c7-c327-4b13-a90f-b2a2398a0940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5fc903-c35c-4668-aead-7a454cad242f",
        "cursor": {
          "ref": "b6678061-d2c6-40dc-a54a-8e59a1ada88b",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f458c036-758d-4186-a7a9-79d1dc02cf8c"
        },
        "item": {
          "id": "cf5fc903-c35c-4668-aead-7a454cad242f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b2fe6d6b-0c53-4a4b-acff-df9b3b0310c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13af4193-d3eb-4ec7-8f05-fb5ae5698300",
        "cursor": {
          "ref": "b64968c9-5be3-4f75-afce-6bad864705b4",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "401a4ae7-23eb-492f-bb8b-1aaf9ba98045"
        },
        "item": {
          "id": "13af4193-d3eb-4ec7-8f05-fb5ae5698300",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "98edc05f-7a96-4510-9bec-85512ee83b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b297ff-bafe-4f21-8f3d-6946f5ddf4e3",
        "cursor": {
          "ref": "97e33284-6af2-4c6f-9398-35bc6a892d39",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "13cb79eb-3feb-427d-acd8-abe7b0b0f816"
        },
        "item": {
          "id": "88b297ff-bafe-4f21-8f3d-6946f5ddf4e3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "565592d4-3a11-448d-a1e8-3435fb25b9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d508d2-b537-44a7-abf8-5b8d931d4b12",
        "cursor": {
          "ref": "fd88e3cd-f8e3-41a4-907a-4e91795bcd80",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "36593c1b-6048-49d3-a6c2-44d7aa43a0e9"
        },
        "item": {
          "id": "51d508d2-b537-44a7-abf8-5b8d931d4b12",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4405751f-e2de-4950-94e4-33b8aeac4dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4967b3a2-8988-4831-a30c-5e117294d0e6",
        "cursor": {
          "ref": "00e4f99d-dddc-48c0-846a-76ff9c05279b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a8ccee5b-89db-4a7a-8303-e7f13cfe0ee0"
        },
        "item": {
          "id": "4967b3a2-8988-4831-a30c-5e117294d0e6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6da32661-4647-4446-a184-6cd593d6f59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c1600a-91d7-40ae-aa0a-620fdd92aec1",
        "cursor": {
          "ref": "86effa66-a374-4d8f-8d3e-70bf88bb976a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7d782bf7-349b-44e6-a099-8f1875fb41e1"
        },
        "item": {
          "id": "e8c1600a-91d7-40ae-aa0a-620fdd92aec1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b663eb3f-904a-4f2d-8f74-8bed92950263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99e96a4-346f-408d-859e-e528b049cee5",
        "cursor": {
          "ref": "0a91225c-55ae-44a1-a582-6663a61f9695",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c90f97e8-34bb-4d75-aeb5-038f60b8d2d1"
        },
        "item": {
          "id": "e99e96a4-346f-408d-859e-e528b049cee5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "402b184b-a37f-48a6-998c-adaa78244210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a60d4c5-3796-44da-9b5a-78200255e893",
        "cursor": {
          "ref": "6eb7123c-a737-4be2-9746-b6fcc3c190f7",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bb67b82a-031d-493c-80bb-f9b33a1bf191"
        },
        "item": {
          "id": "0a60d4c5-3796-44da-9b5a-78200255e893",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "81f250ee-70bc-476f-aee9-8d3b3be3af23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa084f1-4823-45f8-bf0b-b5563559a85b",
        "cursor": {
          "ref": "5419c104-0fe9-4978-bdc0-7d759dd97326",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3db0d8b5-bf31-43f3-9103-1d6cb8f5f823"
        },
        "item": {
          "id": "7fa084f1-4823-45f8-bf0b-b5563559a85b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dff2cdc4-500a-4176-9621-103b7a9119f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d431a8-8578-4775-bbc9-f12b0be503d1",
        "cursor": {
          "ref": "809014ca-65e7-4ab0-958f-c52e8d4e5160",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "02443ba9-37f5-4244-a464-730d36fec454"
        },
        "item": {
          "id": "28d431a8-8578-4775-bbc9-f12b0be503d1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "52514ca5-9092-4e1a-b7fe-159a8419617b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d33af92-7a62-45bc-b501-e959ccd2f79c",
        "cursor": {
          "ref": "c3257e51-c7a4-450f-ad6d-5c3663449ae2",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c87ca48e-1f5a-48fd-ab21-bcb59a2f45cc"
        },
        "item": {
          "id": "5d33af92-7a62-45bc-b501-e959ccd2f79c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9065440b-a111-41e7-973a-f5b01bce1814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8362b1c5-ecc3-4726-93a9-35fa5fe792ea",
        "cursor": {
          "ref": "294c6bf7-7c7c-4c45-802f-cb45bfdc7b86",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9a44cd3f-ed15-4b64-8053-a3aad61d9cab"
        },
        "item": {
          "id": "8362b1c5-ecc3-4726-93a9-35fa5fe792ea",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a6a6ccf5-de87-46f5-8ac0-da54a626f57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93c6b02-bfdc-4dbd-b617-4d44ae6f7e6f",
        "cursor": {
          "ref": "77717490-139e-4359-8dca-5a542bf4e14f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f0125fc7-7d08-4385-9dd8-e64bcaf027b4"
        },
        "item": {
          "id": "c93c6b02-bfdc-4dbd-b617-4d44ae6f7e6f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "307d26b9-9652-4b42-92cb-4a6eb7971e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f07a29-406c-4f2f-a87b-c469098b578c",
        "cursor": {
          "ref": "84a3f3b1-3746-4fc1-953b-02e0727a404b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2482dc52-5bc3-4d85-930f-a79402800e97"
        },
        "item": {
          "id": "e7f07a29-406c-4f2f-a87b-c469098b578c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "56d28ea2-cf01-42e1-bd26-08f2fd9f3184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8948a68b-c54a-4b6d-a25f-f5b47f7c95a7",
        "cursor": {
          "ref": "de288ce5-337a-4b2b-b520-c89de8cf8437",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cedeff88-5664-4fb5-b938-7063f0dd1e18"
        },
        "item": {
          "id": "8948a68b-c54a-4b6d-a25f-f5b47f7c95a7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ebf8d71c-91a9-419a-8428-a6769029bbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309314cd-510f-4de8-bac3-d5086d9f68a7",
        "cursor": {
          "ref": "f72df3bd-52cc-46e0-a65d-8e542887a4ef",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "41a3ba94-f809-4155-9836-32fcb9688dea"
        },
        "item": {
          "id": "309314cd-510f-4de8-bac3-d5086d9f68a7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5919a9db-72be-4626-8af2-45b21e8d22b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d280c7-6308-40be-a324-98613e7524d1",
        "cursor": {
          "ref": "401acf43-0f75-4ff4-ac69-b86aa15c0e3a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1c5367bd-e3c5-4a19-955d-d6fdd1a789df"
        },
        "item": {
          "id": "87d280c7-6308-40be-a324-98613e7524d1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bd20ce56-2a75-41d6-a9af-a289660f3c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b89c82-0b0d-4789-a385-18cfb3052a40",
        "cursor": {
          "ref": "37e5ffdb-ad2c-43c9-ab36-c7a5f7095470",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2327cd08-a024-4094-83da-4ae3000547f3"
        },
        "item": {
          "id": "26b89c82-0b0d-4789-a385-18cfb3052a40",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "265da516-7836-4249-933b-0a181ab68685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83014876-e501-45d1-9d48-d58a6dd3be4e",
        "cursor": {
          "ref": "362f72ab-b319-4241-96f2-c33acf5aec63",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "63b83ba4-34ea-4c25-8a1b-67758d1abae3"
        },
        "item": {
          "id": "83014876-e501-45d1-9d48-d58a6dd3be4e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "570919b9-dbf3-48e3-8bf1-aae556b2ff9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437466a2-2a13-4d84-93db-b2a6fc7d1cdb",
        "cursor": {
          "ref": "7382541f-5362-4795-b2be-601346ead4f8",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "381a9dc5-ffde-433e-95d5-c33c893aeba8"
        },
        "item": {
          "id": "437466a2-2a13-4d84-93db-b2a6fc7d1cdb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1daed2f1-592e-400a-8bdb-c19a9fb471f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f71fd64-af6f-4199-9746-17c038ab9bf7",
        "cursor": {
          "ref": "83ce8092-86f4-41ae-b2bc-a50ea4b24372",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "62f7df5b-47b0-4960-ab4b-91c2ee15574c"
        },
        "item": {
          "id": "3f71fd64-af6f-4199-9746-17c038ab9bf7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2f866657-ab42-49dc-984b-8dace1c79e0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b41afb-0284-4f0a-af05-1c6e7653774b",
        "cursor": {
          "ref": "7885029e-cb6f-4151-b0bd-0157f23309fd",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "eb9b6e8d-53d6-49c6-9e5f-d899c2997d3f"
        },
        "item": {
          "id": "d1b41afb-0284-4f0a-af05-1c6e7653774b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "825a3ced-8592-4de7-86c9-58dd68086a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "399c07c6-460c-4835-87c3-82d4fb546af1",
        "cursor": {
          "ref": "03b65c16-e98b-445c-946a-a783f5f2f6ff",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2792eba8-8d59-46fe-9268-81dfda80827e"
        },
        "item": {
          "id": "399c07c6-460c-4835-87c3-82d4fb546af1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fb0d7c66-ea1c-427c-b417-2c5de1e1b529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "cb151b44-7c4e-49ba-83ea-0f821a5a3f0f",
        "cursor": {
          "ref": "19759238-6c4e-45d7-8e1b-31f1c1ee2fc6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "02dadb53-38e2-4a12-b91d-a0195582066b"
        },
        "item": {
          "id": "cb151b44-7c4e-49ba-83ea-0f821a5a3f0f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2a638141-ed01-498b-ae44-4ef3dc5c5084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0ae944af-1bd2-4905-84c7-96b915b18e3f",
        "cursor": {
          "ref": "49bacda6-0b7d-4986-8287-df05dfca5e09",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d7f03faf-1824-480f-a8ce-307354890ca2"
        },
        "item": {
          "id": "0ae944af-1bd2-4905-84c7-96b915b18e3f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "08688813-0d94-4879-8b6b-219589764802",
          "status": "Created",
          "code": 201,
          "responseTime": 4820,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a8cb6a-551e-4e56-9687-0b2e11a28b5c",
        "cursor": {
          "ref": "23bff8e8-e962-4cff-9855-2a51f75e8df0",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dc0cc5bc-ad62-4f6c-b44e-6bb962bdc7aa"
        },
        "item": {
          "id": "94a8cb6a-551e-4e56-9687-0b2e11a28b5c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e1327ad2-3686-420a-936f-0a94ce224ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f23ea248-c1ea-4a7c-95e0-020eee38e617",
        "cursor": {
          "ref": "2da56780-749c-4ac7-a8f1-e2fb62599ca1",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "114369b2-dbdf-4302-a057-d92fb24aab5b"
        },
        "item": {
          "id": "f23ea248-c1ea-4a7c-95e0-020eee38e617",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0f689c15-eb36-4097-b368-ddf5e12a71fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "173354e8-1b04-425b-a824-9dff63804cbb",
        "cursor": {
          "ref": "8afc5fd8-a8ad-4956-9c1d-aaf01aebb26c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1bce0d45-d93a-4eb4-a7b0-11350d9ec5c5"
        },
        "item": {
          "id": "173354e8-1b04-425b-a824-9dff63804cbb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e7ede8c-60b3-46c9-9e45-72d831f202be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e949be-d6aa-4cd7-aff8-4f29524110cc",
        "cursor": {
          "ref": "716bc02f-63bd-43d1-8f95-394e2fe795a5",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "de303043-8a9f-4548-b5aa-41067099b654"
        },
        "item": {
          "id": "48e949be-d6aa-4cd7-aff8-4f29524110cc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "76927776-feee-454d-a1e6-64f170353812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c02bbb0-d6de-4fdd-b542-0ac5e9da43c1",
        "cursor": {
          "ref": "f013cc2f-a745-4723-b8eb-2cdb719968ad",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e3be5c04-e185-40b1-a7a1-97957e6e62b5"
        },
        "item": {
          "id": "0c02bbb0-d6de-4fdd-b542-0ac5e9da43c1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0c01a218-10d6-4fd6-863e-314872200535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bef6ea6-e804-48aa-a385-5e360a9a5aef",
        "cursor": {
          "ref": "6664ecb0-af82-486b-9aaa-413bef227b1f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d758ebf1-c067-4e6a-91ff-051890a5482d"
        },
        "item": {
          "id": "0bef6ea6-e804-48aa-a385-5e360a9a5aef",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2e0a23a1-b550-4352-9ff4-4c9942d892d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631eb946-e8f8-42b5-a1be-40163079165f",
        "cursor": {
          "ref": "3ebf4873-46b5-4260-b314-50b7a4c5aef4",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b9c30ab1-5a55-4798-bfd2-71dd8f4510a6"
        },
        "item": {
          "id": "631eb946-e8f8-42b5-a1be-40163079165f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1c4d1d39-da69-4f73-b0d4-d14ad619f86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f3fc35-a8bd-487a-b42b-ef3f7386696a",
        "cursor": {
          "ref": "6ad98272-b12e-4b84-b239-6fe9b9592aa8",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e71c49a7-5d6a-497c-92ff-13c0bba5e561"
        },
        "item": {
          "id": "64f3fc35-a8bd-487a-b42b-ef3f7386696a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0e17b186-74f3-4646-ac6f-9e004f43042c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184f902d-7161-4842-b90e-81139d4acc8c",
        "cursor": {
          "ref": "3e861777-f6d0-495d-9d09-2f766672d99f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "73ee8850-9720-4b6f-b97c-816caa21b5e8"
        },
        "item": {
          "id": "184f902d-7161-4842-b90e-81139d4acc8c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eb9be053-181d-4654-9ff2-8ce5fb46a28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2878dd-998e-4f4a-bc4f-1c1e4c122c75",
        "cursor": {
          "ref": "6f8382e3-006b-4102-936d-c31d36eede5a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c76bfa8d-45cf-4352-bff3-126f7e0959b0"
        },
        "item": {
          "id": "3f2878dd-998e-4f4a-bc4f-1c1e4c122c75",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e61930bc-9221-49d6-a6ff-3bd138cb916b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbcaf74-45ea-4292-9bab-59eaaf725f39",
        "cursor": {
          "ref": "4e5ed0bd-1501-433b-ace6-7aefa9c134f9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "eaa222c9-6af2-4497-b9b4-5f1dee1efb60"
        },
        "item": {
          "id": "ecbcaf74-45ea-4292-9bab-59eaaf725f39",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a99bcfc2-4138-4ad2-9d37-88258b73cb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41797edf-9f12-412b-9161-a38c70c96813",
        "cursor": {
          "ref": "2fe16a2f-538f-4dcd-bd23-b519269a9d5c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "db8e39bd-ca60-4f7a-93b5-d3bf45a76053"
        },
        "item": {
          "id": "41797edf-9f12-412b-9161-a38c70c96813",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a341547e-eb9e-4ebd-a05c-2cbb365d00d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1854a9fb-14b0-48b1-b5a4-1ae89807f06f",
        "cursor": {
          "ref": "1d373ae7-784c-4546-bf4a-c2007ac54e2d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3e40c395-0c35-4a02-a28e-b4c074e33c76"
        },
        "item": {
          "id": "1854a9fb-14b0-48b1-b5a4-1ae89807f06f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8205065a-58d9-4907-962b-1eac4de87934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c76fd9-e6d1-4ec5-96c6-bde89f09f331",
        "cursor": {
          "ref": "03fd8bb5-2ac7-470a-b416-e0f1a2eef875",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8d43c438-07f7-44c4-a712-2ee2791273ef"
        },
        "item": {
          "id": "87c76fd9-e6d1-4ec5-96c6-bde89f09f331",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6a2b2993-7652-47e7-899f-2b9b9ff3a149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8a5201-8c7d-476b-9ce6-4fc9215f12ca",
        "cursor": {
          "ref": "2d5564f7-6f43-45b9-98ff-085dd6129ed5",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f707f713-2ef8-4ebe-9811-1f2703816656"
        },
        "item": {
          "id": "8a8a5201-8c7d-476b-9ce6-4fc9215f12ca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "53016091-fd72-4901-b26e-ede45c7a41fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8a2b57-2078-4fb6-a814-1a57492358b3",
        "cursor": {
          "ref": "99e447b4-4ead-474a-990d-06f70ae421c9",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a9741107-26e5-4f30-b75e-6625c53ff655"
        },
        "item": {
          "id": "8d8a2b57-2078-4fb6-a814-1a57492358b3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "00f8a54e-9a3f-49a0-8044-b07db3b46ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c379f9f6-464b-4100-9b43-fcc7d888b71a",
        "cursor": {
          "ref": "ee8a9b90-2c8e-4dbf-8b38-a6089bd46bb2",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6d3a2986-170c-478a-9190-91f90d721199"
        },
        "item": {
          "id": "c379f9f6-464b-4100-9b43-fcc7d888b71a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "171eaf39-5ccb-4edc-9959-617384a53851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe750b0-e5e8-4f79-8ae4-1f254b09ce34",
        "cursor": {
          "ref": "99bbae57-6e92-451c-bec4-da37456fc9a8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "496d02f3-5746-4629-bdcf-3ba813a27ee1"
        },
        "item": {
          "id": "abe750b0-e5e8-4f79-8ae4-1f254b09ce34",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "09f3a055-ebea-45e9-a2c0-1c8e90853bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb63dd8-54ae-41b7-89ef-4748279877b4",
        "cursor": {
          "ref": "f2fde638-38ce-4014-ad2d-b3d33249c6e1",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3c67614a-7043-44c9-9a53-36dae28e6c3c"
        },
        "item": {
          "id": "6fb63dd8-54ae-41b7-89ef-4748279877b4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a817ca0e-f649-43c5-a168-3d5dbf97fbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72d49f3-7d7e-49e8-a92a-033f84fcb266",
        "cursor": {
          "ref": "3492035d-cb05-4ec1-8967-21d4a87f5241",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b23dbf52-1144-48aa-900a-c792cb3431c4"
        },
        "item": {
          "id": "b72d49f3-7d7e-49e8-a92a-033f84fcb266",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e369d861-fd3d-4d03-a761-e1ca7f47ee65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ba1c77-85ec-4ba1-b2bf-d29848093041",
        "cursor": {
          "ref": "12deb4b2-e5d8-4f79-b3b6-c37af9044af1",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "14cb921c-4d91-4ce4-9dbd-e7120390547f"
        },
        "item": {
          "id": "20ba1c77-85ec-4ba1-b2bf-d29848093041",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8f1f09b6-58a6-45a1-a3eb-3885fd8616b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baff14d5-ff97-4152-9d51-cfbccb374daa",
        "cursor": {
          "ref": "28af4425-c508-46de-8f34-2fcb51aeff10",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c442551b-b6de-4378-aa82-00d57ce2f59c"
        },
        "item": {
          "id": "baff14d5-ff97-4152-9d51-cfbccb374daa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3918e451-74c4-47c6-ae38-c2463b517d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b5e4a7-3e04-42df-b2c0-c852f0a00ce6",
        "cursor": {
          "ref": "279b77e7-360a-4c2c-9537-5695d28729bc",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dff820e9-feb0-45f1-8785-b162a7cc10eb"
        },
        "item": {
          "id": "b6b5e4a7-3e04-42df-b2c0-c852f0a00ce6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e21e624c-3ec2-4a5c-ac38-fa60456fe2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff53b97-00a7-499c-b709-655fd5e63783",
        "cursor": {
          "ref": "2beb5b63-1fbf-47ea-819f-ebe381245f0a",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "33cf7d2d-1816-458d-959f-6ad3604ee62d"
        },
        "item": {
          "id": "4ff53b97-00a7-499c-b709-655fd5e63783",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "df837128-7db0-4373-808c-8ec0352116a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9ccba3-dd34-491c-9033-4762891d856f",
        "cursor": {
          "ref": "51820966-0e49-4f53-9347-2907403d8930",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f0565383-e5a1-460d-8b1b-38aa231cde95"
        },
        "item": {
          "id": "3f9ccba3-dd34-491c-9033-4762891d856f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "988c4153-f85f-4995-a9d7-6ed68b4b03dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa8033f-f117-40c6-a185-d9863ae25ba6",
        "cursor": {
          "ref": "e882a8cf-00bf-437c-b9ff-112690bc3fab",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3fbf9fd7-a7dd-4318-915d-1ab10f2be9e5"
        },
        "item": {
          "id": "7aa8033f-f117-40c6-a185-d9863ae25ba6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1c9192b4-7760-4e18-89ee-13d1b6d52016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ade50a8-2bf1-4c88-9d38-40eb250678ee",
        "cursor": {
          "ref": "8f991151-60c6-4b3b-ac2e-8a66453ad91e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "29b7f7ce-0e2c-4547-a576-cac8769bace2"
        },
        "item": {
          "id": "9ade50a8-2bf1-4c88-9d38-40eb250678ee",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "039f45d9-9456-4489-9bcc-fbb442325e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa79333d-637f-4184-84de-f9fe65bc1b33",
        "cursor": {
          "ref": "45a69814-19b3-4429-804d-ac4ff67c4146",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6f7f7e12-5d79-4bb9-95a5-934c2da7d8f3"
        },
        "item": {
          "id": "aa79333d-637f-4184-84de-f9fe65bc1b33",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "367e9ea2-29c2-41c9-bf2a-5df5fc37059e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdcd1db-edee-41be-84b0-7b5b0daf2620",
        "cursor": {
          "ref": "b700e69e-f27c-4190-9ec5-c0cefb66771b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "eefd6b56-5e44-4b1b-9418-4a8faf5891b5"
        },
        "item": {
          "id": "afdcd1db-edee-41be-84b0-7b5b0daf2620",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "22e467f5-1fba-44ea-b466-db7badf7d126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c9f761-1179-40b3-9cd5-9c2eb38e7f32",
        "cursor": {
          "ref": "579f123e-a2ec-4a52-90ed-daab19ace368",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "37c74bb0-93e2-4f96-b6eb-88b93422696b"
        },
        "item": {
          "id": "47c9f761-1179-40b3-9cd5-9c2eb38e7f32",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b0dc362b-fcac-432d-a024-88621fcbccb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02ddc06-1e3d-473f-81af-f025a4a53b4f",
        "cursor": {
          "ref": "30c08071-139f-4e38-a91b-38a73f287461",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "835e7bc9-0b20-441b-9163-28c4088b6f00"
        },
        "item": {
          "id": "a02ddc06-1e3d-473f-81af-f025a4a53b4f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cbdea443-1048-4e05-943e-315164a06a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fc1281-47c1-4aef-812b-6a2efa56c3b2",
        "cursor": {
          "ref": "ea5d0c1c-148e-429e-a588-18a06f95ff4f",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "018f91ee-c5db-45f3-9cf8-6e378c262993"
        },
        "item": {
          "id": "47fc1281-47c1-4aef-812b-6a2efa56c3b2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7a993af7-80ce-456c-836c-5968c6b7f549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059082a0-f472-4094-8d65-c96d4c5fea91",
        "cursor": {
          "ref": "6810e095-198e-4bf5-a193-9effa02dc810",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eb9f71d4-bd21-4a44-8002-2ac770c41d1b"
        },
        "item": {
          "id": "059082a0-f472-4094-8d65-c96d4c5fea91",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "07c6a172-1357-4b7e-ae21-c0a6d6214de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0619cb25-b6d9-4df6-8f44-75c0f5fbc8ac",
        "cursor": {
          "ref": "da06cd3a-ea8d-4c27-88f2-04803a3c9f90",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "87ae1221-9a4d-41a3-a683-154b7d3f8e3d"
        },
        "item": {
          "id": "0619cb25-b6d9-4df6-8f44-75c0f5fbc8ac",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "95f9f008-3a32-4208-bd74-6e769bd24afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbd1b91-6645-4b9e-961c-ceb025c9904a",
        "cursor": {
          "ref": "7d778983-1c76-41c8-baa3-b5d1ca80e97a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4605eb27-4957-4874-8dfd-fd30d048a538"
        },
        "item": {
          "id": "9dbd1b91-6645-4b9e-961c-ceb025c9904a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dd18af09-8ef8-4d6d-befd-620633f66ee0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5750d1-732e-49d9-af32-d64dcf72c382",
        "cursor": {
          "ref": "1e8d94e4-00e7-4295-a193-790bc16f026b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "92b4cab4-ae35-46cf-b898-052604ee774e"
        },
        "item": {
          "id": "af5750d1-732e-49d9-af32-d64dcf72c382",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "73a78361-b4f8-48a2-ab0e-04efff1ded64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07068f8d-ac28-44ff-9f7e-197018e6cb99",
        "cursor": {
          "ref": "1545f3b4-570e-4669-a446-f97b1fbd4ad0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7f0b1e93-e48b-4052-a681-cc2e673078ca"
        },
        "item": {
          "id": "07068f8d-ac28-44ff-9f7e-197018e6cb99",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5fd7a63a-5899-42ac-ae6e-8438ae977e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9502512b-06f1-449e-a46e-71b87942b7c9",
        "cursor": {
          "ref": "6e5cd1a7-605a-49d2-b34e-054a1b5ef5bc",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d7ffa518-3b7b-48ef-b24a-09851c6ea086"
        },
        "item": {
          "id": "9502512b-06f1-449e-a46e-71b87942b7c9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d265d90e-6f1e-4c98-b919-db8d16fab04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d4e95e-477b-4ae1-bfbb-51f3066eba2d",
        "cursor": {
          "ref": "d7eec26f-0d8d-45ff-8b78-7b7eaeb94169",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a35f1251-9661-4c14-8e46-9786a251dd8b"
        },
        "item": {
          "id": "37d4e95e-477b-4ae1-bfbb-51f3066eba2d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7748931f-25cb-4451-92c1-edf44ce56ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcb208f-d785-47bc-823e-8c4295262c0f",
        "cursor": {
          "ref": "e450e4ac-0aef-49e1-a8db-9e85b90346e7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0d2e8bbb-b76f-49f7-be50-84501c32109b"
        },
        "item": {
          "id": "dfcb208f-d785-47bc-823e-8c4295262c0f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ed394db4-d750-45f6-8fe4-b4fdb8c40e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e2167f-b9de-465a-b9c9-e71abd0d264f",
        "cursor": {
          "ref": "dee20efd-6535-48e0-8388-dcacf6985143",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "93ac897a-f0cc-4340-af84-2c6263d75cd3"
        },
        "item": {
          "id": "10e2167f-b9de-465a-b9c9-e71abd0d264f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f525c066-9d7f-4895-a8a3-20083a309d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59a68f2-93ce-494d-95f2-cfb1b1f0de1d",
        "cursor": {
          "ref": "e9b39c00-1af7-40f2-9add-746325b5da7b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5243aa17-1001-44c4-b4bd-dc4c12963a9f"
        },
        "item": {
          "id": "a59a68f2-93ce-494d-95f2-cfb1b1f0de1d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "898b34e5-a288-44cb-8bb9-a1f59a0c7ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6221e51f-5335-4896-8963-37a44e4388f9",
        "cursor": {
          "ref": "1cf8541e-4681-4190-9602-79309ddaf0a9",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6c4cbeb3-b8d5-4432-a9ff-182135290e2c"
        },
        "item": {
          "id": "6221e51f-5335-4896-8963-37a44e4388f9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ef73ce46-77c9-4a0a-9791-2a4e4b10fdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2b384e-381a-472d-8161-b3041a188874",
        "cursor": {
          "ref": "355f3b40-c574-4cd0-8511-efc93378f8f1",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "23fedd0c-de0d-424c-b053-3495379671ad"
        },
        "item": {
          "id": "4c2b384e-381a-472d-8161-b3041a188874",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0f9a9a26-f154-44b5-835d-7433f7bb88f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fe22d3-5591-4a3d-91c6-dc42ddfafbb9",
        "cursor": {
          "ref": "0ffd528e-d204-4ae9-a2a4-f8b8fac36ed4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bff591c0-06fc-4ba4-a28f-0ade2e185614"
        },
        "item": {
          "id": "29fe22d3-5591-4a3d-91c6-dc42ddfafbb9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4537304d-860d-4a19-bf4b-4221d4250c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284adf52-512c-4e1a-9625-33a8235463bd",
        "cursor": {
          "ref": "26027f10-c32a-4fda-8855-dc3d2f7d68da",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c7a0546b-af11-4f56-80d5-125b10261199"
        },
        "item": {
          "id": "284adf52-512c-4e1a-9625-33a8235463bd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "721a30b7-64c1-41cb-aaa2-4b15711e0c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b791db4c-b498-4242-9d29-f6fe526c1090",
        "cursor": {
          "ref": "3bc41607-34d7-4803-b44f-a7cae52a1e0c",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "76053005-2469-4e5d-9fe1-416e3899499c"
        },
        "item": {
          "id": "b791db4c-b498-4242-9d29-f6fe526c1090",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1658658b-0a74-43fa-a3c6-817c402cd785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ecbcd0-e106-4577-89b4-93dd11aec181",
        "cursor": {
          "ref": "faafe535-e492-4caa-9569-2034e5b40f27",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3109ca39-b3d5-4de3-b453-92df9cf85e9f"
        },
        "item": {
          "id": "30ecbcd0-e106-4577-89b4-93dd11aec181",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "248c7872-ffad-400e-b151-c107b272a8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4584b7-8382-40e5-a9e8-003a590f61b1",
        "cursor": {
          "ref": "c31ca29b-7151-4698-b4ef-b05cf78a6740",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a31cd9dd-bfbc-413d-b14e-ded4075b2030"
        },
        "item": {
          "id": "de4584b7-8382-40e5-a9e8-003a590f61b1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2a81cec5-9215-4af4-bdcb-eec15d12b27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a837ed14-cc33-492c-a7cc-ad04421fa194",
        "cursor": {
          "ref": "a110cb62-8e3d-46d8-8d33-0eefa47a2c09",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "16ef28ba-1e99-4c37-8fa4-b0eb74a65b5a"
        },
        "item": {
          "id": "a837ed14-cc33-492c-a7cc-ad04421fa194",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "71092ea7-0e7a-4051-a805-97ca38439e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc34332-4894-41e5-94ba-e52a1877fcc6",
        "cursor": {
          "ref": "da938160-1434-4678-9dd2-f5e955e3df04",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1d9a4468-68ff-4de3-be6a-bf6c5878c4f9"
        },
        "item": {
          "id": "1fc34332-4894-41e5-94ba-e52a1877fcc6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3a7a6b11-df35-4df8-8ab9-c87fd069294c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79142c3f-6d53-47ab-8cbe-29b5312206a6",
        "cursor": {
          "ref": "db24c0b6-6256-4d53-b1d8-7c0cc3088de4",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1d22b8a6-d925-4b1f-9842-98f98e2bde4c"
        },
        "item": {
          "id": "79142c3f-6d53-47ab-8cbe-29b5312206a6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3ce38a44-0125-4659-bc6d-012e713041cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4b291c-6463-4411-82bd-0f7ca6f63bce",
        "cursor": {
          "ref": "3749ba45-4c70-43d4-a63b-f46a6081fe4d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a925423f-7746-4b53-bd5f-1ddbd67e4e37"
        },
        "item": {
          "id": "9d4b291c-6463-4411-82bd-0f7ca6f63bce",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8c193fb7-87e7-4159-b91e-16c39b93aabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5758118d-2714-4a8d-b188-0c96ef44073f",
        "cursor": {
          "ref": "0c7b183b-9165-4828-9e98-3d0b76b62f76",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6ebe785f-5cf7-466b-ac69-53c7131bc1ac"
        },
        "item": {
          "id": "5758118d-2714-4a8d-b188-0c96ef44073f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "59412af7-a143-4d76-a931-8d334f6c1e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98aaa6ce-dd4e-44d1-bbd0-c8e696e81e59",
        "cursor": {
          "ref": "dfbcb626-0a67-488e-b67e-f4bc2198c18e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e7d93796-b840-4043-929a-001997e87cec"
        },
        "item": {
          "id": "98aaa6ce-dd4e-44d1-bbd0-c8e696e81e59",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ed40007-4172-4324-8eac-f05a90b1e432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bb158d-e6e6-4e20-b6bd-137ebd2d19d1",
        "cursor": {
          "ref": "61aecc4e-7a6a-4754-8c99-021aa0858452",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "49b75a5b-de2a-47c0-8e0b-5c0491ae271f"
        },
        "item": {
          "id": "58bb158d-e6e6-4e20-b6bd-137ebd2d19d1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0a965353-ed1c-4c4c-b78c-93aa6cc03365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c27659-6e28-47c7-a014-e1d93abd4769",
        "cursor": {
          "ref": "d4cb02fb-86e7-4cc2-85ab-ceb535f8a05a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "82699154-064d-4854-9e44-9f29a0d35177"
        },
        "item": {
          "id": "b2c27659-6e28-47c7-a014-e1d93abd4769",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5a3461c1-b2e9-4397-a64a-790cb06f3bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3e56da-4e22-4bb0-89bf-c424724c89b9",
        "cursor": {
          "ref": "3a9e2294-9b85-48d9-8d64-f5e98f374430",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ee184b94-093a-4ef7-b820-c252f2113d3c"
        },
        "item": {
          "id": "cf3e56da-4e22-4bb0-89bf-c424724c89b9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "58426def-6d12-4775-9bd2-82c811cb1eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5676a4-0c93-4884-a798-110698c97037",
        "cursor": {
          "ref": "bb54bf35-f311-4e84-8dc2-3f0fcf60a65d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0cbe484f-cf18-4f05-9d48-5374710f9214"
        },
        "item": {
          "id": "0a5676a4-0c93-4884-a798-110698c97037",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4b57e33e-579b-48b4-977f-b8b1b7a76494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ff14ff-ded2-4cdf-bd5d-b57034ee5e8c",
        "cursor": {
          "ref": "873afab3-6446-4f94-9393-6175dbab0ec4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "950f17bb-33d8-42ca-83c0-48c47eb53ab9"
        },
        "item": {
          "id": "48ff14ff-ded2-4cdf-bd5d-b57034ee5e8c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5dbdb120-48f4-4080-b7e9-8db169d76d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fba4e73-a139-4a32-a3b2-ea9ec520880a",
        "cursor": {
          "ref": "4738f27a-2a68-4dec-8632-d02dca1c105a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4db549af-967d-4e66-8bcb-4c12ed534ddd"
        },
        "item": {
          "id": "7fba4e73-a139-4a32-a3b2-ea9ec520880a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c827f6e2-c0b0-4fa5-acd6-54d1a26aefba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a916aa65-acc7-45de-8395-109a9ed09910",
        "cursor": {
          "ref": "182a2f89-836b-41ae-b529-795b2f26ed2e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1a2a2a53-4880-4ae5-911e-9a5adb3cf1d7"
        },
        "item": {
          "id": "a916aa65-acc7-45de-8395-109a9ed09910",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a845a1b8-c679-44a5-8b18-1586e4d7dfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5890256b-03a7-45bd-ab29-8daa0917af0a",
        "cursor": {
          "ref": "8a0f5791-0801-4109-a6f8-92ff5a1ee15b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4cdeac2b-9e47-478a-b6e0-f875199bacc0"
        },
        "item": {
          "id": "5890256b-03a7-45bd-ab29-8daa0917af0a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9c8f9339-b0e5-4c5d-b474-e1ce8080cdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5b99d7-17f3-41b8-9494-6b4dfe04b521",
        "cursor": {
          "ref": "c160ff28-01f9-408e-b5d1-39afb33a6e65",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3003be55-4b7b-4643-87fb-73eae44349c7"
        },
        "item": {
          "id": "fe5b99d7-17f3-41b8-9494-6b4dfe04b521",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eed68109-be7e-4e94-a91e-04bbf39ec3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81877cda-d4ff-41f5-8f2c-00d363b8a24c",
        "cursor": {
          "ref": "355b1af7-7d9f-49c1-a0f3-9cbead52b3bb",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dc91a395-a62f-4fba-950e-2b97a30c4b63"
        },
        "item": {
          "id": "81877cda-d4ff-41f5-8f2c-00d363b8a24c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c075b3c7-85bf-458e-b9c2-9b84a0ef2f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b1e441-ba7c-4647-b50e-482b42d765b4",
        "cursor": {
          "ref": "63af0d01-64a1-4c69-807e-3cdee6abf380",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "14434877-150f-45d0-9562-c34a71b9d05d"
        },
        "item": {
          "id": "35b1e441-ba7c-4647-b50e-482b42d765b4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9755c5a-b4a5-4ae1-9564-3ed0d73da87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73e8143-11cc-41d0-941b-4f8bfa7ad893",
        "cursor": {
          "ref": "340cbec6-e936-4d3a-943d-930a70fce4e5",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c4139999-58ba-4073-82e0-dedceff3d2ab"
        },
        "item": {
          "id": "c73e8143-11cc-41d0-941b-4f8bfa7ad893",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1ee81288-b944-406e-b8c2-4404d2e94438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6810336-b148-4568-a226-cb2c68ca4b18",
        "cursor": {
          "ref": "a41ab71b-41e9-4778-9397-dcd39438e334",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c3be6529-66e1-4d7a-ae8e-a6ff1fa21bd4"
        },
        "item": {
          "id": "c6810336-b148-4568-a226-cb2c68ca4b18",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d9b19b56-95ef-47c6-b371-2b77f918c966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027fd9ba-fbdd-4d92-ae1d-2be06143c307",
        "cursor": {
          "ref": "6a915bec-afe4-4d54-9ec6-8d7781b12521",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2f42975f-c036-4ebd-bebf-49b79cbaa4dc"
        },
        "item": {
          "id": "027fd9ba-fbdd-4d92-ae1d-2be06143c307",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "01d95295-a99b-4860-b594-7b99eb8ee61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b475aee5-e063-4a30-8b78-19d7be0ba5c5",
        "cursor": {
          "ref": "f8e76779-5e53-4cec-8561-60ee1ce560d7",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1037a598-0dc9-456e-bfcb-71791c5c458c"
        },
        "item": {
          "id": "b475aee5-e063-4a30-8b78-19d7be0ba5c5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bb30ed4b-b79e-4043-902e-2e79ad1e44c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3754ebba-3aee-4ca8-bc8e-692dc0bdb4ce",
        "cursor": {
          "ref": "3de43763-5c78-43f7-a865-a93a1c68d1bc",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2bc6a1d6-83d4-46aa-8050-2be62a1fbcad"
        },
        "item": {
          "id": "3754ebba-3aee-4ca8-bc8e-692dc0bdb4ce",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0c6bf52c-30e9-44eb-8c79-82d3f7ff548f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21948faa-fc61-4af1-9944-374bc6a26981",
        "cursor": {
          "ref": "395074d4-9da0-41d1-8f17-5248701d1542",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d6b9a8e3-ae05-4e76-8ace-cb3fb304a4f9"
        },
        "item": {
          "id": "21948faa-fc61-4af1-9944-374bc6a26981",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f632899c-084d-4890-a470-ae40c3e679bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c21bf0-7666-41a8-9634-60926fc2d1d6",
        "cursor": {
          "ref": "37d6fbb2-e0c3-41ba-92c2-551e6edbad8c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d5f13821-f6a8-4076-bfb5-e835f9faad52"
        },
        "item": {
          "id": "e0c21bf0-7666-41a8-9634-60926fc2d1d6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "948dbfad-e6b3-48e5-b821-b6ef69fa8b19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14edd8c-090c-4d7d-88a0-b746fbc1be22",
        "cursor": {
          "ref": "a2a826e9-7e10-4130-ab56-07ea0042128e",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e22d4804-705d-443a-9df8-1ea8786cec53"
        },
        "item": {
          "id": "b14edd8c-090c-4d7d-88a0-b746fbc1be22",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ce0ebab1-ad78-4cd4-afe2-27495df0f033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3745cc-6318-43d1-9647-444f60dd3da5",
        "cursor": {
          "ref": "852078f9-d7f8-413d-b871-670352fa5491",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "66099520-558c-4269-821c-6c7abe5b1115"
        },
        "item": {
          "id": "8b3745cc-6318-43d1-9647-444f60dd3da5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cefeef39-0882-4741-a7d4-38d347cbd241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdf57ab-1db8-4290-9107-420a7bf50db5",
        "cursor": {
          "ref": "594e7668-e7b7-4e80-90ac-e40632fa69f7",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2900ceb0-62a7-4918-9a4f-b23a7a5983ea"
        },
        "item": {
          "id": "5bdf57ab-1db8-4290-9107-420a7bf50db5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fb5a53cf-5d6f-41de-900a-373585737172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e4baf1-989f-4db5-8375-a2990998b049",
        "cursor": {
          "ref": "14567f51-ba3f-4b1d-9c6c-6795a45a71b4",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b2fcb1ce-9b8d-417e-b3cf-e5f03801863d"
        },
        "item": {
          "id": "16e4baf1-989f-4db5-8375-a2990998b049",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "398d0c78-e9b1-447d-92c4-f4b832f6714c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4365d823-d138-4838-90fe-c7e0b0b1b1f0",
        "cursor": {
          "ref": "79b20c6d-563b-44d2-82e8-c06b2a85dda3",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ded3643a-69ce-4c97-99f9-0f477eb127be"
        },
        "item": {
          "id": "4365d823-d138-4838-90fe-c7e0b0b1b1f0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d00b8321-ad6e-44dc-bca4-e5a1791e3a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97156d35-6af6-4be8-918b-8cd0a83f1fcd",
        "cursor": {
          "ref": "39bc7250-a998-41f8-9d63-d6725ddbc675",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "77dc66c5-ebd1-4c25-949a-a4c46055fdad"
        },
        "item": {
          "id": "97156d35-6af6-4be8-918b-8cd0a83f1fcd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b494ba08-cea8-42d4-867f-75328cbaddc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d48a7c8-5aed-432b-af17-d1c2d48a2e7a",
        "cursor": {
          "ref": "8c58bf97-e0cb-4dde-aa9f-34edbc128406",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ffad1f87-b902-48df-b257-61cf597a125f"
        },
        "item": {
          "id": "0d48a7c8-5aed-432b-af17-d1c2d48a2e7a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "51716b2d-c46e-4fc3-9f4f-eb1cc7c9705a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02232fc5-f578-4882-9b81-740d983af1c9",
        "cursor": {
          "ref": "277341a1-f84b-4718-9359-ddb689341b27",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9c79ce4b-3256-45f6-8b79-3bad0e81b51b"
        },
        "item": {
          "id": "02232fc5-f578-4882-9b81-740d983af1c9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "50e0a396-7525-4e34-a9a7-1ec1ee0e3d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87b3f22-e176-44d3-b428-c9aa1ebf7160",
        "cursor": {
          "ref": "cb25e663-e9ec-402f-bfcc-937d7901615e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "af6d9457-ccdb-4942-875f-19ad81090156"
        },
        "item": {
          "id": "b87b3f22-e176-44d3-b428-c9aa1ebf7160",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ad529c72-9852-4189-aebb-67e04da45a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3231599d-0a2c-415a-b5cd-dffcf64a358d",
        "cursor": {
          "ref": "9860ad5d-7664-4f93-a5f4-682828e2dff8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a35ea981-d70d-4303-9ca0-11e088891401"
        },
        "item": {
          "id": "3231599d-0a2c-415a-b5cd-dffcf64a358d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e375e410-7d36-4bfc-b893-2d6b64bddcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d52a2aa-4de5-4855-be98-1b0aabf7b270",
        "cursor": {
          "ref": "6f61c90c-29b7-44c6-9b6e-cbab7af83664",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e0b68461-71aa-464c-87c7-ddbf64e9fa0c"
        },
        "item": {
          "id": "7d52a2aa-4de5-4855-be98-1b0aabf7b270",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "71fd8962-5c3a-478b-be68-82c4dad30d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49515e7d-2a2f-4971-8171-a59fc38de23c",
        "cursor": {
          "ref": "d7fc1038-8ec7-45a0-88ae-372f66c39398",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a8b8381c-f289-44b4-a26f-039d095441e9"
        },
        "item": {
          "id": "49515e7d-2a2f-4971-8171-a59fc38de23c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c585172f-3fcf-4bd1-8e7c-0fac97aab1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed97518d-6f3c-42d3-84a2-957d42f1fb48",
        "cursor": {
          "ref": "12024f44-96fa-4084-965e-33f022c9605e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e0ee8bf2-0c77-4413-ad34-65a38ca6a7b3"
        },
        "item": {
          "id": "ed97518d-6f3c-42d3-84a2-957d42f1fb48",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "919ec312-7543-4d6f-91d2-e10ac3fd0c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5910359a-ba04-483d-bb24-301e0058fa62",
        "cursor": {
          "ref": "305b0bd9-5b0e-4510-97d5-4a2a5120bed1",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c163cbd6-05a6-400c-bac2-6be3273b66a5"
        },
        "item": {
          "id": "5910359a-ba04-483d-bb24-301e0058fa62",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "89deb6a5-ae0d-4d1c-98b2-3c01d86bf587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53bb968-d250-46ba-ace2-c74f83706c60",
        "cursor": {
          "ref": "397ff46f-9fb3-4ffd-8e2e-ddb4368e6277",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2d3e221f-2704-4012-b381-514f378744d7"
        },
        "item": {
          "id": "e53bb968-d250-46ba-ace2-c74f83706c60",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bde4eeb4-59aa-4260-915f-0a35c799f5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8f11eb-fe6f-4ac1-af2c-bc05443dc87d",
        "cursor": {
          "ref": "7c1c5bd2-81c9-47f5-b82f-41c21612edc9",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "61ee42e0-c445-4320-9ede-f1a3a20b5d7a"
        },
        "item": {
          "id": "de8f11eb-fe6f-4ac1-af2c-bc05443dc87d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2c526ae4-13be-42a0-a23a-2c229b79ada5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044c3977-6926-488e-b695-5dcc61bbf9eb",
        "cursor": {
          "ref": "dddc5f91-c69e-4a62-b451-498c1e0ac1f9",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2069207c-024f-4fd1-b639-4e8e4bb5492f"
        },
        "item": {
          "id": "044c3977-6926-488e-b695-5dcc61bbf9eb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "55949532-f5ea-48aa-abf4-1c2b23e1338e",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "ad47ceb6-5029-49f4-8705-ce5b9a390b6a",
        "cursor": {
          "ref": "48920cc8-a899-47f8-9fb5-2fbc0b22664e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d916b503-5208-42a5-a071-bbb65d5c55fb"
        },
        "item": {
          "id": "ad47ceb6-5029-49f4-8705-ce5b9a390b6a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7cb7cac3-34f0-4ac4-86f7-a908bc227b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4b7a6e-60fe-4c77-8a69-2243ee864d55",
        "cursor": {
          "ref": "eabf98d6-a95c-4c21-90d2-5a242da89f9a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f6bcbe53-6668-41d2-9d67-89a723fa25e0"
        },
        "item": {
          "id": "dc4b7a6e-60fe-4c77-8a69-2243ee864d55",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d5a39ccc-f91a-4761-8782-42703115359b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c019b74-2230-494e-87b9-5f4b2735f970",
        "cursor": {
          "ref": "1fc84f42-2326-4b99-a4c8-7df0d4c7a6cd",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a86c4180-0e5e-4aca-821c-5697dc8877ea"
        },
        "item": {
          "id": "6c019b74-2230-494e-87b9-5f4b2735f970",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9868e908-4b8a-4d93-adeb-1112db29e45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d3a23a-de6a-4abf-aaa7-ddcb6b003ea6",
        "cursor": {
          "ref": "936fc16b-2265-4b05-98a4-9d081019760d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f2548353-2ec8-4b69-9bf9-4758167c93f0"
        },
        "item": {
          "id": "36d3a23a-de6a-4abf-aaa7-ddcb6b003ea6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6c735b94-4f5a-46ef-8777-24e95babb11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8749baa-0e82-4a41-9775-dfd3b56e5de6",
        "cursor": {
          "ref": "aa6620bd-81ca-4898-a0bb-465974dcbf71",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "89488050-9730-4be9-9dbc-16a95ada0ec8"
        },
        "item": {
          "id": "c8749baa-0e82-4a41-9775-dfd3b56e5de6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8eb4c56b-8a35-4e3e-ac2c-d86460e79824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3203105-0e57-49e7-933b-6a241f0525b6",
        "cursor": {
          "ref": "bdb9b1b4-e1f0-42ed-a9b8-460af5d4f1c8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "314a544e-11ae-4514-9182-1deeb6ec8046"
        },
        "item": {
          "id": "d3203105-0e57-49e7-933b-6a241f0525b6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3347b89b-1b3c-4306-af4b-ce7bc951b467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b32cd79-573b-4f3b-bd96-a04b6dd8e01f",
        "cursor": {
          "ref": "2a6589f5-ac54-4a82-b922-2869c77798c1",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b731240d-e8c4-4e01-9154-fad5b4e08e7e"
        },
        "item": {
          "id": "5b32cd79-573b-4f3b-bd96-a04b6dd8e01f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5888afac-58e8-466c-8ab6-c36afa83aed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f543bb-b006-4d0c-875c-0fb4f317e6d7",
        "cursor": {
          "ref": "cfd98bf5-420c-4d92-81f5-4c5bc43275bc",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5190880d-bbdc-46a1-bdfa-490e66e232ab"
        },
        "item": {
          "id": "48f543bb-b006-4d0c-875c-0fb4f317e6d7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "36cd1be6-f1d1-4707-9710-ed0df605f7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cffbc9-e86f-4601-b798-0831fb52d4bd",
        "cursor": {
          "ref": "f475f470-ccaa-4688-b7b7-fe98151dae98",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5b40dd6b-8fd4-4552-a274-a4a53f9d9f70"
        },
        "item": {
          "id": "15cffbc9-e86f-4601-b798-0831fb52d4bd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b3d5b8c9-15f3-439d-8898-d60c88f8552e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92adb194-cd85-4449-ae10-27be84cfca46",
        "cursor": {
          "ref": "24f352d7-6eec-4f03-b571-12435386c024",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c82e4dce-99fc-4609-874b-2ff2c74ff057"
        },
        "item": {
          "id": "92adb194-cd85-4449-ae10-27be84cfca46",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9ce243e9-6b4c-42ce-ae96-d505fd0bfb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ed4d45-8381-472c-82f5-ed1989576ced",
        "cursor": {
          "ref": "99474f7b-19c9-4c23-825b-d01218636bb5",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0ea0e89f-1d84-44b5-a7ce-168d52490902"
        },
        "item": {
          "id": "f9ed4d45-8381-472c-82f5-ed1989576ced",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8d82165a-3dfd-4ee3-9a9f-8ce3f60b27ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce40e1c-9ac5-4e25-b441-5d6d3fe3ee75",
        "cursor": {
          "ref": "e02f3104-ba70-4d66-9a61-5876594af515",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f6c9b136-01bb-44eb-ac6b-10a8ec03fc94"
        },
        "item": {
          "id": "8ce40e1c-9ac5-4e25-b441-5d6d3fe3ee75",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "939a2726-6f90-46a5-abdd-52460c889f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f74ced8-87b8-41ca-9662-740b4891adcd",
        "cursor": {
          "ref": "831fc9c0-b235-4f4d-9393-e4d57d84ab22",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "971217fc-c1ab-4edb-af02-7cecc1c140dc"
        },
        "item": {
          "id": "2f74ced8-87b8-41ca-9662-740b4891adcd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "06261461-2865-4329-b273-e4e080370066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a2aaa4-dfc3-4c8b-9fcb-91b7cd7ef6da",
        "cursor": {
          "ref": "abe9fecf-c020-493f-b51a-3839f8cd0cc0",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fbbd839d-f1ff-4936-953f-a415cfa7ec34"
        },
        "item": {
          "id": "d5a2aaa4-dfc3-4c8b-9fcb-91b7cd7ef6da",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "037bba33-43d2-4d7a-9bac-67d869dd3ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d647798a-3362-4181-9570-3db64f0914df",
        "cursor": {
          "ref": "40d9a9a9-f86d-48c2-bdbf-66af46907d63",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c2388434-4250-4df5-92ec-2e296e27c106"
        },
        "item": {
          "id": "d647798a-3362-4181-9570-3db64f0914df",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4c46cd80-e466-4eb8-b067-319cb5404d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1644b1-f2d6-4e4f-b2e6-d8f2cbdce48e",
        "cursor": {
          "ref": "e6ec23a1-217d-44a2-bab8-9e5e2699b835",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7eac570f-2553-4e9b-877c-141ae51e0cb3"
        },
        "item": {
          "id": "9f1644b1-f2d6-4e4f-b2e6-d8f2cbdce48e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8b0e5909-647c-40e6-acb2-c745cfed942b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a740e02f-2c12-4aab-b96b-c9764d2cea00",
        "cursor": {
          "ref": "8cae0b66-ae2c-4070-b955-5efe99f68f93",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0f053ed2-6e73-45b1-857b-d65c1e186d63"
        },
        "item": {
          "id": "a740e02f-2c12-4aab-b96b-c9764d2cea00",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "171d5a7a-1cdc-4b13-8fee-e887e10b1ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596a0ebd-dd09-42af-888d-5f52c1f59e92",
        "cursor": {
          "ref": "30678738-040f-489b-8f92-41255223b5f6",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "36e08103-0ae0-4ffc-b9a6-6c77597075b8"
        },
        "item": {
          "id": "596a0ebd-dd09-42af-888d-5f52c1f59e92",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0fedc66e-1ac5-419e-9879-28fefcb9c2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e6cead-007f-4c21-ae98-651431555f0b",
        "cursor": {
          "ref": "d85ead78-2754-4b0c-9deb-1911528c2b75",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "21e50977-b19e-49c9-b369-e23b34bb3559"
        },
        "item": {
          "id": "55e6cead-007f-4c21-ae98-651431555f0b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2a81be48-4f6d-4629-af25-a30f6dd25554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf75532-8fce-42b6-b93e-f4dc7278be79",
        "cursor": {
          "ref": "3f2ec66a-abc3-4d3b-bfb7-0fab6edb4640",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "33e60d2c-6035-4f58-90c6-9d27c9bf9c41"
        },
        "item": {
          "id": "fbf75532-8fce-42b6-b93e-f4dc7278be79",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0e02f816-b4b0-4ab1-85a7-4375a8186b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4abda93-2b8a-443a-b1a6-3feea3e6e6d1",
        "cursor": {
          "ref": "026bbf05-38c0-42ec-9e1e-ca69fce4de91",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1d2175ec-cdc9-445b-8fd5-b1b298437621"
        },
        "item": {
          "id": "c4abda93-2b8a-443a-b1a6-3feea3e6e6d1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f6f7bb71-c542-4718-89a2-df0d9b3b4dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a3fe24-5e94-440d-83ad-32a4e22a00e2",
        "cursor": {
          "ref": "ab5ba594-95b1-49d2-8c48-ab4e901b02de",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "36905f76-1870-47e2-a566-89bf4dbc00fc"
        },
        "item": {
          "id": "89a3fe24-5e94-440d-83ad-32a4e22a00e2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a6c1e58a-1e4e-4a87-9b7a-318427dd54d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21a95da-e856-4e1b-9d84-5a2334110c45",
        "cursor": {
          "ref": "7413407c-7917-4c59-85b4-b6c582fe93b3",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "684e9017-3e5c-435e-87a2-89425558c1cf"
        },
        "item": {
          "id": "f21a95da-e856-4e1b-9d84-5a2334110c45",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ee4f215a-3e2f-4e3e-91d7-332333de2eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7963ed9-b6e5-4265-8500-f19888e56301",
        "cursor": {
          "ref": "08d12134-50d3-4d47-8a12-440a3ec2db9e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "10d716d8-5ee4-4677-8b7b-297e109590f9"
        },
        "item": {
          "id": "f7963ed9-b6e5-4265-8500-f19888e56301",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d8d4bee0-b628-4eef-9f99-27a009fcc677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68ce8cb-31b4-40c2-9def-df09096d1185",
        "cursor": {
          "ref": "dbe9111a-880e-4af0-8a60-08c46e037013",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "52dd3c62-a8ff-4cf5-bd32-dadaf3a445a0"
        },
        "item": {
          "id": "b68ce8cb-31b4-40c2-9def-df09096d1185",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1f88e5da-5934-40f4-81b8-fca98d81e0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c26722-ff53-48ef-8262-ada4b7e4a528",
        "cursor": {
          "ref": "1b55966a-a6d0-4619-b06e-56535edfd29d",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e94adb91-7f1f-4103-846e-1f5266d02b68"
        },
        "item": {
          "id": "48c26722-ff53-48ef-8262-ada4b7e4a528",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0e5eceab-a951-4304-b2c1-4dabc6d8d955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566e40f5-739c-4f3e-a24b-204d2429fffa",
        "cursor": {
          "ref": "329fe5c0-940c-4881-9faf-fb1194066d1e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6fbd5aaa-23c1-4ad5-aa33-3a1daed2d4ed"
        },
        "item": {
          "id": "566e40f5-739c-4f3e-a24b-204d2429fffa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b4ddb5b5-4594-4c64-a364-a8c52a7769e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232a0e73-59a7-46b1-9267-68577b96c963",
        "cursor": {
          "ref": "a5d7fea4-26c8-43bb-91b2-326938136411",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8c136089-17fb-4b3f-875d-8a9508fa6ad6"
        },
        "item": {
          "id": "232a0e73-59a7-46b1-9267-68577b96c963",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b6b0abb9-3174-4cab-886e-b88819359337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badb6388-b75e-4ded-a01c-107b97f97ff8",
        "cursor": {
          "ref": "0391d754-de79-4077-8126-7ccdcdc84ea3",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fdabbc2d-4473-4bb1-8668-30b2b992c50d"
        },
        "item": {
          "id": "badb6388-b75e-4ded-a01c-107b97f97ff8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6548e7e5-505b-4e7e-87e1-a53399305c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2732619-c3e6-45e2-aa8c-1b25fbd5240f",
        "cursor": {
          "ref": "7f568d77-cbc3-4fc7-ab2c-315ec33cd5e1",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c6ded378-1370-4221-9494-fefeb11ee244"
        },
        "item": {
          "id": "a2732619-c3e6-45e2-aa8c-1b25fbd5240f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "def3bfcc-7647-4cab-9dcb-14a14a128c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3628e9d8-e8ca-493f-b757-3341623f3cc5",
        "cursor": {
          "ref": "27010ba3-2e98-4dc5-9342-d0fb72effce9",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4ce65208-9f5d-4754-ad9e-053e41be5682"
        },
        "item": {
          "id": "3628e9d8-e8ca-493f-b757-3341623f3cc5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b6a80bae-9420-42b8-a0cb-d364796d2ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d034d6e-f0b1-4a8b-8fbc-22e0c4dfc339",
        "cursor": {
          "ref": "b6f22e44-8adb-4cf2-b578-4f7bd37975e7",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2be590d7-6ecc-4214-bfbb-07ddec60c5c8"
        },
        "item": {
          "id": "3d034d6e-f0b1-4a8b-8fbc-22e0c4dfc339",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c56f9375-7482-4f90-9d0c-884f6fb80d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6cb2bc-418c-47f2-bc76-8414f7207b5c",
        "cursor": {
          "ref": "01361e95-79cc-4133-89f9-a46e74978c20",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "62161228-6428-448e-bd57-caebe6cf96e9"
        },
        "item": {
          "id": "4e6cb2bc-418c-47f2-bc76-8414f7207b5c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "caab7205-1c2d-47bf-ac3a-031f7c4af1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587712fd-a581-46d0-ad99-d3b05cddf983",
        "cursor": {
          "ref": "a8204542-9bec-46be-b8a4-522668a62f33",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "57dc8be8-6920-4201-a360-fb94d4c9b75a"
        },
        "item": {
          "id": "587712fd-a581-46d0-ad99-d3b05cddf983",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4b0f1323-bb3e-403f-841b-37affcd12e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d35c2c0-0456-4a60-a19d-dcaca238ff28",
        "cursor": {
          "ref": "54c60a54-6c13-4207-9747-e93df959e81f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d68da925-ebaa-428b-89cc-a6ee23c16f06"
        },
        "item": {
          "id": "7d35c2c0-0456-4a60-a19d-dcaca238ff28",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3c936886-839a-4f7c-95af-319c8ca7fda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0d903d-277b-47a3-bfba-81927295dfe2",
        "cursor": {
          "ref": "838739c7-639f-437e-8ebf-04749e264c9c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "64c7a1a6-cbed-4375-bcce-90ec6656d429"
        },
        "item": {
          "id": "7e0d903d-277b-47a3-bfba-81927295dfe2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "167ff264-234b-4af2-abde-7081c8f99cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950c36ad-f25a-4fa1-b205-f72b5ca91425",
        "cursor": {
          "ref": "34045ab7-3e5d-4904-9921-96554188d2dc",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bce452a0-81f4-4a99-aac7-b1624dee6774"
        },
        "item": {
          "id": "950c36ad-f25a-4fa1-b205-f72b5ca91425",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3b5e7b33-1140-4deb-b23f-d6e209af858b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d849e1e5-0e25-48fb-9651-170b47d31ea4",
        "cursor": {
          "ref": "94473bcd-1aed-4bd6-b414-e4426ed7fd53",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d0582e3c-0fe8-4823-ab3b-ec17219b90e8"
        },
        "item": {
          "id": "d849e1e5-0e25-48fb-9651-170b47d31ea4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c2318bff-5a22-4980-9904-f58d594a92da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b98a35a-13ae-46ac-8ae8-8e6401d133da",
        "cursor": {
          "ref": "a02b509b-7211-4372-a2b4-fc181b080f45",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c2206f6f-65d7-4301-a517-a827e0ede9d7"
        },
        "item": {
          "id": "9b98a35a-13ae-46ac-8ae8-8e6401d133da",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b1e64961-c487-49d0-9e18-7c0abcefd04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d92d562-2cf6-4970-882a-ea1630809c45",
        "cursor": {
          "ref": "7d1331e9-5491-4acd-8f00-077c721135f6",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e24c5ff9-88b2-4cc1-8f03-fc51b1a43e85"
        },
        "item": {
          "id": "0d92d562-2cf6-4970-882a-ea1630809c45",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7fb03c70-0537-4323-8fe6-122197f91689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c63d4e-8b01-4b89-9f8e-1b19fa939da4",
        "cursor": {
          "ref": "26114999-21a2-4ab2-92f6-7c1d48d45acc",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "727807a2-162d-4bc2-ae84-9cbac7ea4eec"
        },
        "item": {
          "id": "57c63d4e-8b01-4b89-9f8e-1b19fa939da4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f567d3d0-0223-44f8-8aca-0d4c0d8f50ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237444e6-96e6-4d59-9b5a-0e9b5c9d675b",
        "cursor": {
          "ref": "29d8fb74-d3bf-4f64-955e-99da59c0122d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5051cefb-f6a9-4f78-9d33-2591877b3afa"
        },
        "item": {
          "id": "237444e6-96e6-4d59-9b5a-0e9b5c9d675b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "136407c6-9975-4dfb-b375-40396cd10fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3876a2-b751-4a12-a607-256ca83f07df",
        "cursor": {
          "ref": "375e02fc-afff-4a7d-904b-0b24b40f1608",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c9385ac8-22dd-4d35-835e-ea5e5defd74e"
        },
        "item": {
          "id": "fe3876a2-b751-4a12-a607-256ca83f07df",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c8f97185-2810-42cf-9330-0b8b6cd88155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd429ed9-600a-42d4-9f1b-69090dc00d67",
        "cursor": {
          "ref": "f5b523cd-d2a2-4f8e-83cd-0a0c7766522b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4a9919c5-c8dd-4bf0-bd9f-279334bfff01"
        },
        "item": {
          "id": "bd429ed9-600a-42d4-9f1b-69090dc00d67",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "72a3c125-fc5e-4913-a7db-f4843f412444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ec24f4-a980-4ece-9cb4-3872ed247cf7",
        "cursor": {
          "ref": "742a0a42-7837-4391-8638-6bc0a063672d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2d79d0f5-3245-4740-8535-bd1d6b86e4cb"
        },
        "item": {
          "id": "90ec24f4-a980-4ece-9cb4-3872ed247cf7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ba3dbe53-6e74-4d99-b45e-03d686104484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24722e4d-1cc6-4e76-a5eb-56eb19a997f7",
        "cursor": {
          "ref": "ce6ebcb4-2262-4c16-a010-efa56d3be700",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "47d9f9ec-0ff9-4d19-92b5-e619419c062e"
        },
        "item": {
          "id": "24722e4d-1cc6-4e76-a5eb-56eb19a997f7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d86d70b2-97fe-4ba8-8c71-3d99c936836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1280f811-9c6e-463f-9fca-785a123679b2",
        "cursor": {
          "ref": "0279f4ac-d3a6-4c1a-9811-02588c9a12fe",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "69c967f1-86d0-4f8e-afd9-f45d564619dd"
        },
        "item": {
          "id": "1280f811-9c6e-463f-9fca-785a123679b2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "63ad63e1-9ece-4e6a-9d84-13eb0967bf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad92143-ae8d-4f0d-ab0f-0a1cd77c32cb",
        "cursor": {
          "ref": "376efb5e-f543-4395-b8ae-ec62cebec15e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bc17f87e-bfca-4b7e-ab95-110b33e1f71a"
        },
        "item": {
          "id": "cad92143-ae8d-4f0d-ab0f-0a1cd77c32cb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a7758939-e75a-4ce1-8024-0e6b10c73ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2012d77-697d-47e1-8a57-e3e757d487b9",
        "cursor": {
          "ref": "ce083e8b-e8b3-46cb-aef0-8fb649c3be76",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3d92fa04-7310-42dc-b46c-3f94d20a1297"
        },
        "item": {
          "id": "e2012d77-697d-47e1-8a57-e3e757d487b9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "954c3451-93a3-408a-8fbc-de77e24bdc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b59f68-8011-4808-86ca-d0f3ab5b79f0",
        "cursor": {
          "ref": "e417f9b5-a3d3-4b81-9ac5-17eb5109629e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9eadb036-31e5-419b-8ce4-2e57741215cc"
        },
        "item": {
          "id": "36b59f68-8011-4808-86ca-d0f3ab5b79f0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "eab2383d-ddff-4c4a-b739-c4b36630af69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fe2bda-cdad-4b16-8afe-b56b2789a5be",
        "cursor": {
          "ref": "9f228fba-9951-4ca5-b3e1-acd3df4e24eb",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9dbc8ef0-fae9-4c0c-8671-759a716c5bec"
        },
        "item": {
          "id": "80fe2bda-cdad-4b16-8afe-b56b2789a5be",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e582665d-eb78-4e8b-9c16-8c62a8c53da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ddd943-cc7a-449d-bded-4f2f7d4afd84",
        "cursor": {
          "ref": "efce15e6-ee8f-4137-8f6b-be7bf627388a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c0d25f48-64c7-45af-9757-54d86e3521bf"
        },
        "item": {
          "id": "72ddd943-cc7a-449d-bded-4f2f7d4afd84",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2913004f-a2ff-4f14-8b29-8fb9daaa3ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9d5076-5373-44a8-86f3-e8d66c5f4c72",
        "cursor": {
          "ref": "686c29c8-3d64-4124-852d-68e8445ef999",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "90528905-5778-4460-85a5-67c72e0ec92c"
        },
        "item": {
          "id": "ad9d5076-5373-44a8-86f3-e8d66c5f4c72",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "956c1c5c-aa3d-4674-b565-17124e4866f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af074b47-8f93-4644-a4be-b924bd96cb0f",
        "cursor": {
          "ref": "51f730e3-eef7-4fac-be10-486dd2d2b3b6",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3293e5be-a4ad-41c5-800d-36f840b3aa1b"
        },
        "item": {
          "id": "af074b47-8f93-4644-a4be-b924bd96cb0f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "db5a5e5a-5f7d-42ff-984e-93a0b77fde95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0854278-8082-4ceb-ad8c-20149d2e774b",
        "cursor": {
          "ref": "8e6c2249-84d9-42b0-a4a9-d3c665024b76",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "965adf82-0a3b-4276-b002-d6a979272fe1"
        },
        "item": {
          "id": "d0854278-8082-4ceb-ad8c-20149d2e774b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9dd38344-3dce-4d2f-b942-3241986d793f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daf72db-0751-45a0-9437-5eb46bde74f8",
        "cursor": {
          "ref": "bbccd9fe-ab81-4ed5-8697-68a3eb95724d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5d2dcea0-1690-46e8-a01a-f1a714dd91a9"
        },
        "item": {
          "id": "3daf72db-0751-45a0-9437-5eb46bde74f8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "323640ac-ca1c-4a9d-bb33-7c1e012b3b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af930e13-b3d1-4ace-92d5-0d8a037a7d96",
        "cursor": {
          "ref": "1b69744f-9437-4a34-ad57-ffdabb38cbd8",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ca7e7380-2b79-470c-acca-3517a3ef2837"
        },
        "item": {
          "id": "af930e13-b3d1-4ace-92d5-0d8a037a7d96",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0d5eb637-b20e-4496-a43e-4f9833e48c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d31683-01d6-4c6d-9e87-24d729028c27",
        "cursor": {
          "ref": "dd62d6cb-b789-4b68-a415-4482acabab3f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "21a1ba59-595b-4e4a-a26e-343fb36f63b8"
        },
        "item": {
          "id": "96d31683-01d6-4c6d-9e87-24d729028c27",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "de22c829-f3ce-4669-9a8f-e0303a801be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f24a4fd-0e2d-4e4e-896d-3825f4585ee4",
        "cursor": {
          "ref": "9d23315d-ff48-4de8-90cf-69f57539616a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0584814c-8646-48d3-9f06-b0ddcad1df31"
        },
        "item": {
          "id": "0f24a4fd-0e2d-4e4e-896d-3825f4585ee4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a170a2b4-f7cc-4790-bb0e-f1e77b0b92d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd843e5-9e3d-4400-a66a-6923e47443da",
        "cursor": {
          "ref": "f451e265-fd5f-46c4-b000-e6162a73c240",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2da9e830-8a63-4956-ac07-211414555b42"
        },
        "item": {
          "id": "0fd843e5-9e3d-4400-a66a-6923e47443da",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8d0da955-9be9-4594-8aad-80a15dd4fcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d64aac-d38d-4e27-ae15-f7fc23de893b",
        "cursor": {
          "ref": "61dc3f78-205b-4bd6-8683-644d1dbf5e23",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f436bcb8-6f39-42c5-a0a9-c5121d68ea6d"
        },
        "item": {
          "id": "60d64aac-d38d-4e27-ae15-f7fc23de893b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8f949dd9-1dc5-4fd8-8414-7208f130e545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f813034b-0e2d-4906-b120-0cc553163bdc",
        "cursor": {
          "ref": "e3074e31-9076-40cb-b6cb-6a65b2ff1b87",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "25b1ac73-97d0-44c8-9e62-034c776d7f32"
        },
        "item": {
          "id": "f813034b-0e2d-4906-b120-0cc553163bdc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5f883ee6-5db3-425c-a869-de49b87cbdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ffb9ab-813f-4c24-ad55-6c111900826e",
        "cursor": {
          "ref": "b20e354d-7fd5-4007-8f81-ddc2cb97f4c0",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "dc2d0378-d442-4b96-be34-421810a5fdbd"
        },
        "item": {
          "id": "14ffb9ab-813f-4c24-ad55-6c111900826e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cfb2939c-f9ea-41bc-b69e-54876fc629c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fca8d60-179b-44ac-982d-e400aba88714",
        "cursor": {
          "ref": "d7344183-cf4e-4082-8740-427fccae4d67",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3987a4e2-621d-439b-90c7-332cfbc08e15"
        },
        "item": {
          "id": "4fca8d60-179b-44ac-982d-e400aba88714",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dd838579-9d22-4fc0-9e93-d38cda94ee06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df03789b-a9d4-4eb7-87bd-66b8a538d04f",
        "cursor": {
          "ref": "22f6643f-65be-4a61-a5e3-35aec4a2c41d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ceeeb9dc-38e4-4290-886b-19c757688522"
        },
        "item": {
          "id": "df03789b-a9d4-4eb7-87bd-66b8a538d04f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3a048c16-d538-4268-964b-440bc002e3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b041805c-bdee-42e3-b114-ef880e25d0a5",
        "cursor": {
          "ref": "26680ae7-928a-4d6f-be34-a3476f4394c3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bb13c460-3a19-4586-a912-b42c5ef39caa"
        },
        "item": {
          "id": "b041805c-bdee-42e3-b114-ef880e25d0a5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6ffc38e4-733d-40d0-83ff-f281957957be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d192cb8a-8794-42ff-b677-5767573fd3c5",
        "cursor": {
          "ref": "817cd001-2096-4dec-9a8c-f92d5e00640a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "565437fb-eeeb-4e4c-882b-d45ff6e0afff"
        },
        "item": {
          "id": "d192cb8a-8794-42ff-b677-5767573fd3c5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4cfcbb59-65fc-4169-b141-5a88f06e5d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ab5ca4-caa3-4228-8334-df1c325f8230",
        "cursor": {
          "ref": "b8f7680f-68a3-4b81-9fcf-e557ce931b0e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "85162632-3d08-499f-82ae-ed63c32929cb"
        },
        "item": {
          "id": "66ab5ca4-caa3-4228-8334-df1c325f8230",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a3277869-30e4-4c4a-bb22-6d1da4c0e6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e91ed2-2ec4-41b0-9f87-cec9eca29803",
        "cursor": {
          "ref": "37661478-ea41-4efb-a061-74e4d49eaeb8",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e5860bcf-43a7-4332-a484-f2142caaf30b"
        },
        "item": {
          "id": "f1e91ed2-2ec4-41b0-9f87-cec9eca29803",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4a37e5c6-05b9-4e02-bf79-7af401eaa014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953100f3-459a-457c-8766-1c434ef027f9",
        "cursor": {
          "ref": "71502966-7868-47c6-ab11-50d57883cf73",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "94441b8c-09b4-4a57-83fd-4030b013e64c"
        },
        "item": {
          "id": "953100f3-459a-457c-8766-1c434ef027f9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3123cf6a-269a-4ed5-a0d6-8e785cf7770c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560cf6b8-f684-4be5-a04d-8c6c867dbc8d",
        "cursor": {
          "ref": "c17f0421-b437-4ad4-a621-306100dc512e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "72294ed9-9546-418b-942b-151fdb69caed"
        },
        "item": {
          "id": "560cf6b8-f684-4be5-a04d-8c6c867dbc8d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6034084c-6bd4-480f-99ac-dc84a89e0586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b797756-ac40-490c-a4e5-577d119ea1b0",
        "cursor": {
          "ref": "a159d832-fe6e-4f74-8e51-a8a108d4ce13",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ca4b8f23-7ed4-4a64-a63c-4e075b729cb8"
        },
        "item": {
          "id": "8b797756-ac40-490c-a4e5-577d119ea1b0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b00605b1-a569-4bfd-8a6c-399003b5d6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b416e24-8aa5-4944-94dc-bfa630f9d4e8",
        "cursor": {
          "ref": "b72a893d-c835-4dbd-851a-843a84ed718b",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ad87758b-678b-497f-bf22-365866299750"
        },
        "item": {
          "id": "3b416e24-8aa5-4944-94dc-bfa630f9d4e8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b414b860-c2bb-4844-834b-fe219181dcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3510b16-8086-4056-8958-0353d44e1ebf",
        "cursor": {
          "ref": "b6a11bd2-47fe-4c2c-b942-bc63751f2455",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d0a9616b-a441-4ca5-bb56-af53cc7a6125"
        },
        "item": {
          "id": "b3510b16-8086-4056-8958-0353d44e1ebf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c6065cf1-4904-4bd6-af93-746ed4ed5c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddad1c1-8ed8-4753-849a-2019bdab38ac",
        "cursor": {
          "ref": "40bbe0b9-83ed-4c61-b173-66681b2b1204",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a28eefff-0aea-4009-9771-44a9409f6dbc"
        },
        "item": {
          "id": "5ddad1c1-8ed8-4753-849a-2019bdab38ac",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "107ec121-3214-44b0-a828-d2a3a7a2b24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b982622c-e1b1-4c00-b989-3e5b9ffbca5e",
        "cursor": {
          "ref": "c82d774d-5614-4930-9a4f-2c39e381df69",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dbed9e36-7c7c-49b1-a7a3-38061c5d9a0f"
        },
        "item": {
          "id": "b982622c-e1b1-4c00-b989-3e5b9ffbca5e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3ac961fa-f67f-49c2-8a9a-7c8195958aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08c0a93-a130-4698-801e-0b6d556629ae",
        "cursor": {
          "ref": "27633409-f8f0-4c4d-afa9-c04495b42311",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fc566c03-3502-4a91-8fae-82fa6d2ec952"
        },
        "item": {
          "id": "d08c0a93-a130-4698-801e-0b6d556629ae",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "176ef327-0bf4-4904-a8cb-9776e71cd233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0989ca6a-94e2-4396-b235-b552ab5813d2",
        "cursor": {
          "ref": "3d0e7057-d768-47ed-9771-9279d07374a5",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f0f0ddf0-5ee6-4ca9-a187-a7886824ac26"
        },
        "item": {
          "id": "0989ca6a-94e2-4396-b235-b552ab5813d2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fbd1a950-b61b-46fe-932f-5a378253068a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142cb45e-ab47-40c7-b3d2-944e83b435f8",
        "cursor": {
          "ref": "f54b2ec8-7ea6-4089-a3be-4495b1170f84",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "20504aa8-5e75-4581-8e0b-ebf674e5bd6a"
        },
        "item": {
          "id": "142cb45e-ab47-40c7-b3d2-944e83b435f8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a9c8e5c3-4973-4af5-8a8d-86175b7e682e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d6b0d5-1b2a-4030-8b6f-7e8518d6184d",
        "cursor": {
          "ref": "b1d250dd-6115-4944-b922-39c7c574944d",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5a52b5ad-6dec-47be-ba67-6ba9ea2b074e"
        },
        "item": {
          "id": "27d6b0d5-1b2a-4030-8b6f-7e8518d6184d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "87d19c71-e4ab-4aad-87fc-fbccf3a3fa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96723f28-28bf-4401-9147-8d8bfd46bfe5",
        "cursor": {
          "ref": "9c840e22-a010-49c3-bc03-220b9a78c86c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5b27514a-46fd-43a4-a2c0-776c7114cf4d"
        },
        "item": {
          "id": "96723f28-28bf-4401-9147-8d8bfd46bfe5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eac24bf6-bf96-4e7b-9413-8972fd0d0dce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8955ab-0966-45e0-a485-fd990fac7a54",
        "cursor": {
          "ref": "966441fd-1bfd-47e2-b27a-5a12bc2b00ea",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "366b6914-0c21-46c1-8d71-4064deea93e7"
        },
        "item": {
          "id": "cf8955ab-0966-45e0-a485-fd990fac7a54",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ca9451d8-6df7-411f-a840-8106db06d95c",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "46715ae3-3954-47c5-9f65-9009ad472dc8",
        "cursor": {
          "ref": "dae9a76e-d1a3-4c9d-aef1-891cbfe1a1c7",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9dd476a9-0caa-4993-bad8-57efb6106cd9"
        },
        "item": {
          "id": "46715ae3-3954-47c5-9f65-9009ad472dc8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3865162f-f5a5-44c5-b21b-e9baefe60b62",
          "status": "OK",
          "code": 200,
          "responseTime": 3373,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1fda81-6ed6-4805-aad6-86edbd0026c2",
        "cursor": {
          "ref": "a2077f99-1dae-4f3f-be2a-517b11c0c41c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c1a3df87-fa94-487e-8858-d92360578f29"
        },
        "item": {
          "id": "ae1fda81-6ed6-4805-aad6-86edbd0026c2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "45c52cd6-ac7d-44a4-83c9-18f6ae3bd292",
          "status": "OK",
          "code": 200,
          "responseTime": 2116,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43bcf41-1b0d-409a-810d-e1b9d628a2ba",
        "cursor": {
          "ref": "c3251311-8302-4f3a-a18b-b8f107dca1b8",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "01f3be9d-9bcc-4bd1-8cb7-fd0a2d12a247"
        },
        "item": {
          "id": "c43bcf41-1b0d-409a-810d-e1b9d628a2ba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3413e49f-4890-4394-b724-cd618d860e4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43bcf41-1b0d-409a-810d-e1b9d628a2ba",
        "cursor": {
          "ref": "c3251311-8302-4f3a-a18b-b8f107dca1b8",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "01f3be9d-9bcc-4bd1-8cb7-fd0a2d12a247"
        },
        "item": {
          "id": "c43bcf41-1b0d-409a-810d-e1b9d628a2ba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3413e49f-4890-4394-b724-cd618d860e4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b0485d-4a52-4c5b-b2a0-5b5513d77832",
        "cursor": {
          "ref": "f731169d-55f1-4814-9022-74338c0b49d1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b154369d-8418-4d1e-a741-c191c589e2cf"
        },
        "item": {
          "id": "12b0485d-4a52-4c5b-b2a0-5b5513d77832",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a4eb30fc-7fae-42f6-ae99-3f6100faa336",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eda3ea-4a41-486b-a19c-b34542f33ec0",
        "cursor": {
          "ref": "7ffbfa57-010d-4920-a74a-6d44971cf69d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "aaa55ab5-232a-4ada-b754-e0d5058e4d6a"
        },
        "item": {
          "id": "c5eda3ea-4a41-486b-a19c-b34542f33ec0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fcbd88d0-72a2-4f8e-9ebf-8ff7a2a1bbeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}