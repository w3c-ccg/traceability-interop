{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3644c478-6785-461d-871b-ccb5b6efc7e4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0d734c57-e9b0-486b-b99d-52f35aa601a8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38299aae-cdfb-4e80-8ca0-974bbd930d9f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3525f834-f8e8-41c6-a7cf-fd09acb567b6"
                }
              }
            ]
          },
          {
            "id": "12eadb55-8f51-4286-a3e5-8ed81f3d9286",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f03a019-08fa-4cd7-9000-b25f8aba3b8f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e08b4580-8844-435d-b609-26efe8090df4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e222be1f-ead3-4470-82ba-c7abf9b3f9f2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4c3e404f-7e32-456a-9577-9e4b022b2209",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3610cbaa-21fb-4768-9cb1-0d5b67a85dd3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f36ed249-e78a-4df0-8945-57d8c3db5203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bd83129-c569-4dfa-b1a1-8465e253c2f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7485f03-cc18-4b53-8af3-d20f6ede4973",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc44d5ef-433b-4fce-9d88-cd0cbf403c23"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8da11b6b-187f-42d5-b3a5-b5ddb3e6ac71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ebb7a03-8ac7-4163-9ade-cc68c19d9040"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32739741-13b1-460d-b75c-050e67ef1b09",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3a0cb79a-8e85-4a85-9cff-1d88cb4c2069"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e2e07e2-d96f-4b9a-98f7-d358a69a812d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cddbffd5-9547-4b8f-bcb5-98e72f494a1d"
            }
          }
        ]
      },
      {
        "id": "5618fd9f-9138-443f-b225-81c250fbe043",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "054719e2-b208-4890-b045-2b578bcdc41f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63a05370-b283-481c-a517-5e90caf35378",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "35583882-0efa-4673-9e97-2db9a211f68e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcc0752-8bb7-4767-8054-79bba40a34f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d06c221-b224-4049-b019-8464690a8390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46101666-9946-4a1f-ab3a-c0eb244db997",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5874051-7477-46ab-b7ac-305b1e756819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44b958bd-929e-4eba-8fe8-bd4ee0d23713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6665ea2a-c004-4c71-9419-2995159267b0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc63dd45-ba97-49be-9773-2b9209bc0775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "319bc8fa-0855-4b54-85e2-8d917057ac95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25c45c0d-7597-44f2-9b31-06eeba180f90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70036a39-0f8a-48cc-b1d1-033ca9d9b442",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d2069e-1e11-451a-9f06-dcd3ff21f1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c70c969d-3b88-44d8-8267-007a9f30bbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc920f5-70fb-4d93-978e-f04340a5bdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff571e32-192d-45d4-89b6-88449e142ca5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3e8d15be-80d9-47e4-bfc7-cdb9b81cb8b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eaca774c-5755-4d5b-8f55-ce7afe19e501",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1113c0f2-9d51-47ff-8dea-99edbf874ce4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c3275744-2011-48c0-8c7d-fee6ae48a416"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0eb9591a-d31d-4c7e-8d2e-5c2ed37b10c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5b3c12eb-4723-480f-80a0-b368c18688a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f64e5ac2-7860-49d7-a123-b55114d4c083",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d716637b-ff1a-4e73-8c2a-57b2c4e463d8"
            }
          }
        ]
      },
      {
        "id": "4d03d6ef-2d32-4a62-9ecd-ace292af2249",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4094bbad-bc59-46a7-97f5-057b73c141bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "047d7e78-9547-4c66-bd2c-a3018af7446d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9a591474-384b-4447-ab69-becb82c05338",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d68ed6d-0a3b-4419-bed5-efb910edb0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e84cfb-9e00-4d1b-bdf3-b3f2710feeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250e7cc6-fb85-4556-abc2-d093610509a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5602760-cd4c-4e8b-8634-78ca920ed93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4905c659-cdd2-4313-8fea-def90772d75f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586945dc-67ad-43a5-a981-fdb145e8927b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745b4148-cd50-4131-8a4c-59b1ee281ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad0f5f2-a097-48a8-895e-c2d4706375b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e53f79ad-f9d6-4088-8a88-f6d99a6ed65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e57bb6-1411-4f07-ad26-686f1f8a101b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69225dc-d806-4b35-a44b-f7f1aa25a7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3c3509-060c-4886-bee2-0bbcdfa2fc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c1e514-362a-4082-9d36-e9076c1a12ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a02dc74-fe58-4480-92ec-12aa3b60e082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebccd113-6149-4b12-8255-018e4a30ba06",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70590f03-6506-4182-ad75-461de53d0d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac89ec2-adef-464e-890e-89ebc9488061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4f32dc-4868-4164-b14e-1221ea569e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b346447-f240-45a5-86c7-500d905fcf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb0d4ad-b567-47d7-87e0-0d8c4972b600",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294e7337-dd7c-4950-8a79-3bc2ae3906b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac6a365-c9d1-46e2-9aad-27ffc6083eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79fd7ad-15c3-4fa7-be6c-1986b9c5962b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b726499c-370a-4f62-9ada-761083838908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9198b7-6461-4e24-bf8a-ccadb4430a1c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad69c8f-e882-49c3-a4c1-9979966129d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e639169d-8822-431d-a1e7-5a3e66982bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a30d135-94c6-410f-b744-2cdd9853e5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f9e17a9-f49e-45a3-8233-d702b5aa160b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6f2797-a153-4c0c-abf4-74cb61c89574",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fff6aa0-896c-4d1c-8831-05da3d02cf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a982afe9-f7b9-4761-b5e2-1953b2eb27dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b7acc4-6aac-4bff-8292-bf9af0dc71ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53095a57-541e-4561-856d-04280e0b00f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc8f9a2-973f-4600-8c79-6154cacf3120",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bc4373-096b-4f49-ad49-f1644194fcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a430ea6-cc77-4ad9-9712-fdced8040814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c8b43d-a4a2-40e0-8d81-06991cc58054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8550bfe8-806e-4b36-b317-6968f370fabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1716e7b-af30-4c90-92f7-adc42669de7b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f10d920-9567-4917-a67c-b3d116e76dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23bb5fa-4780-4abd-be20-b1118480b35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff078ad1-c8cd-4b5d-b953-fc302c68ca7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59dbd2b7-c3fb-42e3-97ee-3ff10a7642a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13973d44-daec-4bf5-b52f-19e83511fb37",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5570f1ac-eb26-4c4d-945d-b5efbff95751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28334822-ca58-4976-a2f5-b1c40179af09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb7cdb0-8980-48bd-bf7f-0ddbac46b7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d85e1360-42d0-4d47-9508-85d3bf429703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f359308-b553-46ce-81e9-6e53be74c613",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4df084d-2695-4909-8881-83f376e7aa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a551c80b-d3d4-4a2e-9a97-7d51454354b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29010b35-adb3-4c7f-be1d-c046407fa9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1669a405-8d48-4c08-99ec-aba90351e08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1693fcd-6957-4b3c-a069-c6145d6c7557",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4ba29b-55d1-48a7-b049-baae2df59964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d988748-70a0-42e0-a6cb-20c47f73218d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f46202-b415-44d5-a950-72478df70703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd3dc617-b144-472d-ab5e-420e8527aec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf9f191-f656-4258-837f-82a529c8805b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703d11be-12d4-49c4-9f05-4ffab2eb49cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec8c91c-c0f4-4f08-ab4f-459e5830522c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5a0731-b4cc-4c42-bd52-981841d54e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2334746-d83d-4685-a251-09c61c564572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68827a27-1562-4c64-9d74-a5bf8bf863f8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7b01dc-54a9-484a-a9b6-e9d08f40a53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab67245c-94be-4f84-8746-8ef177e40c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444fd679-c33a-4bc2-bf91-a15173b12dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d33c44ed-d98f-403d-811a-c3d510ad1294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb5e46a-ec29-4aeb-8964-174c9f226081",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4113d43-214d-4fa7-a4bf-ad3ca6c0be1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901a95cf-d99c-4214-85fa-d04566c6c2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de5d6ce-f0ec-421b-a6a6-6c71da938efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c9ab1b9-3503-42f9-9ef1-6e58b1677296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a38fb4-19b5-4cd7-b754-9a24590ffdf3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5f8ffc-de60-49af-99d4-ad7fbf571d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a91d89-1be7-4245-8bc2-82f429702801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416e565d-7e3e-4246-aebd-2f35d293f781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "936dea88-3fa7-46fa-af25-e10fac0c116b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a39129-b93a-4b42-a8df-f10e95aa4eb6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b6b95e-80d7-4f43-88fd-2925656107d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984a30dd-4cbc-48f3-8dd8-1d89d8e3fdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2db1866-e8f6-4253-a21c-d3957f8a34d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acd56390-518d-4fef-9d44-3d29091180a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76aa0d99-de7b-41e3-8b3f-57257ecf12c5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a68ebd0-70a8-4de1-947e-44036df137a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcb56ee-4abe-4d7b-ae53-8e32e6033653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4519085-6d24-44fe-907c-413a47d3801a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8ce1f2-312c-455c-bc03-c62786037650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12b33f2-4fb3-48a6-bb52-271bf5c38475",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79de0e03-0ecc-4efa-aa1d-c07c943adfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c15f9f-e567-49e7-8dee-341830c0801f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72989e55-c252-42cd-8104-57646e670bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc9ad73-aecb-434f-9bbc-862494479cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42338024-691d-430c-bce4-14451a1cee7f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f4c662-17e2-4985-bb22-9009eee79582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7615e9fa-5387-428e-a694-5407fb132998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab8f25a-5263-41f0-8d70-e4b89d74432a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2160d9-6d9c-422b-838a-8d956a80021a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6720d4a0-ed06-4ac2-b242-d5adee9f3063",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57668e04-dab7-4140-a395-3240145bbd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfb45c1-ade2-4458-9bfc-a7ac9c9254f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5245b33f-0d9d-4766-89e5-8bd7634cede5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "114bb242-3f3e-4b30-ba97-10324fd45ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7595774-e90f-47c3-b0bd-0b29cd09b8da",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f626b69-96d5-456f-a89e-62f7d3dd4c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a3e9ba-b8ff-4902-ad75-53ae1d0564b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dc7027-abd6-49d0-ab48-da7e7d6e5804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0aca9c3-72ac-4d44-a9ff-a01787b93e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a3abd3-45f4-4a01-9fbe-c88ad8b2b54c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db31618-9331-47ab-a9c2-0a6ed5b143d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230c69e2-17be-48a1-80b0-3bb6deb21b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d5a7a1-348a-4613-a404-e221c67e29ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0640956e-0cdc-4a11-829f-bd06fd11ca64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c54c4f-b0f9-479a-94c2-6d12e41121c3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13889f4-0e9b-4320-830c-a7a0d0e5f286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da381d4-32bb-46b9-bb79-e0d58ce2791c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b4e9b1-05ad-4513-ae49-365e30517d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8d5884-7391-40a9-9b2d-3308ac886189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf89ade-1877-4d68-a0ec-faaf2835d962",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6491c9a0-0de8-42b0-bb16-906e50be2172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9692ddba-4257-42e1-a597-c2471438ed29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff70a778-a5d2-41e6-bc43-b23b449f9e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46422f36-fbac-4698-89d5-0be30f8fe3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd90fc8e-4347-4d64-9f66-6b570c02820c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9852b1-efdb-479d-b700-8d3e438040b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f503aa89-b6c8-446f-974d-ba8c3d066b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ca8997-d5db-4e39-879c-993dbe4895b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94f5eba-3966-4af8-9bf5-33467fd9311c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2159b544-e14a-4d5d-b5f1-1f21b0c8c6d0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128d5189-5dfd-4122-bb81-74226247339c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8da337-eb9e-49fe-a4a7-69a56729bb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b879e9a-0c9f-47d7-b576-423da2ce88e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7b0f54-f026-403e-bace-b4344465de38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10d0eb4-f60a-45b6-9b24-9b7172e3a806",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5191841-b66c-41e8-b462-b4c912ff8015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76f3b41-2ae0-462d-9932-14009aa7759f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df4e25a-92dc-453e-b54c-8194deac4551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "090e7df7-34ae-487e-b88f-5e3c16ec6a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f609268e-21d4-4cd7-a27c-ced701efcff4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4104b5f-0793-46d5-8982-b1ae2c49b710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b4ee4a-cd18-4753-bdad-4012247c403b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dadd71-8005-46ec-983f-b100490760a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1303c88-bd42-4f90-a36d-09670bf7f039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35109a93-7718-4778-ba14-d640b4172567",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3d9676-f337-4695-9f77-d6aec0f83d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c0db62-ac38-4b2c-a110-940c9e7cd8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1408d313-c3e1-4bb4-b04d-ea6fbc18c172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8345fae1-7b8f-49db-9070-37af53f52e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd046ae-11e2-47ba-9865-601034d76534",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e40229a-de41-4e54-b6b2-dea828c492ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332849b2-61e4-484d-a6a2-38e017c1e257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a028a31-8d8a-4f6d-a532-acbeb251721d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8def41f0-9842-4c5d-aa1a-a28583fd64a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daedda14-ab79-46c6-b570-45831384f327",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5097aaec-f35e-45b0-8bdd-813b58a8f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2bd73e-620d-4c7b-858f-42ecf6de250f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7a769e-6d10-4518-be0c-a403e62b6b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd357625-cd43-4463-9928-ac84e143ef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fe96a8-f332-4f6c-aa79-98cb40694307",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b43f43-847a-40eb-9b5f-a5005792cb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba9b5e5-f2db-466d-8ff3-67f28c4cd11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba10cf7-bfa8-4b62-89d7-28cdad469e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e462152-e4d7-46ab-8c5b-91ffd3647e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8715ede6-2471-4d32-91b5-452208756d59",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1664fceb-fdca-454c-90cb-9384c99506e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5792d9-b6a2-413b-9029-941c2746fdea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e91689d-4496-49fd-805c-5b6267dd013e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9ab7ba-d9a3-4410-890f-0d9b510e5224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8468facd-9b5e-4372-b2d0-698c0b4b8040",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0a02f0-9a37-456d-8891-12af77d9e39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961705b3-8336-4bbe-ad0e-ed6fe7f5813d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeba182a-c96a-434c-9e2f-907f43ec40b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7ee7c4-1b0e-47fd-b859-9308d09cfe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998fe098-e5b5-48c3-ada5-6d61ce886a17",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cbb174-ba88-406f-b347-81c3890f5183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93fea2a1-d258-4cd0-8c34-27645a49fa71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaee31c-7e5a-426f-9bd3-62cab75251a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75f9ea32-c027-4a18-a2ca-2884025485bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de0b2c4-0436-412f-bb3b-a5d3ec34bc66",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e73037-c1c6-4cd0-b99b-f231ec341b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c720ff7-e8be-4701-a779-28190c7acb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b47a56-7006-496d-b373-85e6aa2411ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b88946c8-b923-4c84-9870-13488e9160f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5fca26-0d47-40a0-b3b6-5410d2b67f9f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e23505-1d61-44db-9534-cf5ba0f12f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07facca4-8c88-4a75-a5f3-e2f4ced7f54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cd4d2b-2dd1-4530-898f-cf7020120f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "503cd2fd-aa0a-4e58-83f0-2a3021a9c6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa64e24-1e48-456e-93f0-e33cbd2bef34",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db16987-1c46-4bfe-b186-3b7a768dcb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d2d220-469c-4858-9a05-b24732a40720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe974d6-339b-4fdf-a20b-f1eb32dc8167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe20a5d-e496-4724-92bd-de4da3a6dcd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51859da9-d652-4f25-bf5e-d430ac9b4b16",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b50352-a544-42e5-9b09-7d590134a696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16be9f56-4fd5-472b-a444-f88f16a864b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0b82b8-51c5-4ca0-ba44-7ba176236e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0838bf-fb19-423a-9db1-766d258f28d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42192622-968f-4675-9eaa-356030064844",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087f97be-8336-45d4-8afb-8db9c8c9f5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf0350d-eb4f-4628-b67c-f5451bf58d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99bbea2-b953-415a-ba77-b8f590b5fc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a7a6dd-5006-40bf-99d1-b08cc2090cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2440c914-d5b5-4d5e-b2ff-554031e6904d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7659f2fa-acd8-4a6e-8446-945ebd2b47ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc42e2c-374f-4a36-9565-81996774ce43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada64857-92dd-4838-8e56-bb5a3af68316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d47bed-4e9d-4d20-9399-ec2ea9e66035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b15a180-e60a-4265-80af-4b12b04f413f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9c76a3-4586-44e0-8fce-dcbeb1399185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bd5005-f108-4791-8a7e-1c801bb723c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1125e4ab-f5c1-49d0-87e5-033c64eb0221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "38c3af0a-88a6-4025-83d4-dc9721216838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da622e8e-3436-4a52-8661-888e08fec9ea",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19dc307-cfb8-49bb-bcd2-6c1d6fe64fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b63a08-4a8e-488a-ac2d-c2777cc4482f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e908bd3a-a3ac-41ef-a142-483978bf88c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "aece3323-0cac-471c-8ce6-604839ee8778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7cd08a-fdbf-4c5e-bd10-4e26e7fd90c2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60a7b18-0e43-4fd0-96cc-19d20ee1cca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9346ebdc-1db6-465e-8afb-1aeccbaf8177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1ffdc0-9d36-4790-b0e5-c2fbd7665772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c58ba951-da61-4e8e-a061-87c43b5ed3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afbbd32-143f-4f1c-b3ea-a7d173cd9557",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508a19b6-dcd9-48b6-86ae-9309a274f8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac5e910-6327-4337-8de4-23f485af3fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf9c309-7c91-426b-a523-6d257e12b66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d00a85b-d8ba-43f6-8f23-6d79770d0f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef10dcbb-d71b-459f-8f0b-26a700f2c852",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681796d1-7498-4810-b7a8-e4fecb767ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b449c1-f262-471e-a09e-f25e97b92252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461a35f1-e6ad-4ecb-b637-ab58adaba869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df90efb1-33c4-45c3-b528-980bc28ed817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4e78d0-7dc6-4b16-b397-c7f86b58f5b3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc53549-0d85-4691-97a2-8eb015343205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a6a4f0-fc5f-4387-b083-4d24f46bb2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cac43b-a7df-4a5e-8337-51a90c3754fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45dac012-2ca2-4f87-94b9-02b383ebb524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9321fb-3128-4e96-82a1-94b5cb8c9560",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cc8f06-cac3-4ea1-a56c-7223ed6a63cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c8de82-f851-4cba-9216-4460a88235cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ad6a6b-b04e-49e7-ad40-d5f4466b14df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0ad120-edf0-451d-97f8-5f7be831362f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8acc1e8-e658-49e9-addc-8e70682a2723",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b6f0fc-5573-4883-ae9c-ff47674c9b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b38343-71ef-47b1-89d5-d3a49ff9c945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d56087-359c-46a3-b2dc-1433b5377409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8cdd3d-2f2b-4393-8f47-bf84c4109fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74a2ade-2f70-4ea2-bdf5-5d8495d02fba",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bf21b8-f567-41a0-8a0d-b02de946e922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2246e151-132e-4dc4-b984-2666e0bad17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8d1bb6-fd7c-4900-97f0-e24aab096189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2032ba83-6db7-4b02-b00b-eceaefde9b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02709a5-f1ce-4ed2-887f-3ac3d43ad05f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fef7e3-d60c-4e46-b295-de59cf141396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9be5f0-f894-4f9a-8b89-8fcc9cd36516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7c163b-be54-4e5b-ba1f-8a9455c4dda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b43441-82d6-408e-baf3-ce181b157f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683069bb-2cbe-4acb-b004-600c3f75db5d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfb2fdb-6f76-464e-a614-7aa954580c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e742a3-172d-47aa-b223-d392474f447e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f53cebf-4e54-4cf1-9c72-5883000b097b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74affe4b-1fff-464b-98f0-dc02c492f714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620a8826-6c33-430b-b85e-098c880cc9ac",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcbd943-1c28-4bc6-aa9b-38c0d681d0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cc98ef-3065-4a5a-a032-90aa475a00e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cb2c46-10a9-480f-a4ba-5deb5f147817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "666344b5-f2bc-4c83-8b2a-2935fd639ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3d84e0-de9c-4a54-81bf-e2d0d0aa8368",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa29196-bd80-46fc-9a6a-d8eef9a2a607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170bbaf5-7054-4d44-95cb-e0d73d8a3180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13c2cbf-8186-4fbf-a219-265280703a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d11b294b-6269-4125-b55d-c5c02daac3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386bb202-3817-479b-805f-6d8d06c11212",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03f4305-29a5-4618-aca0-e51bc6c4c7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc433f5-80d0-4d0e-8a1b-cc06c4aa8236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f53c7a-2a24-4eaf-a1dd-c0d647abbcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1b99080e-b2fb-4df7-974d-8c7d61ecbae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2de59c-3c9c-4849-a52b-007163e6f840",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57726221-debb-476a-9bff-b7151cdcc145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d758d96b-127e-423f-b77b-a447fc026031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474bda26-a25d-4c52-a0f6-4e73208b7871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4f6142-d7fa-4237-a1de-ede7841cb280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf68507-fc0f-42be-b676-ef37ff24327e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eca057a-f67c-4a66-88e4-effbf3bab7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df44f88-de91-4fc9-924e-97c1ba1ddc1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c206ad8-689d-4ea9-ba15-afa3a057fc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e05c86f6-3d99-4f2e-80bc-483d035f3964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443452e7-3590-4d70-ba53-2cba37029417",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48e2e57-e5c3-4946-b8b0-c662eb711076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f7f42b-5c9e-451b-931e-1e000e3713f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f52aaa-9ce3-4e27-9747-a3f47fbeaa3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "941f549b-6111-41e7-afe3-5ec5267d431b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b12b1a7-6830-485d-9751-ebdd64810442",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb88cf08-b725-481d-aefc-d87815e6bb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb3dcfb-dddb-433c-82a4-1531e31eff06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4cf88a-5a37-4ddd-a48a-f8167b339228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeda038a-79b9-48a6-b897-5aa70d8ef5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49aa17f-f448-43d5-956a-7972f67f2be6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87b9d45-9b4b-4bd0-8c22-d34b709af21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5761985-9216-4a90-b5aa-ac34558002ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f849f430-45de-48cc-bbb5-de72c71b73b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "00142344-9608-45ae-a51a-8b5ba955b2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920f486b-5a0c-4604-9e89-17044c5811b7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923e664b-0606-402d-aeac-111b8a11550d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47565d26-45c9-48ea-a69e-2488083f0a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f735dc5d-f00e-421a-9eca-4cb9bc51dc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb494c3-5440-42e8-b3e4-af3fc46cb7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432d3c3a-52a1-418b-ada1-e25d76ee678c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03483913-1892-4adf-80df-c71cfb3c440f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f0ca8d-3513-4ca9-9174-c50b03c52f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07642d5e-9117-46b8-9a94-ba3daf55f791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "352cbb7d-8cfd-433e-91f7-263f37d82f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc96345c-5a49-4674-9db2-81bad48f0a8d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafde8d4-2ced-42ad-ba8a-962a8423509c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71336c03-f14e-4e56-9488-3d0a2284a9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090ba68d-95b2-4385-919c-0bf89b124052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f46f6f8a-bf8d-4665-bdf4-06fb16fe9bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b03090a-6c12-4b06-8f8a-d758f803168d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c083f3f-e592-4965-9993-23cecb62bd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cdbd3d-aa19-45f1-bf23-70b8efcc5928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef052f0-f650-4243-a260-9832eb3f88f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f36541b4-2189-47ed-b279-e39d0d168266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a032f9-0464-414f-8af1-3bf037257b92",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaef20d-cb02-4a0a-ba82-6df6f372b549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22288fd7-74e0-4ea6-80fc-56037105f500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d656325f-5eb1-4846-813c-378ad3992a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3074f8-58aa-420d-b9e0-bad2e6c10e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dddc8ea-259d-4000-b861-6bee0a316f5d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afecc2d1-0a4a-46a4-8aa2-99f2266f3637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd9f443-8342-40d8-89a3-65f485902dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d802df9-b7c4-409c-8714-94b74416f065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "caf45f1b-bb65-40d1-88e5-264af9c253fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcc29ac-1e77-4701-9c2f-922b13fbfc1e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53214f0d-4317-4a53-a0a8-06659be54297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5728554-7a32-4a4d-afbc-5496a8b61faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fef9f20-4d01-4701-aca6-7abc8eaa5f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f86c6ce7-7548-4627-8e39-4c83b1290bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64786b7c-82f1-4881-bfdd-d6efe1dc245a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25635a46-db47-4cd6-8843-6344230df398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812c849b-a3ae-4755-9aa3-ad74a249537c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f25601-b809-46c4-97b4-34962b986390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4cef68-dbbf-4104-833b-daed450a34e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5dbf86-08ac-446d-baac-95b81a5be67f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fe6472-e3de-472e-9bf8-1e710aa0cc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2544475-db85-4641-b192-7f56e494dc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5303e7a3-f998-4533-85f8-879e405be865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "234a3c7a-6538-4b9c-855c-41764a286fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b464af8-52a2-4d50-a173-318b54f667fd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2bdef6-0cf7-43d5-85d6-d00873de422c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3af6d3-2a2f-4266-9056-074eceb98aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65bf236-3224-40c4-a78d-928cec7bdfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b81075ca-cda5-4810-87bb-c45dc2590751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243a2c9a-cbb3-4ff8-9f2d-ee6cf7f4e323",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f387410a-b113-4091-b68b-318b1a5608bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e7ba67-4c72-4ee7-807a-4cbc6fd055b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1680dd0-edab-44fc-8d9f-034b9f505db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b61b2fc-bd31-4169-a261-938569426226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b81c042-2daa-4f0c-98db-ff844899b9c1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0029c2bf-db63-4afb-90c0-19539dc1f43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814c4600-9b75-4142-a136-509267902334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b000b5-965c-461d-bbe3-f1d93c308d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc11e1e-c0dc-4601-8fd2-518ea1527316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779977f4-f16e-4d8b-b34b-1d1e9c4ed070",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed321b45-da7a-4d7a-b4ce-ef881bd84434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9df8e1-9fc7-409a-a73a-340bc5cd8982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a7d153-96dd-43fe-ad87-9f5d2a4df0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fb64bf-0bc6-499b-8e67-2953b44d1d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6d962a-88a8-471f-b45e-1f74cafd4f00",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08c6d5c-3ee4-422f-8e26-8e6529771a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f907633a-adb2-45ed-8dab-56a11adab51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d92456-09d6-4af0-9fdf-2136ea29f02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7980a2a1-1ce8-42ad-94e2-19a13d94b836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc40ae9-e8aa-4842-8db5-0efed7ac6ede",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22d705b-0051-4948-aec0-acfbacc58f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0e9763-bc3b-4e32-9e29-867f713c744c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a83c4fd-0db2-4ff3-b0b5-9e37a118a292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb6e029-0881-4a58-a7c7-b38b91f64daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98153489-8af4-4087-80a2-4da8608ba170",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0be7c3d-b650-41ce-89d2-50a2304317d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d83264-edca-43fc-b519-be807140228b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115efed8-8343-4689-a042-2c05a65d13f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e894be-d57c-4d77-bd7b-f8d2b53b1e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a5b948-ffff-4cbf-9743-d2ffec7867fe",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e907c9cd-4aee-46bc-a495-ef247695133f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb405cf-ab42-47aa-956a-08fffbd7c4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c775a5-3a8a-43d4-ad62-f08a7e2c7fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b53e2a-c524-4f2d-82cd-2ba679b33be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb1fcb1-f882-4e90-b6ea-7ab6d823eec7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268a794f-d53b-45ae-8b16-e63edf0b3881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f870219-78b2-4480-abd7-5fb10a3466d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6746f71-f83d-4e66-9119-5bffad806f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e466a2a9-763a-438f-96f7-4d3d20a47a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78840902-9a27-4792-8f56-d0bfdde250d4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2c17d6-418e-4498-a086-b10c18c6054f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dbc16f-e4c9-4f3f-902e-9854682de8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c81f2f-65a6-4087-80f9-66c500ebec16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "914f1ac7-11d0-4d50-9ca4-e0435ef0268e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76245ca7-d00c-4c70-a0d6-2eb93c9a255d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6923dc0e-cff8-44d2-bc4b-dcef19a87ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d386267c-7dec-46e1-a3a2-fc9ef3151b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bd477f-6263-4d77-8a97-ebbcac9d8c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cedebc4a-9cc7-4ad2-95f2-1be58afc8464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f133d86e-0d46-418a-9580-92b18681350c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcf0804-e330-475e-a7fd-5f3b051965a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c61d5a-3f63-4e04-b894-2251d9dc5175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666f11cf-8843-40de-b9a8-b32db623c782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0523a4-0688-41de-a398-92f9a5d958aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8537d19-dc89-4a14-bc21-a1b35241329b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ecf5f9-d2c2-45e5-b606-003be62a4060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c09576-003f-436d-afdb-459271c19ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e837c2-cd19-4be8-b51a-1f760fd40b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b23ed7cc-ab0a-4a78-a9e7-6858b588c7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c31592e-4b16-4ca3-bb37-c02f83ce7862",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5785e458-3615-4e59-a9bc-afbac83ca2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9e5a0a-1c24-440a-8615-798585d0b4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fe2998-8577-4439-9d67-48174c9ae4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a0a763-bc02-455f-b55e-a6f4de3c90e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e0ad5b-e2d5-4554-9e8f-62d06efd822f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82e3501-099b-4c79-8d91-2e74f7a33009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22c7aca-2b24-4764-b72c-8f2cbd3a2d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5f37e3-8c0d-4d68-af9b-cf65feb99e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f75b85-f657-4878-8632-897744026e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7832b5e6-00a2-4ddf-a4cc-53788ac66783",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1e9a2b-922d-4e54-8d8b-54da52fbb1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ec5cff-102f-419d-8913-d0fc7709b432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5afa1a-9591-460a-a671-dc287faf7494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6db75728-543c-46a4-95c6-ef96b183e635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee290ef9-aa16-40aa-896b-7823b937a29b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c9988e-c369-4467-aab1-3336461d1851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03340164-7557-4e20-90a7-b6a04339c1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5e8ad5-b041-4253-a12f-69c66330adf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f75a72f2-6156-4d96-b5ec-856e10df40c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bb7be5-3ee3-435e-bf58-6bd8194b796c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4785e4dc-f1f1-4e89-9112-7df81a9fe3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe71aa60-a06c-4bc0-95c0-0c3420a5e7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3dcaac-e705-4861-9140-cc98d0ab7845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1773e83b-2531-4305-b057-ee67108b57d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52aa97b6-1c52-485d-a8de-0af54ebd1284",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adc24f7-2273-460e-9679-648cce36bb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a94ef3-57a6-45a0-94d3-39f2b34fe782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd8fa49-6991-4dba-beec-33c35fa20e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "19536231-3afa-40f8-9686-3efcbba9f560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81d705f-d449-4ad0-a424-9bd7e185444e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac88b10-0258-4909-b327-c39bbe25fd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf894ca-a369-4512-b787-ee01fd5c7ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98933714-73b9-4294-9ed5-2c0efe2bb345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c48c17-03c8-4c5d-83f4-cf651727c55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a44a65-18e2-41c2-a5d1-7dcf05bf4dea",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5daf0f4c-4c79-457d-8881-3f788ca0d3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7c76f6-c54a-4192-a90c-4a163445a2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b564d95-b965-4930-9eef-2c50011aaa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9268a4-4fae-4e47-8330-08ea7a9f462c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1800743b-8eaa-434d-a951-5a0ad2437e5b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34383f1-d8bd-4aa6-a168-423c25b27e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8eb00590-df35-47ba-b843-f8ec30ada362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fff569-1295-4d22-a5d0-5de79d0516eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e101f2-3c9e-4aa5-866b-eb7d972629ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39b3d105-0874-42e6-94bc-4d05b7e1a9f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3f5aa03-4fb1-45ac-89fb-ce79f2d4b8aa",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9b9b7f-a14c-4da8-8a16-4d3a5d997cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "770f1717-f5ea-4500-a96c-498e6e82cde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fe8684-fefc-44f8-a611-38d090b7568c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d1d02f4-11c2-4ab2-8adf-ae129728b57b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16b64d9f-c0cd-41a9-9d72-6216cd3e01a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00b81efe-3887-42af-8b64-e2c60122b4a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3963920-1489-4721-a1c2-faf5f0a0121d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22af90d7-91a2-42b2-80c0-35a7a83f9f96"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3377efc2-2fee-4327-aadd-7603c84a4d3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1691bc6b-c234-424f-b924-de324740f35f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c4cbce1-dcda-4ef3-a11a-2bfee2eecdc3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b16f0ce-6795-41b4-ac24-4b0fe7d6ad44"
                }
              }
            ]
          },
          {
            "id": "7da6e0a2-a9dd-4396-957b-69c0731d7cf8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "276a6fba-4e40-4e4e-868a-f5c2326ba93c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e45d8e68-83a5-4796-a275-00a914a35e63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66b7ec36-43fe-47a0-8eba-5cdf5b1bfc12"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23904b19-cd6e-489f-94ce-e27b6693a495",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5bbcae52-8cdd-43eb-8016-1b8541e234b6"
                    }
                  }
                ]
              },
              {
                "id": "5a9ff461-af63-4c4b-853b-ae33a32d01ce",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49f59b6e-4ede-4714-bccf-c78b3f80bc2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "935828a1-125b-40c4-8e92-d4ba13876118"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7617b875-5af2-49fa-9068-ed6cc6b24ce8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff1ac232-2b9a-42f3-8bba-2b3fb7571e1e"
                    }
                  }
                ]
              },
              {
                "id": "82bfdb24-322e-4192-ad70-2c03c94138cd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9eccc35d-feff-42e9-b370-1afd07a492d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54ef7356-f60a-4b1f-944c-b0a06ddc9d2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd21fc98-997b-425e-866e-01d71030f9da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "90028260-2aa7-445b-9726-39ef953a33cc"
                    }
                  }
                ]
              },
              {
                "id": "3b090348-74db-427f-a3d4-04f9e7628f3a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b27e2cee-85eb-4d7c-ad87-2b57e4d3ea1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55c2ff1b-bcc0-4177-8932-4c9419e01c23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00189717-b08e-44fa-b9b3-c735f3ed5460",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e5c1cebb-c83e-4a03-8918-bd43d098024a"
                    }
                  }
                ]
              },
              {
                "id": "080e62d9-5b88-4a59-830b-c8b5359a37ab",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11a54f01-c7ae-4185-b799-df4ac3bc330e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cda12e96-988d-4fb1-938e-a64921867fed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2140f24-361a-4942-957f-bfdfc8261703",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b7e845c1-9d9c-4623-a1f7-7c0bbe7fdf5f"
                    }
                  }
                ]
              },
              {
                "id": "66d5334b-65c4-49f7-af46-4eb139e2eb14",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61861f36-84f9-4ab8-adf4-b492a2aab215",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08b5d3f6-6d5b-4f49-9d09-0602f12055ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27536cb2-6a91-47c2-b8e5-d2059257a98a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3de1be5-9bc5-4d7a-80fd-a0bf3cacd267"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1cabfde7-5b80-43dd-bbec-e86d191318c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c59870b6-3853-4d87-ae70-1b1ab629ba05"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "438cdb24-3e64-4d73-b3f6-ef4f79d50d35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68eba14a-6de3-4788-945b-89ed586a91d4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e559ed30-7c60-4098-acba-885c25a312b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ff445663-a443-4c10-a95b-13bc0571d978"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48a7b421-222b-4e72-94b2-41f1fd103fc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "327c5387-a16b-4e27-93ee-f795fd2cf41e"
            }
          }
        ]
      },
      {
        "id": "07ec155f-252e-42e2-959e-2f0e8668321f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b674d9d5-f7e7-4847-b379-65b8a489258c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f12d649-f5ef-43ff-8610-b16681ff173e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c58acde-1998-4e53-82c6-6948024cc5a9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ca73e1-cdc2-4304-b27a-7a583d400ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cd7485-d2ae-4f7e-8b8d-fce86efc6416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe90548-1f21-47d5-85ab-4ddd6fbf868a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd9a929-697b-4357-ae98-d94bc0043e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23dd1cbf-11dd-4ad0-bc22-b2f7b7a61449",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868aca53-0da4-44d2-bdfa-72d458c98c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e603144d-72ed-4ae6-921e-4f463efa2e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86a7bde-59bb-4cb5-929d-bd682312550a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea36116-2053-433b-a60d-85f7e694b9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35b699d-7d28-450e-8563-7f88ac0810e7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7af420-70d7-4d75-9f97-f48479a84aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdceaee-1e16-4b91-a82b-d688fa502740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217a69c9-d5f0-4537-838a-b588c52d875b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a1e7d5-918c-422b-8154-3ba446fdcbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859a147c-647e-4e29-a8ad-b7e27d146a95",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f94f6c1-acd3-4474-ad6c-9404834c2b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1c40ca-46bf-4690-9dc5-1e321ad23eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1052ed70-be79-425a-bd97-ba55c0c8859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7530963b-8cac-4d56-a0d1-8f5384fd2e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b55f7a6-9f24-4642-ab8d-70deaba1f7ba",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d256bb9-1616-469f-bee5-9805d4431264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48996380-4f08-40a9-8993-19eb64b45749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af20981-bfeb-436b-af36-c2e73ddd29ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa7eebc-5191-4bd9-9921-bdd2e571b76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adc089f-3b0e-41df-a03e-1a9479802052",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f44b0b-c86b-4915-8809-38cb4d52a413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b411146-5ccb-442e-8fd4-9549588b0206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37527160-aa09-4145-a22b-0c942e33f24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f8341a-c510-410d-a5b6-efa00d2b69c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235bf5c2-3660-4c50-9f93-5d183031640e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2b5cde-a214-45b7-92f2-df80f72e50d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47dcb947-df1d-41cb-9910-8e2b3d332f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ef89b5-be79-466b-86d8-aef859178572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "627c297a-ecdd-4f86-a392-295be53df719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db406a6c-939a-425f-832d-db3879989685",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4a3cc4-2bc3-42fb-8cae-0c80f3a14fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9d1a77-2663-4837-82e8-8c341c7a91a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec93bbac-e033-45a3-a5ff-110f769a86bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4ac599-6524-49aa-8c8a-801cdf78e7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792f3b3c-11bc-4a67-bbeb-310e9c27e09c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7f0a45-c3a7-4f4f-90f9-322a277d66bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a195507-a467-412e-adc4-530117f105f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0514d47-109a-4f13-b765-b3ec3fa41e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2449aa1-2e71-429f-8fa3-f3fe13cafa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ca2b3e-3a42-4b67-8bb1-a28178f3a5b3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94be0357-b19a-4d28-ab1c-6a4e62c8a93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8ca90b-875f-414c-bc8b-93fdc59d8332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617009ac-63f8-4d28-8762-dc9c139665f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2afa1bff-46ea-4f8d-a5f0-159dca2810c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282d6014-1ad0-4451-b7a4-757db0e6931e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabc0602-baf4-4e1c-8905-3fdc6a87a171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5ff5bf-e6d3-4628-845c-bdef17e4a2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab5889a-0c7f-4c5b-9552-f6b60df9f15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "46524b0e-fde9-4523-a5cd-087ad4a4ffc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc67676-39b9-4a7a-86b8-5270b0e97a95",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728e7580-a8e8-481d-989b-ff5262ee1e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324b777f-64ea-4386-baa8-3f217503dce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80286c7a-e6d3-4d37-b4e7-c952f9b5828a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81d0094b-a9f8-4770-8505-975a72717c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a32167-e265-4ae3-ab81-9454aa9f987b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18910630-2f95-45f0-b7fb-39c3e2994961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c505755f-2745-413a-aa5a-1e1e7c06d3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0b2e3d-6740-4c29-81dc-eb1c61b98887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7ad865-fbf4-486c-8ea3-7fdc11a73085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed82249-0cee-4d01-a375-838ce43d2860",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f2087f-25a0-4c8a-bd86-9333cba6a655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecba024a-3359-4a37-8180-5827a0d7dfb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd7589a-a6dc-47ff-a066-9c485c9c390a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa0f04e-1ff3-44d1-990e-76f1259b6370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1336c12-2ecf-441c-8af2-de9d8a6e6129",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a0352d-2a38-4f6e-b2da-feb95b1108f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33366d29-e4c2-4950-b5de-ab00443374df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2b4711-79a5-4ceb-8a49-e6e9104672c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "be510093-3b75-41ae-9394-15e10628c90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5118f237-60c6-491c-9f36-7486a9114698",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2766ab54-c08f-4d8a-92ba-9df95ae7a0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2711560-35cb-4562-b64b-a5611fabbf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef18d1b6-8520-445a-af82-5d632106f407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aed4fa08-d1bf-4345-9e1f-23021cd4acc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd0c122-c49c-42ad-9bb8-e2d6ee4dd135",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7133c224-7bc6-406e-8d33-7474a67610dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa6d2ff-f44c-4bdd-a9d9-384adf18a77d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3e9c2c-243f-48dc-a59e-be8c19038247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b06916-6a87-4c32-a580-90678b49deba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f815cf8a-c04e-4097-b37e-ba5d1fee752b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a4e8be-7635-4dd0-9d89-e300d6688afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09053ef2-5ca0-476e-9b76-b7491c338eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce625be-f104-427c-876f-7ddc7aaaec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fd240b-2b97-43bf-b017-04dbede33ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db249fd2-e7dc-4c4a-a5cc-e26a9fb7257c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1600484b-962e-404f-801b-cb9f4291ad7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83057cf7-3d0f-4911-a83c-069181ff074b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e21e32-8598-458a-b7fd-bc8296cc3efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca59727-656f-4755-adc2-0371b784c153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2b5ebb-b51d-46b8-998d-3b5c4268d832",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23918b5f-de63-488b-a7b4-c8f222e2d19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4a306a-4922-4243-a2d5-ddb0a4db0c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a02230-c3cc-428f-aff2-6cb387dbf8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "add56ad9-9aae-48e2-948e-503961ba65ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c68aaa-3ec5-4827-a3ab-eb8f850d7286",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087a9bb6-2c9e-40e8-8f01-979ace8792bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdcf0fe-41a8-4569-b2ca-a5b598661c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773a2ff7-ac52-4a62-8b53-5301c38bd2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d151109d-b355-4049-b655-6c59eddb31b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937f8bcb-1c38-40d4-80c8-57630270354a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1e38b5-fd94-41e9-9029-1997c1eb1724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c115bc2d-2178-4c5f-a7c3-9502743b7c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ccf7cb-942c-41af-99d9-ee114d57f5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0e6369-d11d-491c-b998-1d560198d001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb02cdd-d331-4468-b61d-88ff61493cd5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a7649c-3663-4920-a9c7-689a3a1ae655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9904ed-cdb5-490b-8761-e3a20d1965ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388dd67e-a632-4b69-a9ea-4009abdbf860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e98f7c44-5ece-48da-8be4-c245f769dd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48e33bf-056a-4b94-bb9b-c60006c32584",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b8ffd4-8f0a-442c-abe9-a0634961ecd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f4daf3-0b12-434e-b1e8-9229355217e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6e8852-9fba-4ec2-ad51-3afaf8f97ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07dc1451-cc81-4249-a419-d12b04fdedaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e46b448-7321-4862-8db6-0eea765097aa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7a74ad-0bba-474c-a08c-e2e7e8c51d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37f5041-b423-4117-b6df-8d6b0a7c2a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34a2104-7362-4e0c-abe5-983fbdd5c92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4e59ef-39c6-4f74-a636-60a990d81676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f06b07b-239e-4735-9761-39254cd7b2d5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5741b0e6-f478-4648-b54b-e33e637bab62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c552094-f49e-46e6-b196-0f0e396bf1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedacc64-0214-4d93-9c8a-d39bcc9dfca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9929e32-966c-45bf-851a-f134846ef3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f885829a-70dc-4a91-8abc-8b9c2b5b67c8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fff351d-5eb7-4fd0-8e6d-4cd9c1f9811a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cc7489-e495-4480-b240-cbe705c5672d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d94768-7fe9-4479-9069-850fefdd744b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90852ef3-97bf-46d5-90a4-d4d884750dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f650c248-412f-4492-97a6-e2ce9b1edc34",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4ebf13-fa9f-4f36-8dba-5875cd4ea136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4597595-20ea-4ec6-9db1-94379a8274fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cd8815-9717-4786-97f0-7c43fbf2f4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0007ece-537b-4124-8796-a715de12923e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24280d9e-7af7-4888-8220-ac62a900d8be",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1635ef75-698a-422d-a36b-c941d481a058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7548e76a-c49a-4f5f-bbd6-50625f430927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3bffde-3c21-46c3-bd6a-3fd6265380b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e726571c-710d-47dc-8491-eaeb40f5f439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682fbccb-fb33-45d6-ad5b-f94ac0d63ea9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef245f6d-f5df-473e-a2a8-656b94fd4d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c593d674-4006-4fbf-a111-e1706caa065e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b293492b-7ef1-4359-ac28-845f0cb2b65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dccc2dd-ebf6-4b07-8139-4354aa6d9a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe96391-3fb0-4fdb-b109-5ecd2ba84634",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db81240-d854-4513-aae6-943e58ac82a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acce28a-adaa-4a4b-8328-64d2467a83a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580fb310-6baa-4b8e-be2b-1ebbc431327a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e6c02d-93b7-4e64-9a52-86da9acf14bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ca00b8-82fc-403e-8384-17dc2bd6528a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abeb7f84-6a2c-4357-b954-3dc8fc2c992b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d6da86-d59c-4075-bba5-cd2a8dab5eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa48361-6690-467f-bbcf-888e87210f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af9436a6-ab5d-4dd6-ace2-e43224c783d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f217c36-9034-48d7-bd47-894ee978c407",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6919bde-3904-45df-8c23-140d7fa95c2b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94360b22-a1ef-45bc-a776-14102fc557f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f094f4dd-9aba-42ed-be17-52bd3ea29d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac7ac55-5700-46ed-9604-b464e05cd13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac0a87a8-922f-4f60-8d89-87616a80cf0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8983b4a8-8fa9-4d43-96cb-d019eb41dfe4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feb656b3-843d-4fe5-bf2d-913b55995332"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e6e3e99-2501-4f17-8a77-b1e5b3097bc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd74332c-01db-469a-9c87-ba1ed48549ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb55a486-74c3-4462-8275-4c41cf50a266",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "710590da-f8e1-4eaf-884d-88d4de9ea90b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77a3ad95-288e-4493-92a8-8c0992645c3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f642ec1-e42c-4fd3-ba29-e10bba82f1cd"
            }
          }
        ]
      },
      {
        "id": "4916be15-bc35-4e8a-b0ab-4af1ff18571e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0835b49e-9ecc-4cd2-9fb7-fc40fc9c5b44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80018e01-c55b-4389-8e0c-8949545db9ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef4c6af0-d995-4a5c-8be6-4156d0d58d0c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23463d60-ec45-44b2-bf73-308ae45cb78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be33c73f-6eb0-462d-bfe7-eb87bbeb90bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3d10b2-f1a0-4f93-9684-cda079b4aa96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3deed0d-0be6-45dc-9a12-b8ccb05870bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc89a0c4-0fdf-42b1-9413-07f7d70f03ab",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4253fa-940e-4473-ba13-54aa1cb7bab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88685ce-e6d6-4b39-a030-4e07dc091525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc856817-7f5c-4ccf-8507-4bf7f75f5f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "827c6aa7-fbcd-4838-9c41-87d32ea43328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6abc3f3-1fa0-47e3-bf4c-4ab407722d5d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63529e3f-cd64-4066-9be0-6098240073fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f75f0a-ae34-44af-a26d-35b9d0ffcdca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38630451-2786-4821-b36c-90c7f0526b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9f5a00-da6f-4034-a371-a47714e95697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807df74f-539c-4291-abb2-ee7126773765",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8a2874-1a09-4d3a-b6d6-baa5a221905f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66366985-ea8b-4918-bb5e-1ee1a1cdf7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bef6956-7c59-4da1-8f53-df7882f52953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eaab36f-054d-4eba-9f8a-70d8d91c95a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b15ffd-3bde-426c-b5be-f6a796cf93c0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae880771-4678-497a-b884-76ca8e78387f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70081c9-5149-449a-8089-03f4d1ae5dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb155ead-d5af-4545-9fbb-f9593873e7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a984b91-ac28-4768-ba5c-bb5d27c765a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc7b927-90d6-4702-bd53-ebf98d026289",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506bdefd-5d44-4b37-85fe-08c5b41cdf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70c07c7-fee7-410d-84eb-be2498e11679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8f3529-ca90-4541-b633-626319b1dde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0acaa191-790f-4439-be8d-a46d5e259c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fbeb94-b58a-464a-9c07-2de9fbce7aa1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e04943-1ec3-49ce-adc4-9eed4fbd1d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097dcb9d-1933-4b03-a228-b30557506f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0230fc-1815-4f0b-ac64-28d14932b094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de499dda-e331-4071-8bb2-24093f2e4271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa42be5-5611-4131-9720-fa66922058b9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ef23b8-14e2-48e5-8ada-e7be06f36fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f289e6af-ffb7-4768-bbfc-6c099b7000d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5571626f-ad25-460e-b473-47b8f14a6a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "864c86e6-1dcb-4535-8050-cca97c639a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73816f9-9ef7-4311-ab19-720f9c18e859",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdea7b9-30e1-4a2e-a60d-43c281d75e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdd075e-bb47-4eda-a962-9f43cd42a26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d595ad2a-e01b-4204-8a92-4027075871c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56bd3c90-05de-4f90-9564-29ae05c9431a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d5cef0-6934-499f-94ef-515f5aa9bbc2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409cda95-9a90-4d85-977a-2ff74338876d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fec796-9a86-4b6f-8590-f62e987a4688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261dca3f-55a7-49ef-8740-7d2c56078cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9acc3b5-2b45-40e5-a846-7809d2fdfff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c730cde2-266a-41eb-87cb-a9b0b4447770",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6527c822-e33d-49ef-aed3-c38221ed0c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1a4ec2-ff4d-48de-b1ce-80558b91c1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7be0d8-5a4c-44d0-bb7e-48c9a369da20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9edbc735-292a-4c33-9c08-a8131d318e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d62da7-9855-4fd6-ad4f-4b84b753eb4b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a5df6a-d44e-4a07-8009-41f87fe0f43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dac5b96-bd9b-47ed-bc29-03a86755ed99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd33faf9-97a4-44e0-8a88-d653c7e4d08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa3f42e-c51d-471f-a944-f889587ed139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee073a8-1f8b-4b05-b877-5291bd8e8461",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0504ae-fa3c-4120-b686-d4ef38311518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcc686d-0bb6-409d-a4ee-285d386aecda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff77d3d-75e7-4e90-86d4-5326b04396da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d70051-f9a5-4ba6-b22b-adeac25d2630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705ea5dd-77ce-4909-8966-bf61b985d4b2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6648497e-e3e3-413d-897a-67974475920a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350078b8-48f2-4ae9-a1cd-7c9ed86f1c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033dbbaa-54e3-49cc-a9bb-48866e96376c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b30dd9cf-c614-4740-88e4-610a157a437a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77560878-254b-4170-8106-4d14471f9229",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa8bd16-de76-4099-b051-932751c8146b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732fa408-c93a-4491-a089-b1699c2a19ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456e918b-f565-4a94-b53b-fb15bd07de4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a4626b-c6c3-44d5-a247-8ef7b6107a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76909576-60a5-4c0c-872f-4d946c859f91",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f6dd69-d547-41f0-94b3-6a409f7d1182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c11322-6b52-470a-b7e9-ef4c0c833b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f23b36e-8220-4a99-a0a9-967e47ce9e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "055ac57b-8139-46b8-99a7-031e2507452b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eed441-c07c-479f-95d1-aefc4add55e4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0facf98-aeb3-4c6f-91d9-8400db976164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0573123-1913-4bd5-8920-6bb43941e9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c2d9be-e579-4913-b10c-9f683681bcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a57782-12f9-4a74-8755-0435b9111b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d017205-0904-4626-bca9-58f64e89dcca",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca7c690-cff8-4b1c-9160-a793f147360f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8b2e42-8867-4294-b28f-feb310d5e132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd5e282-4380-4389-a342-87e908a53dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5329d7-8fbc-4ea0-a529-8598dd186349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7e157d-d183-4bc4-9bd9-3545debb3975",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8f71d1-819d-40a5-a8e8-6401f33d7837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1307b7-5f45-4cc5-bfbc-1d586c58cd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27165c6a-9c85-4bc1-aa9b-95eeab213749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a87a993-1873-4e8a-936f-f40c42b658cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301d8bbd-b8d2-4b1b-870e-6c6843cf5761",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9dd254-4417-47f8-a1a8-831b6ec76fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6817d2-b454-4bb2-88d1-26be71af91a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375115e4-e2d3-418c-8a8b-52f7e65a7b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cebc7d-e86e-43bb-8f02-06094a2ef832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7cb086-46b1-4098-88c4-9a5e8fbef688",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed561560-e501-4a99-af66-0e0d8829786a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ab6601-9f7a-428d-b29a-4a8561734e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13133ced-8cbe-4b45-b71a-692927fca15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "637cfd1b-f97e-4776-b950-114ff2656424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2260f8ce-f7dd-4f7d-87bd-9f059cd47e80",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bddcf2-5ed9-46cd-9061-4afab88519c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c146b7-f746-46b9-82c6-a27d230f36f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2376ea34-1672-42f3-9a70-5cec1fc754f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9ad6a5-bf95-40bb-8dc8-6118362b7086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceba1a84-52be-4987-9454-db881edc11b5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430bf0c3-b7f0-4342-a2de-45812982c1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4779e75-07af-400a-ae53-867a4d1cbfec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c067653-1b07-46f1-b08a-f54f243c4497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66b63d5c-fff2-4f61-a266-dc6917214508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4edb7eb-1433-4dcf-abb6-e2d8bf5a3bd4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1504c69-2f31-445b-9b80-055090b3c91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a85d12b-df14-4801-8fd3-f7172bd9b870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a2a0d4-bab4-4211-b0b6-698722db24ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d1bebb-2976-4f8f-b6be-1396cbadd3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808da3ea-fadc-498a-ad95-0a8cf10c3a5a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493f2b76-c49b-4568-a4dd-051af5b2e583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca87ada8-25a3-49ce-8c75-3cac339072a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bfeeae-7566-4284-846f-3c5134d026c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66948a67-f489-4fb4-b464-39b432426931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4b7023-bc0a-43dd-b368-c99952fcaecb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d15ba8d-3b8d-486f-8c45-f79a6540e91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a8fc0b-4453-474e-b63e-21391a94585c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb5a3e5-d7a3-477b-8e18-4b90710316d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e541987b-004c-42cb-a126-6e9640bf17d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af2ab19-25aa-482e-88ff-1eea04b8bd94",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b278a219-4feb-4ec1-9d78-d7e4bc91729f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a432536c-0344-4c5e-9bed-47cc622a94ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e3682c-20b4-4326-b9e6-653cd474e95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "019a4c5a-83ca-4745-951f-0e1eb323736d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3078542-c40e-4755-bcda-e8f69a7fbd51",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d46eb2-a09d-4ff8-ab47-f72659107b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd0dfe7-34bb-48a1-b2b0-af0f57a601fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccf3e14-93c4-4f20-b218-29023d7bb6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d1ca4b-83e6-4c2b-9c18-0c1e1625af3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fc51fa-efe5-48e8-a5a0-800b1520a395",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd60654-70ca-4181-8850-1f29da13ef35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cc8f5c-eec7-475a-a8ab-d61d7f9ace55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692db352-669f-4cc4-859c-43b6e9293afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0078fd02-6fe8-4d80-8180-94fb4dfafd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6be9b52-d785-419d-b0da-67e3f0b57087",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1851cb04-dcb2-4cf5-9391-13f2f95f2a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2f39e2-820d-4286-875f-e315ecef8968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8340d8e7-0cb5-4a15-bc39-62ff363a4439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aaeeade-4538-4b9c-9f4a-4b055d27f3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec03f2b-5ea7-43dc-9dc6-a7fb3c8b6116",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21a48b3-4572-48c4-95f3-06d93e3b376b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139577ac-8634-4460-8102-87cb081885a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c0fd4d-a71b-4845-921c-644eab9341b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa38891c-dd81-4bc2-bad1-603613881ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b695eef-99c2-4381-9f5b-0b089ef08a23",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8274d6-3265-4a66-81df-2e06f38efffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62227ddd-cdd8-45d9-8aee-f5165eac4d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbbdbdb-d00c-457e-885f-728345326fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daeba03f-3836-42f7-a8d9-4b5df740aa2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a712eb9-4520-45ae-9f23-8e2074096514",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89297a65-9ed8-4770-a419-d3e8c598481d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4558c1c-604b-41cf-94ea-e9767fdb8f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d41953-9148-4ae0-aca8-439afa7ead59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e379ac-fe26-45c9-8c69-efdb67b98fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83c0a7c-2207-4fc1-bef8-cb0524ae1ce6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da459271-0353-426d-911a-4acac0d5b500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8dbb68-9191-471c-a982-6bedfeae59f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a105de-f24e-4b1a-a6d5-4f021fdf98da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad155027-dd6a-4334-a9fe-72f89bcce261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d1ae07-5ba5-4885-a3bd-a48d8d336ef3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceccfde6-311e-4665-84ae-fb2d26a11af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07cbfd5-3af9-4290-9273-cdefbea19915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2987a17f-fa94-4edd-ae99-0303e7cedfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "071f0b1e-ef61-4091-b8b0-1dc621933dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26061a83-2041-4847-a86d-a759d4c34f65",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb945d1b-4039-49c6-b1f0-cfe97301f07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b468165-7b97-4a81-8c7c-aa432fcd4590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b17ecad-74d7-49ea-a435-46869b00f4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f64626-ca5b-4d58-9bc8-1df38f47f80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc62f5cd-3024-47a8-8ce3-35cd18781781",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9454417e-6d4b-42e4-8edb-8699e9bebd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffdf22d-8887-42d6-84e8-36e9433ea03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac269647-179b-4e08-ae3e-ef7d37d9ce8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "804338e1-9306-4418-987e-519bd5ed3710"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0ed2a689-58b7-43ad-959d-367496f4d342",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5add543d-432b-437a-8494-f924ceed7857",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15a571b-adb5-4a8d-bab5-48cdd2f51501",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf03adc-5276-4113-be66-22dd6041ca67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d14158-bf26-4f5a-9196-37fcd45d7592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa32f9d6-5ff7-4d8e-a4dd-dcfa571dd6eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ba848c7-e805-49c7-9a7c-251f7104cba4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8986b4be-1e83-43a2-b7b4-e16bb7c71d4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3f14f2e-26e1-4565-99d2-d6aea6bb507a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ec81274-fde2-4e5f-ab1a-59a75a599318"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b43212a6-f2b6-4012-bbf6-f3ad7befe8d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d6ac7bd5-7a90-4202-badd-3727d61d7b84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0eecb354-e2c5-4e86-8264-fe3f19f54295",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afd7d1c8-80c8-4346-8b9d-e5d056744ae6"
            }
          }
        ]
      },
      {
        "id": "f929e7c2-ed2f-45b2-8109-b248eb1df9f8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4229d81c-19c4-48c8-a3ca-7f16306f6c7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f68bf6b-b07b-4c66-9e3d-6877b4d81221",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f9ebb6b8-762a-48ba-aee6-604a7251fe8e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddde3d5-07ad-432b-9e41-630c0e677bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acd2836-61f8-4ead-b710-2998d9140412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cbe3dd-ebc0-41f5-bc48-b7e64e991f81",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8758900-688c-4709-8c6a-29f6a0952809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415459fa-aac7-4a11-b9c0-503dd64f5436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2d439f-aea0-4161-ab58-f7c7d298e010",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d80202-b0c8-43bc-8748-6d02e6f24e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22831f0-cbf5-48dc-9665-1b6c07895872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277dc737-098d-4cc5-ae1c-e7eb650e24bb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932b7393-5520-45e6-94e5-4015f6f4f6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbb4105-e143-4eb0-b94b-f437406ebe80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf61fd64-a5d4-45f9-a60c-07aaa394afb5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40920755-d605-4882-bc9a-c2b17f66c27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9b7a65-37e5-4085-8fd4-5689bb6198c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b308c4-20e6-42f1-bdb7-6c3956653e05",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e364c5aa-df6e-460e-af54-b1ed1b243628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe981644-62a7-424c-8e8e-7e05dfdc3b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef97067-0437-4561-8aa2-882260d740e2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad98f39d-7043-4084-b07a-dd43bfaf5c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2fce96-768e-4a89-8322-dc99a72794bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b44352-875e-4c9a-8169-17bad21772d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98614200-821c-4d25-8adb-8710ec8d5c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e9ada5-7c32-4bb3-b0af-1a27190a52f9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca1a258-128a-47b9-b266-1e060fbf9094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "565e03a1-ccdb-4d36-9901-5e1ca65597cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c319cb-1047-45a9-8445-cad78248b43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9de8ba-e982-451d-8210-42eed77ba86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80625db-633d-4886-855e-52a0fdebbe46",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dd23b8-0368-458e-80d5-249362d00807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3382692a-f20b-41ef-8c39-17d815b59d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6525915a-00a0-4afb-8156-4864cd864ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ad39c9-5362-4ff7-b6d9-00cd8fd6c0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d833035-5a21-48cc-9416-77bb890bd96b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68bf19b-6f49-4552-aea1-9267af61cb08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8591facb-4141-4baa-9112-1d0f701b971e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80228b09-ead5-4ea6-942b-874219c9ce2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69dd19a-cce4-42d1-8389-c0ef2c0db00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348d25b4-ae06-4d3c-9a7e-a75b677dccd0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca64396d-447f-4a8f-b7ce-082b04384abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c092268c-7731-44c4-aa13-fedcd4f38e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77acdb4-d28d-494c-9cd7-bb5561c1b82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d1e449-f9f6-46fb-827d-30c02b1e7a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309bdeb2-dbb5-46c5-8203-d6dbf2b2bb47",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c13afa-3e5d-419e-8b4e-468c1315449a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa243c2e-81cf-4226-bfdb-08866bc739cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade42582-afb9-4db1-ac81-4adc281fafd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ac8c9d-5884-40c3-8134-ef00ffb55665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398ae2ba-56a8-4b1f-b344-233f1a65de16",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce01d781-de85-4274-a60e-deffe22e1708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a15e49-f858-4cd6-9b37-f744f96567b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5ac79a-8b9c-4cec-b421-621bfa179471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7138de0b-3924-4426-9cec-4f29fda0687f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f526de4-ca9e-4c1d-9e92-812a99f70c6d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11d19d4-f411-4543-9952-c1a8b63ad521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13a97874-d06b-4c59-aded-9c31fe4cedf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4ecd6a-1ccc-43a1-acf7-c8ac004429af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b7dc18-56fa-425d-b026-6ec7fa171d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b4270e-b267-4b61-a5e0-eb7fc9a42a8a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d0b34b-a078-46ff-8086-671c56c762e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "165e5533-ffe4-4846-9d40-6642847d0080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9252c024-59e6-4a37-8567-aaf40ea2a8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f350b47b-b51e-4d4d-a88b-650720dc7bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e396552-6541-4a06-a672-e7870b8eeb7d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ec37d4-53af-47cb-843a-46a2a919ae0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b73086e-6589-4744-a6b3-2be51952d716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652556d3-69f9-4f08-85e5-fcebdbaa9ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1135f0-5345-4d07-827b-2ff6d119c36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ec21e1-981f-4f5c-b5d7-455d7e6bcc11",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db49980-a53e-4bc1-abaf-6b1a8bdbbd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb2b112-e81a-401a-a5b3-fe46a5bbf722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473dcb0d-0f43-4922-a144-1bc9a3f3d477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec2f2ef-48f1-4372-b796-984a91a3f9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec9c074-71b9-4df6-90d3-7c83702f0636",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a783921f-f56d-4114-9cc2-b3b023eed0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f581cb-b6c6-479e-be64-b5243b665105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900f2535-e29f-456e-a05f-5ff7c8958b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2779c8-6484-4ea7-9afd-25db64f71ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e55cc99-f58f-4220-9f81-baab155b90f6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab857914-580b-4e86-909c-093475c22719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b5abef-b0ac-424e-a29f-df4c395c7335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053ac3b2-406a-4047-8e07-49fb07c155ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0f068d-0028-48fd-8202-c4ee92a9ea61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b018e90-12ac-4aa1-af6a-1867bd0951f6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8535272b-cdf4-4162-a015-35ed4fe9563c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f573b6-73ac-47e0-bfb2-b0e9b0e4c7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7df7aa-c1b7-400a-845d-66b986232d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c490ecb-9679-4bcb-ac0d-56bc178806c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea0b55f-d51d-4506-aacf-362d7ba03990",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fae4f0d-187a-4601-8f67-cb6c1c99d49c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fefa23-fd7c-44de-b64f-2939def08585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4914ab-da2f-47f4-8d11-21d4d9d52d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94208687-bc8f-4152-a240-ee3b6f79c7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35ca892-ae61-424c-9cab-f7be3c637a64",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52e0ed8-7259-4ee5-81ee-dd42975d7f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14acf6b7-6b0e-48bc-bc6d-3e0d7de19e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1803ce0f-fb1b-44d0-a93a-2cfaeb9187be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147832c5-d1fc-4b2d-8ba3-df985a0fd8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f16c34-9b99-4be5-b82f-e3894eb42d05",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede42a71-b57e-4dc4-8a73-0f1b74df722b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c24282-1fb5-498b-b650-48e27f7d2e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e149f44-49cb-48ee-b45b-84f0ad04c474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4293154b-907d-44c2-a378-9bae6559d983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf43f17-fe3e-43bb-adc8-e148de93260f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30975f14-0fd9-44c1-a51d-ada32cc870f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4429e362-f998-4097-8aa5-12d3215a9d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fdd9da-8eeb-4d27-bf3a-5bebe40bd8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2378fd9c-7f8d-43a0-b77d-1a7bfc6cd5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d1e0e8-b501-43b7-a171-02d2d894a763",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05144fc0-5aed-48ca-b24d-15bd2bfb28cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4597c48e-9695-40cc-92c4-59f56e9ac944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f1baae-3ee9-4e46-a812-6724b0592e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95192455-3306-4e30-b423-466076a90e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d878b5-090c-4abd-bd42-2026d75d0f7c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a21cc0-7c97-4dc5-b051-b54597cc31be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "072d473d-0776-4a8d-968e-5525d1857b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14d1836-7a12-4c57-8848-2e2907725ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbd21dc-c1d0-479c-bb43-1c78a495e4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fc0da6-60e7-43c1-a669-a4d4ea4b01fd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d643ab-3733-42a9-97be-f4144dd010da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78322557-d21b-4f83-930d-ff18a21ee262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba403130-98fa-438e-b2ad-2d7c31aad460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78389a47-adbd-4361-96e6-f5f2b983c0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1254efe-0c53-4b0f-9e66-29ee4702b7aa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb9edb4-d71c-454d-8a57-92c5e9e4f307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9eea3c-2aac-43a9-93fc-6defe4b3fab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d82c0aa-9616-4f64-aaf6-c43c65dd2aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb205941-ef8c-4fa3-a815-9f1c99f77a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fc85e5-6e46-45c4-bd30-c05ea4b15dc3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fd4627-350f-4cd8-91a8-e9206f8c3f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce40a7e-1217-44f4-8ee0-2fd562647df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbe731c-a392-4d26-85c2-826ff7f1b0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d25a8c-ba89-43a6-874b-b13f9338fe8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2acfcb-4f7c-46d6-a5ff-6fa0dc57bd67",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607c6b9c-3852-4a17-a3b0-12725bfb3156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc087ded-3fd4-425e-a9be-9e1972d23d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbebae2-f546-41bb-8209-56a28125f21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbe0ca8-0bb7-4618-80e9-21b08e027b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8138c5a1-c3f7-418b-bd55-f363459a71ec",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa63f773-23df-4cb3-b1c0-edf192d366e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14bab560-387e-41a0-98d3-02fecac3c4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73cabdf-7d5d-4a04-be8e-38fbcc6a9d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934ff3c1-ae40-4493-b5ce-2a24ed1fd7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3be7c3-46f5-44de-ae0f-45dd8e9d766b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35aca4bd-8581-48a8-b672-98991448e2a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9912607-7a47-443d-904e-723b431abab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f2d178-e4ea-4005-a869-1841a1ff7810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3bf12e-25a2-477f-bdb4-6a4c22014bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02e27be-f041-4e07-b755-c26bd91a728f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5603f3bd-c456-409b-8719-928a3eb219fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7b8cdb-0ffd-4a12-b68f-797fd218d7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7850cfb-3123-43ef-947b-6422c32d29a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bf4f76-09c9-4ee9-9b31-2c8effbb5ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0389bb-a49b-43a3-aa9f-4a78b5ee119e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd159d7-5316-41f6-9f06-c48be568a2c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da6a1a42-414e-453a-b508-b96274fc2aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c047dd-d864-417c-baed-bc27a8cf36ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16576fc-4447-4c0e-9c17-7408ba6f1c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e269b457-99f5-4eee-8b3f-b36d5f8c20a2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4d249b-ce38-47c3-a41a-96fdefc67476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fea7947-8a49-4981-9845-69ab0163e12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f4fab5-060e-40c1-8e6b-4972124f36af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ce36f4-85eb-4440-962b-63f3ac247fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf7fef9-6e88-453e-87fe-e3a654415dc0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e97e87-1a54-4af5-8d52-1e03829c81c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dbed87-e982-41a3-813d-f3f125695c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8178ff-885b-4abc-a435-dfde10d3ce34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983c65d9-f4c0-406e-8fc6-78daa05696a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470a5ec0-cfe0-4053-8908-1ef7ac10c1a4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74b98d8-b759-4058-a964-0d21f91f50cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4c0163-9e9b-4003-92e3-ac175320b6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8493e314-7e7f-4892-ae26-185740f77c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52c70c5-660e-4210-bc41-439c772ec258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6d8184-d5c9-442d-a5b3-a1015ddd80e1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08851c22-fcd9-4686-9f7f-e51ba9529a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb5a7ab-af3b-42ea-bee2-1dfce973161c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648bf5d3-5714-44f6-8ec0-70b26f9d67a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b7b3f9-a4b5-4caf-bbaa-5d96e8e5b95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82305ee5-d5aa-4530-ab22-4b34f4a7c975",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616b4475-e071-44b3-a4a0-3c9e7a756648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af5fc23-b66a-4a81-9c03-9abe9ae7ef29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e46b04e-2c69-4e81-81bd-3c9b0d10b976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf4a628-06c6-49c6-bafb-25053ee94c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4870bcd7-d028-4b5b-bfa1-c1bb60742eec",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce8d169-be6a-45fb-b045-99a423bf14d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c841aa-951b-415e-931f-3aeb622452ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585a88d2-8b8d-4ad6-a352-0e4f4ea393dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f77a2d-d077-48ef-8a65-a64f95057677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d14998-d428-4b57-8138-bcef84bf6edb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa87bc5-a3bb-4844-9f06-89dd9f8df6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9c0676-9f0f-4c57-a12a-17689480c887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33620c6c-da45-47c2-a29c-c824d97b64bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabbb7d5-94a4-40d7-8ef4-ce9860006509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71986cf8-a37b-446b-aa38-8b862d04d033",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2b41c2-f33c-469b-8e75-f0b2b7e5e204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c425c0-14e7-4a0c-a907-903170675c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad187851-39f1-44ed-b83a-8233a1e106d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbd217b-6b43-4732-8f9c-12a8fdbbeeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20cb26e-5865-416d-afad-55dedbe0aa61",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2471f3db-25bf-4872-8d2a-3120a938e6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f76080f-ec56-4f18-aa2f-f3b75bd8d3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "701713b3-4b67-4aee-a916-70fa57ea0908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c5655e-5f3d-4960-88f5-be89119fd8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4fa7ea-779f-4d43-b91e-253eb7e1253e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3d176b-00d0-4412-a184-ad87ce819b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49d830a-4ea1-491e-8399-59c9df8599f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b270f47-847a-40e5-bcb2-37eb59f288a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97f3d22-cbf9-4158-9067-fba3d8edb957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed05dc3-891a-4502-87fb-3158337242d7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7148e4a0-9c27-48da-a64f-36a88d13321f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1c98a1-f707-409d-8623-98edd3fd8416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3deace5-ebf8-4a16-87ea-7ac9743ee8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c15fad-f1bc-412d-a3af-74e8fd69704a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2c7177-2c29-44eb-877b-492f3ae67b94",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f149de2-5a33-4efd-a403-78c92f11a615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a94097c-5674-468d-96b6-c6e6304e47bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e9ef3a-89f6-437f-9ace-c6b1923a4db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8735599-353a-4b19-8e56-e76e54b45db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2524da33-f528-4c1f-b069-558736443580",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9d02be-341d-4d3f-b127-b2d82e4494cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1098ed-c242-4bb9-8bd0-fc644627b53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9082eb1-ff6e-435a-8af9-bc3cf3c43531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a77eef4-7ec4-4e25-bde1-d37cb3b65596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60975ad-3451-46e9-beb3-c15560472966",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da22eb4-8251-4ba8-adc5-5386965fefa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c9331f-f3c9-4f8d-adc0-534f7d57f793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b8564a-97ea-467b-a30b-49ade410e412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4902222e-3f9a-4a0d-aa4f-277b9e5a9ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf6d83a-5f11-419e-87a6-d856b12f591b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa696f9-a62a-488f-9994-7a358799dce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b9990e-30bd-42bb-b471-a9173499be32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c103897-8f86-43f3-9680-ac61ed32a99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cb80a2-8260-428c-937a-ea056d8e03df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b551fdb-57c8-40d4-bdbe-401d6d333ab8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ddf1da-8720-4ca8-8176-b7feadbddb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589a5ae6-83e8-4c41-8b20-ba87a95c0311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fd6c3f-5f7e-4675-a54a-77034bb135e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57dfb00f-d4a1-4084-8ca2-81464d6a49ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7ef8e8-698a-44c9-9bbd-f7fcc5650e06",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a9d0fe-0682-47ce-a8f6-1fd930b6d493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3124feb-d387-4125-9d5b-877978623913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cc5cd7-6f9b-4a15-a216-4307c71d9b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71709d2-2090-4874-a74a-fc38768703ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04493881-82e0-409c-88c8-de7140e42acb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac014f5c-8183-4432-b826-cee3f77036d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b79711c-35be-4d59-9432-a8c9e49f17ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f452d8-3c05-4a7a-a516-537a6d0d9cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70000857-80d4-4b8f-b84c-6c0c0fe658e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed9a558-0ebf-4df3-bb8a-e5957856d6ad",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa60af4-ef05-4082-ad3c-a28059479312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b434b0-c962-4be6-8b3a-b7b9ec72f546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7c6c7e-6234-43e7-8e78-f30785f6ab9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1a5f72-2b43-4b04-93f7-93fa168799e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11589dbc-8d35-4296-8222-43d68f80bf68",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44c0473-857f-4a56-b7e2-7ddcdc86ca95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d3cf5a-5475-42f0-8c42-19e4c96543b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6b1faa-edb8-4a3e-96bc-90d9814868bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6401de0c-3881-4fff-a1dd-4db3b8d0498b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d19bc58-004f-4e2f-b4d0-aeb4522ade2b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f708cc-b9dc-4d1c-8467-bd39a1693bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f86287-d5b8-414d-a3c6-e7d8728086d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5618612c-a3a3-4b77-907b-663587d1da9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae586498-d62f-4e7d-850a-f578c4a58884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f80774-c59c-454f-bf4d-77ec477d8142",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a208922-f4c1-4f4d-8ef6-b2a1d83f695a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e07929-a8e4-469a-9a9f-f760bfc70157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58193695-2bb5-4762-9cdb-9ef21d756d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580b4db0-64e5-4cd2-8ff6-914d762dead0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5caf2de-3da8-4e04-a5cb-e7f1834c7b53",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5db367-97ee-4de9-8e5d-b9c8f43beef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a590fd3-ceb4-4544-9f9d-9fe002db4d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66340452-41bd-4492-a78d-14c7a2da6085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbcec0d-a4a4-43bf-8d46-fb3deec0f3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0e02f2-3dfc-4f35-992a-b23174e4d510",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c257ba76-dff8-4318-b352-803c5b3aad67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea4e9f1-275f-4241-bcfa-6be53e59b33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c157f4-bead-4c4a-9f2c-53159e84d41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda22933-0fc1-47e5-9789-2a8bffc86257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414d2fb4-aa71-4d00-8972-3139a38a93b6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2873b102-740d-446d-be23-e970ce3e1759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9e325b-d970-41d8-b6da-651d7456e9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9957ebe7-c054-4f3d-846b-4290060d80e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ced860f-c347-46b7-b496-58193de58633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f7fad9-dd4c-4c02-b2bd-aa2b8e65508b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41717ef8-e8cb-49e3-9e81-178f4dae5faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f26c24-a23e-46b7-aad7-822fc726e1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eca6c81-5299-4264-bc97-250574cb63e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3dcae3-a85e-4546-ab44-9383d2e23ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd99d499-6d0d-44db-86b8-d674c377e705",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb87844-b92c-439e-a521-a1e7c210a663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d0f081-2ef9-4941-9e45-0105fa2ec8a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c2f26f-c850-45e6-beb1-cd3bbfff715d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c532627-ec1b-4d4e-bdb8-665c40d9ad69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d972a8-046a-4b5a-9818-a64c27266a83",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4455cfd5-968e-4c07-9333-45f1d17146ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e70bcb-f467-442c-b668-8edbe07fecb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4da3eb2-0242-421b-b4af-9bcddd697cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9b728f-a616-48b3-911f-5afb7aa300ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f9b3c7-f9e4-4074-b9d9-33c7f9b191dd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f225be9-76b5-4186-99ac-6bf8f0c17e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6374b1e7-ee9f-4893-8f68-fca32707f726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84d171b-73a2-4369-8503-b8609c005de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61028b44-4c2a-4075-b024-8033c49bc820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cbb4ea-f223-494e-8f24-bebe4242f0b3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e1e760-7b4b-4fc6-af2c-f327a6f1d926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa94d7d-7989-4d3b-842c-632f09eec90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1321bc-36fe-480f-a4b5-6785a248b3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f00ad16-5ade-4aae-8df7-70b0ce71ec47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4512e00a-267d-4767-82ec-e886dfd58672",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db7d18d-0572-4345-9cbd-116313a67565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30cfc140-9090-4804-8571-2a3d49f93c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc420ab9-f759-4d39-b2a9-175db9ac7c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ece8bb4-675b-4708-83e3-b9b4283cb7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaa44f1-df3f-4284-95f9-fbaa708eeb69",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db10a27-b61a-4ef2-aea8-c4335b5b72f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2fd8bf7-7e8b-46e5-bf1e-21434f031ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339d433e-8473-4395-880e-b633b62db193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3cb0ac-d60f-4e04-ab3a-e8d855a51fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f57b6b8-5c9e-4943-9687-6f781e5f51e0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d18f2ac-f300-49eb-9795-7053f14d42cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9351ead-9d96-47a7-b528-5ca1a10dc4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06c5b70-0c7f-46b1-883d-0d2690d1992e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a346d68d-8504-4cf7-b031-a23ccba3234d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892228f3-ce90-4c7b-bdaa-94e7833a38b9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad581fa-215b-4d97-848a-0db973041699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d0f9c12-5eb6-4dea-87c7-a4733ace8593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5fee8c-aadb-44b7-a9d0-4277f283b363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb85fa15-07c7-478b-8334-65693b3c3515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b30de90-7047-4e9f-b428-022d215eb86c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb8f6bc-d45d-4879-85fd-6a6f3eda0b93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194f4e2e-10ae-440e-ac3f-3baf85838fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142dde7d-6111-4cf8-821a-d24b00e5c2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8024b203-ca45-4fae-8d78-51aa1198bd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf949f9b-567c-4c5d-8cd3-4c783042dd83",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56155b7b-a71b-4691-8747-178cca89c456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf5115e-79e5-43bf-b43b-e5c42d7313c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2adcd26-2bf5-43be-89a8-0fc161721043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af60d63-2b55-4718-aaa6-db35496dc88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49684b9-c6db-4203-9eca-37dbfdb693fa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55654af0-9b38-458a-9b60-34a989a5c162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85eeac8f-abec-41c9-917a-1b69a7be2d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4194b1b5-c3d0-4b46-b428-e003e36345f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfc47c5-5fb8-49ba-b862-f1467f9e29e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf4e3e3-4d89-4922-9724-abc93c880f62",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024304fa-4efa-4fb0-92dd-447c4a90f3bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866e926b-e589-44d6-8088-6707e9873b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63ca9a7-58e7-4124-9c56-af5bc0dfdb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcab0a5e-9fc9-46de-859f-d1c15635ae4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf58664-14d2-4d52-9314-abf041e02c06",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7340ae-fefc-4d63-a247-fb14bac3ab60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e42f8e-e1a7-4b2d-b95e-184fe8b990df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a30422d-c034-46e5-a3cc-90e777024f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebb6b74-f7bc-497c-8f52-3bd4e68d4c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8630a552-ed86-4892-be3c-fa92b06bf6db",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf645e72-4f9d-40bf-9c33-7d0cfc386df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f56478ea-844e-4efa-9ef4-33784eaa3cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c17b61b-fffc-4efb-9e06-0da4111d1ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11676f4-6bfe-4304-9db8-73184ed72249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48de95e3-9b3b-4238-8948-5e3854e0cbea",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18474ab7-5be9-4816-985d-8d6a12b9e9db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86429eda-69da-425e-858c-112264e1f058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ae7a65-ab3d-451c-a188-4387200a1658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6850f5a2-429a-409c-9f7e-af23b18d64e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8eec78-369a-4099-96d9-30b215e3c778",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a836a36-2d91-4513-989c-6b2a4b4530f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45a5ace9-7e74-4d52-88e6-d94c09ced216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8371e145-389a-4392-99ba-e75ac0a9840b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e512bf-f347-4492-b1ae-148b37e21991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048adbf8-bb3c-4b52-9ba7-c14be0c47e47",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45656bc9-b73d-4151-ae14-117ebfa7b6d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d236c0-8bcc-4fba-b274-28bb1aa57bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d1fe42-6f83-43a2-bf61-8b7039656a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279d1bff-a4f0-453a-a23d-aaae44aab09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78fecae-955f-4122-8f94-06030b746f90",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2615be-5db7-4332-a263-b9d52f1f2dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d99f4f-5a26-4d43-91f8-7e51af14b399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b8df4e-aa4b-4042-98e3-ead894be20c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce6b8bf-28db-4ee6-b6a2-f91e9028ea5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d8b853-d9df-4b0a-9ae4-9b00881d3f45",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d82206-c6aa-47c0-842d-1c5f5161ed2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14ac416-d6a1-484d-b87b-b6bdb015e21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00eed305-b0ec-49f5-85ee-24f3f281ff42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a679e0-66de-4725-ac5b-9dcd856b8bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f120df-4d5d-4256-b665-b68d6b4935da",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02220aae-e90d-4a98-addd-325946cbfc3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d7c501-584c-4068-8c07-2ca11e100b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b98a32f-0a08-4031-ba14-dc8cd96bff9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06686ee1-b0c2-4751-ac4f-ce62ee865c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc978294-b28d-4b77-ad31-57f390b6d6c3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7706f15f-e56e-478d-9460-8953105f1b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f917b792-bc72-44e2-9c50-e567c4eb8350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e3ad58-33df-4d6f-bd9d-8d830bb34364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3474c5df-dc81-4743-971d-00e2ea47dfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a495b37d-8554-4ba5-9420-3ef42b9efd11",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f3adb6-6127-4c80-9213-8983e10dae82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102a4048-3402-4780-97b3-cccbaa3e3ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8701024f-a494-45c2-93c4-9137e110586c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e12312-572d-49ea-9576-fac8d160d896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48bf7f2-457d-4e68-8edb-b81266204c4a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c173a5-d07c-46ce-aac0-18466fb2cca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "973c094f-e3dd-461d-93cd-d5cf4ff9ce73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cdaa81-dc10-49fe-b708-178c7c61ed58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c937bf2-f287-417c-b18d-3e0939bd5e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6f025f-37b8-4dd1-b2f7-46883fa6ee75",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d33bc94-879e-47cc-a9ef-76ffcdbe4082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e19da0ca-2df5-4516-b2fe-9a09bdb22dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a55c6ad-9415-4716-b78e-53a63bcd1249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256dcd22-591b-49e3-a675-e981ced5c276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44573d1-8480-4d50-902f-372bf090009f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511dd556-0ece-406b-a18a-b3f1613315a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f95fbf86-a6a7-4527-b9ec-24341ffce6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e5af84-2bb1-4ea4-a181-51cca3e89dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e017f003-64ad-47ff-aa09-fa3155646164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd8cd26-c9fa-46b7-900f-66ee810cf7a9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c921ac4-522c-4c55-be04-274fb6c8fbe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd84d91-e659-4b32-844f-e7f2e2c75d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0776b9-600d-4883-bd04-3bfe3741a278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f06e05-cb78-4920-a0fe-1590945be5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373fbafd-e21e-4551-9b3a-b97019d7ae36",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfebeb83-c3ff-4fc6-ba1f-f947f85c49f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d05e0ac-974e-436d-a7e0-966fa261e23a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd210426-cd12-4ac7-b74f-bda6920d7817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ded5807-5aae-49f9-9743-29f51a4c9678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aef3b53-0b4f-4116-bbd2-fd128aca592b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43849edc-92cc-482e-af6d-08a05f263335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931e6243-f9f3-4dbb-9e26-599b46c12962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f32e805-a9cc-45f7-99fa-02ce2d632d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfe90d2-900a-4ead-9c1f-d40434de66cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3479e7c-a63e-4d33-ad6f-1bc5fbddd678",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a793ca6e-169a-4565-899f-f8feaaac2148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7ee016-b964-49b1-8dd6-0a292ec6a00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742bbaa6-09af-4368-8824-13f745bd9bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf82c7f-9362-4bb0-a070-2995830883b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b69e99a-5c3b-4301-bd13-0589c0b2823d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927bf880-8c2b-4e1a-a624-4cd87a60b499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a42e68c-8858-4451-aabd-3fef9f31d72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a90d6d-b5e4-441e-84ff-24b7cea611bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c4969b-af1b-4d9c-ac16-1e498931c819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2158c46e-2ecb-45b8-8fef-1569a27fa4ab",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca86097-edad-490d-a0f7-4c0507385731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da135333-492d-4444-a61a-6ddb11f36276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50a2418-b346-4862-a6e4-a960abf1264c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96b18c6-7fab-4b69-a370-91208b2d5d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e25f12-5d14-483b-8b78-11af5a73f096",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd10639-2a6e-41f2-aa0b-ed469cdb1cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a401785a-6b55-4bf5-aaa2-e0563bb2cb2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88e7af6-6e3a-4dd1-b9bd-f7a176315e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b9a181-05aa-40f9-84a9-b24aca84ddb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2d9c41-6a72-4492-87ac-5c29c1ba0fab",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9faf35b-0263-4f35-bd29-0214705e09bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e5398c-0bee-48ee-87e8-a8cf96be97fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289ef2f6-62c1-4d99-8a20-8f857e29c087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7097fb6-ab31-438a-bd70-0efdf50941dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a0d7d9-f14c-4324-bc3f-bbaab2cf308c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a0d5de-d4da-4043-8ac3-f83841c5aeb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b7177a-ac08-4079-895a-f488d96f831d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b672cfc-186f-409f-812a-6c647de726a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2433e0-bb2d-4dc3-bc94-bf94dc74dcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6155e5-9c8d-4148-9ad9-8cc389271397",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1fdf1d-8fb6-4109-accd-9547153ab0c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab096fd9-605b-4088-a162-8b4a14435e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d700902-2cda-4c6f-97aa-c7513bf29ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7da823e-5d74-461b-8c00-6982de067b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e368f79e-a98b-4076-babc-cf232874712c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa2c7b7-23e3-4964-a017-d726b06fb883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d23dc6ac-a6b0-4b15-b341-c27c413e78cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067cdff4-f5e3-423c-86dc-2dcfe6a5855e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9c4e45-5e32-4eb7-9b5f-0c3817bfefff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3db6589-bc0b-4b7f-a46c-393957b8d647",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08528512-a7e5-48b0-9c2e-bdfa7fd092a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a9c71d-868a-4a14-8946-1938b228d1b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3912cc7c-3fb9-4f80-817a-ab3e56b23612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49efbcfa-32a4-4490-9677-9163fe3e3737"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df5b6eda-e43a-475d-824f-5a0a25dd0b3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03073f62-3372-440d-a8ea-5c8c93e78bcd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "859e1a17-0549-4e8a-b41a-fcf6181a2c9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42f6ddec-222f-40a4-bf77-dc4283954183"
                    }
                  }
                ]
              },
              {
                "id": "de3d6031-1b2b-4a31-962e-edff3b88a473",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a3ff3bd-5192-4fef-8f8b-78160b99533a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263cabd5-0ac8-48f2-bdc8-5e3a34fe708b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fd8856a2-af8a-4c0e-b64b-98a445a6b1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f7636e-e922-4a54-b7bc-b3702814dddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "646f51a2-3e45-4681-aec5-ae4393526159"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a766fd80-f78e-4c5c-acdc-1eaddbcf0a25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4e3e8a4-6ed4-49e1-9f1e-6ea5c9919db2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5cca179-f81a-4421-bd7f-7f82dea0fe88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e7b75ca-343a-4e07-b53c-41ba7b46dbea"
                    }
                  }
                ]
              },
              {
                "id": "af68a754-269e-4751-93b0-9e4d7a6ff20d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "78309169-60ca-4c64-a396-d37d16bcc2e6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb0b61c-6a46-4ef1-80d0-73228ee98227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c7ff5d5c-1f21-46e4-94c9-f8dff716b8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eda296-436b-4e02-939d-a091c7fe8c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad150ec5-4f20-49b6-b304-b8fc14fc38a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d5c1b934-7feb-4b96-b06a-4677bc6633c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e253c126-3feb-4efd-8d49-cce0f4359886",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13970a78-07d7-40c8-9729-b92ed1b11af8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a5fca72d-44f8-4d0a-a41c-4809e75d89d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2beb5b9d-6e64-4f2f-80c3-7393e626a97f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c51de58-f55b-4818-ade0-5c16449f1272"
                    }
                  }
                ]
              },
              {
                "id": "fee7f701-1350-4256-9d88-e123da3f7143",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0011ad2e-a1b5-4b8d-afc6-a526fa9dc435",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "02b2e013-7735-42c8-860c-2379f6906d38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e35938f5-5d65-4860-84af-a5d165812899",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c28d14c2-e65f-446c-9bf2-5bd0e74694a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72566bf5-8355-4ef5-873e-544e08b7407a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3f4c6146-4149-488f-823e-361115561764"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a81985cc-c002-4760-a97d-e251eb91aae9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d490ed09-1ea1-4c9e-8e21-7307040b6fb8"
            }
          }
        ]
      },
      {
        "id": "c28d4b0a-b323-4925-a5d4-57d517545468",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8895467b-366e-456f-b34e-4c79de7ef190",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e54bfd9e-ffe9-4cda-b0c1-855fb5a845b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e22a6559-28a7-4897-8a66-5e487aa172c8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12011010-003f-41ab-b195-6f08598d0a68",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "05544b13-2171-4f4f-bf06-da172cfcb693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c03ac1-c49b-481c-8514-c8e54a823eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "257bedb4-de08-4ce3-95df-986aa2d5e035"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c6426f4-429e-41fd-8d47-cd2826f0a5aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3a52203-3860-43b7-8645-6eeeb987be9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da8775cc-4b98-4c6e-8f54-5b4f4e1a4d12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40ab5126-3c0d-4818-a46e-cbaa34d3ecc3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e89131af-6a11-4f33-a764-4e12f86ab4b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e0c6f47d-56cb-4ec0-b740-bf350104ff4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87275fa0-7cef-430e-ae20-3b15ec6d40e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9a807f5-e95b-4617-87c1-c7c9a5a14de1"
            }
          }
        ]
      },
      {
        "id": "ad0c846f-b8a1-4436-80fc-42b98f2473b1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b18d6219-14d6-483f-95f1-026e1ef4bfb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a881b80-2bba-4c3c-bdca-917cec75d214",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e29091f-83bc-4164-94d4-7180e4941a30",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8104f39-9e63-4d17-b5d2-a81a314a3af5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "053b5498-c998-43bb-813f-8586c28c4328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14b42b4-e104-409d-b69d-f52a47009053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aea15355-d43b-4919-a401-09aff069b370"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33f17703-061d-42c0-8ae3-8c31d424c65d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f89ebb43-3121-45ef-b2fa-e3cc37d5244b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2732aaed-cae5-4fb8-b0b7-7c83f315887f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e2f1480-1bfb-4603-9319-01be91ea72a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36611dba-d1f6-4e52-8025-607bfe703496",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64b4e098-b603-4bc6-8586-cdbd72f5a54a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed587b7e-6645-42bc-a4fb-7e57f9e08434",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af083861-6b26-463c-8bd5-442e9e1d6983"
            }
          }
        ]
      },
      {
        "id": "4debb589-6e66-4915-9bcf-0e4782987dd3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4cc25dbb-0db6-4323-811c-cd382402414e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b786fe85-27be-455c-8f11-1a39da9fc442",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4d95f0c-7a75-4fc0-8a64-89ba735afd24",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42a4c96-64d4-4dd2-984c-141cba136a87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd3fcb59-f13a-4aed-a949-a1bd36408ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8912ca31-6f0a-4f12-aa57-1b46065e70c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "860729bd-1d92-466c-9c07-5521cdd7e032"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a58486aa-db37-41c5-9301-91713f601e4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "268d13b6-ccb8-4a6a-ac6f-a37ca9c86a13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "506eafe4-0ee8-41bc-a6fd-73a7c0b16e27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fa1bb03-567b-4263-ae1a-da9cec29ceee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82c9184f-7d1e-4c83-a04e-457c4b0399d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1cf107d8-3c6e-4862-a907-9eab2b8dd5f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "613c890f-871a-408c-84be-22493dd4a8fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82920307-0cdd-4c7f-8a92-b76b4d85feb1"
            }
          }
        ]
      },
      {
        "id": "86475d62-8fc9-4638-83c4-04f9bed1bad3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43062a87-a03c-4bda-a7d6-c226b4c4c6e7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dea0aacd-236d-4e62-a07e-f667aaf8859e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0b1c9c8f-1fdb-4005-8558-beb237a2d75a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89a22550-4768-4d48-9238-d47e430a3193",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "028f0cab-ba9a-4c41-8ce9-527a79f5e515",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.98239436619711,
      "responseMin": 7,
      "responseMax": 238,
      "responseSd": 20.490543333401273,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690159311331,
      "completed": 1690159345791
    },
    "executions": [
      {
        "id": "0d734c57-e9b0-486b-b99d-52f35aa601a8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a113a5b2-838e-4cd0-b34a-0e868cf152b8",
          "httpRequestId": "b5e4281b-8f68-408a-b31b-3a8c57b928b5"
        },
        "item": {
          "id": "0d734c57-e9b0-486b-b99d-52f35aa601a8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3b8c079e-dcb9-457c-b1f8-905cb8fa84fb",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "12eadb55-8f51-4286-a3e5-8ed81f3d9286",
        "cursor": {
          "ref": "06c206fe-cefc-45eb-8b0f-d33ac337a03c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c49f20de-58c0-4f13-8a64-6f32d2afe0da"
        },
        "item": {
          "id": "12eadb55-8f51-4286-a3e5-8ed81f3d9286",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9252bdbf-10f7-4d94-a59c-48ba65748efd",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "3610cbaa-21fb-4768-9cb1-0d5b67a85dd3",
        "cursor": {
          "ref": "654b35b1-683a-46d9-9a47-4fcc476a85e2",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f2c534e1-a16f-4593-a513-b5b0f12265d9"
        },
        "item": {
          "id": "3610cbaa-21fb-4768-9cb1-0d5b67a85dd3",
          "name": "did_json"
        },
        "response": {
          "id": "5f4f6519-b6e2-4451-9cd5-e09d6c56e6da",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35583882-0efa-4673-9e97-2db9a211f68e",
        "cursor": {
          "ref": "5eeb038a-7e3d-4834-b846-b9c9687be08f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6b5db3ec-d3dd-486f-9baf-28a1b746d877"
        },
        "item": {
          "id": "35583882-0efa-4673-9e97-2db9a211f68e",
          "name": "did:invalid"
        },
        "response": {
          "id": "d8e52fa4-372a-44d4-9004-1a93643cdc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35583882-0efa-4673-9e97-2db9a211f68e",
        "cursor": {
          "ref": "5eeb038a-7e3d-4834-b846-b9c9687be08f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6b5db3ec-d3dd-486f-9baf-28a1b746d877"
        },
        "item": {
          "id": "35583882-0efa-4673-9e97-2db9a211f68e",
          "name": "did:invalid"
        },
        "response": {
          "id": "d8e52fa4-372a-44d4-9004-1a93643cdc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46101666-9946-4a1f-ab3a-c0eb244db997",
        "cursor": {
          "ref": "5455f6e8-4a8d-418d-abcf-00c5153cec9a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ac5bfa85-0479-4c03-8fbe-ff9b512f5c83"
        },
        "item": {
          "id": "46101666-9946-4a1f-ab3a-c0eb244db997",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f2cefbf5-ceca-478f-b639-7f9c1ce2c2d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6665ea2a-c004-4c71-9419-2995159267b0",
        "cursor": {
          "ref": "ff3d3de4-50b3-4389-80a9-860264f998e8",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2484b56c-619f-4cd4-9013-b3b2c6405725"
        },
        "item": {
          "id": "6665ea2a-c004-4c71-9419-2995159267b0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1cfaf156-0c5a-45bc-9cd2-a76141a5eaea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70036a39-0f8a-48cc-b1d1-033ca9d9b442",
        "cursor": {
          "ref": "85b04a8a-8c49-402c-b70c-1ab713adff9b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1f3aee28-20b9-4eef-afe4-f8fc7841d964"
        },
        "item": {
          "id": "70036a39-0f8a-48cc-b1d1-033ca9d9b442",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "728a6e76-5623-4358-8045-eb7f45e71680",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaca774c-5755-4d5b-8f55-ce7afe19e501",
        "cursor": {
          "ref": "90fd87bc-9ffa-4509-90af-4128d89e251b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bb9fcd7b-8340-47cc-9141-2d80668eaf0e"
        },
        "item": {
          "id": "eaca774c-5755-4d5b-8f55-ce7afe19e501",
          "name": "identifiers"
        },
        "response": {
          "id": "5e5da362-a1fa-4f83-8d78-ead979a180da",
          "status": "OK",
          "code": 200,
          "responseTime": 210,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a591474-384b-4447-ab69-becb82c05338",
        "cursor": {
          "ref": "723073bc-2904-4845-8449-1ee918ad0195",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "266e7406-c026-4cd9-bd47-93e398983fa9"
        },
        "item": {
          "id": "9a591474-384b-4447-ab69-becb82c05338",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e421ebef-b1e0-4cda-8e49-9a0a958318b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4905c659-cdd2-4313-8fea-def90772d75f",
        "cursor": {
          "ref": "ee7b2279-e7b2-4636-b671-fc3a8ebd578b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "07a8b13e-a901-4646-8449-725ef64b0455"
        },
        "item": {
          "id": "4905c659-cdd2-4313-8fea-def90772d75f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "85e9015d-7bfb-485f-9e77-91a021df8fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e57bb6-1411-4f07-ad26-686f1f8a101b",
        "cursor": {
          "ref": "a0b68d00-ac5d-4a9b-a343-ea41a389af7e",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "df2f49b2-35b8-4db5-8d32-d94774400cdb"
        },
        "item": {
          "id": "56e57bb6-1411-4f07-ad26-686f1f8a101b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4a414eee-fbe1-43bc-95af-c071f3f78350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebccd113-6149-4b12-8255-018e4a30ba06",
        "cursor": {
          "ref": "57cff861-5878-4aa5-b61c-dd0da9636c2f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "143a8397-aa2e-4dd2-b7c5-d714df2dda42"
        },
        "item": {
          "id": "ebccd113-6149-4b12-8255-018e4a30ba06",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7550f4e4-7878-4bda-aa1a-8eea75e697f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb0d4ad-b567-47d7-87e0-0d8c4972b600",
        "cursor": {
          "ref": "6be69db4-0c37-4bff-9f25-23780f976acb",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "476cae9a-37c1-4c36-b489-2d8ca1b581b6"
        },
        "item": {
          "id": "fcb0d4ad-b567-47d7-87e0-0d8c4972b600",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "99c304a6-bfc5-4fac-82e7-845277234b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9198b7-6461-4e24-bf8a-ccadb4430a1c",
        "cursor": {
          "ref": "727edcb1-647e-4449-9eb0-4ac0c06b56cf",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "50a76c5c-de29-4009-b27e-9a75386bf53a"
        },
        "item": {
          "id": "0a9198b7-6461-4e24-bf8a-ccadb4430a1c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4a5523fb-ce75-431b-a596-e0be5d53a8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6f2797-a153-4c0c-abf4-74cb61c89574",
        "cursor": {
          "ref": "3824fc53-2340-4bc9-ac6d-bf243e91fb17",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a54b5fa0-8710-4f7f-9e75-d51b3440a5d1"
        },
        "item": {
          "id": "8b6f2797-a153-4c0c-abf4-74cb61c89574",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2d5bf63e-3243-413a-9676-8cd1c00f873c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc8f9a2-973f-4600-8c79-6154cacf3120",
        "cursor": {
          "ref": "96f8aae7-89ef-49ae-800b-83dcc59b092c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1d1dcfb1-813f-488f-a5a5-65e27a89f6b9"
        },
        "item": {
          "id": "fbc8f9a2-973f-4600-8c79-6154cacf3120",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2cc6f230-93fb-4784-a93d-eff7de0094bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1716e7b-af30-4c90-92f7-adc42669de7b",
        "cursor": {
          "ref": "ce93a0bb-3157-4a56-a721-b1247aecf843",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f46b4338-d510-42cb-9129-de5b71bd8c15"
        },
        "item": {
          "id": "c1716e7b-af30-4c90-92f7-adc42669de7b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "043f43a5-901d-48c4-a86a-b2063d36e0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13973d44-daec-4bf5-b52f-19e83511fb37",
        "cursor": {
          "ref": "b12a5042-d4d2-4dac-8052-1627c50c9283",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6959bd02-f308-4bdc-89e6-549ed5f94d62"
        },
        "item": {
          "id": "13973d44-daec-4bf5-b52f-19e83511fb37",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "118c6edf-1eac-466d-acc7-de1448382d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f359308-b553-46ce-81e9-6e53be74c613",
        "cursor": {
          "ref": "a8e86e12-9622-4ead-8309-6553e1cb663a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "59cc13b7-c2d8-45cc-aca1-0ae26d766320"
        },
        "item": {
          "id": "5f359308-b553-46ce-81e9-6e53be74c613",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0970de09-2cd5-4088-afe9-8cd29e4da56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1693fcd-6957-4b3c-a069-c6145d6c7557",
        "cursor": {
          "ref": "eccc7dc2-ab83-4497-bf1d-7cc2afd43fda",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fbc98462-1b22-4cbf-997e-15ba5bb06aff"
        },
        "item": {
          "id": "c1693fcd-6957-4b3c-a069-c6145d6c7557",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e41964d4-a450-4ffd-8af8-09b6eeb8b76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf9f191-f656-4258-837f-82a529c8805b",
        "cursor": {
          "ref": "903df1f2-5dae-41c1-bfb6-8528997ca36c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "19740c64-e185-486a-bf4c-ee599e472cc5"
        },
        "item": {
          "id": "fdf9f191-f656-4258-837f-82a529c8805b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0e2ac960-0a60-45e9-9892-eef5766c1b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68827a27-1562-4c64-9d74-a5bf8bf863f8",
        "cursor": {
          "ref": "1ac1f5db-f45d-4b6e-b641-d4c5e68a056b",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "31abbd0f-dcfe-425d-adfd-327fe4a2ab07"
        },
        "item": {
          "id": "68827a27-1562-4c64-9d74-a5bf8bf863f8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "71844006-7049-4892-856a-146872e2619f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb5e46a-ec29-4aeb-8964-174c9f226081",
        "cursor": {
          "ref": "9cfae02d-4b92-4f93-9e98-1231024bae9c",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c38dfac8-61e3-43e1-a1fe-0e03eb09c091"
        },
        "item": {
          "id": "3bb5e46a-ec29-4aeb-8964-174c9f226081",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b6af6a8a-9fcd-4059-a37e-ae0d3cd74f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a38fb4-19b5-4cd7-b754-9a24590ffdf3",
        "cursor": {
          "ref": "dacdea34-7072-4cdd-bdac-7ea28d1d5164",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5c383ed6-db40-4366-8e45-a124ca935f39"
        },
        "item": {
          "id": "c2a38fb4-19b5-4cd7-b754-9a24590ffdf3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ee4f946d-8344-4245-b740-ea5a0b190e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a39129-b93a-4b42-a8df-f10e95aa4eb6",
        "cursor": {
          "ref": "90542e63-37e7-4943-bd69-254520fe59a5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "18f0ad11-befa-45aa-a0b8-1badfadc537a"
        },
        "item": {
          "id": "b3a39129-b93a-4b42-a8df-f10e95aa4eb6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2bf496bf-6495-46f3-9d93-5dca6bc932e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aa0d99-de7b-41e3-8b3f-57257ecf12c5",
        "cursor": {
          "ref": "881da575-96e0-44a3-aa43-db87766b5411",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a8c0952c-fb60-4a44-8f64-0e83c8e86096"
        },
        "item": {
          "id": "76aa0d99-de7b-41e3-8b3f-57257ecf12c5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2fa8cd84-4399-49b1-937f-a75b554a929f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12b33f2-4fb3-48a6-bb52-271bf5c38475",
        "cursor": {
          "ref": "d54140ca-389b-4fa6-9652-482ec4aa8222",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "98c1e713-9b82-4e93-a3cb-101767f1d6ec"
        },
        "item": {
          "id": "f12b33f2-4fb3-48a6-bb52-271bf5c38475",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8afc156c-b090-4a0f-9fb0-be03ccf38806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42338024-691d-430c-bce4-14451a1cee7f",
        "cursor": {
          "ref": "49e2c6c0-03f6-45c2-afd6-bb4b20150947",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6384e1b8-f18f-4064-a066-9331c8896df0"
        },
        "item": {
          "id": "42338024-691d-430c-bce4-14451a1cee7f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1e99d36d-7617-459a-bd07-cd46b1d93fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6720d4a0-ed06-4ac2-b242-d5adee9f3063",
        "cursor": {
          "ref": "06220fe6-778a-49db-bdc5-e02619280b19",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b40a2216-8bb0-4e44-aeb4-e21a7755ed66"
        },
        "item": {
          "id": "6720d4a0-ed06-4ac2-b242-d5adee9f3063",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "effd7652-b6cf-4fb4-9c76-4d3d4dae0aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7595774-e90f-47c3-b0bd-0b29cd09b8da",
        "cursor": {
          "ref": "91147002-5374-4f07-a211-6835915ea44c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5dfaa992-fc12-47e9-ac39-7d8aa42e74f0"
        },
        "item": {
          "id": "f7595774-e90f-47c3-b0bd-0b29cd09b8da",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e5c135d0-5edf-4257-9285-954c53212fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a3abd3-45f4-4a01-9fbe-c88ad8b2b54c",
        "cursor": {
          "ref": "6da76890-0265-4b8c-a9f2-66d638ff5fe5",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fa5b6598-8fa0-4b40-9a95-87e27e503a85"
        },
        "item": {
          "id": "25a3abd3-45f4-4a01-9fbe-c88ad8b2b54c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e1254dc3-3198-45aa-be2e-e08947526b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c54c4f-b0f9-479a-94c2-6d12e41121c3",
        "cursor": {
          "ref": "1b32e95b-c48b-46b8-9043-4997a536a65d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "71a781b6-0f8e-44bd-93c5-0d6c177b2d0f"
        },
        "item": {
          "id": "57c54c4f-b0f9-479a-94c2-6d12e41121c3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0c3e4ed5-3767-4af1-9f21-59315c97a6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf89ade-1877-4d68-a0ec-faaf2835d962",
        "cursor": {
          "ref": "24a556ec-5643-478c-a80c-4f21a8d6c74b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dd23ee88-caa9-474f-a5d7-5ffc53ca4fa8"
        },
        "item": {
          "id": "fdf89ade-1877-4d68-a0ec-faaf2835d962",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5bb56e8d-4d69-4f5c-9e73-0b9bedc432f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd90fc8e-4347-4d64-9f66-6b570c02820c",
        "cursor": {
          "ref": "3d89edaa-86ca-4191-88e5-8692f76950ff",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2d9764a2-75f1-41ec-bc00-abf5ddb5a065"
        },
        "item": {
          "id": "dd90fc8e-4347-4d64-9f66-6b570c02820c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a88b56f1-b7b8-4408-9de0-a6c84be2329e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2159b544-e14a-4d5d-b5f1-1f21b0c8c6d0",
        "cursor": {
          "ref": "9fc388cd-0b4d-4aee-978c-ac10f4af10a9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9d6d565a-00ff-47de-b312-c80338983f18"
        },
        "item": {
          "id": "2159b544-e14a-4d5d-b5f1-1f21b0c8c6d0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b878d23e-01a9-4527-bb9b-38aafb5af706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10d0eb4-f60a-45b6-9b24-9b7172e3a806",
        "cursor": {
          "ref": "20b7d86a-47f4-4ada-9e4f-f3afe4291d34",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7d6a0d9f-5f45-4455-ad1e-7ae38ac11eba"
        },
        "item": {
          "id": "e10d0eb4-f60a-45b6-9b24-9b7172e3a806",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a4d87c1a-b918-4ce6-baf8-61adf159255d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f609268e-21d4-4cd7-a27c-ced701efcff4",
        "cursor": {
          "ref": "8af7a6da-b0b2-4287-b15d-a8820341dff0",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4dc5374a-5595-49be-9697-2e19bc5b4e5a"
        },
        "item": {
          "id": "f609268e-21d4-4cd7-a27c-ced701efcff4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dccc1948-a185-4797-a517-564beac52065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35109a93-7718-4778-ba14-d640b4172567",
        "cursor": {
          "ref": "9f0b35e8-4af4-49bf-8460-c38de9a2d846",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9a69705d-7547-4291-85e6-34ce42453315"
        },
        "item": {
          "id": "35109a93-7718-4778-ba14-d640b4172567",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e864b904-305d-4a4b-ade3-5ed2ec54d7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd046ae-11e2-47ba-9865-601034d76534",
        "cursor": {
          "ref": "e101bfc7-91d1-417b-a73b-6e7c5bc27338",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a70157be-91c8-4787-9251-8bb7f8bfc77d"
        },
        "item": {
          "id": "1cd046ae-11e2-47ba-9865-601034d76534",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d871bd06-b287-4275-972f-cf6b3369af45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daedda14-ab79-46c6-b570-45831384f327",
        "cursor": {
          "ref": "53d3d251-f8fc-403b-9db3-3289a062acdd",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6bbd996a-3dc8-49c7-8096-83650aff3d22"
        },
        "item": {
          "id": "daedda14-ab79-46c6-b570-45831384f327",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0daf98d0-c50e-48da-bc42-197d53925934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fe96a8-f332-4f6c-aa79-98cb40694307",
        "cursor": {
          "ref": "70b75370-c237-49b6-b865-d1fcf23edc7a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8e44e0c9-4750-41ac-a516-f4fd94788d40"
        },
        "item": {
          "id": "f9fe96a8-f332-4f6c-aa79-98cb40694307",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "865a439c-a43d-4f19-bb34-5c17ef0e6cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8715ede6-2471-4d32-91b5-452208756d59",
        "cursor": {
          "ref": "e1c6dd2f-4ee4-47d3-9452-f549a1269d86",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "855e35c5-1c0f-4ca3-a76e-6b8eac6117f6"
        },
        "item": {
          "id": "8715ede6-2471-4d32-91b5-452208756d59",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "70e97f3d-553a-43d1-8e17-e4dce2ce1340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8468facd-9b5e-4372-b2d0-698c0b4b8040",
        "cursor": {
          "ref": "927167e8-b8ab-42c6-a239-f6f038f12a41",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eefddb8b-bc05-4068-bbf5-3302592b4ff3"
        },
        "item": {
          "id": "8468facd-9b5e-4372-b2d0-698c0b4b8040",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bef92228-91f9-4724-b59d-7a0923ea7fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998fe098-e5b5-48c3-ada5-6d61ce886a17",
        "cursor": {
          "ref": "f945b7c0-13b0-4c46-847d-799779cb8084",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "db19e50d-b501-4411-baed-20abeac2a6ed"
        },
        "item": {
          "id": "998fe098-e5b5-48c3-ada5-6d61ce886a17",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0072a815-72a0-4b7c-b0df-1c846a5f7886",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de0b2c4-0436-412f-bb3b-a5d3ec34bc66",
        "cursor": {
          "ref": "7c11d52a-467b-4992-93f7-f6532f7c372a",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a60449a7-669e-43aa-8769-a0b889243952"
        },
        "item": {
          "id": "5de0b2c4-0436-412f-bb3b-a5d3ec34bc66",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d67c1fad-de0e-47e8-9942-d8a90ad7c99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5fca26-0d47-40a0-b3b6-5410d2b67f9f",
        "cursor": {
          "ref": "8ef92a5b-0982-465d-9dd5-f1eabddd9374",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c1d4805e-0787-4a82-bc6b-2ca409d7c8fb"
        },
        "item": {
          "id": "3a5fca26-0d47-40a0-b3b6-5410d2b67f9f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e1924660-659c-49ae-b0e8-a31555035ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa64e24-1e48-456e-93f0-e33cbd2bef34",
        "cursor": {
          "ref": "3d814239-1d81-445d-86de-a8a8101fcc84",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ac69ad68-6bbb-4faf-8a6d-2f1c274d2a55"
        },
        "item": {
          "id": "8aa64e24-1e48-456e-93f0-e33cbd2bef34",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "328a597c-96b1-427c-a22c-537cc170af31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51859da9-d652-4f25-bf5e-d430ac9b4b16",
        "cursor": {
          "ref": "8ce683aa-b5b1-42e7-8c37-922fae351943",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "06cfe424-c0dc-40a8-b490-c98ac6963897"
        },
        "item": {
          "id": "51859da9-d652-4f25-bf5e-d430ac9b4b16",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ca152928-26a0-46a1-920d-a192d7de8b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42192622-968f-4675-9eaa-356030064844",
        "cursor": {
          "ref": "a18e1355-ea56-46bf-a1f6-2c4eaf42bd9e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "90d5750d-ea75-4f51-896d-d6edef28a52a"
        },
        "item": {
          "id": "42192622-968f-4675-9eaa-356030064844",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "304c8577-043c-42c4-bfba-087991db87ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2440c914-d5b5-4d5e-b2ff-554031e6904d",
        "cursor": {
          "ref": "20579ef7-8cfa-4b12-b533-75680067c37e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e7b0f27f-ee93-47fd-acfa-286a9fe8c32b"
        },
        "item": {
          "id": "2440c914-d5b5-4d5e-b2ff-554031e6904d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a617517a-c722-4c81-ad40-147645cef748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b15a180-e60a-4265-80af-4b12b04f413f",
        "cursor": {
          "ref": "1200fde9-8f64-431f-a188-81f982bbf874",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8f66eb5a-aa89-4fd4-8870-d59b600145a9"
        },
        "item": {
          "id": "8b15a180-e60a-4265-80af-4b12b04f413f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2bacb9e9-07e1-4ef6-bdd1-8a926b25b1b7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da622e8e-3436-4a52-8661-888e08fec9ea",
        "cursor": {
          "ref": "f2e8582b-74ae-46eb-b40a-ebf4f4da13cc",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "25f3019d-47f9-4519-85f9-41f5e7b0f5ec"
        },
        "item": {
          "id": "da622e8e-3436-4a52-8661-888e08fec9ea",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6cca3198-6434-46dd-8cff-93751c87aeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7cd08a-fdbf-4c5e-bd10-4e26e7fd90c2",
        "cursor": {
          "ref": "80c211eb-9391-4a5c-963b-106662c1e83c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "629a2198-ae0a-490a-a429-a6766157d0af"
        },
        "item": {
          "id": "4a7cd08a-fdbf-4c5e-bd10-4e26e7fd90c2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "52dae704-be2b-4899-89d2-a6304ec3f466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afbbd32-143f-4f1c-b3ea-a7d173cd9557",
        "cursor": {
          "ref": "e0166987-3e43-4ff5-b00d-1f55feae2bd0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0ec02136-94b0-4782-9f1f-ae016087737c"
        },
        "item": {
          "id": "7afbbd32-143f-4f1c-b3ea-a7d173cd9557",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ca39dd11-874d-40b0-99b3-0fbeaac7fa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef10dcbb-d71b-459f-8f0b-26a700f2c852",
        "cursor": {
          "ref": "4fa5f41e-0156-41da-8d45-02edbd7d91aa",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "908c102c-851d-4fa4-a6a6-16ab90751051"
        },
        "item": {
          "id": "ef10dcbb-d71b-459f-8f0b-26a700f2c852",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ba968aee-fd9f-4bc6-b4cb-b4004e9a051c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4e78d0-7dc6-4b16-b397-c7f86b58f5b3",
        "cursor": {
          "ref": "e5ed4b5b-da07-4154-bcf4-a55da32fdf90",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9af4a81e-89ad-4219-8fd3-576d451be83e"
        },
        "item": {
          "id": "9d4e78d0-7dc6-4b16-b397-c7f86b58f5b3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e83bc1bc-32a7-4d01-8d86-84eac0f4433e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9321fb-3128-4e96-82a1-94b5cb8c9560",
        "cursor": {
          "ref": "8e947cce-5f9b-4b51-bbdc-18df10b463f1",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e6f65aea-b904-4f20-b1a5-f7df2b103710"
        },
        "item": {
          "id": "aa9321fb-3128-4e96-82a1-94b5cb8c9560",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "55708a07-5099-4ced-9f70-98cc6eb772a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8acc1e8-e658-49e9-addc-8e70682a2723",
        "cursor": {
          "ref": "36abf7e8-dc7f-459a-8351-944af6d55436",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "800eefe0-f238-4e02-a8a0-067d81a86d4a"
        },
        "item": {
          "id": "c8acc1e8-e658-49e9-addc-8e70682a2723",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f24fd2bf-41e9-42b8-9e21-8c5dae08f7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74a2ade-2f70-4ea2-bdf5-5d8495d02fba",
        "cursor": {
          "ref": "b90ecb2c-13d3-43e8-92d2-a6b010bb045d",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fe4e15e3-d08a-4ed5-aa6c-b395aaa6a7ca"
        },
        "item": {
          "id": "b74a2ade-2f70-4ea2-bdf5-5d8495d02fba",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4644ba0a-10f6-4ef7-8a03-8b8fa659d8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02709a5-f1ce-4ed2-887f-3ac3d43ad05f",
        "cursor": {
          "ref": "28c9d76a-81e0-4d01-a735-e00ed30c3fbd",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "061d1f9f-e2f8-41ad-a5a0-81bb13914c0f"
        },
        "item": {
          "id": "a02709a5-f1ce-4ed2-887f-3ac3d43ad05f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ec296181-9305-4149-9290-dfadad30055d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683069bb-2cbe-4acb-b004-600c3f75db5d",
        "cursor": {
          "ref": "0f94d27c-f1d3-45c6-a2cb-debf2df614e6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1800c022-7b63-4502-9512-3833a18d84d3"
        },
        "item": {
          "id": "683069bb-2cbe-4acb-b004-600c3f75db5d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1d77e599-12be-404e-b421-35249c898631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620a8826-6c33-430b-b85e-098c880cc9ac",
        "cursor": {
          "ref": "02d68ffe-35ea-4ffa-8525-c241ac2aea26",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "eb1558dc-91fd-4c08-8bff-b38a6356183c"
        },
        "item": {
          "id": "620a8826-6c33-430b-b85e-098c880cc9ac",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7e676d0d-52c9-4f4c-9cb2-1060ce1dec1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3d84e0-de9c-4a54-81bf-e2d0d0aa8368",
        "cursor": {
          "ref": "5122e340-bf5c-4c48-920f-bbf2f8b932bf",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "edd6b6a5-f2eb-4562-9366-64480d2f9a12"
        },
        "item": {
          "id": "7f3d84e0-de9c-4a54-81bf-e2d0d0aa8368",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a236429b-c6e2-4a3c-b5dd-13db80d42012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386bb202-3817-479b-805f-6d8d06c11212",
        "cursor": {
          "ref": "f17549b5-05fa-4cf1-81cc-c4581a6cb664",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d0db0f00-317e-4a7e-962e-ca8b334fc2e8"
        },
        "item": {
          "id": "386bb202-3817-479b-805f-6d8d06c11212",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ceedd715-0104-40fe-baac-b21dc0684c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2de59c-3c9c-4849-a52b-007163e6f840",
        "cursor": {
          "ref": "e772fbf1-f9fa-4e9d-8a25-60761ef42883",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a4854e74-6137-4b9b-a369-2687afbe28f5"
        },
        "item": {
          "id": "0c2de59c-3c9c-4849-a52b-007163e6f840",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "526c2f51-cedc-4801-8d06-1628f34e8453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf68507-fc0f-42be-b676-ef37ff24327e",
        "cursor": {
          "ref": "3604d9c4-9f45-49a3-aab1-b494169e5f71",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "458e23d1-58d3-4ab2-953e-bf652c387db4"
        },
        "item": {
          "id": "daf68507-fc0f-42be-b676-ef37ff24327e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "efeb092a-2dc5-4c02-ad12-d41a76e62c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443452e7-3590-4d70-ba53-2cba37029417",
        "cursor": {
          "ref": "9a48904f-268e-415b-9631-c2a4291ff7e3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f27bce23-e351-4599-969b-ccbd30148cb3"
        },
        "item": {
          "id": "443452e7-3590-4d70-ba53-2cba37029417",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7773a19f-0dbb-453c-bc8a-882af97389e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b12b1a7-6830-485d-9751-ebdd64810442",
        "cursor": {
          "ref": "5dfd7e70-8f8b-4e2e-a470-ec9f3c498878",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e11d53fe-2da3-4cfb-aa8f-b2e1dda4f4ed"
        },
        "item": {
          "id": "5b12b1a7-6830-485d-9751-ebdd64810442",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "34389766-e7b1-44fc-8ccb-4b8d45d064f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49aa17f-f448-43d5-956a-7972f67f2be6",
        "cursor": {
          "ref": "9ca4c8f2-6be9-46b2-a19a-b4c8a78ff0bb",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f1187c9a-2a4f-4fe9-bcea-003258a5bf45"
        },
        "item": {
          "id": "c49aa17f-f448-43d5-956a-7972f67f2be6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bc119b09-b9be-4d97-9edf-128585c31d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920f486b-5a0c-4604-9e89-17044c5811b7",
        "cursor": {
          "ref": "788985b9-d35a-44ba-8ea1-a8075cf63aeb",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8a27e09d-cc4c-4835-ac58-dbc861e9169e"
        },
        "item": {
          "id": "920f486b-5a0c-4604-9e89-17044c5811b7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "53b463bc-92a5-4275-991b-ffccb01197d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432d3c3a-52a1-418b-ada1-e25d76ee678c",
        "cursor": {
          "ref": "89360c05-0df7-4746-be25-6446fdd8d6df",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b7085482-902a-4dbf-b83e-b75a9bc9e305"
        },
        "item": {
          "id": "432d3c3a-52a1-418b-ada1-e25d76ee678c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "881b1ec0-1787-4522-a2cd-a69b13ed8441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc96345c-5a49-4674-9db2-81bad48f0a8d",
        "cursor": {
          "ref": "2027438c-9b1f-4663-824f-e2bbd70f7e18",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "268f8589-4c3e-4449-8c88-3e9b3223aea0"
        },
        "item": {
          "id": "cc96345c-5a49-4674-9db2-81bad48f0a8d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1f70ca91-53b9-4e23-9c2d-8dd8f547948f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b03090a-6c12-4b06-8f8a-d758f803168d",
        "cursor": {
          "ref": "dedb01df-8309-442b-8d3a-44025b22aab4",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6fe84a87-2b99-43b3-8c84-171b922bc97e"
        },
        "item": {
          "id": "5b03090a-6c12-4b06-8f8a-d758f803168d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "456862bf-34cd-4ac0-bfb6-804078de9372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a032f9-0464-414f-8af1-3bf037257b92",
        "cursor": {
          "ref": "32a3f94c-e560-43f5-8769-9d93fec0ed33",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "db41db6b-4440-4563-a5ac-5e91e345fbe7"
        },
        "item": {
          "id": "35a032f9-0464-414f-8af1-3bf037257b92",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "da886125-6084-45e6-9ec3-49cfbd51bd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dddc8ea-259d-4000-b861-6bee0a316f5d",
        "cursor": {
          "ref": "14518306-f8bd-44e5-8be3-abb267baa12b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "25dec77f-1ef1-4811-8d40-83120d368fa9"
        },
        "item": {
          "id": "8dddc8ea-259d-4000-b861-6bee0a316f5d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0aa36d55-b833-41af-ba97-a3f3e386a416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcc29ac-1e77-4701-9c2f-922b13fbfc1e",
        "cursor": {
          "ref": "d0dcbadd-3041-424d-be3a-e9cc33882fa7",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6e381fc2-723b-4154-a804-eafd2a6c0a1f"
        },
        "item": {
          "id": "1dcc29ac-1e77-4701-9c2f-922b13fbfc1e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "66fb8bb9-eeb0-486b-9af4-863613df0ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64786b7c-82f1-4881-bfdd-d6efe1dc245a",
        "cursor": {
          "ref": "7d77d42a-292e-49b9-a022-59fd53a72e58",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "90aa08ff-b4fc-4f72-9f3a-e76a19b658e2"
        },
        "item": {
          "id": "64786b7c-82f1-4881-bfdd-d6efe1dc245a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fbb72f46-e6a3-4255-985e-0e0e35a940c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5dbf86-08ac-446d-baac-95b81a5be67f",
        "cursor": {
          "ref": "d14ebf72-6029-42f6-87f1-467ffc21e58e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "89726840-fd15-43c2-85f3-eb4de700910c"
        },
        "item": {
          "id": "3e5dbf86-08ac-446d-baac-95b81a5be67f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5d4822d3-fb37-448d-acd7-3533c0f03548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b464af8-52a2-4d50-a173-318b54f667fd",
        "cursor": {
          "ref": "533d09ea-fafd-4db0-98f3-e092b8373fce",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "767421df-10fb-4496-9e3a-99eacbb373e5"
        },
        "item": {
          "id": "7b464af8-52a2-4d50-a173-318b54f667fd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3e2815ce-7b67-492f-a0db-d492df616de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243a2c9a-cbb3-4ff8-9f2d-ee6cf7f4e323",
        "cursor": {
          "ref": "34b65056-2a71-4229-9d05-6318e736f6cf",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1c12b797-ff92-41b7-a5db-d57d7b79f3ce"
        },
        "item": {
          "id": "243a2c9a-cbb3-4ff8-9f2d-ee6cf7f4e323",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2dce8494-9159-40a2-aa45-d6a127ca5f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b81c042-2daa-4f0c-98db-ff844899b9c1",
        "cursor": {
          "ref": "877c66b4-f8da-47be-8eaa-0b5f1f38db20",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0dc6778d-a3b4-410d-a5a0-cb36be45704d"
        },
        "item": {
          "id": "9b81c042-2daa-4f0c-98db-ff844899b9c1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b690a9ed-9488-49fe-bb58-71c1add99c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779977f4-f16e-4d8b-b34b-1d1e9c4ed070",
        "cursor": {
          "ref": "7f8f72cb-a474-47ac-925c-7f32aefab9b8",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e05bc5c0-68f1-4b9a-9f98-9ec51ebf2379"
        },
        "item": {
          "id": "779977f4-f16e-4d8b-b34b-1d1e9c4ed070",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3dca82a3-73e7-4534-b817-3744e46389c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6d962a-88a8-471f-b45e-1f74cafd4f00",
        "cursor": {
          "ref": "ff455286-f967-4fc2-bd13-7dea7bcb8978",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3215056d-cd01-4d25-9fdc-eb1a08fcd98c"
        },
        "item": {
          "id": "0b6d962a-88a8-471f-b45e-1f74cafd4f00",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0d3ab1d1-1ea8-4e2e-a938-8a16bcc3e218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc40ae9-e8aa-4842-8db5-0efed7ac6ede",
        "cursor": {
          "ref": "be3c7c9c-3b80-4c24-bb35-00cc7e5426f6",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1e6ea54f-ce3a-4bea-9f0a-09642d5a04cf"
        },
        "item": {
          "id": "6bc40ae9-e8aa-4842-8db5-0efed7ac6ede",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "23749101-dc06-431a-9914-a5848458613d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98153489-8af4-4087-80a2-4da8608ba170",
        "cursor": {
          "ref": "de26457f-7491-43f3-b0d4-7b971d48f5d7",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "35db0bed-e87a-4091-ba61-de2a9691ca82"
        },
        "item": {
          "id": "98153489-8af4-4087-80a2-4da8608ba170",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "15dfd72f-ee9b-4844-a3f1-6e3f7c11b7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a5b948-ffff-4cbf-9743-d2ffec7867fe",
        "cursor": {
          "ref": "032e7083-8b8f-4588-8edb-93c6aae19ca1",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1f0a3825-230a-4d21-92ba-026b7aa5c6e2"
        },
        "item": {
          "id": "b0a5b948-ffff-4cbf-9743-d2ffec7867fe",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "41856445-84ec-4cc9-9d15-ef9cb0b5c4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb1fcb1-f882-4e90-b6ea-7ab6d823eec7",
        "cursor": {
          "ref": "54ed4b77-2677-4bdb-a357-13df9b9c8fb6",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "918ba2db-3d81-46ec-b407-050101d5d2cb"
        },
        "item": {
          "id": "aeb1fcb1-f882-4e90-b6ea-7ab6d823eec7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e35004f9-1174-49f0-bcf0-f3619e29a896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78840902-9a27-4792-8f56-d0bfdde250d4",
        "cursor": {
          "ref": "03bcc01f-0c98-4b5b-8bed-51fa0469d4d3",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ff62549b-99a7-49ab-8bcd-e22950c1d3b6"
        },
        "item": {
          "id": "78840902-9a27-4792-8f56-d0bfdde250d4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "496d2c1a-20c2-419c-b2d4-54f27ae5df1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76245ca7-d00c-4c70-a0d6-2eb93c9a255d",
        "cursor": {
          "ref": "cd539d30-1672-4f2b-a592-76d1c933e661",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5c40e9d6-0b78-4298-b019-86f68553c238"
        },
        "item": {
          "id": "76245ca7-d00c-4c70-a0d6-2eb93c9a255d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c47ecbac-b741-467a-a4aa-5ef038db63d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f133d86e-0d46-418a-9580-92b18681350c",
        "cursor": {
          "ref": "4c3bbee4-ec78-4e4b-bd78-4e919b833b41",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5e472bbd-f2c2-45b4-9b3a-0d76487f98d5"
        },
        "item": {
          "id": "f133d86e-0d46-418a-9580-92b18681350c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c2384a71-3f61-4d72-a2d7-c0b7328189ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8537d19-dc89-4a14-bc21-a1b35241329b",
        "cursor": {
          "ref": "261b7583-aca4-4706-9802-869914a872b9",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4ecd69e0-0569-4cb6-9edf-c0f9ee9a3df9"
        },
        "item": {
          "id": "c8537d19-dc89-4a14-bc21-a1b35241329b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eaf8b38c-d9e2-42b3-b5cb-17bad82868c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c31592e-4b16-4ca3-bb37-c02f83ce7862",
        "cursor": {
          "ref": "5285bd02-61af-4a7b-9ba0-e68a1f95b7c0",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ce85c9fe-a5cb-433d-b1c6-30db5d1d7896"
        },
        "item": {
          "id": "3c31592e-4b16-4ca3-bb37-c02f83ce7862",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5b65465a-3252-4681-b533-27cf5b13619c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e0ad5b-e2d5-4554-9e8f-62d06efd822f",
        "cursor": {
          "ref": "c3609713-024c-4d4d-8a49-5ab0868fce81",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2880dec0-9d8e-41cf-8808-c10a5770668f"
        },
        "item": {
          "id": "93e0ad5b-e2d5-4554-9e8f-62d06efd822f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f70d9ea3-d99e-40ca-a92e-0ec00668a887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7832b5e6-00a2-4ddf-a4cc-53788ac66783",
        "cursor": {
          "ref": "e1a573e0-9056-40af-ab46-7a18b433e32b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4da50cee-b540-4611-9327-95f800be46b4"
        },
        "item": {
          "id": "7832b5e6-00a2-4ddf-a4cc-53788ac66783",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7ebc37f0-4fc9-4e5d-83ba-6a68f27cc39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee290ef9-aa16-40aa-896b-7823b937a29b",
        "cursor": {
          "ref": "307401bb-927a-458c-a521-e956938d4e8c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2029a6de-b2bf-43e0-8a86-73b397b53af9"
        },
        "item": {
          "id": "ee290ef9-aa16-40aa-896b-7823b937a29b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9a71d9ba-2b17-4b95-932c-3f379f38bc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bb7be5-3ee3-435e-bf58-6bd8194b796c",
        "cursor": {
          "ref": "48012004-8f2b-4138-bf9f-705f7b4bc017",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bbf9cbc9-b947-41a3-bc23-19afbde95f59"
        },
        "item": {
          "id": "62bb7be5-3ee3-435e-bf58-6bd8194b796c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c2f0cd81-6f7d-4b0a-aeff-e8d1b5edb04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52aa97b6-1c52-485d-a8de-0af54ebd1284",
        "cursor": {
          "ref": "41602fd6-5763-4e1b-a277-20b5286710d8",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e60d21ff-cfa8-4a9f-9971-56b268f1325a"
        },
        "item": {
          "id": "52aa97b6-1c52-485d-a8de-0af54ebd1284",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "13cfe911-5b5f-4f4b-88d4-55753393c1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81d705f-d449-4ad0-a424-9bd7e185444e",
        "cursor": {
          "ref": "13480a6f-2660-4d17-9ac1-ed2b3a27f9f5",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5e18f8cb-3338-4674-98be-98d78aa4c262"
        },
        "item": {
          "id": "b81d705f-d449-4ad0-a424-9bd7e185444e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "04d1e5e6-247c-45dc-8425-4b4fdea867bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a44a65-18e2-41c2-a5d1-7dcf05bf4dea",
        "cursor": {
          "ref": "6e8a8ec3-85b6-4e12-be93-5a688ec3e534",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "757802b3-c7b3-4d09-adf0-1d6a099d4382"
        },
        "item": {
          "id": "f9a44a65-18e2-41c2-a5d1-7dcf05bf4dea",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cf7dfc4f-05bd-4e19-8088-703c834394da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1800743b-8eaa-434d-a951-5a0ad2437e5b",
        "cursor": {
          "ref": "184a2abb-443f-4bd7-97e6-4c49177ea40d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "786b19db-2012-495e-a501-1eba0f4d2f22"
        },
        "item": {
          "id": "1800743b-8eaa-434d-a951-5a0ad2437e5b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "952ce316-1291-428d-b91b-0e3cf5337acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f5aa03-4fb1-45ac-89fb-ce79f2d4b8aa",
        "cursor": {
          "ref": "d9b061a8-5083-45de-a403-0c464599d2ce",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "56655e95-7193-45f7-b6ec-00de109660b1"
        },
        "item": {
          "id": "f3f5aa03-4fb1-45ac-89fb-ce79f2d4b8aa",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d30ff1e2-df8f-4292-90ba-0eecc0276d99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276a6fba-4e40-4e4e-868a-f5c2326ba93c",
        "cursor": {
          "ref": "55ce51ff-88ac-4e34-972d-befdcb9cfe85",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "386e40be-d2ad-4a0d-9a13-4805d7fe155b"
        },
        "item": {
          "id": "276a6fba-4e40-4e4e-868a-f5c2326ba93c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "41c69ff3-020f-4ce2-9041-4d1646a57055",
          "status": "Created",
          "code": 201,
          "responseTime": 136,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9ff461-af63-4c4b-853b-ae33a32d01ce",
        "cursor": {
          "ref": "19934cd8-4b88-44c5-8d39-2fb4a2c5e144",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e3992a1e-08d8-4d33-b80c-b5f55358c879"
        },
        "item": {
          "id": "5a9ff461-af63-4c4b-853b-ae33a32d01ce",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7381e4f1-7b47-4a1b-85bb-aaa7115c0328",
          "status": "Created",
          "code": 201,
          "responseTime": 238,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bfdb24-322e-4192-ad70-2c03c94138cd",
        "cursor": {
          "ref": "563fb788-0646-4231-86fe-84db3aec913a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "75098514-8ab0-42f7-ace1-29ff32eead41"
        },
        "item": {
          "id": "82bfdb24-322e-4192-ad70-2c03c94138cd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7c764883-8fce-4e64-a867-e618a74478e9",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b090348-74db-427f-a3d4-04f9e7628f3a",
        "cursor": {
          "ref": "5d661e2c-5214-43c2-8e2d-ae988f881bcb",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6eebba72-bdc9-4572-b889-cdb58d7e3e9f"
        },
        "item": {
          "id": "3b090348-74db-427f-a3d4-04f9e7628f3a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9b3ed8e6-a6d7-4ecb-8fa3-96134332b853",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "080e62d9-5b88-4a59-830b-c8b5359a37ab",
        "cursor": {
          "ref": "beb6cfbf-dcde-471d-b241-cd0e664c73e0",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4cdc34e9-c10c-40c6-b99d-d3d4e2cf7921"
        },
        "item": {
          "id": "080e62d9-5b88-4a59-830b-c8b5359a37ab",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "29968592-6c0e-4d4b-bfec-061ec584c30c",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d5334b-65c4-49f7-af46-4eb139e2eb14",
        "cursor": {
          "ref": "47e9041b-6cdf-497e-abb6-5f8a617a6975",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d95ce64e-0ed7-47a7-a1f4-f99766c0a14f"
        },
        "item": {
          "id": "66d5334b-65c4-49f7-af46-4eb139e2eb14",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b98f0f8e-1ce0-484b-a75e-09108d94d01d",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c58acde-1998-4e53-82c6-6948024cc5a9",
        "cursor": {
          "ref": "d367cac3-33b9-424a-a92a-1473c65af83c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "397e6543-93fb-45dd-9f52-30db49df529b"
        },
        "item": {
          "id": "8c58acde-1998-4e53-82c6-6948024cc5a9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5bdab528-d922-4d4a-8ede-caed012354e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23dd1cbf-11dd-4ad0-bc22-b2f7b7a61449",
        "cursor": {
          "ref": "43184eb2-6807-4118-89de-552280c2ff4b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7ecdbe9b-46c8-40da-a456-c1dc2dc30823"
        },
        "item": {
          "id": "23dd1cbf-11dd-4ad0-bc22-b2f7b7a61449",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "615c8185-4a49-4a6f-aa19-49d3b3da5293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35b699d-7d28-450e-8563-7f88ac0810e7",
        "cursor": {
          "ref": "f4b391ca-0b3f-4566-81e8-8829060cb7dc",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "48dc4d27-2628-4956-a286-ecc53c58f595"
        },
        "item": {
          "id": "f35b699d-7d28-450e-8563-7f88ac0810e7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "662ca31d-fbec-46ea-a5a6-0fc4a19c4573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859a147c-647e-4e29-a8ad-b7e27d146a95",
        "cursor": {
          "ref": "9eb80c3b-03c0-45d0-b0f2-0f9f8855f198",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f86e7dde-8c69-4b1a-a6b0-5bfe75820291"
        },
        "item": {
          "id": "859a147c-647e-4e29-a8ad-b7e27d146a95",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d216b352-94c4-4589-ac02-495a86acdc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b55f7a6-9f24-4642-ab8d-70deaba1f7ba",
        "cursor": {
          "ref": "dd3603ee-49db-4ef8-af03-d940a25d9977",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "685598fe-48a2-4c6b-a8ba-6ae14d2290e8"
        },
        "item": {
          "id": "9b55f7a6-9f24-4642-ab8d-70deaba1f7ba",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "53a21bee-9212-4cb9-abba-1935114b2bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adc089f-3b0e-41df-a03e-1a9479802052",
        "cursor": {
          "ref": "aabd56ee-7ea6-422b-aa89-2c0834183078",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7f445cdc-00df-4fed-a0ec-2503040caea8"
        },
        "item": {
          "id": "4adc089f-3b0e-41df-a03e-1a9479802052",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "165abe75-7a81-4f88-8286-71194e2a6abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235bf5c2-3660-4c50-9f93-5d183031640e",
        "cursor": {
          "ref": "1d8e76a8-c6e9-4641-b98b-b5577691fb60",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "87c67d09-b310-48f8-ba7f-2585e8a2a885"
        },
        "item": {
          "id": "235bf5c2-3660-4c50-9f93-5d183031640e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6bbd8660-4ae3-4e6e-b432-7113cc5e46d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db406a6c-939a-425f-832d-db3879989685",
        "cursor": {
          "ref": "73b3043c-779a-418b-a15e-d8c20d4980f0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "071ef04a-cd55-46c1-a267-e6aa287f1019"
        },
        "item": {
          "id": "db406a6c-939a-425f-832d-db3879989685",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0b5d5282-2258-4cd5-a378-bb3a15169760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792f3b3c-11bc-4a67-bbeb-310e9c27e09c",
        "cursor": {
          "ref": "eaadcf48-7363-4aa5-b72b-2543b438ca66",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "89d788bc-350b-4480-baf9-f9c1b01bb908"
        },
        "item": {
          "id": "792f3b3c-11bc-4a67-bbeb-310e9c27e09c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e297144b-dcf5-4d8d-85b7-b8846f764de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ca2b3e-3a42-4b67-8bb1-a28178f3a5b3",
        "cursor": {
          "ref": "cfbe2991-00b2-408d-8415-5a04b5ff3a3f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "51a231e7-e2f0-40f8-8ead-428a111cd845"
        },
        "item": {
          "id": "d7ca2b3e-3a42-4b67-8bb1-a28178f3a5b3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a24d7594-5618-4028-a62e-ef26ece0beda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282d6014-1ad0-4451-b7a4-757db0e6931e",
        "cursor": {
          "ref": "0c8b01e6-a3f2-4df6-8cce-c17c3ab15d15",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6183958c-a73d-416a-9772-c4628535137c"
        },
        "item": {
          "id": "282d6014-1ad0-4451-b7a4-757db0e6931e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8f1ef92b-8737-4e58-afdb-7bf25ce0d30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc67676-39b9-4a7a-86b8-5270b0e97a95",
        "cursor": {
          "ref": "f4acb629-d5a2-4cd4-a947-57b0f78177a9",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1fed0300-3263-4eae-a5f4-b2cec52b2eb9"
        },
        "item": {
          "id": "9cc67676-39b9-4a7a-86b8-5270b0e97a95",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9f7f8d49-fcf1-40c4-b8db-1a565305ef22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a32167-e265-4ae3-ab81-9454aa9f987b",
        "cursor": {
          "ref": "2a4b7622-67c0-4dc8-bae0-4b8fc5448a11",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e642c777-9996-48a1-8fc2-9771b6ba5ec8"
        },
        "item": {
          "id": "55a32167-e265-4ae3-ab81-9454aa9f987b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "60d99db2-d104-497c-b4b5-dc20e85e2429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed82249-0cee-4d01-a375-838ce43d2860",
        "cursor": {
          "ref": "1a50b78b-5bf9-4aab-a39f-ba84714bb779",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "754f5405-5436-4fb0-a379-e27e46a011c8"
        },
        "item": {
          "id": "3ed82249-0cee-4d01-a375-838ce43d2860",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "afbe74fa-692f-4b2b-aee3-7b91b3570cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1336c12-2ecf-441c-8af2-de9d8a6e6129",
        "cursor": {
          "ref": "116442f9-9806-4f18-b494-1fe2a66f7a87",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cf488e67-f4e1-4aac-939d-7857d88b7af1"
        },
        "item": {
          "id": "e1336c12-2ecf-441c-8af2-de9d8a6e6129",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "52d4bd78-53cb-42a8-a933-44b2b61f2d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5118f237-60c6-491c-9f36-7486a9114698",
        "cursor": {
          "ref": "dd3b576f-87a7-4f82-bda7-d7d789093ad1",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fa45ffc6-c549-4fd1-9318-47c1ef8f382a"
        },
        "item": {
          "id": "5118f237-60c6-491c-9f36-7486a9114698",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4d3e7a55-8254-4c62-a87e-25e0c8510d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd0c122-c49c-42ad-9bb8-e2d6ee4dd135",
        "cursor": {
          "ref": "062208d9-46d5-473f-885f-c43d381b7b5e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4fe87234-2f9c-409f-9b03-8a345d5f3bb3"
        },
        "item": {
          "id": "7bd0c122-c49c-42ad-9bb8-e2d6ee4dd135",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d6ebedec-cf3b-4538-845e-4543d7e65bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f815cf8a-c04e-4097-b37e-ba5d1fee752b",
        "cursor": {
          "ref": "4826a838-e8e3-4ebc-833e-8944efa7dc97",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "568eb2c1-3e38-4147-b7ac-fcd2b5ec06f0"
        },
        "item": {
          "id": "f815cf8a-c04e-4097-b37e-ba5d1fee752b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e16b86fb-f9d3-46c2-91f7-2a8945e0e1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db249fd2-e7dc-4c4a-a5cc-e26a9fb7257c",
        "cursor": {
          "ref": "972c1986-19fc-4a2d-a65b-cca7681cd608",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4ff130a6-6c20-4be3-a839-7f40d4a0b711"
        },
        "item": {
          "id": "db249fd2-e7dc-4c4a-a5cc-e26a9fb7257c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "026d85a2-abe2-455d-abb0-4c7e4f6352b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2b5ebb-b51d-46b8-998d-3b5c4268d832",
        "cursor": {
          "ref": "59f0384b-2ff7-425c-88e4-7dbb1bb6322e",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8825513f-4bb4-4d8c-a12a-2563e418c3b5"
        },
        "item": {
          "id": "6b2b5ebb-b51d-46b8-998d-3b5c4268d832",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c1adfedf-b14e-4f36-9860-9ce2e504dcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c68aaa-3ec5-4827-a3ab-eb8f850d7286",
        "cursor": {
          "ref": "fc01c6bf-5015-42ec-8c75-e81057040771",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "70ec5060-4d62-4cc2-bb66-55a5c6664e4d"
        },
        "item": {
          "id": "a6c68aaa-3ec5-4827-a3ab-eb8f850d7286",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c66b250b-5454-445c-831d-c9526dbda225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937f8bcb-1c38-40d4-80c8-57630270354a",
        "cursor": {
          "ref": "0bdc038e-d205-44bc-b041-ccd77e3912b2",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dd9285c3-82cc-4908-a525-00a86f7608b4"
        },
        "item": {
          "id": "937f8bcb-1c38-40d4-80c8-57630270354a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cb92b102-a0e8-4dee-8458-ed13122d336d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb02cdd-d331-4468-b61d-88ff61493cd5",
        "cursor": {
          "ref": "a51c0c2f-194a-4f9c-9e3e-443b6a37f05f",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a84bdf0f-d288-47e2-b3d0-499048694834"
        },
        "item": {
          "id": "0fb02cdd-d331-4468-b61d-88ff61493cd5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6dc2c81c-069c-4b34-bfe2-5533f6785f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48e33bf-056a-4b94-bb9b-c60006c32584",
        "cursor": {
          "ref": "f8c434cc-b46f-486a-a87b-6434eb5972f8",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "42df891b-b446-4d78-9c80-f817ceb7ae98"
        },
        "item": {
          "id": "a48e33bf-056a-4b94-bb9b-c60006c32584",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3ed92a72-739b-476e-8fca-40d331e3ab29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e46b448-7321-4862-8db6-0eea765097aa",
        "cursor": {
          "ref": "75f1dbbc-34c3-4377-921d-2503974ba51d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7ec5153c-037b-4a35-90c1-287e81d8251d"
        },
        "item": {
          "id": "8e46b448-7321-4862-8db6-0eea765097aa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a0e26538-0b6f-4611-98f0-27c44c566caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f06b07b-239e-4735-9761-39254cd7b2d5",
        "cursor": {
          "ref": "c197d956-524e-482e-94fe-ec815551aaa6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ef8cca67-e6e6-458a-8b98-a39cf46d2727"
        },
        "item": {
          "id": "6f06b07b-239e-4735-9761-39254cd7b2d5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "60bf3092-8a00-4feb-a3bf-e1f9176582e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f885829a-70dc-4a91-8abc-8b9c2b5b67c8",
        "cursor": {
          "ref": "ab41a975-6773-4e2f-9bad-97862b79fdb8",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bfa74977-f23a-4638-937c-d58a91087125"
        },
        "item": {
          "id": "f885829a-70dc-4a91-8abc-8b9c2b5b67c8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f1a40c38-60e9-416e-adfe-84dcbb94a93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f650c248-412f-4492-97a6-e2ce9b1edc34",
        "cursor": {
          "ref": "60d842c1-ea95-42db-afb0-f68ecce6e54d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "153f3556-a262-4039-9980-498be952fe13"
        },
        "item": {
          "id": "f650c248-412f-4492-97a6-e2ce9b1edc34",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "22842ac0-eb9a-46c3-8a40-41e51376b3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24280d9e-7af7-4888-8220-ac62a900d8be",
        "cursor": {
          "ref": "c275d5af-1723-4287-9768-0d7e0fa495df",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ce21ca36-f1ab-43f8-aed9-133edec63ce7"
        },
        "item": {
          "id": "24280d9e-7af7-4888-8220-ac62a900d8be",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "70cd951b-77fe-4fd5-a128-456b8290c355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682fbccb-fb33-45d6-ad5b-f94ac0d63ea9",
        "cursor": {
          "ref": "be417dd3-2c04-4ad0-baec-25c3cb00f96a",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "03193970-0b4c-4770-9ae0-44d1055b90bb"
        },
        "item": {
          "id": "682fbccb-fb33-45d6-ad5b-f94ac0d63ea9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9c6741c1-ce8a-47eb-bb14-4456d12057f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe96391-3fb0-4fdb-b109-5ecd2ba84634",
        "cursor": {
          "ref": "a42963cb-dbd7-401d-ba5a-65c68586dd28",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "368a63ba-6136-446b-b870-e4b4a6e13036"
        },
        "item": {
          "id": "cfe96391-3fb0-4fdb-b109-5ecd2ba84634",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "82286546-078c-48b2-91e7-690a495d19c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ca00b8-82fc-403e-8384-17dc2bd6528a",
        "cursor": {
          "ref": "16b60115-e2e6-4837-b3ff-f0ad166943b1",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5669325b-4d18-4886-9431-d1394e46673b"
        },
        "item": {
          "id": "94ca00b8-82fc-403e-8384-17dc2bd6528a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "da94aa6a-0a38-4e3d-951f-74395e935cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6919bde-3904-45df-8c23-140d7fa95c2b",
        "cursor": {
          "ref": "554676a8-35f8-44d1-b838-e0e41ed6b590",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1b30b195-e6a0-4807-b1ca-f215c1eb3a9b"
        },
        "item": {
          "id": "a6919bde-3904-45df-8c23-140d7fa95c2b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "85474c7b-c60e-4a01-a41c-e88afe87a228",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4c6af0-d995-4a5c-8be6-4156d0d58d0c",
        "cursor": {
          "ref": "b4d03bc5-1f36-4cbe-9a3d-25a1de8ddcb2",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "897e1b76-d622-441a-8875-bf4e02633988"
        },
        "item": {
          "id": "ef4c6af0-d995-4a5c-8be6-4156d0d58d0c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "946327d2-aa7a-4bce-a793-e71b3471450e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc89a0c4-0fdf-42b1-9413-07f7d70f03ab",
        "cursor": {
          "ref": "864b0763-9ddc-4eae-96eb-6f738eff1a82",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1d92edef-dfe6-40de-8475-c02a4c320e24"
        },
        "item": {
          "id": "fc89a0c4-0fdf-42b1-9413-07f7d70f03ab",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a314a264-348e-4db2-88d0-e1e05c362cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6abc3f3-1fa0-47e3-bf4c-4ab407722d5d",
        "cursor": {
          "ref": "39ff6452-0980-4f6d-82a4-5ec2a587b08a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "56560bc9-2fec-403a-bc1b-ae18c0e68595"
        },
        "item": {
          "id": "f6abc3f3-1fa0-47e3-bf4c-4ab407722d5d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "93361181-f012-4ff0-b694-8003c81ddd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807df74f-539c-4291-abb2-ee7126773765",
        "cursor": {
          "ref": "0e51d363-a309-4eca-a901-ead15ff13fa1",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b8dbe5b6-fae6-4bc7-b6eb-70a3128e2a6e"
        },
        "item": {
          "id": "807df74f-539c-4291-abb2-ee7126773765",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "373336bb-f613-4aa1-a7ce-3490ccca20b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b15ffd-3bde-426c-b5be-f6a796cf93c0",
        "cursor": {
          "ref": "cb4f1b77-b070-44df-b5b7-4e922d9fe77f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "83ff35ac-2ce6-47a1-8b5e-106fec39507d"
        },
        "item": {
          "id": "b4b15ffd-3bde-426c-b5be-f6a796cf93c0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f22053ad-363b-40c6-8c64-0444f1fe38c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc7b927-90d6-4702-bd53-ebf98d026289",
        "cursor": {
          "ref": "eea05033-043b-4820-b0e1-aa924a4b739d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0d82de4e-60f4-425c-ab99-86429563f1de"
        },
        "item": {
          "id": "9fc7b927-90d6-4702-bd53-ebf98d026289",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "820377eb-621d-4788-8a60-34b0ad9bd6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fbeb94-b58a-464a-9c07-2de9fbce7aa1",
        "cursor": {
          "ref": "4947b17f-12f9-4fee-b4a8-eedb5e16d2d3",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "10238d65-fdb5-4832-86f8-7721fa3d4a62"
        },
        "item": {
          "id": "45fbeb94-b58a-464a-9c07-2de9fbce7aa1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "83db8b7c-dcac-4e97-b0ce-2197c4851b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa42be5-5611-4131-9720-fa66922058b9",
        "cursor": {
          "ref": "19ef3416-ad2b-49a1-a164-3f3957756497",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "22c16394-68b2-42a6-b52e-94365ab7de74"
        },
        "item": {
          "id": "0fa42be5-5611-4131-9720-fa66922058b9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1a2a19cf-dcc3-489d-bbaf-e0058138c10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73816f9-9ef7-4311-ab19-720f9c18e859",
        "cursor": {
          "ref": "6852548e-c706-4815-8b72-9e47a65b3c63",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9b45ec3e-3f07-4596-a36c-9980f9947c4f"
        },
        "item": {
          "id": "f73816f9-9ef7-4311-ab19-720f9c18e859",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d399c3dc-d4fb-48e8-a212-7413ac957370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d5cef0-6934-499f-94ef-515f5aa9bbc2",
        "cursor": {
          "ref": "99082a30-f686-48fa-9420-b45fc090c36d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5824ceb2-18f6-4320-8527-b03b56e3bcd8"
        },
        "item": {
          "id": "b6d5cef0-6934-499f-94ef-515f5aa9bbc2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bef7c771-7f02-42ed-88ad-7027b3fe47e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c730cde2-266a-41eb-87cb-a9b0b4447770",
        "cursor": {
          "ref": "86d12f81-467e-44b3-bc2d-0bc94f89940d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5dcf7456-22cf-4d50-b747-f27df12b20ff"
        },
        "item": {
          "id": "c730cde2-266a-41eb-87cb-a9b0b4447770",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6880346d-bf79-44e5-af62-bf7d4d462f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d62da7-9855-4fd6-ad4f-4b84b753eb4b",
        "cursor": {
          "ref": "882509de-1e87-427a-889d-10aa9b055550",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "668aedd6-b56e-4a8e-ae8f-ac3ffc95253c"
        },
        "item": {
          "id": "b3d62da7-9855-4fd6-ad4f-4b84b753eb4b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "99171f9e-18af-447d-aa65-883ccd39f979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee073a8-1f8b-4b05-b877-5291bd8e8461",
        "cursor": {
          "ref": "b4109b32-6a94-4a48-91bf-2582de41799d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "08011712-88fb-4750-8bb0-bb7394a48689"
        },
        "item": {
          "id": "cee073a8-1f8b-4b05-b877-5291bd8e8461",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "94388135-e0a9-41ee-a33e-2ff04cdeab51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705ea5dd-77ce-4909-8966-bf61b985d4b2",
        "cursor": {
          "ref": "e39fb007-f111-4aa2-bc88-6146b07853c0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "414c20e9-dad4-4286-a137-e2db6027cf7c"
        },
        "item": {
          "id": "705ea5dd-77ce-4909-8966-bf61b985d4b2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "111645da-4e7d-4a68-ada2-7815d0745ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77560878-254b-4170-8106-4d14471f9229",
        "cursor": {
          "ref": "44b6199c-8002-4e43-bfee-61113758b6ea",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bb0cd94b-1966-4f7e-972d-bf2c45cae1b9"
        },
        "item": {
          "id": "77560878-254b-4170-8106-4d14471f9229",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c59bc543-eb2d-410f-b1f3-ecab802da4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76909576-60a5-4c0c-872f-4d946c859f91",
        "cursor": {
          "ref": "a7027ca2-67af-4e09-8624-724b5c9748a0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "852355fa-ad2d-4605-9dd4-f492f5034bfd"
        },
        "item": {
          "id": "76909576-60a5-4c0c-872f-4d946c859f91",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6c572ed6-0f66-43d4-93aa-efca5f56cb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eed441-c07c-479f-95d1-aefc4add55e4",
        "cursor": {
          "ref": "40255428-746a-4477-8e8b-1061d793cff0",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2f3095d7-4057-439a-8442-5032736bda1b"
        },
        "item": {
          "id": "a4eed441-c07c-479f-95d1-aefc4add55e4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c0c392e8-b2d4-490e-b838-913e34251f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d017205-0904-4626-bca9-58f64e89dcca",
        "cursor": {
          "ref": "d1fdfb17-cb15-4f11-9f46-bb137fac492d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "060a0142-d6e6-4c1d-84c3-88b81328afb7"
        },
        "item": {
          "id": "3d017205-0904-4626-bca9-58f64e89dcca",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5d83b2e0-e4c0-4b06-9efd-38c33c051e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7e157d-d183-4bc4-9bd9-3545debb3975",
        "cursor": {
          "ref": "e0b37b3d-eabc-4c93-ab3d-3533020522f2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "724833d5-fcef-4628-8a1d-c09345eb8d51"
        },
        "item": {
          "id": "4a7e157d-d183-4bc4-9bd9-3545debb3975",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "036a9fd1-0b1b-4b73-b67f-2dbac842a755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301d8bbd-b8d2-4b1b-870e-6c6843cf5761",
        "cursor": {
          "ref": "56ca215b-6941-4535-8921-b909e9012725",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6b0c1b5e-4f3b-4f8a-9e54-f180403add53"
        },
        "item": {
          "id": "301d8bbd-b8d2-4b1b-870e-6c6843cf5761",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "890a9783-068e-4522-96a1-3508dac70ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7cb086-46b1-4098-88c4-9a5e8fbef688",
        "cursor": {
          "ref": "a1ecfb5c-5f91-4435-9743-55b7c3369e0c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f96ad0bd-3081-44f6-963d-725f5a3ccbb4"
        },
        "item": {
          "id": "ec7cb086-46b1-4098-88c4-9a5e8fbef688",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3a24b4e5-7521-40f1-abb5-f8e8d925eb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2260f8ce-f7dd-4f7d-87bd-9f059cd47e80",
        "cursor": {
          "ref": "2677457a-feec-4193-b598-1259ccd6ff90",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "01041ec2-380b-44a7-895a-80861c5ff606"
        },
        "item": {
          "id": "2260f8ce-f7dd-4f7d-87bd-9f059cd47e80",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9314f2a1-ef7e-4086-8395-24f7091159db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceba1a84-52be-4987-9454-db881edc11b5",
        "cursor": {
          "ref": "235b580b-55e8-4241-9355-1fba548507b4",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "23d5be10-14e5-4ba2-badb-1efc523d9083"
        },
        "item": {
          "id": "ceba1a84-52be-4987-9454-db881edc11b5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dab36e03-a818-4c94-a566-b68aa8461f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4edb7eb-1433-4dcf-abb6-e2d8bf5a3bd4",
        "cursor": {
          "ref": "016118a5-3cad-48fd-a468-e32fa4866d6c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0ecff539-4bab-42cf-a6e3-33a2b1eb447e"
        },
        "item": {
          "id": "e4edb7eb-1433-4dcf-abb6-e2d8bf5a3bd4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "71a1a843-e70b-4f6d-bad1-6927f0411536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808da3ea-fadc-498a-ad95-0a8cf10c3a5a",
        "cursor": {
          "ref": "2882ed77-5772-4fb3-99bc-c651e57d04da",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a5d07661-577d-4438-a3d0-724d6ad32d2f"
        },
        "item": {
          "id": "808da3ea-fadc-498a-ad95-0a8cf10c3a5a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f97cc712-08c4-49bc-ae21-085e143d54f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4b7023-bc0a-43dd-b368-c99952fcaecb",
        "cursor": {
          "ref": "ef32d5e6-9f97-4b07-b410-4d2f72277529",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d56ae352-d4c1-44c6-8f1e-2324cb5ce2a8"
        },
        "item": {
          "id": "9f4b7023-bc0a-43dd-b368-c99952fcaecb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "df3835fd-f980-4bbe-9ab5-a90272480f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af2ab19-25aa-482e-88ff-1eea04b8bd94",
        "cursor": {
          "ref": "b387dfe3-f2e8-4ae5-9c4a-bc96824e9f03",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "506970d4-eafe-4bba-8485-6789b1cb1e50"
        },
        "item": {
          "id": "1af2ab19-25aa-482e-88ff-1eea04b8bd94",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d591eb2f-89f5-4489-8dd1-bb18dd060cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3078542-c40e-4755-bcda-e8f69a7fbd51",
        "cursor": {
          "ref": "08eed577-7f39-4fb2-8f85-be9a2d85670c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ae9fc67e-b17a-46bf-bf4a-546a07dbea3a"
        },
        "item": {
          "id": "d3078542-c40e-4755-bcda-e8f69a7fbd51",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8ddddc1a-865d-48a7-91ae-7bcf6a4bd818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fc51fa-efe5-48e8-a5a0-800b1520a395",
        "cursor": {
          "ref": "66d42e06-17d8-425a-95eb-39046e91b69b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9b260384-ec53-40ff-90a5-fc8bc41160f0"
        },
        "item": {
          "id": "25fc51fa-efe5-48e8-a5a0-800b1520a395",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b8c37289-8765-43c2-90a8-486a70fc771f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6be9b52-d785-419d-b0da-67e3f0b57087",
        "cursor": {
          "ref": "940e2eb5-3810-4b13-802d-60551c50b01f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f89a60d7-cd90-4569-8ad2-70c0a36b7e63"
        },
        "item": {
          "id": "c6be9b52-d785-419d-b0da-67e3f0b57087",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c8410a83-ebde-41dc-be39-2a124c6fda11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec03f2b-5ea7-43dc-9dc6-a7fb3c8b6116",
        "cursor": {
          "ref": "504eeb99-a0d0-4dce-b389-d8b11086b96e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "72930e4b-5236-45c6-9027-56ca109562ca"
        },
        "item": {
          "id": "eec03f2b-5ea7-43dc-9dc6-a7fb3c8b6116",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f65aca82-826d-42da-89d7-10f0c4a7bead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b695eef-99c2-4381-9f5b-0b089ef08a23",
        "cursor": {
          "ref": "f68deba9-e21a-493f-9a4e-b919384ebb3d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "39853e60-5773-494c-8832-8078a31da994"
        },
        "item": {
          "id": "4b695eef-99c2-4381-9f5b-0b089ef08a23",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d94241e4-f062-485e-981f-75a70afa85e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a712eb9-4520-45ae-9f23-8e2074096514",
        "cursor": {
          "ref": "8b1bc370-7c33-44ce-a602-34f5dfa61c69",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d1b9447b-8445-4f06-b069-159061c37a26"
        },
        "item": {
          "id": "6a712eb9-4520-45ae-9f23-8e2074096514",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "29e4f769-bcea-4820-a802-3f0cf45e1cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83c0a7c-2207-4fc1-bef8-cb0524ae1ce6",
        "cursor": {
          "ref": "c4a5cb3b-6d5d-4fdb-b392-5d72e02c73d7",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "846d520b-71e4-4e0d-84a1-85ec63adf4d2"
        },
        "item": {
          "id": "a83c0a7c-2207-4fc1-bef8-cb0524ae1ce6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "75db28cd-b91a-40ca-b17f-aa175d1ea8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d1ae07-5ba5-4885-a3bd-a48d8d336ef3",
        "cursor": {
          "ref": "10800dc5-714a-41a9-b819-c6ea8718d23f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "df72e4c3-0527-44e1-8e93-b2d901e37e74"
        },
        "item": {
          "id": "60d1ae07-5ba5-4885-a3bd-a48d8d336ef3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a413d142-81a5-492d-8931-09f60661a3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26061a83-2041-4847-a86d-a759d4c34f65",
        "cursor": {
          "ref": "3894b3f1-28ee-4362-a1d2-cc6d9b20a279",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "24f31b23-0610-4cbb-9dd7-8551e07d23d7"
        },
        "item": {
          "id": "26061a83-2041-4847-a86d-a759d4c34f65",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "85af85dc-d9ec-46fa-8cba-e85c80160a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc62f5cd-3024-47a8-8ce3-35cd18781781",
        "cursor": {
          "ref": "51d817f8-064b-43e2-b1e3-4008d17625db",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dfc14e9b-5f75-4d49-80bb-7a1a0511f393"
        },
        "item": {
          "id": "bc62f5cd-3024-47a8-8ce3-35cd18781781",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fa876d24-a5eb-496c-a35c-a87f424c39b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5add543d-432b-437a-8494-f924ceed7857",
        "cursor": {
          "ref": "2d1a46eb-4904-48e5-9f0e-18eb473ba51d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a9f4e3e6-56bc-4d6a-a4af-dd094d28f37b"
        },
        "item": {
          "id": "5add543d-432b-437a-8494-f924ceed7857",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bb1e38aa-4e6f-4191-a0a4-a05122c81029",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ebb6b8-762a-48ba-aee6-604a7251fe8e",
        "cursor": {
          "ref": "5730fe50-c295-4380-8e82-a567ceae6d93",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "83deb7ca-919c-4065-933b-f08b0ba3f734"
        },
        "item": {
          "id": "f9ebb6b8-762a-48ba-aee6-604a7251fe8e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dd5c609b-550e-438c-b3fe-86fa213da67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cbe3dd-ebc0-41f5-bc48-b7e64e991f81",
        "cursor": {
          "ref": "aa34907f-4b48-4944-9c0a-66cb787ee3c8",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "62ac5b20-bf27-4004-9786-c038ff315862"
        },
        "item": {
          "id": "d4cbe3dd-ebc0-41f5-bc48-b7e64e991f81",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4d9d5dde-c586-494a-958d-08b1c32b158f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2d439f-aea0-4161-ab58-f7c7d298e010",
        "cursor": {
          "ref": "5682523b-69b5-423b-b50a-4c1d9464227a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "19fab319-cf7d-4ada-a87f-36027e7ffbbf"
        },
        "item": {
          "id": "bb2d439f-aea0-4161-ab58-f7c7d298e010",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "44bdcaa2-9626-4f4d-8674-ef7de95f2c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277dc737-098d-4cc5-ae1c-e7eb650e24bb",
        "cursor": {
          "ref": "1bdf373e-8ba9-4472-92fc-05aafca57da7",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1037d7c8-f97e-438c-9784-9b21bb141808"
        },
        "item": {
          "id": "277dc737-098d-4cc5-ae1c-e7eb650e24bb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c8f1b865-6f58-40ae-8f9a-69a4d8eba28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf61fd64-a5d4-45f9-a60c-07aaa394afb5",
        "cursor": {
          "ref": "84d1bdd2-5b8a-44dd-9739-06bc65eb1a0d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d016cf8a-d854-4fe4-a962-b3e93861816b"
        },
        "item": {
          "id": "bf61fd64-a5d4-45f9-a60c-07aaa394afb5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c257f6e3-24ab-40cc-8df6-8b1ec03294f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b308c4-20e6-42f1-bdb7-6c3956653e05",
        "cursor": {
          "ref": "19c30da1-a809-45e2-a00e-a7a142aa06be",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "55b090fe-a594-4e1c-9249-d81030757022"
        },
        "item": {
          "id": "63b308c4-20e6-42f1-bdb7-6c3956653e05",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8ebc0b59-ab57-4273-a483-f6faac1a63de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef97067-0437-4561-8aa2-882260d740e2",
        "cursor": {
          "ref": "0cfa7b0a-b086-477b-9d2a-d0d1034b7288",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "89efbdfc-da33-4314-8f65-69ab02540ca6"
        },
        "item": {
          "id": "cef97067-0437-4561-8aa2-882260d740e2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "59596ca0-78d6-4650-9e3f-8aa643217baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e9ada5-7c32-4bb3-b0af-1a27190a52f9",
        "cursor": {
          "ref": "e473af7f-64e3-4802-a3df-31f2179f24d4",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a5db597e-a2f6-4e11-8a26-06344e9bea38"
        },
        "item": {
          "id": "d0e9ada5-7c32-4bb3-b0af-1a27190a52f9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a34ebc3f-aefc-4026-9b76-6fb07734f3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80625db-633d-4886-855e-52a0fdebbe46",
        "cursor": {
          "ref": "e943ea86-ad17-40ec-a1d8-3c411b4e97fb",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e78a4cb9-d3d6-424b-9f5c-2f6762f18d12"
        },
        "item": {
          "id": "f80625db-633d-4886-855e-52a0fdebbe46",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7deddaac-6921-44e1-9f92-9788c4ca26d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d833035-5a21-48cc-9416-77bb890bd96b",
        "cursor": {
          "ref": "66e46c53-7b6d-4ef6-a386-0a9a24fe9b63",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2a34f539-74ca-438c-80fe-951c5d162ca5"
        },
        "item": {
          "id": "4d833035-5a21-48cc-9416-77bb890bd96b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bfd764ba-8323-479d-83ad-808aec7cbffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348d25b4-ae06-4d3c-9a7e-a75b677dccd0",
        "cursor": {
          "ref": "fe41ba6c-4b52-42f5-a4ad-f9ea2b60fc23",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "72dcee94-edaf-4ec7-bcfd-b72e113b095e"
        },
        "item": {
          "id": "348d25b4-ae06-4d3c-9a7e-a75b677dccd0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f37741bf-05ec-4210-80c9-9c82d1656559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309bdeb2-dbb5-46c5-8203-d6dbf2b2bb47",
        "cursor": {
          "ref": "d0718706-32ba-4cf9-b81d-61b0d05861ca",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "79638895-30a1-41e2-8ed2-fe82c7fe68ee"
        },
        "item": {
          "id": "309bdeb2-dbb5-46c5-8203-d6dbf2b2bb47",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3d9fed17-8c2f-4e94-831f-31067e964455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398ae2ba-56a8-4b1f-b344-233f1a65de16",
        "cursor": {
          "ref": "6857c479-7f51-454e-9ccb-55255c98cc99",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "349e2b75-4fa0-4d64-b6e2-53a440d9dadf"
        },
        "item": {
          "id": "398ae2ba-56a8-4b1f-b344-233f1a65de16",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "700ae689-12bf-49f3-b3b4-f04605621867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f526de4-ca9e-4c1d-9e92-812a99f70c6d",
        "cursor": {
          "ref": "fd6bdcf1-3bee-427f-9ea6-198288dd1d6d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e123a3fc-331e-409b-8e6f-f786cee38b03"
        },
        "item": {
          "id": "5f526de4-ca9e-4c1d-9e92-812a99f70c6d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "686e69a6-6cde-4d0a-8498-bec28345c0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b4270e-b267-4b61-a5e0-eb7fc9a42a8a",
        "cursor": {
          "ref": "bc776086-4271-4ed4-ad5f-f34f2325dda4",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "494171f3-9781-4188-a6ae-442737bf2fd0"
        },
        "item": {
          "id": "60b4270e-b267-4b61-a5e0-eb7fc9a42a8a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7b5d8ceb-338f-4eb5-8dc2-83b9c20110d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e396552-6541-4a06-a672-e7870b8eeb7d",
        "cursor": {
          "ref": "e7f29985-d26c-4c62-ad77-48999682dd80",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "578e21f6-48c5-4f18-a6c5-3bfeb6d6960b"
        },
        "item": {
          "id": "4e396552-6541-4a06-a672-e7870b8eeb7d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0b679113-3cf2-4cdb-ba25-837686b1cdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ec21e1-981f-4f5c-b5d7-455d7e6bcc11",
        "cursor": {
          "ref": "e897f80f-2fb0-407b-9bce-ff6e9acf3d9a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3532ec7e-241a-41c5-bcf4-a82dbfef04da"
        },
        "item": {
          "id": "41ec21e1-981f-4f5c-b5d7-455d7e6bcc11",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a33a0393-7d8c-44db-ba13-bc7f7ff2a4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec9c074-71b9-4df6-90d3-7c83702f0636",
        "cursor": {
          "ref": "58dc70f6-cb94-4bad-97c4-47dc07cbe9c2",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "37653048-89fb-4b20-9775-02c4bdcd6193"
        },
        "item": {
          "id": "7ec9c074-71b9-4df6-90d3-7c83702f0636",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "12597d6b-fe38-467c-a103-1ed7f6be892f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e55cc99-f58f-4220-9f81-baab155b90f6",
        "cursor": {
          "ref": "155a51a5-6365-48bb-8e82-ce186cf782ae",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "615b2787-ab76-44ee-b272-05ed4639a09f"
        },
        "item": {
          "id": "6e55cc99-f58f-4220-9f81-baab155b90f6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "86d2e2b4-7a4a-494b-9106-f2dd0a857dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b018e90-12ac-4aa1-af6a-1867bd0951f6",
        "cursor": {
          "ref": "2aeb93b0-1fb1-4039-8aef-86c10398fc26",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b4716aed-c81c-4c4d-9bab-e409cdc75a69"
        },
        "item": {
          "id": "8b018e90-12ac-4aa1-af6a-1867bd0951f6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "516d0198-9798-4c4a-8c80-b93576e2979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea0b55f-d51d-4506-aacf-362d7ba03990",
        "cursor": {
          "ref": "f3124bf4-eb57-4a2f-ba11-b19962781b07",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4c178087-c21a-4e67-ba27-cec10acffbdf"
        },
        "item": {
          "id": "aea0b55f-d51d-4506-aacf-362d7ba03990",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fe87e8ad-fe0a-4ccc-a99c-a19553c4d673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35ca892-ae61-424c-9cab-f7be3c637a64",
        "cursor": {
          "ref": "0bd20d98-0b37-4f6a-98f1-a01ca3bba771",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ef399a8b-7dc7-4512-a944-164c7a4656bf"
        },
        "item": {
          "id": "e35ca892-ae61-424c-9cab-f7be3c637a64",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "25140ffb-0b4b-41de-9900-1f6acb6f70ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f16c34-9b99-4be5-b82f-e3894eb42d05",
        "cursor": {
          "ref": "1f2299f2-387c-4d8d-a3d6-b444e778e177",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e7e96578-1049-4596-9b2a-f2ac6ca8221b"
        },
        "item": {
          "id": "96f16c34-9b99-4be5-b82f-e3894eb42d05",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "91639510-6be2-415e-8fc6-3109a05e9d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf43f17-fe3e-43bb-adc8-e148de93260f",
        "cursor": {
          "ref": "202f10af-9b89-483b-9817-450f3f5d914c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "22b84cd7-3842-4f43-8989-fd661e2373a4"
        },
        "item": {
          "id": "eaf43f17-fe3e-43bb-adc8-e148de93260f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9f213f7c-5a6a-48f0-b833-4a777037fdd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d1e0e8-b501-43b7-a171-02d2d894a763",
        "cursor": {
          "ref": "c57c5ffa-9ad0-4f68-a889-7e319c6bc2e2",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0a860ac7-a6ac-4981-bea9-e1b67f61b885"
        },
        "item": {
          "id": "56d1e0e8-b501-43b7-a171-02d2d894a763",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "733782b9-0f00-41e6-8167-d491019b64cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d878b5-090c-4abd-bd42-2026d75d0f7c",
        "cursor": {
          "ref": "55676d9c-d0dd-4ed9-955d-06be17af6e7b",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6771a58d-5f1a-443a-929c-1d29117d9805"
        },
        "item": {
          "id": "18d878b5-090c-4abd-bd42-2026d75d0f7c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "13c4ab36-1c6a-4a87-817a-37436e1c6aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fc0da6-60e7-43c1-a669-a4d4ea4b01fd",
        "cursor": {
          "ref": "ed0e9c75-f9a4-4e57-87ab-9cda0d4e37b4",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ba93143c-8674-4f99-990e-0a70092c2b4e"
        },
        "item": {
          "id": "93fc0da6-60e7-43c1-a669-a4d4ea4b01fd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f91f5196-6d16-44b0-ac1c-47abb6051f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1254efe-0c53-4b0f-9e66-29ee4702b7aa",
        "cursor": {
          "ref": "e8d44552-6dda-4244-b485-6d08b89c1da0",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0ab4a3c9-c0e8-4c49-a3a3-d196c6466fe2"
        },
        "item": {
          "id": "e1254efe-0c53-4b0f-9e66-29ee4702b7aa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "350bfb9e-1edc-4598-a27b-c9b8d513a89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fc85e5-6e46-45c4-bd30-c05ea4b15dc3",
        "cursor": {
          "ref": "1b85e4e8-cfab-4832-853e-d7c9f6689c11",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a717e17d-47ab-46f1-9d99-964e7e0fbb31"
        },
        "item": {
          "id": "16fc85e5-6e46-45c4-bd30-c05ea4b15dc3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0a811d92-b376-46e2-b6ba-c904f65abd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2acfcb-4f7c-46d6-a5ff-6fa0dc57bd67",
        "cursor": {
          "ref": "f8cf7a28-7855-46d3-9c6e-15d9be22e63e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "99875ea9-2421-4459-9990-eacfa0fc728a"
        },
        "item": {
          "id": "4b2acfcb-4f7c-46d6-a5ff-6fa0dc57bd67",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "671ba7c5-68b4-45eb-ab27-9d10928d0727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8138c5a1-c3f7-418b-bd55-f363459a71ec",
        "cursor": {
          "ref": "3b81b5c6-762f-4cd9-9433-ae58a1702e20",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b0a99bf0-88d0-42ac-98eb-2a6e31d737f7"
        },
        "item": {
          "id": "8138c5a1-c3f7-418b-bd55-f363459a71ec",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d1f9a1f4-30c8-4fab-9cd4-e114433c465f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3be7c3-46f5-44de-ae0f-45dd8e9d766b",
        "cursor": {
          "ref": "5085b598-8d90-433e-a930-faceb1b1cc09",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7bcfee36-175f-4409-931c-b571a4f49e4a"
        },
        "item": {
          "id": "8d3be7c3-46f5-44de-ae0f-45dd8e9d766b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1360222d-2869-4d3a-937f-ffd85172fe77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02e27be-f041-4e07-b755-c26bd91a728f",
        "cursor": {
          "ref": "00822ac3-6dbd-4b46-b17c-857b3de6a447",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cb44a049-dfc4-4eef-bf1b-522054fc9858"
        },
        "item": {
          "id": "d02e27be-f041-4e07-b755-c26bd91a728f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "04c0ea67-6cb2-48d6-b572-0c6dd210d13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0389bb-a49b-43a3-aa9f-4a78b5ee119e",
        "cursor": {
          "ref": "ff78b5da-a7ca-4508-9057-af2b35b89479",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4cf8ce5a-8183-4e00-822e-c23b7a8333ed"
        },
        "item": {
          "id": "ac0389bb-a49b-43a3-aa9f-4a78b5ee119e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a63deced-06bb-4a93-887c-1a6225b8f780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e269b457-99f5-4eee-8b3f-b36d5f8c20a2",
        "cursor": {
          "ref": "c9ab2838-7d61-48f9-80f9-f0bd6a92e595",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "78fd7e47-5a87-4365-af8c-4b414c423392"
        },
        "item": {
          "id": "e269b457-99f5-4eee-8b3f-b36d5f8c20a2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1bf7f970-1b61-474f-8595-98bf26f6756b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf7fef9-6e88-453e-87fe-e3a654415dc0",
        "cursor": {
          "ref": "53ef8343-92ec-40b6-8d22-7bb5fe62f52f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7206196e-4ef8-4500-beb3-ff1ed9134155"
        },
        "item": {
          "id": "bdf7fef9-6e88-453e-87fe-e3a654415dc0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b3df8ad7-0cdb-4684-951c-e96f40a3abe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470a5ec0-cfe0-4053-8908-1ef7ac10c1a4",
        "cursor": {
          "ref": "7696529a-1b1e-48d7-9550-5383ae7181de",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9578ec58-3633-433b-a135-9941ab796203"
        },
        "item": {
          "id": "470a5ec0-cfe0-4053-8908-1ef7ac10c1a4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0f0e6254-0c82-4c77-8c99-f85257da3e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6d8184-d5c9-442d-a5b3-a1015ddd80e1",
        "cursor": {
          "ref": "f8f6a9d2-eb43-42db-9411-2bfe42e4618f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "81c7fd1a-af11-40ce-a111-8f67ee7f3428"
        },
        "item": {
          "id": "ff6d8184-d5c9-442d-a5b3-a1015ddd80e1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9af41f7b-bccb-4fa7-983a-290738efe058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82305ee5-d5aa-4530-ab22-4b34f4a7c975",
        "cursor": {
          "ref": "80f92cea-d3cd-44b2-82ce-93c8773907b7",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e87d7cbe-1308-471c-ab77-f73bdc90a885"
        },
        "item": {
          "id": "82305ee5-d5aa-4530-ab22-4b34f4a7c975",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5a332bb7-ad8f-4e5f-9a43-29309b7d1d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4870bcd7-d028-4b5b-bfa1-c1bb60742eec",
        "cursor": {
          "ref": "121d8e72-d032-4932-ac0b-b0238d0ca2a6",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d67cadca-7696-42c0-b59e-24983d9bf8b6"
        },
        "item": {
          "id": "4870bcd7-d028-4b5b-bfa1-c1bb60742eec",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "11e6875e-b1c7-43cb-8a22-0642155e537b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d14998-d428-4b57-8138-bcef84bf6edb",
        "cursor": {
          "ref": "a8f94416-4e24-4a22-886c-440f88c12fdc",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e49ee4d8-6567-4292-aeae-38ad47d39e4a"
        },
        "item": {
          "id": "11d14998-d428-4b57-8138-bcef84bf6edb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "db87fd5c-217f-4fa0-b708-895f532c3fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71986cf8-a37b-446b-aa38-8b862d04d033",
        "cursor": {
          "ref": "0ecbf2a2-3d59-4ba5-ae1b-aaf523f95abb",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "76359dfe-559b-491f-a975-2f3c8c42143a"
        },
        "item": {
          "id": "71986cf8-a37b-446b-aa38-8b862d04d033",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "10ab5ef7-71d1-4e38-ad14-f1f39681cf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20cb26e-5865-416d-afad-55dedbe0aa61",
        "cursor": {
          "ref": "e49d9f5d-2e77-41d3-bbd2-1b8f87033de5",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "14bf529b-263f-49ba-ac55-8ee57f93700a"
        },
        "item": {
          "id": "d20cb26e-5865-416d-afad-55dedbe0aa61",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3e23af3b-29d3-48c5-8449-ac578694f844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4fa7ea-779f-4d43-b91e-253eb7e1253e",
        "cursor": {
          "ref": "ea336bd0-6792-4c65-8fc7-d9de476750d0",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "96e884f0-13a9-45d4-88db-1c6a80c2afdd"
        },
        "item": {
          "id": "2c4fa7ea-779f-4d43-b91e-253eb7e1253e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f50161d1-e157-4a1c-bc07-90baad931656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed05dc3-891a-4502-87fb-3158337242d7",
        "cursor": {
          "ref": "b2c22081-0ee3-4a35-92a2-f485a19816cb",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cb092e5d-c246-4d22-89cb-5b7e5130b71e"
        },
        "item": {
          "id": "7ed05dc3-891a-4502-87fb-3158337242d7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4a2b851b-f9bd-4b20-9b72-2020239bcfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2c7177-2c29-44eb-877b-492f3ae67b94",
        "cursor": {
          "ref": "d4ee1007-e802-49bf-adfc-f9335bc3e7f4",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a2c63080-0c5b-4914-926d-6b500b91dba4"
        },
        "item": {
          "id": "1d2c7177-2c29-44eb-877b-492f3ae67b94",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4b00bf07-6992-4771-aee8-908dd64e9168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2524da33-f528-4c1f-b069-558736443580",
        "cursor": {
          "ref": "987f2ddc-c4b1-4161-a06c-8de84b214fd0",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "85bad11a-715f-4bea-9fd2-39a8ebf0d669"
        },
        "item": {
          "id": "2524da33-f528-4c1f-b069-558736443580",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8194d7d3-c76e-45a5-a82c-93f0e1bca30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60975ad-3451-46e9-beb3-c15560472966",
        "cursor": {
          "ref": "8c3d7e02-a0bc-4ac4-85f3-97458d718171",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "70c82154-4129-444f-b623-726c6cfd5cc5"
        },
        "item": {
          "id": "d60975ad-3451-46e9-beb3-c15560472966",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d005249d-452a-4017-b280-b9bdcf148001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf6d83a-5f11-419e-87a6-d856b12f591b",
        "cursor": {
          "ref": "d74dc30f-e968-4df5-9ec2-53e2822bc9e8",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c9b86637-6bad-4bf9-a430-12a62456f27d"
        },
        "item": {
          "id": "acf6d83a-5f11-419e-87a6-d856b12f591b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1122f0d9-8a10-4d94-9ff0-1d47af76be1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b551fdb-57c8-40d4-bdbe-401d6d333ab8",
        "cursor": {
          "ref": "f5792b64-c2e8-4fa8-863c-85328ece7f79",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "008c214c-229e-44b2-91d2-dd96ac13fd2c"
        },
        "item": {
          "id": "8b551fdb-57c8-40d4-bdbe-401d6d333ab8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c7cc787d-c5e3-4841-a3cc-106adef3cb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7ef8e8-698a-44c9-9bbd-f7fcc5650e06",
        "cursor": {
          "ref": "e0d0c659-317a-40e0-9d00-06f5fef4c049",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c5d1cd98-bed1-43a7-a758-9f720da17671"
        },
        "item": {
          "id": "8d7ef8e8-698a-44c9-9bbd-f7fcc5650e06",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c59a97af-253d-4cb7-ba0f-a50b59aead96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04493881-82e0-409c-88c8-de7140e42acb",
        "cursor": {
          "ref": "c482df13-9864-415b-89e0-723adb73232a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4317c6ed-1226-4aa3-a3f6-88394418bc7c"
        },
        "item": {
          "id": "04493881-82e0-409c-88c8-de7140e42acb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "664d230a-a63a-4bde-8a17-bcc83030157c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed9a558-0ebf-4df3-bb8a-e5957856d6ad",
        "cursor": {
          "ref": "73946d34-b4e6-4085-b71f-33e78a1b6742",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "177ac262-c30b-4beb-bcc5-a6375ce11b93"
        },
        "item": {
          "id": "bed9a558-0ebf-4df3-bb8a-e5957856d6ad",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "16cb46ec-0276-4fc3-b92e-122e33700ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11589dbc-8d35-4296-8222-43d68f80bf68",
        "cursor": {
          "ref": "93dba3c2-f740-440a-97ec-a00ddb807896",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ebfa1738-d2ac-47f0-9530-fbcb82d83a41"
        },
        "item": {
          "id": "11589dbc-8d35-4296-8222-43d68f80bf68",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9107e1f3-9cb7-42e9-9e2b-2fd6a124d156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d19bc58-004f-4e2f-b4d0-aeb4522ade2b",
        "cursor": {
          "ref": "7286a018-8a18-4f62-aca7-c68bd1928587",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2c48cd60-452c-4d0d-9c08-c8a22c52eaa6"
        },
        "item": {
          "id": "8d19bc58-004f-4e2f-b4d0-aeb4522ade2b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3bdace25-552d-4b5e-81b8-4c39155cd1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f80774-c59c-454f-bf4d-77ec477d8142",
        "cursor": {
          "ref": "a87fa4ed-eb54-4562-b078-6196db32928c",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "98e2bc80-1459-47f7-8456-9f946852afe2"
        },
        "item": {
          "id": "79f80774-c59c-454f-bf4d-77ec477d8142",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fe7b08dc-d921-4b09-ac38-c8f846c3fef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5caf2de-3da8-4e04-a5cb-e7f1834c7b53",
        "cursor": {
          "ref": "825da31c-d5ff-4f31-938b-f3818a1ec371",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "08776098-0ddf-4c0d-8701-aa0306be63f5"
        },
        "item": {
          "id": "a5caf2de-3da8-4e04-a5cb-e7f1834c7b53",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c67f8e54-22dc-4452-b206-03d31b852676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0e02f2-3dfc-4f35-992a-b23174e4d510",
        "cursor": {
          "ref": "721b9cf6-3c7a-422e-973e-f034287f0357",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c38c2068-d46e-4843-8d41-516fe63d100e"
        },
        "item": {
          "id": "5c0e02f2-3dfc-4f35-992a-b23174e4d510",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "933ff229-66c7-42be-b9f0-c2534d202f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414d2fb4-aa71-4d00-8972-3139a38a93b6",
        "cursor": {
          "ref": "f4982813-e1a0-40ab-9dd4-a1c7538a1e8b",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "24d248d5-6698-4826-a61b-573c6a7eb204"
        },
        "item": {
          "id": "414d2fb4-aa71-4d00-8972-3139a38a93b6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5d7fe1af-f6d6-4009-81a4-0b587e4b490a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f7fad9-dd4c-4c02-b2bd-aa2b8e65508b",
        "cursor": {
          "ref": "f84135a7-3713-43fc-8d58-226ce033dc12",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "aa33e319-1a7b-4a49-bf39-031a6bbf6628"
        },
        "item": {
          "id": "a1f7fad9-dd4c-4c02-b2bd-aa2b8e65508b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "51743765-7762-4b5f-bfd5-fb06123e0e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd99d499-6d0d-44db-86b8-d674c377e705",
        "cursor": {
          "ref": "455c1b7c-62e7-4dba-bb7b-d2f5155c7f73",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a18d0c04-de5d-4024-8f96-cdd0855e971b"
        },
        "item": {
          "id": "cd99d499-6d0d-44db-86b8-d674c377e705",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "11fff082-4150-4c49-aeb8-eb9e9376ffde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d972a8-046a-4b5a-9818-a64c27266a83",
        "cursor": {
          "ref": "a709ffab-c70e-4bce-a99f-0b633d74d986",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d612a45e-db26-4b1f-a747-cbe3c5f9ca82"
        },
        "item": {
          "id": "13d972a8-046a-4b5a-9818-a64c27266a83",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c5c6794b-1edb-428c-9dcc-2320eb066cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f9b3c7-f9e4-4074-b9d9-33c7f9b191dd",
        "cursor": {
          "ref": "01e6d64a-8651-40cf-9f7b-64f7771077b1",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cffd561a-810c-4299-95f3-142b55a09324"
        },
        "item": {
          "id": "70f9b3c7-f9e4-4074-b9d9-33c7f9b191dd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a5f75782-46b2-4811-8259-a02b0076adb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cbb4ea-f223-494e-8f24-bebe4242f0b3",
        "cursor": {
          "ref": "35d5b4e3-fa7a-456a-9a83-6b349effb11c",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "46e4e913-d910-4a0a-85c9-793635149595"
        },
        "item": {
          "id": "26cbb4ea-f223-494e-8f24-bebe4242f0b3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3dc24444-8868-41db-8cb1-25b9abdc4107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4512e00a-267d-4767-82ec-e886dfd58672",
        "cursor": {
          "ref": "255b3506-5985-41ac-87e0-33ef001362de",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f3344d8b-13f3-47fe-bd1a-1a381b082fda"
        },
        "item": {
          "id": "4512e00a-267d-4767-82ec-e886dfd58672",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "00411fa7-23e6-4d95-90ec-b3ec11efeb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaa44f1-df3f-4284-95f9-fbaa708eeb69",
        "cursor": {
          "ref": "19e665ce-511f-477e-b671-c25ef6e0fd07",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a5d12379-ae75-44ca-8d08-02e2632bb227"
        },
        "item": {
          "id": "3eaa44f1-df3f-4284-95f9-fbaa708eeb69",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3cd553b7-0dd2-4c5e-b95c-4eff58976442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f57b6b8-5c9e-4943-9687-6f781e5f51e0",
        "cursor": {
          "ref": "738cc134-8ea1-4a47-9c7b-bd4e63600e32",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4c41ac29-d918-4502-801e-2c2c6740476b"
        },
        "item": {
          "id": "3f57b6b8-5c9e-4943-9687-6f781e5f51e0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b141fae9-f4e9-4be3-8310-bf4b24c93948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892228f3-ce90-4c7b-bdaa-94e7833a38b9",
        "cursor": {
          "ref": "59b878a7-f107-4641-a0f8-7fdd190feb1d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2135f6a4-fd82-429b-89a4-e71671866121"
        },
        "item": {
          "id": "892228f3-ce90-4c7b-bdaa-94e7833a38b9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8bd7de04-2e65-46d2-bd38-649d80514fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b30de90-7047-4e9f-b428-022d215eb86c",
        "cursor": {
          "ref": "671385af-7395-435b-80cd-5034ce41dcd2",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "500b9112-ef22-49ad-bca2-cf0482f686ff"
        },
        "item": {
          "id": "3b30de90-7047-4e9f-b428-022d215eb86c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a85ce819-c10c-4255-9e96-44292bdb80b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf949f9b-567c-4c5d-8cd3-4c783042dd83",
        "cursor": {
          "ref": "a0068445-7213-46cd-8ab0-8fb9569815ff",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "efab0a93-76e4-4a40-a1a4-e46702b36527"
        },
        "item": {
          "id": "bf949f9b-567c-4c5d-8cd3-4c783042dd83",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "90cdaaaf-48d8-4f1f-94c5-b7fe675aeb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49684b9-c6db-4203-9eca-37dbfdb693fa",
        "cursor": {
          "ref": "6801ba54-6bb0-4317-bf22-8d2f90071f4f",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "98402ffb-57ab-4ce3-811c-802437a23b55"
        },
        "item": {
          "id": "a49684b9-c6db-4203-9eca-37dbfdb693fa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5564b430-6847-4c34-84cf-27528957d4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf4e3e3-4d89-4922-9724-abc93c880f62",
        "cursor": {
          "ref": "169db82b-a50b-4b4b-b492-29485110b677",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "45043ce5-77ea-4c9f-a037-1114c7245379"
        },
        "item": {
          "id": "9bf4e3e3-4d89-4922-9724-abc93c880f62",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "73173ae9-661c-42b5-8f6f-8734f34f89c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf58664-14d2-4d52-9314-abf041e02c06",
        "cursor": {
          "ref": "2aad64c8-41ff-4b74-b687-3a9b901a1e9f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b84f71dc-1cf9-413f-a0a1-32cbdd99b1d3"
        },
        "item": {
          "id": "bdf58664-14d2-4d52-9314-abf041e02c06",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "94b53202-c889-403c-8942-321fa5b46eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8630a552-ed86-4892-be3c-fa92b06bf6db",
        "cursor": {
          "ref": "4f563a7b-ac23-466e-88b1-f9caa3a0360b",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a3e54046-e41c-4caf-9766-aeccf8b9f75e"
        },
        "item": {
          "id": "8630a552-ed86-4892-be3c-fa92b06bf6db",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8c17eb9c-5896-4580-a9e7-26984e678e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48de95e3-9b3b-4238-8948-5e3854e0cbea",
        "cursor": {
          "ref": "7a8af9e9-4046-4daf-b385-2d44467bef62",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "12fce35a-0acd-4de4-9580-f5e3040a38a9"
        },
        "item": {
          "id": "48de95e3-9b3b-4238-8948-5e3854e0cbea",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "94ce8ed3-fb88-4eb5-a9e9-4638e1a428ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8eec78-369a-4099-96d9-30b215e3c778",
        "cursor": {
          "ref": "4fa2678e-9c85-4ca9-8bce-9ecc9965f267",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "414e7d51-8df5-466a-9971-9bc814212036"
        },
        "item": {
          "id": "dd8eec78-369a-4099-96d9-30b215e3c778",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f551d60b-9571-4ce6-b447-06a85d707776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048adbf8-bb3c-4b52-9ba7-c14be0c47e47",
        "cursor": {
          "ref": "cee21a4a-8442-4afe-8a9d-074cf5663a51",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ec7b0ba1-cee1-43a3-b91c-dfd86425d4e5"
        },
        "item": {
          "id": "048adbf8-bb3c-4b52-9ba7-c14be0c47e47",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "52a50a26-938a-4952-a111-a45cadf08695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78fecae-955f-4122-8f94-06030b746f90",
        "cursor": {
          "ref": "ae31fec0-ddfd-4ef6-a143-99c2a7c2c7b2",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d9f91922-3c99-4fc2-9dad-38c2bd1c27a0"
        },
        "item": {
          "id": "c78fecae-955f-4122-8f94-06030b746f90",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d7f34f0d-2885-4bc7-9325-bd090cd67c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d8b853-d9df-4b0a-9ae4-9b00881d3f45",
        "cursor": {
          "ref": "e52ed7f1-ff69-43a8-9781-ae88bf0ada5a",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b446ae48-ca0c-4f39-92d2-d0c9139ac578"
        },
        "item": {
          "id": "10d8b853-d9df-4b0a-9ae4-9b00881d3f45",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ab267a47-bd9c-4397-b908-075b1028a0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f120df-4d5d-4256-b665-b68d6b4935da",
        "cursor": {
          "ref": "f8c50c56-ba64-4db2-8591-521f6d45d246",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3da2832a-a176-4567-adf5-884b9ba4974e"
        },
        "item": {
          "id": "f8f120df-4d5d-4256-b665-b68d6b4935da",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8592f708-8447-48b9-b351-5839fe63d66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc978294-b28d-4b77-ad31-57f390b6d6c3",
        "cursor": {
          "ref": "01b83090-57dd-4776-8df1-6d0e2b495c92",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c5dc2b92-1e23-418d-907d-a0c8f0530095"
        },
        "item": {
          "id": "fc978294-b28d-4b77-ad31-57f390b6d6c3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5de78622-ce7a-45be-98a6-d1afc6f0c064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a495b37d-8554-4ba5-9420-3ef42b9efd11",
        "cursor": {
          "ref": "2bee3d6a-d17f-40fd-ab2e-32ed59d61db5",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "94f9cc2a-1b75-427e-915e-e80eea1601d5"
        },
        "item": {
          "id": "a495b37d-8554-4ba5-9420-3ef42b9efd11",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "363579af-c882-42c1-aead-ea34cdd4bb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48bf7f2-457d-4e68-8edb-b81266204c4a",
        "cursor": {
          "ref": "219a27c2-bfbe-48b0-8ba9-77c955f639b7",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c0d5448d-a250-434b-990c-408d544953da"
        },
        "item": {
          "id": "f48bf7f2-457d-4e68-8edb-b81266204c4a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fea4e969-86c4-400f-a8d1-dd5bb8d02731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6f025f-37b8-4dd1-b2f7-46883fa6ee75",
        "cursor": {
          "ref": "ca04fa8c-5ec7-4a70-89fb-a4539d0d9e68",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "fa04f15e-ece2-4fd4-89f4-ac93ac6c40ba"
        },
        "item": {
          "id": "1c6f025f-37b8-4dd1-b2f7-46883fa6ee75",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b6a69405-d4af-42d3-abe9-2048d40b09e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44573d1-8480-4d50-902f-372bf090009f",
        "cursor": {
          "ref": "2feb7b99-e10c-43c6-a67b-60f6ab507cba",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c6552771-91f2-4679-9501-3356e4927962"
        },
        "item": {
          "id": "b44573d1-8480-4d50-902f-372bf090009f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8c94aaad-742d-42a3-9e09-3a27baedb5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd8cd26-c9fa-46b7-900f-66ee810cf7a9",
        "cursor": {
          "ref": "7b0fd132-9c6c-45df-875a-b645a07e7362",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2fc1f48e-a824-464f-b5b2-2f6c2cf2e1b2"
        },
        "item": {
          "id": "ccd8cd26-c9fa-46b7-900f-66ee810cf7a9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4af1faef-b073-4d5c-9db5-843c55d8bcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373fbafd-e21e-4551-9b3a-b97019d7ae36",
        "cursor": {
          "ref": "5a811487-df02-41c8-afab-c184fe18682e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "40c25345-1e93-466a-a252-5ef7c9cdbdd4"
        },
        "item": {
          "id": "373fbafd-e21e-4551-9b3a-b97019d7ae36",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cc794307-ae88-4303-9e56-c49e91c82347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aef3b53-0b4f-4116-bbd2-fd128aca592b",
        "cursor": {
          "ref": "dbb618a8-83e3-4b2f-ba60-b86b55076f43",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a70816c9-eef5-4356-8784-ea39a61da996"
        },
        "item": {
          "id": "3aef3b53-0b4f-4116-bbd2-fd128aca592b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "deaec23a-e22f-401d-8888-5074a51b12d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3479e7c-a63e-4d33-ad6f-1bc5fbddd678",
        "cursor": {
          "ref": "7d69c925-ce02-4f3f-ac3d-5ee4727f791c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1fa28291-0dd3-4fcf-91d2-efda568496b1"
        },
        "item": {
          "id": "e3479e7c-a63e-4d33-ad6f-1bc5fbddd678",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "774530cf-e972-4cd1-9d07-fd87c5e480e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b69e99a-5c3b-4301-bd13-0589c0b2823d",
        "cursor": {
          "ref": "88fe25fb-3c54-4134-99be-58c706430535",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c08f6a69-6c30-4541-8725-6b2968cf44fa"
        },
        "item": {
          "id": "9b69e99a-5c3b-4301-bd13-0589c0b2823d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "47c13dcb-12ab-4f17-8d3f-5a464cb4a72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2158c46e-2ecb-45b8-8fef-1569a27fa4ab",
        "cursor": {
          "ref": "b4e39fcb-6472-42b0-8d23-1e50b3e0c5ef",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b22ef4d1-ba11-4207-9b28-a374f90aa2af"
        },
        "item": {
          "id": "2158c46e-2ecb-45b8-8fef-1569a27fa4ab",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dbbfbf03-c12d-49c4-8e1a-4e19868f088d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e25f12-5d14-483b-8b78-11af5a73f096",
        "cursor": {
          "ref": "93a34c8e-30bf-4267-bb90-a9262a081a3d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b720009d-5682-4962-9b0b-45939e3fdbf4"
        },
        "item": {
          "id": "f0e25f12-5d14-483b-8b78-11af5a73f096",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "02c469b7-1187-4540-b657-c1eaf20eef82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2d9c41-6a72-4492-87ac-5c29c1ba0fab",
        "cursor": {
          "ref": "634d15f4-dfd1-4f95-9c58-4a8d69cf4429",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d2a5e000-069a-4f49-9c3e-127e7268b605"
        },
        "item": {
          "id": "fb2d9c41-6a72-4492-87ac-5c29c1ba0fab",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5baef213-d4c4-4087-9ba9-73a979ba94cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a0d7d9-f14c-4324-bc3f-bbaab2cf308c",
        "cursor": {
          "ref": "7e7cdb7e-481f-418f-adc4-3e8c9c531bb1",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9bc24b3f-f977-4ccd-ba85-c3a9de80bd74"
        },
        "item": {
          "id": "a4a0d7d9-f14c-4324-bc3f-bbaab2cf308c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fa361fd0-71ff-4d19-ad29-397418a781e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6155e5-9c8d-4148-9ad9-8cc389271397",
        "cursor": {
          "ref": "77f9b809-796f-4e1a-945c-278bdba74aa0",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "dbd401dd-c4b4-4b81-a583-2feee85c96fd"
        },
        "item": {
          "id": "da6155e5-9c8d-4148-9ad9-8cc389271397",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f98f7f0f-5dfb-427d-8fbd-2ecbe170e124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e368f79e-a98b-4076-babc-cf232874712c",
        "cursor": {
          "ref": "491e8662-dc40-404c-8eed-1ebaaaf3f6e0",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3549b621-f8ba-48b0-b3ae-9005c8314b88"
        },
        "item": {
          "id": "e368f79e-a98b-4076-babc-cf232874712c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7939ef73-aaa9-4008-92a4-e3f8a0ae3966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3db6589-bc0b-4b7f-a46c-393957b8d647",
        "cursor": {
          "ref": "cbb6eb6a-0d0e-4ab3-a48d-4d3ae7abef14",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "86cdfbae-4c00-4f44-91b1-82d15e292e1c"
        },
        "item": {
          "id": "b3db6589-bc0b-4b7f-a46c-393957b8d647",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5f79c30e-7a2d-4cff-9650-74e9caf08a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3ff3bd-5192-4fef-8f8b-78160b99533a",
        "cursor": {
          "ref": "197c726b-b389-4949-b88b-da7048b7d1b1",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8f001420-35bc-4cc8-893d-40c84a52a812"
        },
        "item": {
          "id": "0a3ff3bd-5192-4fef-8f8b-78160b99533a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7d5dab98-b3a5-47d5-9ade-179852e5c312",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78309169-60ca-4c64-a396-d37d16bcc2e6",
        "cursor": {
          "ref": "60311ba6-e2aa-4768-9bf3-8ca5e814c95a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "548c858d-0d85-46e2-a99a-94ddcc04a330"
        },
        "item": {
          "id": "78309169-60ca-4c64-a396-d37d16bcc2e6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9331c599-5c55-4dad-b0e3-443db6127d15",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e253c126-3feb-4efd-8d49-cce0f4359886",
        "cursor": {
          "ref": "672d90a5-0b8b-4d1d-853a-b7ae75397a6e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b3401497-226e-4731-b56d-40ae42c1ca86"
        },
        "item": {
          "id": "e253c126-3feb-4efd-8d49-cce0f4359886",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0dcbd4a4-d1dd-4be5-8abb-6aa704b44934",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee7f701-1350-4256-9d88-e123da3f7143",
        "cursor": {
          "ref": "97942630-d825-4ecb-85d6-95a483690d35",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3c57ecd9-4a23-429c-9d28-0c4ffb5cb55f"
        },
        "item": {
          "id": "fee7f701-1350-4256-9d88-e123da3f7143",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "79adb03a-2de8-4c51-bb98-4e2fe3ee1be2",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22a6559-28a7-4897-8a66-5e487aa172c8",
        "cursor": {
          "ref": "9c131195-9e09-4027-a1c1-5c98ede959e7",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8a69cd96-bac4-448d-ada2-82f1d331d53a"
        },
        "item": {
          "id": "e22a6559-28a7-4897-8a66-5e487aa172c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4984579d-1e71-4cc6-bda9-6c84a89493dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22a6559-28a7-4897-8a66-5e487aa172c8",
        "cursor": {
          "ref": "9c131195-9e09-4027-a1c1-5c98ede959e7",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8a69cd96-bac4-448d-ada2-82f1d331d53a"
        },
        "item": {
          "id": "e22a6559-28a7-4897-8a66-5e487aa172c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4984579d-1e71-4cc6-bda9-6c84a89493dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e29091f-83bc-4164-94d4-7180e4941a30",
        "cursor": {
          "ref": "465f342e-9aa7-487b-996c-ae6947fdd018",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "85f8f9a4-c33a-4d40-a0dc-a3f679914840"
        },
        "item": {
          "id": "4e29091f-83bc-4164-94d4-7180e4941a30",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fb55f34d-1faf-43d0-b212-18ef3db04d10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d95f0c-7a75-4fc0-8a64-89ba735afd24",
        "cursor": {
          "ref": "f441610f-9185-4f3a-942b-66f64b9aa771",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "82fc8d79-f294-4150-baf6-7b79d124a4f3"
        },
        "item": {
          "id": "d4d95f0c-7a75-4fc0-8a64-89ba735afd24",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "065e6045-8ee5-43e0-b519-85df5e919eb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}